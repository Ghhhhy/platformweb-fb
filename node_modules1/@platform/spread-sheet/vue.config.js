'use strict';
const { name, version } = require('./package.json');
module.exports = {
  publicPath: './',
  outputDir: 'lib',
  productionSourceMap: false,
  configureWebpack: {
    externals: process.env.NODE_ENV == 'development' ? {} : { 'element-ui': 'element-ui', vue: 'vue', axios: 'axios' }
  },
  chainWebpack: config => {
    config.module
      .rule('eslint')
      .use('eslint-loader')
      .loader('eslint-loader')
      .tap(options => {
        options.fix = true;
        return options;
      });
    const svgRule = config.module.rule('svg');
    svgRule.uses.clear();
    config.module
      .rule('images')
      .test(/\.(png|jpe?g|gif|webp|svg)(\?.*)?$/)
      .use('url-loader')
      .loader('url-loader')
      .tap(options => Object.assign(options, { limit: 102400 }));

    config.module
      .rule('fonts')
      .test(/.(ttf|otf|eot|woff|woff2)$/)
      .use('url-loader')
      .loader('url-loader')
      .tap(options => Object.assign(options, { limit: 102400 }))
      .end();

    config.plugin('define').tap(options => {
      options[0]['process.env'].VERSION = JSON.stringify(version);
      options[0]['process.env'].LIBNAME = JSON.stringify(name);
      options[0]['process.env'].HASH = `${new Date().getTime()}`;
      return options;
    });
  },
  css: { extract: false },
  devServer: {
    overlay: {
      warnings: true,
      errors: true
    },
    proxy: {
      // 业务测代理
      '/datav': {
        target: 'http://172.18.172.206:8086/'
      }
    }
  }
};
