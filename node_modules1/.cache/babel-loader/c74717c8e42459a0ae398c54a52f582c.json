{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\CardMenu\\config\\data.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\CardMenu\\config\\data.js","mtime":1694505521316},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","Array","from","test","iter","isArray","len","arr2","defaultConfig","defaultCardData","MenuModule","extend","data","countGroup","count","todoDatas","doneDatas","operationGuideDatas","cardGlobal","card","width","height","cardList","cardMenu","cardBtns","methods","generateCardMenu","_this","sysMenu","$store","state","systemMenu","sysMenuCp","cardMenuTemp","map","item","index","guid","bgName","getConfigValue","bgUrl","bsCardClickEvent","title","icon","buttons","getConfigButton","menu","colors","getConfigObj","assign","getArrData","_this2","children","isleaf","getObjData","getChildren","_this3","it","dealDoneDatasArr","_this4","dealDoneDatasObj","dealDoneDatasArrReq","_this5","getCountGroup","val","num","getOperationGuideByMenuguid","operationGuides","billId","billguid","_self$operationGuideD","rows","generateCardBtns","status","_this6","_callee","toDos","dones","cardBtnsTemp","att","cardMenuList","_self","cardMenuTmp","_callee$","_context","getToDoDatas","getOperationGuideDatas","globalConfig","bsCardPoperClickEvent","funMenu","agentItem","doneItem","oprateGuide","cd","tmp","resize","indexArr","split","getImageUrl","require","getChildrenMenu","_this7","result","concat","filterChildrenMenu","nums","_this8","itChildren","menuId","JSON","parse","stringify","menuVOList","postData","vo","menuguid","roleguid","param5","params","res","code","numMap","console","log","getDoneDatas","rscode","mounted","watch","handler","newValue","oldValue"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/CardMenu/config/data.js"],"sourcesContent":["import { defaultConfig } from './config'\r\nimport { defaultCardData } from '../card/config/config'\r\nimport MenuModule from '@/api/frame/common/menu.js'\r\nimport { extend } from '../utils'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      countGroup: {},\r\n      count: 0,\r\n      todoDatas: [],\r\n      doneDatas: [],\r\n      operationGuideDatas: [],\r\n      cardGlobal: {\r\n        card: {\r\n          width: 456,\r\n          height: 224\r\n        }\r\n\r\n      },\r\n      cardList: [],\r\n      cardMenu: [],\r\n      cardBtns: {}\r\n    }\r\n  },\r\n  methods: {\r\n    generateCardMenu() {\r\n      const sysMenu = this.$store.state.systemMenu || []\r\n      let sysMenuCp = [...sysMenu]\r\n      let cardMenuTemp = []\r\n      sysMenuCp.map((item, index) => {\r\n        let card = {\r\n          type: item.guid, // 基础信息管理【card模块】\r\n          bgName: this.getConfigValue(index, 'bgName'), // card背景图片名称\r\n          bgUrl: '', // card背景图片地址\r\n          methods: {\r\n            bsCardClickEvent: this.bsCardClickEvent\r\n          },\r\n          title: {\r\n            icon: this.getConfigValue(index, 'titleIcon'), // card标题按钮样式\r\n            title: item.name // card标题\r\n          },\r\n          buttons: this.getConfigButton(index, 'buttons'),\r\n          menu: item\r\n        }\r\n\r\n        let colors = this.getConfigObj(index, 'color')\r\n        Object.assign(card, colors)\r\n\r\n        cardMenuTemp.push(card)\r\n      })\r\n\r\n      this.cardMenu = cardMenuTemp\r\n      // console.log('2', this.cardMenu)\r\n    },\r\n    /**\r\n     * 处理数组数据\r\n     * @param {*} data\r\n     */\r\n    getArrData(data) {\r\n      data.forEach(item => {\r\n        if (item.children && item.children.length > 0) {\r\n          this.getArrData(item.children)\r\n        } else {\r\n          if (item.isleaf === '1') {\r\n            this.todoDatas.push(item)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 处理对象数据\r\n     * @param {*} data\r\n     */\r\n    getObjData(data) {\r\n      if (data.children && data.children.length > 0) {\r\n        return this.getArrData(data.children)\r\n      } else if (data.length || data.length > 0) {\r\n        this.getArrData(data)\r\n      } else {\r\n        if (data.isleaf === '1') {\r\n          this.todoDatas.push(data)\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 获取字待办子节点\r\n     * @param {*} data\r\n     * @param {*} index\r\n     */\r\n    getChildren(data, index) {\r\n      this.todoDatas = []\r\n      data.forEach(it => {\r\n        if (index === it.guid) {\r\n          this.getObjData(it)\r\n        }\r\n      })\r\n    },\r\n\r\n    /**\r\n     * 处理已办数组\r\n     * @param {*} data\r\n     * @param {*} index\r\n     */\r\n    dealDoneDatasArr(data, index) {\r\n      this.doneDatas = []\r\n      data.forEach(it => {\r\n        if (index === it.guid) {\r\n          this.dealDoneDatasObj(it)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 处理已办对象\r\n     * @param {*} data\r\n     */\r\n    dealDoneDatasObj(data) {\r\n      if (data.children && data.children.length > 0) {\r\n        return this.dealDoneDatasArrReq(data.children)\r\n      } else if (data.length || data.length > 0) {\r\n        this.dealDoneDatasArrReq(data)\r\n      } else {\r\n        if (data.isleaf === '1') {\r\n          this.doneDatas.push(data)\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 处理已办对象\r\n     * @param {*} data\r\n     */\r\n    dealDoneDatasArrReq(data) {\r\n      data.forEach(item => {\r\n        if (item.children && item.children.length > 0) {\r\n          this.dealDoneDatasArrReq(item.children)\r\n        } else {\r\n          if (item.isleaf === '1') {\r\n            this.doneDatas.push(item)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 获取计数器\r\n     * @param {*} guid\r\n     */\r\n    getCountGroup(guid) {\r\n      let self = this\r\n      self.count = 0\r\n      self.todoDatas.forEach(val => {\r\n        self.count += val.num\r\n      })\r\n      self.countGroup[guid] = self.count\r\n    },\r\n    getOperationGuideByMenuguid(operationGuides, guid) {\r\n      let self = this\r\n      self.operationGuideDatas = []\r\n      let billId = 'OperationGuide-' + guid\r\n      operationGuides.forEach(item => {\r\n        if (billId === item.billguid) {\r\n          let val = item.rows\r\n          // val['name'] = item.filename\r\n          self.operationGuideDatas.push(...val)\r\n        }\r\n      })\r\n    },\r\n    async generateCardBtns(status, menu) {\r\n      // 1.接口获取待办和已办数据\r\n      let toDos = []\r\n      let dones = []\r\n      let operationGuides = []\r\n      if (status === '0') {\r\n        // toDos = await this.getToDoDatas(status, menu)\r\n      } else if (status === '1') {\r\n        dones = await this.getToDoDatas(status, menu)\r\n      } else if (status === '2') {\r\n        operationGuides = await this.getOperationGuideDatas(status, menu)\r\n      }\r\n      // 2. 遍历菜单生成cardBtns架子\r\n      const sysMenu = this.$store.state.systemMenu || []\r\n      let sysMenuCp = [...sysMenu]\r\n      let cardBtnsTemp = {\r\n        globalConfig: {\r\n          methods: {\r\n            bsCardPoperClickEvent: this.bsCardPoperClickEvent\r\n          }\r\n        }\r\n      }\r\n      let self = this\r\n      sysMenuCp.map((item, index) => {\r\n        self.getChildren(toDos, item.guid)\r\n        self.dealDoneDatasArr(dones, item.guid)\r\n        self.getOperationGuideByMenuguid(operationGuides, item.guid)\r\n        let card = {\r\n          funMenu: { // 功能菜单\r\n\r\n          },\r\n          agentItem: extend(true, [], self.todoDatas),\r\n          doneItem: extend(true, [], self.doneDatas),\r\n          // 操作指南\r\n          oprateGuide: extend(true, [], self.operationGuideDatas)\r\n        }\r\n        this.getCountGroup(item.guid)\r\n        cardBtnsTemp[item.guid] = extend(true, {}, card)\r\n      })\r\n\r\n      this.cardBtns = cardBtnsTemp\r\n\r\n      let att = []\r\n      att = Object.keys(this.countGroup)\r\n      // 修改待办和已办的数量\r\n      const cardList = this.cardMenu\r\n      let cardMenuList = [...cardList]\r\n      let _self = this\r\n      let cardMenuTmp = []\r\n      cardMenuList.forEach(cd => {\r\n        cd.buttons.forEach((item, index) => {\r\n          att.forEach(it => {\r\n            if (item.num !== undefined && index === 2) {\r\n              if (cd.type === it) {\r\n                item.num = _self.countGroup[it]\r\n                return false\r\n              }\r\n            }\r\n          })\r\n        })\r\n        let tmp = extend(true, {}, cd)\r\n        cardMenuTmp.push(tmp)\r\n      })\r\n      this.cardMenu = cardMenuTmp\r\n      this.resize()\r\n    },\r\n\r\n    getConfigObj(index = 0, type) {\r\n      const data = defaultConfig[type]\r\n      // 如果配置项没有这样的key则返回空对象\r\n      if (!data) {\r\n        return {}\r\n      }\r\n      // 根据索引取默认数组的值，如果数组值取完，则循环取值\r\n      let num = index % data.length\r\n      return data[num]\r\n    },\r\n    getConfigValue(index = 0, type) {\r\n      const data = defaultConfig[type]\r\n      // 如果配置项没有这样的key则返回空对象\r\n      if (!data) {\r\n        return ''\r\n      }\r\n\r\n      // 根据索引取默认数组的值，如果数组值取完，则循环取值\r\n      let num = index % data.length\r\n      return data[num]\r\n    },\r\n\r\n    getConfigButton(index = 0, type) {\r\n      const data = defaultConfig[type]\r\n      // 如果配置项没有这样的key则返回空对象\r\n      if (!data) {\r\n        return []\r\n      }\r\n\r\n      // 根据索引取默认数组的值，如果数组值取完，则循环取值\r\n      let num = index % data.length\r\n      let value = data[num]\r\n      if (value === 'all') {\r\n        return defaultCardData.buttons\r\n      } else {\r\n        if (Array.isArray(value)) {\r\n          return value\r\n        } else {\r\n          let arr = []\r\n          let indexArr = value.split(',')\r\n          indexArr.map((item) => {\r\n            arr.push(defaultCardData.buttons[item])\r\n          })\r\n\r\n          return arr\r\n        }\r\n      }\r\n    },\r\n    getImageUrl() {\r\n      this.cardMenu.forEach(item => {\r\n        item.bgUrl = require('../img/' + item.bgName)\r\n      })\r\n    },\r\n    getChildrenMenu(menu) {\r\n      if (menu && menu.length > 0) {\r\n        let result = []\r\n        menu.forEach(item => {\r\n          if (item.children && item.children.length > 0) {\r\n            result = result.concat(this.getChildrenMenu(item.children))\r\n          } else {\r\n            result.push(item)\r\n          }\r\n        })\r\n        return result\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    filterChildrenMenu(menu, nums) {\r\n      if (menu && menu.length > 0) {\r\n        let result = []\r\n        menu.forEach(item => {\r\n          if (item.children && item.children.length > 0) {\r\n            let itChildren = this.filterChildrenMenu(item.children, nums)\r\n            if (itChildren.length > 0) {\r\n              item.children = itChildren\r\n              result.push(item)\r\n            }\r\n          } else {\r\n            if (nums[item.guid]) {\r\n              item.num = nums[item.guid]\r\n              result.push(item)\r\n            }\r\n          }\r\n        })\r\n        return result\r\n      } else {\r\n        return []\r\n      }\r\n    },\r\n    /**\r\n     * 获取待办数据\r\n     */\r\n    getToDoDatas(status = '0', menuId = '') {\r\n      let todoDatas = []\r\n      const sysMenu = this.$store.state.systemMenu || []\r\n      let sysMenuCp = []\r\n      sysMenu.forEach(menu => {\r\n        if (menu.guid === menuId) {\r\n          sysMenuCp = JSON.parse(JSON.stringify([menu]))\r\n        }\r\n      })\r\n      let menuVOList = []\r\n      let self = this\r\n      sysMenuCp.forEach(menu => {\r\n        if (menu.children && menu.children.length > 0) {\r\n          menuVOList = menuVOList.concat(self.getChildrenMenu(menu.children))\r\n        } else {\r\n          menuVOList.push(menu)\r\n        }\r\n      })\r\n      let postData = []\r\n      menuVOList.forEach(item => {\r\n        let vo = {\r\n          menuguid: item.guid,\r\n          roleguid: item.roleguid,\r\n          param5: item.param5\r\n        }\r\n        postData.push(vo)\r\n      })\r\n      let params = {\r\n        status: status,\r\n        menuVOList: postData\r\n      }\r\n      return new Promise(function (resolve) {\r\n        MenuModule.getToDoDatas(params).then(res => {\r\n          if (res && res.code === '100000') {\r\n            let data = res.data\r\n            let numMap = {}\r\n            data.forEach(item => {\r\n              numMap[item.menuguid] = item.count\r\n            })\r\n            sysMenuCp.forEach(menu => {\r\n              if (menu.children && menu.children.length > 0) {\r\n                let itChildren = self.filterChildrenMenu(menu.children, numMap)\r\n                if (itChildren.length > 0) {\r\n                  menu.children = itChildren\r\n                  todoDatas.push(menu)\r\n                }\r\n              } else {\r\n                if (numMap[menu.guid]) {\r\n                  menu.num = numMap[menu.guid]\r\n                  todoDatas.push(menu)\r\n                }\r\n              }\r\n            })\r\n            resolve(todoDatas)\r\n          } else {\r\n            resolve(todoDatas)\r\n          }\r\n        }).catch(error => {\r\n          console.log(error)\r\n          resolve(todoDatas)\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 获取已办数据\r\n     */\r\n    getDoneDatas() {\r\n      let doneDatas = []\r\n      return new Promise(function (resolve) {\r\n        MenuModule.getDoneDatas({}).then(res => {\r\n          if (res && res.rscode === '100000') {\r\n            doneDatas = res.data\r\n            resolve(doneDatas)\r\n          } else {\r\n            resolve(doneDatas)\r\n          }\r\n        }).catch(error => {\r\n          console.log(error)\r\n          resolve(doneDatas)\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     * 获取操作导航数据\r\n     */\r\n    getOperationGuideDatas() {\r\n      let operationGuideDatas = []\r\n      let billId = 'OperationGuide-'\r\n      let params = {\r\n        billguid: billId\r\n      }\r\n      return new Promise(function (resolve) {\r\n        MenuModule.getOperationGuideDatas(params).then(res => {\r\n          if (res && res.code === '100000') {\r\n            operationGuideDatas = res.data\r\n            resolve(operationGuideDatas)\r\n          } else {\r\n            resolve(operationGuideDatas)\r\n          }\r\n        }).catch(error => {\r\n          console.log(error)\r\n          resolve(operationGuideDatas)\r\n        })\r\n      })\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  watch: {\r\n    cardList: {\r\n      handler(newValue, oldValue) {\r\n        this.cardMenu = newValue\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"mappings":"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"}]}