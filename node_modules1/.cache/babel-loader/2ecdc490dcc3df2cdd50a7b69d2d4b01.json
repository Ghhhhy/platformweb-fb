{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\statisticAnalysis\\common\\components\\HandlingOfViolationsModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\statisticAnalysis\\common\\components\\HandlingOfViolationsModal.vue","mtime":1694505522826},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["defineComponent","ref","inject","useTable","useModal","useModalInner","HandlingOfViolationsDetailModal","queryAuditTable","cellCursorUnderlineClassName","transJson1","transJson3","store","getRuleNameColumn","getControlTypeColumn","getStatusCodeColumn","getWarningCodeColumn","getCreateTimeColumn","getAgencyNameColumn","getDeptNameColumn","getManageMofDepNameColumn","getBusinessNoColumn","getAuditDescriptionColumn","getIsDirColumn","getAmountColumn","model","prop","event","components","props","_props","_defineProperty","type","Boolean","default","Object","_default","setup","_ref","_loadConfig","emit","_useModalInner","visible","_useModal","_useModal2","_slicedToArray","hOVDetailModel","changeHOVDetailModelVisible","detailCurrentRow","loadBsConfig","columnsSS","loadConfig","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","params","configData","wrap","_callee$","_context","prev","next","tableId","fiscalyear","state","userInfo","year","mof_div_code","province","menuguid","curNavModule","guid","sent","abrupt","itemsConfig","stop","apply","arguments","param5","isConfigTable","then","res","value","_useTable","fetch","beforeFetch","_transJson","_transJson2","_props$currentRow","currentRow","fiRuleCode","agencyCode","_objectSpread","fiRuleName","ruleName","mofDivCode","paramCode","isFilterByPerm","columns","dataKey","_useTable2","_useTable2$","tableToolbarConfig","tableConfig","tableData","resetFetchTableData","tableLoadingState","pagerChange","pagerConfig","onToolbarBtnClick","registerTable","cellDblclick","_ref2","row"],"sources":["src/views/main/statisticAnalysis/common/components/HandlingOfViolationsModal.vue"],"sourcesContent":["<template>\r\n  <vxe-modal\r\n    v-model=\"visible\"\r\n    :destroy-on-close=\"true\"\r\n    title=\"查看详情\"\r\n    width=\"85%\"\r\n    height=\"85%\"\r\n    resize\r\n    show-footer\r\n  >\r\n    <template #footer>\r\n      <vxe-button size=\"small\" @click=\"visible = false\">返回</vxe-button>\r\n      <vxe-button size=\"small\" @click=\"$emit('closeAll')\">关闭</vxe-button>\r\n    </template>\r\n    <div style=\"height: calc(100% - 4px)\">\r\n      <div style=\"height: 100%\">\r\n        <BsTable\r\n          :loading=\"tableLoadingState\"\r\n          :table-config=\"tableConfig\"\r\n          :table-columns-config=\"columns\"\r\n          :table-data=\"tableData\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          :pager-config=\"pagerConfig\"\r\n          size=\"medium\"\r\n          :cell-class-name=\"obj => cellCursorUnderlineClassName(obj, ['warningCode'])\"\r\n          @register=\"registerTable\"\r\n          @ajaxData=\"pagerChange\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @cellDblclick=\"cellDblclick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <bs-table-title title=\"监控处理单\" />\r\n          </template>\r\n        </BsTable>\r\n      </div>\r\n    </div>\r\n    <HandlingOfViolationsDetailModal\r\n      v-if=\"hOVDetailModel\"\r\n      v-model=\"hOVDetailModel\"\r\n      :checked-records=\"[detailCurrentRow]\"\r\n      v-on=\"$listeners\"\r\n    />\r\n  </vxe-modal>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, inject } from '@vue/composition-api'\r\nimport useTable from '@/hooks/useTable'\r\nimport { useModal, useModalInner } from '@/hooks/useModal/index'\r\nimport HandlingOfViolationsDetailModal from './HandlingOfViolationsDetailModal'\r\nimport { queryAuditTable } from '@/api/frame/main/statisticAnalysis/rulesStatistic.js'\r\nimport { cellCursorUnderlineClassName } from '../model/data'\r\nimport { transJson1, transJson3 } from '@/utils/params.js'\r\nimport store from '@/store'\r\nimport {\r\n  getRuleNameColumn,\r\n  getControlTypeColumn,\r\n  getStatusCodeColumn,\r\n  getWarningCodeColumn,\r\n  getCreateTimeColumn,\r\n  getAgencyNameColumn,\r\n  getDeptNameColumn,\r\n  getManageMofDepNameColumn,\r\n  getBusinessNoColumn,\r\n  getAuditDescriptionColumn,\r\n  getIsDirColumn,\r\n  getAmountColumn\r\n} from '@/views/main/handlingOfViolations/model/data.js'\r\n\r\nconst model = {\r\n  prop: 'value',\r\n  event: 'changeHOVInnerVisible'\r\n}\r\nexport default defineComponent({\r\n  components: {\r\n    HandlingOfViolationsDetailModal\r\n  },\r\n  props: {\r\n    // 显隐\r\n    [model.prop]: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // 勾选行\r\n    currentRow: {\r\n      type: Object,\r\n      default: () => ({})\r\n    }\r\n  },\r\n  model,\r\n  setup(props, { emit }) {\r\n    /**\r\n     * 弹窗内部状态\r\n     * */\r\n    const { visible } = useModalInner(props, emit, model)\r\n\r\n    // 处理单弹窗\r\n    const [hOVDetailModel, changeHOVDetailModelVisible] = useModal()\r\n\r\n    // 详情双击行\r\n    /*eslint-disable*/\r\n    const detailCurrentRow = ref(null)\r\n    // 根组件方法 loadBsConfig(动态表格配置请求方法)\r\n    const loadBsConfig = inject('loadBsConfig')\r\n    /**\r\n     * 动态表格配置\r\n     * */\r\n    let columnsSS = ref([])\r\n    async function loadConfig(id) {\r\n      let params = {\r\n        tableId: {\r\n          id: id,\r\n          fiscalyear: store.state.userInfo.year,\r\n          mof_div_code: store.state.userInfo.province,\r\n          menuguid: store.state.curNavModule.guid\r\n        }\r\n      }\r\n      let configData = await loadBsConfig(params)\r\n      return configData.itemsConfig\r\n    }\r\n    /**\r\n     *判断使用本地配置||动态配置\r\n     * */\r\n    if (transJson3(store.state.curNavModule.param5) && transJson3(store.state.curNavModule.param5).isConfigTable === '1') {\r\n      loadConfig('Table301').then(res => {\r\n        columnsSS.value = res\r\n      })\r\n    } else {\r\n      columnsSS.value =  [\r\n        getRuleNameColumn(),\r\n        getControlTypeColumn(),\r\n        getStatusCodeColumn(),\r\n        getWarningCodeColumn(),\r\n        getCreateTimeColumn(),\r\n        getAgencyNameColumn(),\r\n        getDeptNameColumn(),\r\n        getManageMofDepNameColumn(),\r\n        getBusinessNoColumn(),\r\n        getAmountColumn(),\r\n        getAuditDescriptionColumn(),\r\n        getIsDirColumn()\r\n      ]\r\n    }\r\n\r\n    /**\r\n     * 表格\r\n     * */\r\n    const [\r\n      {\r\n        columns,\r\n        tableToolbarConfig,\r\n        tableConfig,\r\n        tableData,\r\n        resetFetchTableData,\r\n        tableLoadingState,\r\n        pagerChange,\r\n        pagerConfig,\r\n        onToolbarBtnClick\r\n      },\r\n      registerTable\r\n    ] = useTable({\r\n      fetch: queryAuditTable,\r\n      beforeFetch: params => {\r\n        const { fiRuleCode, agencyCode, type } = props.currentRow\r\n        return {\r\n          ...params,\r\n          fiRuleCode,\r\n          agencyCode,\r\n          fiRuleName: props.currentRow.ruleName,\r\n          mofDivCode:props.currentRow.mofDivCode,\r\n          paramCode: transJson1(store.state.curNavModule.param5 || '')?.paramCode,\r\n          isFilterByPerm: transJson1(store.state.curNavModule.param5 || '')?.isFilterByPerm,\r\n          type\r\n        }\r\n      },\r\n      columns: columnsSS,\r\n      dataKey: 'data.results'\r\n    })\r\n\r\n    /**\r\n     * 双击单元格\r\n     * */\r\n    function cellDblclick({ row }) {\r\n      detailCurrentRow.value = row\r\n      changeHOVDetailModelVisible(true)\r\n    }\r\n\r\n    return {\r\n      visible,\r\n      hOVDetailModel,\r\n\r\n      cellDblclick,\r\n      detailCurrentRow,\r\n      columns,\r\n      registerTable,\r\n      tableConfig,\r\n      tableData,\r\n      tableLoadingState,\r\n      pagerConfig,\r\n      tableToolbarConfig,\r\n      onToolbarBtnClick,\r\n      pagerChange,\r\n      resetFetchTableData,\r\n\r\n      cellCursorUnderlineClassName\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n"],"mappings":"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"}]}