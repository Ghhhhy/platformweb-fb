{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\statisticAnalysis\\rulesStatistic\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\statisticAnalysis\\rulesStatistic\\index.vue","mtime":1694505522826},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["defineComponent","provide","ref","toRaw","PreviewDetail","useTable","useForm","useTabPlanel","useModal","queryRule","getWarnCountColumns","searchFormCommonSchemas","cellCursorUnderlineClassName","getRuleNameColumn","getIsDirColumn","getWarnLevelColumn","getControlTypeColumn","useFooter","transJson1","transJson3","store","components","setup","_","_ref","_loadConfig","_beforeFetch","root","route","$route","pagePath","path","loadBsConfig","_useModal","_useModal2","_slicedToArray","visibleState","setVisibleState","currentRow","_useForm","_useForm2","_useForm2$","formData","formSchemas","setSubmitFormData","getSubmitFormData","registerForm","search","obj","Object","assign","resetFetchTableData","columnsSS","ruleCodesSS","loadConfig","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","params","configData","wrap","_callee$","_context","prev","next","tableId","fiscalyear","state","userInfo","year","mof_div_code","province","menuguid","curNavModule","guid","sent","abrupt","itemsConfig","stop","apply","arguments","param5","isConfigTable","then","res","value","title","minWidth","width","concat","_toConsumableArray","closeAllHandle","_useFooter","footerConfig","_useTable","fetch","beforeFetch","_x2","_callee2","_transJson","_transJson2","_callee2$","_context2","t0","_objectSpread","ruleCodes","paramCode","isFilterByPerm","finallyFetch","data","totalObj","warnHJVO","columns","dataKey","_useTable2","_useTable2$","tableToolbarConfig","tableConfig","tableData","tableLoadingState","pagerChange","pagerConfig","onToolbarBtnClick","getTable","registerTable","cellDblclick","row","column","property","_Message","warning","_useTabPlanel","tabStatusBtnConfig","isShowSearchForm","onQueryConditionsClick"],"sources":["src/views/main/statisticAnalysis/rulesStatistic/index.vue"],"sourcesContent":["<template>\r\n  <div style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible=\"false\">\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          :tab-status-btn-config=\"tabStatusBtnConfig\"\r\n          :is-open=\"isShowSearchForm\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <template v-slot:query>\r\n        <div v-show=\"isShowSearchForm\" class=\"main-query\">\r\n          <BsQuery\r\n            :query-form-item-config=\"formSchemas\"\r\n            :query-form-data=\"formData\"\r\n            @onSearchClick=\"search\"\r\n            @register=\"registerForm\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <div style=\"height: 100%\">\r\n          <BsTable\r\n            :loading=\"tableLoadingState\"\r\n            :table-config=\"tableConfig\"\r\n            :table-columns-config=\"columns\"\r\n            :table-data=\"tableData\"\r\n            :footer-config=\"footerConfig\"\r\n            :toolbar-config=\"tableToolbarConfig\"\r\n            :pager-config=\"pagerConfig\"\r\n            size=\"medium\"\r\n            :cell-class-name=\"cellCursorUnderlineClassName\"\r\n            @register=\"registerTable\"\r\n            @ajaxData=\"pagerChange\"\r\n            @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n            @cellDblclick=\"cellDblclick\"\r\n          >\r\n            <template v-slot:toolbarSlots>\r\n              <div class=\"table-toolbar-left\">\r\n                <BsTableTitle title=\"统计分析\" />\r\n              </div>\r\n            </template>\r\n          </BsTable>\r\n        </div>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <PreviewDetail\r\n      v-if=\"visibleState\"\r\n      v-model=\"visibleState\"\r\n      :current-row=\"currentRow\"\r\n      @closeAll=\"closeAllHandle\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, provide, ref, toRaw } from '@vue/composition-api'\r\nimport PreviewDetail from '../common/components/PreviewDetail'\r\n\r\nimport useTable from '@/hooks/useTable'\r\nimport useForm from '@/hooks/useForm'\r\nimport useTabPlanel from '../common/hooks/useTabPlanel'\r\nimport { useModal } from '@/hooks/useModal/index'\r\nimport { queryRule } from '@/api/frame/main/statisticAnalysis/rulesStatistic.js'\r\nimport {\r\n  getWarnCountColumns,\r\n  searchFormCommonSchemas,\r\n  cellCursorUnderlineClassName\r\n} from '@/views/main/statisticAnalysis/common/model/data.js'\r\nimport {\r\n  getRuleNameColumn,\r\n  getIsDirColumn,\r\n  getWarnLevelColumn,\r\n  getControlTypeColumn\r\n} from '@/views/main/handlingOfViolations/model/data.js'\r\nimport { useFooter } from '../common/hooks/useFooter'\r\nimport { transJson1, transJson3 } from '@/utils/params.js'\r\n// import { transJson1, transJson2 } from '@/utils/params.js'\r\nimport store from '@/store'\r\nimport { Message } from 'element-ui'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    PreviewDetail\r\n  },\r\n  setup(_, { root }) {\r\n    const route = root.$route\r\n\r\n    // 页面路由\r\n    const pagePath = ref(route.path)\r\n\r\n    /**\r\n     * modalType:弹窗打开操作\r\n     * pagePath:页面路由\r\n     */\r\n    provide('pagePath', pagePath)\r\n    // 因【处理单查看】等子孙组件使用到inject('modalType')，故此提供一个空值，避免报错\r\n    provide('modalType', '')\r\n    // 子组件传递根组件方法\r\n    provide('loadBsConfig', root.loadBsConfig)\r\n    // 规则弹窗显隐\r\n    const [visibleState, setVisibleState] = useModal()\r\n    // 当前操作行\r\n    const currentRow = ref(null)\r\n\r\n    /**\r\n     * 搜索表单\r\n     */\r\n    const [\r\n      {\r\n        formData,\r\n        formSchemas,\r\n        setSubmitFormData,\r\n        getSubmitFormData\r\n      },\r\n      registerForm\r\n    ] = useForm(searchFormCommonSchemas)\r\n\r\n    /**\r\n     * 搜索&重置\r\n     * */\r\n    function search(obj) {\r\n      Object.assign(formData, obj)\r\n      setSubmitFormData(toRaw(formData))\r\n\r\n      resetFetchTableData()\r\n    }\r\n    /**\r\n     * 动态表格配置\r\n     * */\r\n    let columnsSS = ref(null)\r\n    let ruleCodesSS = ref([])\r\n    async function loadConfig(id) {\r\n      let params = {\r\n        tableId: {\r\n          id: id,\r\n          fiscalyear: store.state.userInfo.year,\r\n          mof_div_code: store.state.userInfo.province,\r\n          menuguid: store.state.curNavModule.guid\r\n        }\r\n      }\r\n      let configData = await root.loadBsConfig(params)\r\n      return configData.itemsConfig\r\n    }\r\n    /**\r\n     *判断使用本地配置||动态配置\r\n     * */\r\n    if (transJson3(store.state.curNavModule.param5) && transJson3(store.state.curNavModule.param5).isConfigTable === '1') {\r\n      loadConfig('Table101').then(res => {\r\n        columnsSS.value = res\r\n      })\r\n      loadConfig('Query101').then(res => {\r\n        formSchemas.value = res\r\n      })\r\n    } else {\r\n      columnsSS.value = [\r\n        getRuleNameColumn({\r\n          title: '规则名称',\r\n          minWidth: 100,\r\n          // width: 200\r\n          width: 'auto'\r\n        }),\r\n        getWarnLevelColumn(),\r\n        getControlTypeColumn(),\r\n        ...getWarnCountColumns(),\r\n        getIsDirColumn({\r\n          // minWidth: 100\r\n          width: 120\r\n          // width: 'auto'\r\n        })\r\n      ]\r\n    }\r\n    /**\r\n     * 关闭所有弹窗\r\n     * */\r\n    function closeAllHandle() {\r\n      setVisibleState(false)\r\n    }\r\n    const { footerConfig } = useFooter()\r\n\r\n    /**\r\n     * 表格\r\n     * */\r\n    const [\r\n      {\r\n        columns,\r\n        tableToolbarConfig,\r\n        tableConfig,\r\n        tableData,\r\n        resetFetchTableData,\r\n        tableLoadingState,\r\n        pagerChange,\r\n        pagerConfig,\r\n        onToolbarBtnClick,\r\n        getTable\r\n      },\r\n      registerTable\r\n    ] = useTable({\r\n      fetch: queryRule,\r\n      beforeFetch: async params => {\r\n        ruleCodesSS.value = await loadConfig('CodeConfig101') ? await loadConfig('CodeConfig101') : []\r\n        return {\r\n          ...params,\r\n          ruleCodes: ruleCodesSS.value,\r\n          paramCode: transJson1(store.state.curNavModule.param5 || '')?.paramCode,\r\n          isFilterByPerm: transJson1(store.state.curNavModule.param5 || '')?.isFilterByPerm\r\n        }\r\n      },\r\n      finallyFetch: data => {\r\n        footerConfig.value.totalObj = data?.warnHJVO || {}\r\n      },\r\n      columns: columnsSS,\r\n      getSubmitFormData,\r\n      dataKey: 'data.results'\r\n    })\r\n\r\n    /**\r\n     * 双击单元格\r\n     * */\r\n    function cellDblclick(row) {\r\n      currentRow.value = row.row\r\n      if (row.row[row.column.property] * 1 !== 0) {\r\n        setVisibleState(true)\r\n      } else {\r\n        Message.warning('数据等于零时无法钻取!')\r\n      }\r\n    }\r\n    /**\r\n     * 顶部tab模块\r\n     */\r\n    const {\r\n      tabStatusBtnConfig,\r\n      isShowSearchForm,\r\n      onQueryConditionsClick\r\n    } = useTabPlanel(setVisibleState, getTable, currentRow)\r\n\r\n    return {\r\n      visibleState,\r\n\r\n      cellDblclick,\r\n      footerConfig,\r\n      columns,\r\n      registerTable,\r\n      tableConfig,\r\n      tableData,\r\n      tableLoadingState,\r\n      pagerConfig,\r\n      tableToolbarConfig,\r\n      onToolbarBtnClick,\r\n      pagerChange,\r\n      resetFetchTableData,\r\n      cellCursorUnderlineClassName,\r\n\r\n      currentRow,\r\n      closeAllHandle,\r\n\r\n      tabStatusBtnConfig,\r\n      isShowSearchForm,\r\n      onQueryConditionsClick,\r\n\r\n      registerForm,\r\n      formData,\r\n      formSchemas,\r\n      search\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n"],"mappings":"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"}]}