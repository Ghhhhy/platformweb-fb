{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\dynamicTableSetting\\SubTabConfigModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\dynamicTableSetting\\SubTabConfigModal.vue","mtime":1694505522433},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getFormConfData","EnterItemConfigModal","name","components","props","dialogVisible","type","Boolean","default","_default","params","Object","data","ifRenderFormConfTable","toolbarConfig","_objectSpread","disabledMoneyConversion","tableConfig","tableColumnsConfig1","tableColumnsConfig2","formConfigData1","formConfigData2","itemVisible","configParams","paramsCp","methods","onEnterConfig","subTabConfig","beforeSave","paramsCopy","deepCopy","configure","jsonParse","onCellClick","obj","context","e","key","column","property","row","title","$message","warning","tableColumnsConfig","editRender","config","disabled","queryparams","elementCode","dialogClose","$emit","me","_typeof","newObj","Array","hasOwnProperty","str","JSON","parse","k","v","indexOf","func","Function","transformItemsDataToNest","columns","self","forEach","columnIndex","isArray","children","length","transformConlumsDataToNest","renderName","options","arg","split","map","item","index","value","label","defaultValue","_XID","renderType","changeOptions","item2","substring","changeCptList","keyArr","push","changeButtonsInfo","_this","arr","_loop","childItem","parentCode","cptList","cptArr","_this2","changeBtns","buttons","curButton","buttonsInfo","bsToolbarClickEvent","_this$$refs$bsTableRe","$refs","bsTableRef","getTableData","tabelData1","fullData","buttonsData","code","clearDataRenderField","curValue","_this$$refs$bsTableRe2","bsTableRef2","tabelData2","buttonsInfoData","cptName","clearItem","jsonStringify","stringify","val","onAddRowClick1","insertRowData","onDeleteRowClick1","deleteRowData","onAddRowClick2","onDeleteRowClick2","getSaveParams","assign","itemsConfig","formConfig","globalConfig","saveTableConf","tableConfStr","_this3","$http","optionType","then","res","rscode","showClose","message","catch","error","console","log","onSaveClick","_this$$refs$bsTableRe3","addTableConf","_this4","post","id","$ToolFn","utilFn","getUuid","menuguid","autoAddMissingTtributes","field","undefined","itemN","keys","ki","getPureConfigData","init","_this5","$nextTick","mounted","watch","handler","newval","deep","immediate"],"sources":["src/views/main/dynamicTableSetting/SubTabConfigModal.vue"],"sourcesContent":["<template>\r\n  <vxe-modal\r\n    v-model=\"dialogVisible\"\r\n    show-zoom\r\n    title=\"当前选中表表单配置\"\r\n    width=\"90%\"\r\n    height=\"90%\"\r\n    :position=\"{ top: '8%', left: '5%' }\"\r\n    resize\r\n    remember\r\n    class=\"conf-modal\"\r\n    transfer\r\n  >\r\n    <div class=\"height-all\">\r\n      <div class=\"main-modulebox-tabcon ofa pdl10 pdr10\" style=\"height: 41%;margin-bottom:10px;\">\r\n        <BsTable\r\n          v-if=\"ifRenderFormConfTable\"\r\n          ref=\"bsTableRef\"\r\n          :footer-config=\"{ showFooter: false }\"\r\n          :table-config=\"tableConfig\"\r\n          :table-columns-config=\"tableColumnsConfig1\"\r\n          :table-data=\"formConfigData1\"\r\n          :edit-config=\"editConfig\"\r\n          :toolbar-config=\"toolbarConfig\"\r\n          :pager-config=\"false\"\r\n          @cellClick=\"onCellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left tl\">\r\n              <vxe-button size=\"medium\" status=\"primary\" content=\"录入配置项\" @click=\"onEnterConfig\" />\r\n              <vxe-button size=\"medium\" status=\"primary\" content=\"新增行\" @click=\"onAddRowClick1\" />\r\n              <vxe-button size=\"medium\" status=\"primary\" content=\"删除行\" @click=\"onDeleteRowClick1\" />\r\n            </div>\r\n          </template>\r\n          <template v-slot:toolbar-custom-slot>\r\n            <div class=\"toolbar-slot-custom-slot fn-inline mgr15\">\r\n              <vxe-button size=\"medium\" status=\"primary\" content=\"保存\" @click=\"onSaveClick\" />\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </div>\r\n      <div class=\"main-modulebox-tabcon ofa pdl10 pdr10\" style=\"height: 50%\">\r\n        <BsTable\r\n          v-if=\"ifRenderFormConfTable\"\r\n          ref=\"bsTableRef2\"\r\n          :footer-config=\"{ showFooter: false }\"\r\n          :table-config=\"tableConfig\"\r\n          :table-columns-config=\"tableColumnsConfig2\"\r\n          :table-data=\"formConfigData2\"\r\n          :edit-config=\"editConfig\"\r\n          :toolbar-config=\"toolbarConfig\"\r\n          :pager-config=\"false\"\r\n          @cellClick=\"onCellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left tl\">\r\n              <vxe-button size=\"medium\" status=\"primary\" content=\"新增行\" @click=\"onAddRowClick2\" />\r\n              <vxe-button size=\"medium\" status=\"primary\" content=\"删除行\" @click=\"onDeleteRowClick2\" />\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </div>\r\n    </div>\r\n    <EnterItemConfigModal :item-visible.sync=\"itemVisible\" :config-params=\"configParams\" @onItemClose=\"dialogClose\" />\r\n  </vxe-modal>\r\n</template>\r\n<script>\r\nimport getFormConfData from './formConf.js'\r\nimport EnterItemConfigModal from './EnterItemConfigModal'\r\nexport default {\r\n  name: 'FormConfModal',\r\n  components: { EnterItemConfigModal },\r\n  props: {\r\n    dialogVisible: {\r\n      type: Boolean,\r\n      default () {\r\n        return false\r\n      }\r\n    },\r\n    params: {\r\n      type: Object,\r\n      default () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ifRenderFormConfTable: true,\r\n      toolbarConfig: {\r\n        disabledMoneyConversion: false,\r\n        ...getFormConfData('subTabConf', 'toolbarConfig')\r\n      },\r\n      tableConfig: getFormConfData('subTabConf', 'tableConfig'),\r\n      tableColumnsConfig1: getFormConfData('subTabConf', 'buttonsItemsConfig'),\r\n      tableColumnsConfig2: getFormConfData('subTabConf', 'buttonsInfoItemsConfig'),\r\n      formConfigData1: getFormConfData('subTabConf', 'defaultItemsDatas'),\r\n      formConfigData2: getFormConfData('subTabConf', 'defaultItemsDatas'),\r\n      itemVisible: false,\r\n      configParams: {},\r\n      paramsCp: {}\r\n    }\r\n  },\r\n  methods: {\r\n    onEnterConfig() {\r\n      let subTabConfig = this.beforeSave()\r\n      // 将json转成对象\r\n      let paramsCopy = this.deepCopy(this.paramsCp)\r\n      paramsCopy.configure = this.jsonParse(\r\n        paramsCopy.configure\r\n      )\r\n      paramsCopy.configure.subTabConfig = subTabConfig\r\n      this.configParams = this.deepCopy(paramsCopy)\r\n      this.itemVisible = true\r\n    },\r\n    onCellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      if (key === 'select_') {\r\n        if (obj.row.title === '') {\r\n          this.$message.warning('请先选择要素')\r\n        } else {\r\n          this.tableColumnsConfig[1].editRender.props.config.disabled = false\r\n          this.tableColumnsConfig[1].editRender.props.queryparams.elementCode = obj.row.title\r\n        }\r\n      }\r\n    },\r\n    dialogClose() {\r\n      this.itemVisible = false\r\n      this.dialogVisible = false\r\n      this.$emit('closeCallback')\r\n    },\r\n    deepCopy(obj) {\r\n      // 深拷贝通用方法\r\n      let me = this\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n    jsonParse(str) {\r\n      // json字符串转换成对象\r\n      return JSON.parse(str, function (k, v) {\r\n        try {\r\n          if (\r\n            v.indexOf &&\r\n            (v.indexOf('function') > -1 || v.indexOf('=>') > -1)\r\n          ) {\r\n            // return eval('(function(){return ' + v + ' })()')\r\n            // eslint-disable-next-line no-new-func\r\n            let func = new Function('return ' + v)\r\n            return func()\r\n          }\r\n          return v\r\n        } catch (e) {\r\n          return v\r\n        }\r\n      })\r\n    },\r\n    transformItemsDataToNest(columns) {\r\n      // columns转化为vxe-table columns数据结构\r\n      let self = this\r\n      columns.forEach((column, columnIndex) => {\r\n        if (Array.isArray(column.children) && column.children.length) {\r\n          column.children = self.transformConlumsDataToNest(column.children)\r\n        } else {\r\n          if (column['renderName']) {\r\n            column['itemRender'] = {\r\n              name: column.renderName, // 渲染器名,\r\n              options: ((arg) => {\r\n                if (typeof arg === 'object') {\r\n                  return self.deepCopy(arg)\r\n                } else if (typeof arg === 'string') {\r\n                  return arg ? arg.split('+').map((item, index) => {\r\n                    return { value: item.split('#')[0], label: item.split('#')[1] }\r\n                  }) : []\r\n                } else {\r\n                  return arg\r\n                }\r\n              })(column.options), // 下拉数据源\r\n              defaultValue: column.defaultValue, // 默认值\r\n              props: column.props // 额外参数\r\n            }\r\n          } else {\r\n            delete column['itemRender']\r\n          }\r\n          delete column._XID\r\n          delete column.renderType\r\n          delete column.renderName\r\n          delete column.options\r\n          delete column.props\r\n          delete column.defaultValue\r\n          delete self.deepCopy(column.props)\r\n        }\r\n      })\r\n      return columns\r\n    },\r\n    // options 处理成 1#内容+2#内容\r\n    changeOptions(data) {\r\n      data.forEach(item => {\r\n        // 如果是options\r\n        if (item.options) {\r\n          let str = ''\r\n          item.options.forEach(item2 => {\r\n            str += item2['code'] + '#' + item2['label'] + '+'\r\n          })\r\n          item.options = str.substring(0, str.length - 1)\r\n        }\r\n      })\r\n      return data\r\n    },\r\n    // 处理cpt，处理按钮组会调用\r\n    changeCptList(data) {\r\n      let keyArr = []\r\n      // 获取数组的key值\r\n      for (let key in data[0]) {\r\n        keyArr.push(key)\r\n      }\r\n      let str = ''\r\n      data.forEach(item => {\r\n        // 如果没有options，直接处理\r\n        str += item[keyArr[0]] + '#' + item[keyArr[1]] + '+'\r\n      })\r\n      str = str.substring(0, str.length - 1)\r\n      return str\r\n    },\r\n    // 处理按钮组\r\n    changeButtonsInfo(data) {\r\n      let arr = []\r\n      for (let key in data) {\r\n        data[key].forEach(item => {\r\n          let childItem = item\r\n          // 给每一项加个父页签\r\n          childItem.parentCode = key\r\n          // 如果有cpt数组 单独处理\r\n          if (item.params && item.params.cptList) {\r\n            let cptArr = this.changeCptList(item.params.cptList)\r\n            childItem.cptList = cptArr\r\n          }\r\n          arr.push(childItem)\r\n        })\r\n      }\r\n      return arr\r\n    },\r\n    // 保存前，处理好subTabConfig 表格 -> js对象\r\n    beforeSave() {\r\n      let subTabConfig = {\r\n        changeBtns: true,\r\n        buttons: [],\r\n        curButton: {},\r\n        buttonsInfo: {},\r\n        methods: {\r\n          bsToolbarClickEvent: ''\r\n        }\r\n      }\r\n      // 处理页签\r\n      const { fullData: tabelData1 } = this.$refs.bsTableRef.getTableData()\r\n      let buttonsData = this.deepCopy(tabelData1)\r\n      buttonsData.forEach(item => {\r\n        if (item.options) {\r\n          item.options = item.options.split('+').map(item => {\r\n            return { label: item.split('#')[1], code: item.split('#')[0] }\r\n          })\r\n        }\r\n      })\r\n      subTabConfig.buttons = this.clearDataRenderField(buttonsData)\r\n      // 处理第一个选择页签\r\n      if (subTabConfig.buttons[0].type && subTabConfig.buttons[0].type === 'select') {\r\n        let curButton = this.deepCopy(subTabConfig.buttons[0])\r\n        if (curButton.options) {\r\n          curButton.curValue = curButton.options[0].code\r\n        }\r\n        delete curButton['options']\r\n        delete curButton['_XID']\r\n        subTabConfig.curButton = curButton\r\n      } else {\r\n        subTabConfig.curButton = subTabConfig.buttons[0]\r\n      }\r\n      // 处理按钮组\r\n      const { fullData: tabelData2 } = this.$refs.bsTableRef2.getTableData()\r\n      let buttonsInfoData = this.deepCopy(tabelData2)\r\n      let buttonsInfo = {}\r\n      buttonsInfoData.forEach(item => {\r\n        if (item.cptList) {\r\n          item.params.cptList = item.cptList.split('+').map(item => {\r\n            return { cptName: item.split('#')[0], label: item.split('#')[1] }\r\n          })\r\n          delete item['cptList']\r\n        }\r\n        if (!buttonsInfo[item.parentCode]) {\r\n          buttonsInfo[item.parentCode] = []\r\n          buttonsInfo[item.parentCode].push(this.clearItem(item))\r\n        } else {\r\n          buttonsInfo[item.parentCode].push(this.clearItem(item))\r\n        }\r\n      })\r\n      subTabConfig.buttonsInfo = buttonsInfo\r\n      return subTabConfig\r\n    },\r\n    clearItem(data) {\r\n      for (let key in data) {\r\n        if (key.indexOf('__') >= 0) {\r\n          delete data[key]\r\n        }\r\n        if (data['status'] === '') {\r\n          delete data['status']\r\n        }\r\n      }\r\n      delete data['parentCode']\r\n      delete data['cptList']\r\n      delete data['_XID']\r\n      return data\r\n    },\r\n    jsonStringify(columns) {\r\n      // 对象转换成json字符串\r\n      return JSON.stringify(columns, function(key, val) {\r\n        if (typeof val === 'function') {\r\n          return val + ''\r\n        }\r\n        return val\r\n      })\r\n    },\r\n    onAddRowClick1() {\r\n      this.$refs.bsTableRef.insertRowData()\r\n    },\r\n    onDeleteRowClick1() {\r\n      this.$refs.bsTableRef.deleteRowData()\r\n    },\r\n    onAddRowClick2() {\r\n      this.$refs.bsTableRef2.insertRowData()\r\n    },\r\n    onDeleteRowClick2() {\r\n      this.$refs.bsTableRef2.deleteRowData()\r\n    },\r\n    getSaveParams(obj) {\r\n      return Object.assign({ ...this.paramsCp }, { itemsConfig: [], formConfig: [], globalConfig: {} }, obj)\r\n    },\r\n    saveTableConf(tableConfStr) {\r\n      // 保存表格配置\r\n      let self = this\r\n      this.$http[self.params.optionType === 'add' ? 'post' : 'put']('mp-b-perm-service/v1/tableconf', this.getSaveParams({\r\n        configure: tableConfStr\r\n      }))\r\n        .then((res) => {\r\n          self.dialogVisible = false\r\n          self.$emit('closeCallback')\r\n          if (res.rscode === '100000') {\r\n            this.$message({\r\n              showClose: true,\r\n              message: self.params.optionType === 'add' ? '数据新增成功' : '数据保存成功',\r\n              type: 'success'\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log('error', error)\r\n        })\r\n    },\r\n    onSaveClick() {\r\n      let subTabConfig = this.beforeSave()\r\n      // 将json转成对象\r\n      this.paramsCp.configure = this.jsonParse(\r\n        this.paramsCp.configure\r\n      )\r\n      this.paramsCp.configure.subTabConfig = subTabConfig\r\n      // 保存点击事件\r\n      const { fullData } = this.$refs.bsTableRef.getTableData()\r\n      if (fullData.length) {\r\n        this.saveTableConf(\r\n          this.jsonStringify(this.paramsCp.configure)\r\n        )\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '没有数据可保存，请重新录入！',\r\n          type: 'success'\r\n        })\r\n      }\r\n    },\r\n    addTableConf(tableConfStr) {\r\n      // 保存表格配置\r\n      let self = this\r\n      this.$http\r\n        .post('mp-b-perm-service/v1/tableconf', {\r\n          configure: tableConfStr,\r\n          // menuguid: self.params.menuguid,\r\n          // type: self.params.type,\r\n          // id: self.params.id\r\n          type: 'tableConf',\r\n          id: self.$ToolFn.utilFn.getUuid(),\r\n          name: 'testData',\r\n          menuguid: '123456'\r\n        })\r\n        .then((res) => {\r\n          if (res.rscode === '100000') {\r\n            this.$message({\r\n              showClose: true,\r\n              message: '数据保存成功',\r\n              type: 'success'\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log('error', error)\r\n        })\r\n    },\r\n    autoAddMissingTtributes(config, data) {\r\n      // 自动补齐所有缺失属性\r\n      data.forEach((item, index) => {\r\n        config.forEach((column, columnIndex) => {\r\n          if (column.field) {\r\n            item[column.field] = item[column.field] === undefined || item[column.field] === null ? '' : item[column.field]\r\n            if (column.field.indexOf('props') >= 0) {\r\n              item[column.field] = item[column.field] || {}\r\n            }\r\n          }\r\n        })\r\n      })\r\n      return data\r\n    },\r\n    clearDataRenderField(data) {\r\n      // 删除viewSort字段\r\n      let self = this\r\n      return data.map((item, index) => {\r\n        let itemN = Object.assign({}, item)\r\n        Object.keys(itemN).forEach((key, ki) => {\r\n          if (key.indexOf('__') >= 0) {\r\n            delete itemN[key]\r\n          }\r\n          delete itemN['insertMark']\r\n          delete itemN['date']\r\n          delete itemN['isNew']\r\n          delete itemN['_XID']\r\n          if (Array.isArray(itemN.children) && itemN.children.length) {\r\n            itemN.children = self.clearDataRenderField(itemN.children)\r\n          }\r\n        })\r\n        return itemN\r\n      })\r\n    },\r\n    getPureConfigData(data) {\r\n      delete data['itemsConfig']\r\n      delete data['subTabConfig']\r\n      delete data['globalConfig']\r\n      delete data['pageConfig']\r\n      delete data['editConfig']\r\n      delete data['editRules']\r\n      delete data['footerConfig']\r\n      delete data['dataConfig']\r\n      delete data['itemsConfigNest']\r\n      delete data['_XID']\r\n      Object.keys(data).forEach((key) => {\r\n        if (key.indexOf('__') >= 0) {\r\n          delete data[key]\r\n        }\r\n      })\r\n      return data\r\n    },\r\n    init() {\r\n      this.formConfigData1 = this.changeOptions(this.params.subTabConfig.buttons)\r\n      this.formConfigData2 = this.changeButtonsInfo(this.params.subTabConfig.buttonsInfo)\r\n      this.paramsCp = this.getPureConfigData(this.deepCopy(this.params))\r\n      this.ifRenderFormConfTable = false\r\n      this.$nextTick(() => {\r\n        this.ifRenderFormConfTable = true\r\n      })\r\n    }\r\n  },\r\n  mounted() {},\r\n  watch: {\r\n    dialogVisible: {\r\n      handler(newval) {\r\n        if (newval) {\r\n          this.init()\r\n        }\r\n        this.$emit('update:dialogVisible', newval)\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    params: {\r\n      handler(newval) {\r\n        this.paramsCp = this.getPureConfigData(this.params)\r\n        Object.assign(this.configParams, this.paramsCp)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n  .conf-modal {\r\n    .vxe-modal--content {\r\n      height: 100%;\r\n    }\r\n  }\r\n</style>\r\n"],"mappings":"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"}]}