{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\monitProcFeedback\\monitProcFeedback.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\monitProcFeedback\\monitProcFeedback.vue","mtime":1695870795838},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["HttpModule","api","MonitProcFeedbackModal","loadBsConfig","AddDialog","name","mixins","components","computed","menuSettingConfig","_objectSpread","transJson","$store","state","curNavModule","param5","hide","userInfo","watch","data","_this","h","$createElement","configTypeId","dialogTableVisible","drawInformation","showModal","queryConfig","queryData","roleId","roleguid","regulationClass","regulationClassName","menuId","guid","isNormalDone","flowStatus","isProcessed","isAgencyDone","mofDivCodeList","agencyCodeList","treeData","createDataList","tabStatusNumConfig","queryConfigInfo","toolBarStatusBtnConfig","methods","bsToolbarClickEvent","onStatusTabClick","changeBtns","isShowQueryConditions","toolBarStatusSelect","type","iconName","iconNameActive","iconUrl","label","code","curValue","tableLoading","tableColumnsConfig","tableData","tableToolbarConfig","disabledMoneyConversion","moneyConversion","import","export","print","zoom","custom","slots","tools","buttons","mainPagerConfig","total","currentPage","pageSize","tableConfig","renderers","$customerRender","renderDefault","cellRender","_ref","context","row","rowIndex","vnode","click","handleRowClick","showLogModel","$customerWarnLevel","_ref2","warnLevel","_this$$store$state$wa","warnInfo","warnLevelOptions","find","item","tableFooterConfig","showFooter","logData","showLogView","menuName","showAttachmentDialog","showGlAttachmentDialog","detailData","codeList","warningCode","dialogVisible","dialogTitle","fiRuleCode","activated","updateRegulationClassNameFormConfig","console","log","queryActionLog","_this2","params2","dealNo","getLogs","then","res","tempData","map","logid","nodeName","actionUser","actionName","actionTime","message","$message","error","_this$transJson","_this$queryConfig","index","findIndex","field","splice","itemChange","changeEvent","property","concat","onSearch","formData","$refs","queryFrom","getFormData","queryConfigSearchData","length","forEach","queryTableDatas","getSearchDataList","searchDataObj","itemRender","getConditionList","condition","changeVisible","val","breakRuleVisible","onToolbarBtnClick","_ref3","table","refresh","reset","_this3","showAttachment","attachmentid1","attachmentid3","warning","billguid","cellClick","obj","e","key","column","closeAttachment","ajaxTableData","_ref4","params","_this$transJson2","_this4","param","page","isUnit","retroact","f_FullName","substring","getWorkFlowDetail","selection","results","totalCount","getdata","getTableConfByMenuguid","menuguid","self","Promise","resolve","reject","$http","get","mof_div_code","province","fiscalyear","year","rscode","catch","handleCreate","mainTableRef","getSelectionData","$set","onTabPanelBtnClick","_this5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","serverTime","formItemText","preNodeFormObj","ortherData","_selection","wrap","_callee$","_context","prev","next","abrupt","$nextTick","getCurrentTime","sent","mflowBizInfoList","bizKey","bizValue","createdAttachmentid","$ToolFn","utilFn","getUuid","userName","$route","commentDept","tabCode","initModal","stop","str","split","result","i","getViolationType","_this6","size","queryViolationType","v","value","getCount","_this$transJson3","check","_this7","success","_this8","getReport","fileGuid","filePreviewDialogVisible","cellStyle","_ref5","includes","color","withdraw","mulWithdraw","_this9","commentName","operationBtn","buttonsInfo","btnInfoKey","tabBtnConfig","btn","information1","workFlowRevoke","getMofDiv","_this$$store$state$us","_this10","fiscalYear","arguments","undefined","getMofTreeData","treeResdata","getChildrenNewData1","indexOf","getAgency","_this11","elementCode","date","tokenid","getters","getLoginAuthentication","appguid","mofDivCode","parameters","getTreeAgency","options","datas","that","children","loadConfig","_this12","_callee2","configQueryData","_callee2$","_context2","tableId","id","itemsConfig","dataConfig","menuname","loadTabConfig","_this13","_callee3","tabPanel","_callee3$","_context3","loadQueryFormConfig","_this14","_callee4","queryForm","_callee4$","_context4","mounted","created","_this15","taskQueue","all","_callee5","_callee5$","_context5"],"sources":["src/views/main/monitProcFeedback/monitProcFeedback.vue"],"sourcesContent":["<!-- 预警明细查询（按规则） -->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\" class=\"createProcessing\">\r\n    <BsMainFormListLayout :default-split-pane-left-width=\"14\">\r\n      <template v-slot:topTap>\r\n      </template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          is-open\r\n          is-hide-query\r\n          :tab-status-btn-config=\"queryConfigInfo\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"(open) => isShowQueryConditions = open\"\r\n          @btnClick=\"onTabPanelBtnClick\"\r\n        />\r\n      </template>\r\n      <template v-slot:query>\r\n        <BsQuery\r\n          ref=\"queryFrom\"\r\n          :query-form-item-config=\"queryConfig\"\r\n          :query-form-data=\"queryData\"\r\n          @onSearchClick=\"mainPagerConfig.page = 1,onSearch()\"\r\n          @onSearchResetClick=\"reset(),onSearch()\"\r\n          @itemChange=\"itemChange\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          :cell-style=\"cellStyle\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <MonitProcFeedbackModal v-if=\"showModal\" ref=\"MonitProcFeedbackModal\" @close=\"showModal = false\" />\r\n    <AddDialog\r\n      v-if=\"dialogVisible\"\r\n      :title=\"dialogTitle\"\r\n      :param5=\"menuSettingConfig\"\r\n      :warning-code=\"warningCode\"\r\n      :fi-rule-code=\"fiRuleCode\"\r\n    />\r\n    <el-dialog title=\"确定要撤销选中数据吗？\" width=\"600px\" :visible.sync=\"dialogTableVisible\">\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-input v-model=\"drawInformation\" type=\"textarea\" :rows=\"2\" placeholder=\"请输入内容\" />\r\n        <el-button v-deClick v-loading=\"tableLoading\" type=\"primary\" @click=\"mulWithdraw\">确定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { proconf } from './createProcessing'\r\nimport HttpModule from '@/api/frame/main/Monitoring/WarningDetailsByCompartment.js'\r\nimport api from '@/api/frame/main/fundMonitoring/createProcessing.js'\r\nimport MonitProcFeedbackModal from './monitProcFeedbackModal.vue'\r\nimport loadBsConfig from '@/views/main/dynamicTableSetting/config'\r\nimport AddDialog from '@/views/main/fundMonitoring/violationHandle/createProcessing/children/addDialog.vue'\r\nexport default {\r\n  name: 'MonitProcFeedback',\r\n  mixins: [loadBsConfig],\r\n  components: {\r\n    MonitProcFeedbackModal,\r\n    AddDialog\r\n  },\r\n  computed: {\r\n    menuSettingConfig() {\r\n      return { ...this.transJson(this.$store.state.curNavModule.param5), hide: 1 }\r\n    },\r\n    userInfo() {\r\n      return this.$store.state.userInfo\r\n    }\r\n  },\r\n  watch: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      configTypeId: {},\r\n      dialogTableVisible: false,\r\n      drawInformation: '',\r\n      // BsQuery 查询栏\r\n      showModal: false,\r\n      queryConfig: [],\r\n      queryData: {\r\n        roleId: this.$store.state.curNavModule.roleguid,\r\n        regulationClass: this.transJson(this.$store.state.curNavModule.param5).regulationClass,\r\n        regulationClassName: this.transJson(this.$store.state.curNavModule.param5).regulationClassName,\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        isNormalDone: false,\r\n        flowStatus: '1-4', // 待审批\r\n        isProcessed: false,\r\n        isAgencyDone: false,\r\n        mofDivCodeList: [],\r\n        agencyCodeList: []\r\n      },\r\n      treeData: [],\r\n      createDataList: {},\r\n      tabStatusNumConfig: {},\r\n      queryConfigInfo: {},\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        },\r\n        changeBtns: true\r\n      },\r\n      isShowQueryConditions: false,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        iconName: 'base-all.png',\r\n        iconNameActive: 'base-all-active.png',\r\n        iconUrl: '',\r\n        label: '全部',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableColumnsConfig: [],\r\n      tableData: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 20\r\n      },\r\n      tableConfig: {\r\n        renderers: {\r\n          // 修改 配置 下发 删除\r\n          $customerRender: {\r\n            renderDefault: (h, cellRender, { row, rowIndex }, context) => {\r\n              let vnode = (\r\n                <div>\r\n                  <el-button type=\"primary\" size=\"mini\" onClick={() => this.handleRowClick(row)}>查看详情</el-button>\r\n                  <el-button type=\"primary\" size=\"mini\" onClick={() => this.showLogModel(row)}>查看日志</el-button>\r\n                </div>\r\n              )\r\n              // {this.queryData.flowStatus === '2' ? <el-button type=\"primary\" size=\"mini\" onClick={() => this.withdraw(row)}>撤回</el-button> : ''}\r\n              return [\r\n                vnode\r\n              ]\r\n            }\r\n          },\r\n          $customerWarnLevel: {\r\n            renderDefault: (h, cellRender, { row, rowIndex }, context) => {\r\n              if (row.warnLevel) {\r\n                return [\r\n                  <div class={'warningLevel' + row.warnLevel} size=\"mini\" >{this.$store.state.warnInfo.warnLevelOptions.find(item => item.warnLevel === row.warnLevel)?.label}</div>\r\n                ]\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '',\r\n      // userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      // 文件\r\n      showAttachmentDialog: false,\r\n      showGlAttachmentDialog: false,\r\n      detailData: [],\r\n      codeList: [],\r\n      // 查看详情传参\r\n      warningCode: '',\r\n      dialogVisible: false,\r\n      dialogTitle: '',\r\n      fiRuleCode: ''\r\n      // -----\r\n    }\r\n  },\r\n  activated() {\r\n    this.updateRegulationClassNameFormConfig()\r\n  },\r\n  methods: {\r\n    handleRowClick(row) {\r\n      console.log('点击每行的方法', row)\r\n      this.fiRuleCode = row.fiRuleCode || ''\r\n      this.warningCode = row.warningCode || ''\r\n      this.dialogVisible = true\r\n      this.dialogTitle = '查看详情信息'\r\n    },\r\n    showLogModel(row) {\r\n      this.showLogView = true\r\n      this.queryActionLog(row)\r\n    },\r\n    // 操作日志\r\n    queryActionLog(row) {\r\n      let params2 = row.dealNo\r\n      // let params = { warningCode: row.warningCode }\r\n      // api.workFlowGetLogs(params).then(res => {\r\n      api.getLogs(params2).then(res => {\r\n        if (res.code === '000000') {\r\n          let tempData = res.data.map(item => {\r\n            return {\r\n              logid: item['logid'],\r\n              nodeName: item['nodeName'],\r\n              actionUser: item['operationUser'],\r\n              actionName: item['operationTypeName'],\r\n              actionTime: item['createdTime'] == null ? '' : item['createdTime'],\r\n              message: item['operationComment']\r\n            }\r\n          })\r\n          // this.logData = res.data\r\n          this.logData = tempData\r\n          console.log(this.logData)\r\n          this.showLogView = true\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    updateRegulationClassNameFormConfig () {\r\n      // 如果菜单参数有主题 当前模块就使用该主题查询\r\n      if (this.transJson(this.$store.state.curNavModule.param5)?.regulationClass) {\r\n        const index = this.queryConfig.findIndex(item => item.field === 'regulationClassName')\r\n        index > -1 && this.queryConfig?.splice(index, 1)\r\n      }\r\n    },\r\n    itemChange(changeEvent) {\r\n      console.log('change', changeEvent)\r\n      // 因为无法预知是否配置了预算单位搜索和区划搜索栏 所以暂时用这种处理单位搜索和区划搜索栏\r\n      if (changeEvent.property === 'mofDivCodes' || changeEvent.property === 'mofDivCodeList') {\r\n        this.queryData['mofDivCodeList'] = changeEvent.data[`${changeEvent.property}_code__multiple`]\r\n      } else if (changeEvent.property === 'agencyCodeList') {\r\n        this.queryData['agencyCodeList'] = changeEvent.data[`${changeEvent.property}_code__multiple`]\r\n      }\r\n    },\r\n    onSearch() {\r\n      let formData = this.$refs.queryFrom.getFormData()\r\n      let queryConfigSearchData = {}\r\n      if (this.queryConfig && this.queryConfig.length) {\r\n        this.queryConfig.forEach(item => {\r\n          // 因为无法预知是否配置了预算单位搜索和区划搜索栏 所以暂时用这种处理单位搜索和区划搜索栏\r\n          if (item.field !== 'mofDivCodeList' && item.field !== 'agencyCodeList' && item.field !== 'mofDivCodesList') {\r\n            queryConfigSearchData[item.field] = formData[item.field]\r\n          }\r\n        })\r\n      }\r\n      this.queryData = { ...this.queryData, ...queryConfigSearchData }\r\n      this.queryTableDatas()\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.queryData = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    changeVisible(val) {\r\n      console.log(val, '输出')\r\n      this.breakRuleVisible = val\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    /**\r\n     * 重置查询条件\r\n     */\r\n    reset() {\r\n      this.$refs.queryFrom.reset()\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.mainPagerConfig.pageSize = 20\r\n      // 因为无法预知是否配置了预算单位搜索和区划搜索栏 所以暂时用这种处理重置单位搜索和区划搜索栏\r\n      if (this.queryConfig && this.queryConfig.length) {\r\n        this.queryConfig.forEach(item => {\r\n          if (item.field === 'mofDivCodes' || item.field === 'mofDivCodeList') {\r\n            this.queryData['mofDivCodeList'] = []\r\n          } else if (item.field === 'agencyCodeList') {\r\n            this.queryData['agencyCodeList'] = []\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 查看附件\r\n    showAttachment(row) {\r\n      console.log('查看附件', row)\r\n      if (row.attachmentid1 === null && row.attachmentid3 === null) {\r\n        this.$message.warning('该数据无附件')\r\n        return\r\n      }\r\n      this.billguid = row.attachmentid1 === null ? row.attachmentid3 : row.attachmentid1\r\n      // this.showAttachmentDialog = true\r\n      this.showGlAttachmentDialog = true\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      console.log(key, obj.row)\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh() {\r\n      this.onSearch()\r\n    },\r\n    closeAttachment() {\r\n      this.showGlAttachmentDialog = false\r\n    },\r\n    ajaxTableData({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig.currentPage = currentPage\r\n      this.mainPagerConfig.pageSize = pageSize\r\n      this.queryTableDatas()\r\n    },\r\n    // 查询 table 数据\r\n    queryTableDatas() {\r\n      // console.log('this.menuSettingConfig', this.menuSettingConfig)\r\n      let param = {\r\n        ...this.queryData,\r\n        page: this.mainPagerConfig.currentPage,\r\n        pageSize: this.mainPagerConfig.pageSize,\r\n        isUnit: this.menuSettingConfig.retroact,\r\n        roleId: this.$store.state.curNavModule.roleguid,\r\n        menuId: this.$store.state.curNavModule.guid\r\n      }\r\n      if (this.$store.state.curNavModule.f_FullName.substring(0, 4) === '直达资金') {\r\n        param.regulationClass = '0201'\r\n      }\r\n      const regulationClass = this.transJson(this.$store.state.curNavModule.param5)?.regulationClass\r\n      if (regulationClass) {\r\n        param.regulationClass = regulationClass\r\n      }\r\n      this.tableLoading = true\r\n      api.getWorkFlowDetail(param).then(res => {\r\n        this.selection = []\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.tableData = res.data.results\r\n          this.mainPagerConfig.total = res.data.totalCount\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    getdata() {\r\n\r\n    },\r\n    getTableConfByMenuguid(menuguid) {\r\n      // 根据菜单menuguid获取其下所有表配置\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        self.$http\r\n          .get('mp-b-perm-service/v1/tableconf/menuguid', {\r\n            menuguid: menuguid,\r\n            mof_div_code: self.userInfo.province, // 区划\r\n            fiscalyear: self.userInfo.year // 年份\r\n          })\r\n          .then((res) => {\r\n            if (res.rscode === '100000') {\r\n              resolve(res.data)\r\n              // resolve(self.generateCurTableConfDataMap(res.data))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            reject(error)\r\n          })\r\n      })\r\n    },\r\n    // 生成\r\n    handleCreate() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n      }\r\n      this.$set(this.$refs.mainTableRef, 'createDataList', selection[0])\r\n    },\r\n    async onTabPanelBtnClick(obj) { // 按钮点击\r\n      console.log(777, obj)\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n        return\r\n      }\r\n      if (obj.code === 'dcl-hsfk') {\r\n        this.showModal = true\r\n        await this.$nextTick()\r\n        let serverTime = await HttpModule.getCurrentTime()\r\n        let formItemText = selection[0].mflowBizInfoList || []// 拿到上一个节点表单结构\r\n        let preNodeFormObj = {}// 上一个节点表单填得值\r\n        if (formItemText && formItemText.length) {\r\n          formItemText.forEach(item => {\r\n            preNodeFormObj[item.bizKey] = item.bizValue\r\n          })\r\n        }\r\n        let ortherData = {\r\n          serverTime: serverTime.data,\r\n          createdAttachmentid: this.$ToolFn.utilFn.getUuid(),\r\n          userName: this.userInfo.name,\r\n          menuName: this.menuName\r\n        }\r\n        if (this.$route.name === 'monitProcFeedbackSpe' || this.$route.name === 'monitProcFeedbackDfr') {\r\n          ortherData.commentDept = '1'// 单位材料整改初始值设置为1 先暂时这样改\r\n        }\r\n        this.$set(this.$refs.MonitProcFeedbackModal, 'createDataList', { ...selection[0], ...preNodeFormObj, ...ortherData })\r\n        this.$refs.MonitProcFeedbackModal.tabCode = obj.code\r\n        this.$refs.MonitProcFeedbackModal.dialogVisible = true\r\n        this.$refs.MonitProcFeedbackModal.initModal()\r\n      } else if (obj.code === 'dcl-cx') {\r\n        let selection = this.$refs.mainTableRef.getSelectionData() || []\r\n        if (selection.length === 0) {\r\n          this.$message.warning('请选择数据')\r\n          return\r\n        }\r\n        this.selection = selection\r\n        this.dialogTableVisible = true\r\n      }\r\n    },\r\n    transJson(str) {\r\n      if (!str) return\r\n      var params = str.split(',')\r\n      var result = {}\r\n      if (params && params.length > 0) {\r\n        for (var i = 0; i < params.length; i++) {\r\n          var map = params[i].split('=')\r\n          result[map[0]] = map[1]\r\n        }\r\n      }\r\n      return result\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) return\r\n      this.reset()\r\n      this.queryData.flowStatus = obj.code\r\n      this.onSearch()\r\n    },\r\n    getViolationType() {\r\n      let params = {\r\n        page: 1,\r\n        size: 99999\r\n      }\r\n      api.queryViolationType(params).then(res => {\r\n        if (res.code === '000000') {\r\n          res.data.results.map(v => {\r\n            v.value = v.code\r\n            v.label = v.name\r\n          })\r\n          this.$set(this.queryConfig[0].itemRender, 'options', res.data.results)\r\n        }\r\n      })\r\n    },\r\n    getCount() {\r\n      let param = {\r\n        roleId: this.$store.state.curNavModule.roleguid\r\n      }\r\n      const regulationClass = this.transJson(this.$store.state.curNavModule.param5)?.regulationClass\r\n      if (regulationClass) {\r\n        param.regulationClass = regulationClass\r\n      }\r\n      api.getCount(param).then(res => {\r\n        if (res.code === '000000') {\r\n          // 主管处室\r\n          // this.tabStatusNumConfig['dcl'] = res.data.dcl\r\n          // this.tabStatusNumConfig['yxf'] = res.data.yxf\r\n          // this.tabStatusNumConfig['dsh'] = res.data.dsh\r\n          // this.tabStatusNumConfig['yth'] = res.data.yth\r\n          // this.tabStatusNumConfig['rdzc'] = res.data.rdzc\r\n          // this.tabStatusNumConfig['yzg'] = res.data.yzg\r\n          // // 单位\r\n          // this.tabStatusNumConfig['dhs'] = res.data.dhs\r\n          // this.tabStatusNumConfig['dcszg'] = res.data.dcszg\r\n          // this.tabStatusNumConfig['csysh'] = res.data.csysh\r\n          // this.tabStatusNumConfig['bth'] = res.data.bth\r\n        }\r\n      })\r\n    },\r\n    check() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length === 0) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.check(selection[0].dealNo).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '66020026') {\r\n          this.$message.success(res.message)\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    // 打印\r\n    print() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n        return\r\n      }\r\n      const params = {\r\n        dealNo: selection[0].dealNo\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.getReport(params).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.fileGuid = res.data\r\n          this.filePreviewDialogVisible = true\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    cellStyle({ row, rowIndex, column }) {\r\n      if (['warnLevel'].includes(column.property)) {\r\n        switch (row.warnLevel) {\r\n          case 3:\r\n            return {\r\n              color: '#BBBB00'\r\n            }\r\n          case 2:\r\n            return {\r\n              color: 'orange'\r\n            }\r\n          case 1:\r\n            return {\r\n              color: 'red'\r\n            }\r\n          case 4:\r\n            return {\r\n              color: 'blue'\r\n            }\r\n          case 5:\r\n            return {\r\n              color: 'gray'\r\n            }\r\n          default:\r\n            break\r\n        }\r\n      }\r\n    },\r\n    withdraw(row) {\r\n      this.selection = [row]\r\n      this.dialogTableVisible = true\r\n      // let params = [{\r\n      //   menuId: this.$store.state.curNavModule.guid,\r\n      //   warningCode: row.warningCode,\r\n      //   commentDept: '5', // 5  撤回\r\n      //   dealNo: row.dealNo\r\n      // }]\r\n      // this.tableLoading = true\r\n      // api.workFlowRevoke(params).then(res => {\r\n      //   this.tableLoading = false\r\n      //   if (res.code === '000000') {\r\n      //     this.$message.success('撤回成功')\r\n      //     this.dialogTableVisible = false\r\n      //     this.queryTableDatas()\r\n      //   }\r\n      // })\r\n    },\r\n    mulWithdraw() {\r\n      let commentName = '撤销'\r\n      console.log(777, this.queryConfigInfo, this.queryConfigInfo)\r\n      let operationBtn = this.queryConfigInfo.buttonsInfo || []\r\n      for (const btnInfoKey in operationBtn) {\r\n        const tabBtnConfig = operationBtn[btnInfoKey]\r\n        for (let i = 0; i < tabBtnConfig.length; i++) {\r\n          const btn = tabBtnConfig[i]\r\n          if (btn.code === 'dcl-cs') {\r\n            commentName = btn.label\r\n          }\r\n        }\r\n      }\r\n      let params = this.selection.map(row => {\r\n        return {\r\n          menuId: this.$store.state.curNavModule.guid,\r\n          warningCode: row.warningCode,\r\n          commentDept: '5', // 5  撤回\r\n          dealNo: row.dealNo,\r\n          commentName: commentName,\r\n          menuName: this.menuName,\r\n          information1: this.drawInformation\r\n        }\r\n      })\r\n      this.tableLoading = true\r\n      api.workFlowRevoke(params).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.$message.success('撤回成功')\r\n          this.dialogTableVisible = false\r\n          this.onSearch()\r\n        }\r\n      })\r\n    },\r\n    getMofDiv(fiscalYear = this.$store.state.userInfo?.year) {\r\n      HttpModule.getMofTreeData({ fiscalYear }).then(res => {\r\n        if (res.code === '000000') {\r\n          let treeResdata = this.getChildrenNewData1(res.data)\r\n          let index = this.queryConfig.findIndex(item => item.field.indexOf('mofDivCode') > -1)\r\n          this.$set(this.queryConfig[index].itemRender, 'options', treeResdata)\r\n          // this.queryConfig[0].itemRender.options = treeResdata\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    getAgency() {\r\n      const param = {\r\n        elementCode: 'AGENCY',\r\n        date: this.$store.state.userInfo.year,\r\n        tokenid: this.$store.getters.getLoginAuthentication.tokenid,\r\n        appguid: 'apaas',\r\n        year: this.$store.state.userInfo.year,\r\n        mofDivCode: this.$store.state.userInfo.province,\r\n        parameters: {}\r\n      }\r\n      api.getTreeAgency(param).then(res => {\r\n        let treeResdata = res.data\r\n        let index = this.queryConfig.findIndex(item => item.field.indexOf('agencyCode') > -1)\r\n        this.queryConfig[index].itemRender.options = treeResdata\r\n      })\r\n    },\r\n    getChildrenNewData1(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.name\r\n        if (item.children) {\r\n          that.getChildrenNewData1(item.children)\r\n        }\r\n      })\r\n      return datas\r\n    },\r\n    async loadConfig(configTypeId) {\r\n      let { table } = configTypeId\r\n      if (!table) return\r\n      let params = {\r\n        tableId: {\r\n          id: table,\r\n          fiscalyear: this.userInfo.year,\r\n          mof_div_code: this.userInfo.province,\r\n          menuguid: this.$store.state.curNavModule.guid\r\n        }\r\n      }\r\n      let configQueryData = await this.loadBsConfig(params)\r\n      this.tableColumnsConfig = configQueryData.itemsConfig\r\n      this.menuName = configQueryData.dataConfig.menuname\r\n    },\r\n    async loadTabConfig(configTypeId) {\r\n      let { tabPanel } = configTypeId\r\n      if (!tabPanel) return\r\n      let params = {\r\n        tableId: {\r\n          id: tabPanel,\r\n          fiscalyear: this.userInfo.year,\r\n          mof_div_code: this.userInfo.province,\r\n          menuguid: this.$store.state.curNavModule.guid\r\n        }\r\n      }\r\n      let configQueryData = await this.loadBsConfig(params)\r\n      this.$set(this, 'queryConfigInfo', { ...this.toolBarStatusBtnConfig, ...configQueryData.itemsConfig[0] })\r\n    },\r\n    async loadQueryFormConfig(configTypeId) {\r\n      let { queryForm } = configTypeId\r\n      if (!queryForm) return\r\n      let params = {\r\n        tableId: {\r\n          id: queryForm,\r\n          fiscalyear: this.userInfo.year,\r\n          mof_div_code: this.userInfo.province,\r\n          menuguid: this.$store.state.curNavModule.guid\r\n        }\r\n      }\r\n      let configQueryData = await this.loadBsConfig(params)\r\n      this.$set(this, 'queryConfig', configQueryData.itemsConfig)\r\n      if (configQueryData.itemsConfig && configQueryData.itemsConfig.length && configQueryData.itemsConfig[0].field === 'mofDivCodes') {\r\n        this.getMofDiv()// 财政区划添加下拉按钮选项\r\n      } else if (configQueryData.itemsConfig && configQueryData.itemsConfig.length && configQueryData.itemsConfig[0].field === 'agencyCodeList') {\r\n        this.getAgency()// 预算单位加载\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  created() {\r\n    this.getTableConfByMenuguid(this.$store.state.curNavModule.guid).then(res => {\r\n      res.forEach(item => {\r\n        this.configTypeId[item.type] = item.id\r\n      })\r\n      let taskQueue = [this.loadConfig(this.configTypeId), this.loadTabConfig(this.configTypeId), this.loadQueryFormConfig(this.configTypeId)]\r\n      Promise.all(taskQueue).then(() => {\r\n        this.$nextTick(async () => { // 渲染优化 放到mounted之后渲染\r\n          this.onSearch()\r\n        })\r\n      })\r\n      // this.loadConfig(this.configTypeId)// 加载表格\r\n      // this.loadTabConfig(this.configTypeId)// 加载tab\r\n      // this.loadQueryFormConfig(this.configTypeId)// 加载query\r\n    })\r\n  }\r\n}\r\n</script>\r\n<style >\r\n/* .createProcessing .radio-right{\r\nfloat: right;\r\n}\r\n.createProcessing .Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.createProcessing .Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.createProcessing .Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n .createProcessing .unit-tree-main .el-tree-node__content .custom-node-bg{\r\n  background-color: transparent !important;\r\n} */\r\n</style>\r\n"],"mappings":"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"}]}