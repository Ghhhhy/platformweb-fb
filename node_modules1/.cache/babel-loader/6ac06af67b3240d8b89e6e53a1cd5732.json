{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\basicInfoTable\\BasicGradeInfoTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\basicInfoTable\\BasicGradeInfoTable.vue","mtime":1694505521695},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["name","components","props","id","type","String","default","_default","defaultMoneyUnit","Number","itemsConfig","Array","title","children","field","width","align","filters","editRender","defaultValue","redonly","placeholder","sortable","combinedType","min","options","value","label","multiple","fieldType","formula","cellRender","mode","editConfig","Object","editRules","required","message","max","pattern","trigger","validator","_ref","cellValue","rule","rules","row","rowIndex","column","columnIndex","$table","Promise","resolve","reject","result","length","test","Error","sex","age","income","renderColumnsConfig","className","titleAlign","data","actualIncome","bonus","category","deduction","cellStyle","Function","toolbarConfig","moneyInputSwich","visible","calculateConstraintConfigIn","calcAndConstraintItemCodeField","enabledType","performGetData","performColFormula","gradedSummary","performRowCodeFormula","performColConstraint","performCellConstraint","colFormulaConfig","rowCodeFormulaConfig","constraintConfig","tableGlobalConfig","mouseConfig","selected","tooltipConfig","showAll","tableConfig","globalConfig","checkType","seq","cellClickCheck","rowDrop","optionSort","tableRenderMap","curmap","mapid","editable","index","nestIndex","itemConfig","render","level","renderTitle","padEnd","renderField","isTree","needmap","map","mapSource","renderMap","editRulesMap","tableRenderData","renderEditRules","tableRenderColumnsConfig","methods","getbasicDataType","obj","prototype","toString","call","slice","getUuid","hexDigits","arguments","undefined","s","i","substr","Math","floor","random","uuid","join","chunk","arr","size","arr2","push","editClosed","$bstable","$grid","$emit","basicInfoTable","itemMap","getData","editActived","cellClick","cellOptionCallBack","option","cellStyleIn","_ref2","$rowIndex","$columnIndex","backgroundColor","initEditRules","keys","forEach","item","self","renderValue","then","res","catch","e","newRule","assign","$options","maxWidth","validCellRules","_ref3","errorRules","syncVailds","customValid","validRuleErr","isNumber","numVal","isNaN","parseFloat","RegExp","all","rest","error","validateRow","$refs","tableOptionFn","validate","validateAll","fullValidate","getTableData","fullData","_this$$refs$basicInfo","getPureTableData","resultData","_defineProperty","_Object$assign2","_ref4","config","isHump","fieldkeys","endsWith","viewData","originalData","generateSingItemRenderMap","split","list","generateRenderMap","columns","_this","isArray","initItems","tableRenderColumnsGroups","initData","_Object$assign3","_ref5","initFormula","_this$tableRenderMap","transColFormulaToCellFomula","renderFormule","rowCodeCalcItemCodeField","regR","rowsKey","match","keyCF","keyC","replace","reg","init","crated","mounted","watch","handler","deep","immediate"],"sources":["src/components/basicInfoTable/BasicGradeInfoTable.vue"],"sourcesContent":["<!--  基础分级信息表  Author:Titans@2396757591@qq.com -->\r\n<template>\r\n  <div :class=\"mode\" class=\"basic-info-table\" :style=\"{ height: tableRenderData.length * 34 + 40 + 'px' }\">\r\n    <BsTable\r\n      :id=\"id\"\r\n      ref=\"basicInfoTable\"\r\n      :auto-resize=\"false\"\r\n      :table-global-config=\"tableGlobalConfig\"\r\n      :footer-config=\"{ showFooter: false }\"\r\n      :keyboard-config=\"{ isArrow: false }\"\r\n      :table-config=\"tableConfig\"\r\n      :table-columns-config=\"tableRenderColumnsConfig\"\r\n      :table-data=\"tableRenderData\"\r\n      :expand-config=\"false\"\r\n      :tree-config=\"false\"\r\n      :edit-config=\"mode !== 'detail' ? editConfig : false\"\r\n      :toolbar-config=\"toolbarConfig\"\r\n      :edit-rules=\"renderEditRules\"\r\n      :pager-config=\"false\"\r\n      :default-money-unit=\"defaultMoneyUnit\"\r\n      :calculate-constraint-config=\"calculateConstraintConfigIn\"\r\n      @editClosed=\"editClosed\"\r\n      @editActived=\"editActived\"\r\n      @cellClick=\"cellClick\"\r\n      @cellOptionCallBack=\"cellOptionCallBack\"\r\n    >\r\n      <template v-slot:titleRequired=\"{ row, column }\">\r\n        <span> <span calss=\"fn-inline\">{{ row[column.property] }}</span><span class=\"required\">{{ row.required ? '*' : '' }}</span></span>\r\n      </template>\r\n    </bsTable>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'BasicGradeInforTable',\r\n  components: {},\r\n  props: {\r\n    id: { // 表格id\r\n      type: String,\r\n      default () {\r\n        return 'gradeInfor'\r\n      }\r\n    },\r\n    defaultMoneyUnit: {\r\n      type: Number,\r\n      default () {\r\n        return 1\r\n      }\r\n    },\r\n    itemsConfig: { // 项配置，可以是嵌套数据结构\r\n      type: [Array],\r\n      default() {\r\n        return [\r\n          {\r\n            title: '基础信息',\r\n            children: [\r\n              {\r\n                title: '姓名',\r\n                field: 'name',\r\n                width: 150,\r\n                align: 'center',\r\n                filters: false,\r\n                editRender: {\r\n                  name: '$vxeInput',\r\n                  defaultValue: '默认的名字',\r\n                  props: {\r\n                    type: 'string',\r\n                    redonly: true,\r\n                    placeholder: '请输入姓名'\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                title: '年龄',\r\n                field: 'age',\r\n                sortable: true,\r\n                width: 120,\r\n                filters: false,\r\n                align: 'center',\r\n                combinedType: ['average'],\r\n                editRender: {\r\n                  name: '$vxeInput',\r\n                  defaultValue: 1,\r\n                  props: {\r\n                    min: 0,\r\n                    type: 'number',\r\n                    placeholder: '抢输入年龄',\r\n                    redonly: true\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                title: '类别',\r\n                field: 'category',\r\n                width: 150,\r\n                editRender: {\r\n                  name: '$vxeSelect',\r\n                  defaultValue: '前端',\r\n                  options: [\r\n                    { value: '前端', label: '前端' },\r\n                    { value: '后端', label: '后端' },\r\n                    { value: '运维', label: '测试' },\r\n                    { value: '实施', label: '实施' },\r\n                    { value: '测试', label: '测试' }\r\n                  ],\r\n                  props: {\r\n                    multiple: true,\r\n                    placeholder: '请输入角色'\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            title: '收入统计',\r\n            children: [\r\n              {\r\n                title: '收入',\r\n                field: 'income',\r\n                fieldType: 'money',\r\n                formula: '{age}>=18?Math.pow({age},4)/2:0',\r\n                width: 150,\r\n                align: 'right',\r\n                cellRender: {\r\n                  name: '$vxeMoney',\r\n                  defaultValue: 0,\r\n                  props: {\r\n                    min: -1111111111,\r\n                    type: 'float'\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                title: '扣除',\r\n                field: 'deduction',\r\n                width: 150,\r\n                align: 'right',\r\n                editRender: {\r\n                  name: '$vxeMoney',\r\n                  defaultValue: 0,\r\n                  props: {\r\n                    min: -1111111111,\r\n                    type: 'float'\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                title: '奖金',\r\n                width: 150,\r\n                align: 'right',\r\n                field: 'bonus',\r\n                editRender: {\r\n                  name: '$vxeMoney',\r\n                  defaultValue: 0,\r\n                  props: {\r\n                    min: -1111111111,\r\n                    type: 'float'\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                title: '实际收入',\r\n                width: 180,\r\n                align: 'right',\r\n                field: 'actualIncome',\r\n                editRender: {\r\n                  name: '$vxeMoney',\r\n                  defaultValue: 0,\r\n                  props: {\r\n                    min: -1111111111,\r\n                    type: 'float'\r\n                  }\r\n                }\r\n              }]\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    mode: { // 模式\r\n      type: [String],\r\n      default() {\r\n        return 'edit' // edit(一直保持编辑状态),detail(展示状态),activeEdit(激活编辑)\r\n      }\r\n    },\r\n    editConfig: { // 编辑配置\r\n      type: [Object],\r\n      default() {\r\n        return {\r\n        }\r\n      }\r\n    },\r\n    editRules: { // 校验规则\r\n      type: [Object],\r\n      default() {\r\n        return {\r\n          name: [\r\n            {\r\n              required: true,\r\n              type: 'string',\r\n              // message: '名称长度需在 3 到 5 个字符',\r\n              message() {\r\n                return '名称长度需在 2 到 20 个字符'\r\n              },\r\n              min: 2,\r\n              max: 20,\r\n              pattern: /^[a-zA-Z0-9_\\s\\u4e00-\\u9fa5]+$/i,\r\n              trigger: 'change'\r\n            },\r\n            {\r\n              required: true,\r\n              type: 'string',\r\n              message: '请输入昵称',\r\n              trigger: 'change',\r\n              // eslint-disable-next-line no-useless-escape\r\n              // pattern: /^[a-zA-Z0-9_\\(\\)\\{\\}·.、\\[\\]\\（\\）\\【\\】\\u4e00-\\u9fa5]+$/i\r\n              // pattern: /^[a-zA-Z0-9_\\(\\)\\{\\}·.、\\[\\]\\（\\）\\【\\】\\u4e00-\\u9fa5]+$/i\r\n              validator({ cellValue, rule, rules, row, rowIndex, column, columnIndex, $table }) {\r\n                return new Promise((resolve, reject) => {\r\n                  let result = false\r\n                  if (cellValue.length >= 10) {\r\n                    // eslint-disable-next-line no-useless-escape\r\n                    result = /^[a-zA-Z0-9_\\(\\)\\{\\}·.、\\[\\]\\（\\）\\【\\】\\u4e00-\\u9fa5]+$/i.test(cellValue)\r\n                  } else {\r\n                    result = false\r\n                  }\r\n                  if (result) {\r\n                    resolve(true)\r\n                  } else {\r\n                    reject(new Error(\r\n                      '名称必须不能有特殊字符，且字数数不能少于10个！'\r\n                    ))\r\n                  }\r\n                })\r\n              }\r\n            }\r\n          ],\r\n          sex: [\r\n            {\r\n              required: true,\r\n              message: '请选择性别',\r\n              trigger: 'change'\r\n            }\r\n          ],\r\n          age: [\r\n            {\r\n              required: true,\r\n              message: '请输入年龄',\r\n              min: 1,\r\n              max: 150,\r\n              type: 'number',\r\n              trigger: 'change'\r\n            }\r\n          ],\r\n          income: [\r\n            {\r\n              required: true,\r\n              message: '请输入收入',\r\n              trigger: 'change'\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    },\r\n    renderColumnsConfig: { // 实际渲染列\r\n      type: Array,\r\n      default() {\r\n        return [\r\n          { // 序号\r\n            title: '序号',\r\n            type: 'seq',\r\n            width: 80,\r\n            align: 'center',\r\n            className: 'table-sep',\r\n            sortable: false\r\n          },\r\n          { // 序号\r\n            title: '基本信息名称',\r\n            align: 'left',\r\n            className: 'table-title',\r\n            field: 'renderTitle',\r\n            sortable: false,\r\n            cellRender: {\r\n              name: '$vxeInput',\r\n              props: {\r\n                type: 'text'\r\n              }\r\n            }\r\n          },\r\n          // {\r\n          //   title: '基本信息名称',\r\n          //   className: 'table-title',\r\n          //   align: 'left',\r\n          //   titleAlign: 'left',\r\n          //   field: 'renderTitle',\r\n          //   slots: {\r\n          //     // default: 'expandContent',\r\n          //     // content: 'expand'\r\n          //     // const { $rowIndex, $seq, $table, column, columnIndex, fixed, level, row, rowIndex, seq, type } = obj\r\n          //     default(obj, h, fixedType) {\r\n          //       const { $table } = obj\r\n          //       let $scopedSlots = $table.$parent.$parent.$scopedSlots\r\n          //       if ($scopedSlots.titleRequired) {\r\n          //         return $scopedSlots.titleRequired(obj)\r\n          //       } else {\r\n          //         return obj.row[obj.column.property]\r\n          //       }\r\n          //     }\r\n          //   }\r\n          //   // <template v-if=\"ifRenderExpandContentTable\" v-slot:expandContent=\"{ row, $rowIndex, rowIndex ,fixed }\">\r\n          //   //  <vue :ref=\"'expandContentTableRef' + (fixed ? fixed + rowIndex : rowIndex)\"></vue>\r\n          //   // </template>\r\n          // },\r\n          { // 序号\r\n            title: '基本信息值',\r\n            align: 'left',\r\n            titleAlign: 'left',\r\n            className: 'table-value',\r\n            field: 'renderValue',\r\n            sortable: false,\r\n            editRender: {\r\n              name: '$vxeBasicInfoRenderer',\r\n              props: {\r\n                type: 'text'\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    },\r\n    data: { // 数据包\r\n      type: [Object],\r\n      default() {\r\n        return {\r\n          actualIncome: '52000',\r\n          age: '27',\r\n          bonus: '10000',\r\n          category: '前端',\r\n          deduction: '3000',\r\n          income: 50000,\r\n          name: '张三'\r\n        }\r\n      }\r\n    },\r\n    cellStyle: { // 单元格样式\r\n      type: [Object, Function],\r\n      default() {\r\n        return {\r\n        }\r\n      }\r\n    },\r\n    toolbarConfig: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n          moneyInputSwich: true,\r\n          visible: false }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      calculateConstraintConfigIn: {\r\n        calcAndConstraintItemCodeField: 'mapid', // 配置了rowCodeFormulaConfig时使用的itemcode字段名\r\n        enabledType: { // 执行开关\r\n          performGetData: false, // 取数\r\n          performColFormula: true, // 列公式\r\n          gradedSummary: false, // 分级汇总\r\n          performRowCodeFormula: true, // 单元格交叉计算\r\n          performColConstraint: false, // 列约束\r\n          performCellConstraint: false// 单元格约束\r\n        },\r\n        colFormulaConfig: { // 公式配置\r\n          // rowFormulaMap= { \"colfield\":\"{colfield}[运算符]\" }\r\n          // profit: '{income}-{tax}-{deduction}',\r\n        },\r\n        rowCodeFormulaConfig: {\r\n          // 单元格交叉计算\r\n          // rowFormulaMap= { \"colField:itemcode\":\"{tableId:colField:itemcode}[运算符]\" }\r\n          // '1001:bonus': '{1001:1002:income}+{1001:1003:bonus}',\r\n        },\r\n        constraintConfig: { // 约束配置\r\n\r\n        }\r\n      },\r\n      tableGlobalConfig: {\r\n        mouseConfig: { selected: false },\r\n        tooltipConfig: { showAll: false }\r\n      },\r\n      tableConfig: {\r\n        globalConfig: { // 全局默认渲染列配置\r\n          // 全局配置\r\n          checkType: '', // hasCheckbox 可选值 ''||checkbox||radio\r\n          seq: false, // 序号列\r\n          cellClickCheck: false, // 是否开启点击行任意单元格选择\r\n          filters: false,\r\n          sortable: false,\r\n          rowDrop: false, //  是否开启列拖拽\r\n          optionSort: false //  是否添加并开启行手动上移下移排序\r\n        }\r\n      },\r\n      tableRenderMap: { // 渲染数据\r\n        curmap: {\r\n          mapid: '',\r\n          editable: true,\r\n          index: 0,\r\n          nestIndex: 0,\r\n          itemConfig: {},\r\n          render: {},\r\n          level: 0,\r\n          formula: '',\r\n          renderTitle: ''.padEnd(4 * (2 - 1)) + '',\r\n          title: '', // 标题\r\n          renderField: 'renderValue', // 渲染数据\r\n          isTree: 'render.name $vxeTree', // 是不是下拉树，\r\n          field: '', // 原本字段\r\n          needmap: '' // 是否需要反响映射\r\n        },\r\n        map: {},\r\n        mapSource: {},\r\n        renderMap: {}\r\n      },\r\n      editRulesMap: {},\r\n      tableRenderData: {}, // table渲染数据\r\n      renderEditRules: {},\r\n      tableRenderColumnsConfig: []\r\n    }\r\n  },\r\n  methods: {\r\n    getbasicDataType(obj) {\r\n      // 获取数据类型\r\n      return Object.prototype.toString.call(obj).slice(8, -1)\r\n    },\r\n    getUuid(hexDigits = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz') { // 获取mapid\r\n      let s = []\r\n      for (let i = 0; i < 36; i++) {\r\n        s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1)\r\n      }\r\n      s[14] = '4'\r\n      s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1)\r\n      s[8] = s[13] = s[18] = s[23] = ''\r\n      let uuid = s.join('')\r\n      return uuid\r\n    },\r\n    chunk(arr, size) { // 分组\r\n      var arr2 = []\r\n      for (var i = 0; i < arr.length; i = i + size) {\r\n        arr2.push(arr.slice(i, i + size))\r\n      }\r\n      return arr2\r\n    },\r\n    editClosed(obj, $bstable, $grid) { // 结束编辑事件\r\n      const { map } = this.tableRenderMap\r\n      this.$emit('editClosed', obj, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n      this.$emit('ProxyEvent', 'editClosed', obj, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n    },\r\n    editActived(obj, $bstable, $grid) { // 开始编辑事件\r\n      const { map } = this.tableRenderMap\r\n      this.$emit('editActived', obj, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n      this.$emit('ProxyEvent', 'editActived', obj, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n    },\r\n    cellClick(obj, $bstable, $grid) { // 行点击事件\r\n      // this.initData(this.getData().data) // 强制触发更新和重计算\r\n      const { map } = this.tableRenderMap\r\n      this.$emit('cellClick', obj, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n      this.$emit('ProxyEvent', 'cellClick', obj, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n    },\r\n    cellOptionCallBack(obj, option, $bstable, $grid) { // 单元格操作其他回调\r\n      // this.initData(this.getData().data) // 强制触发更新和重计算\r\n      const { map } = this.tableRenderMap\r\n      this.$emit('cellOptionCallBack', obj, option, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n      this.$emit('ProxyEvent', 'cellOptionCallBack', obj, option, { $bstable, $grid, basicInfoTable: this }, { itemMap: map[obj.row.mapid], data: this.getData() })\r\n    },\r\n    cellStyleIn({ row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }) { // 单元格样式\r\n      const { map } = this.tableRenderMap\r\n      if (typeof this.cellStyle === 'function') {\r\n        return this.cellStyle({ row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }, map[row.mapid], this.getData())\r\n      } else {\r\n        if ($columnIndex % 2 !== 0 || $columnIndex === 0) {\r\n          return { backgroundColor: 'var(--zebra-color)' }\r\n        }\r\n      }\r\n    },\r\n    initEditRules(editRules) { // 添加校验\r\n      const { mapSource } = this.tableRenderMap\r\n      let editRulesMap = {}\r\n      Object.keys(editRules).forEach((item, index) => {\r\n        if (mapSource[item]) {\r\n          editRulesMap[mapSource[item].mapid] = editRules[item]\r\n          if (editRules[item] && editRules[item][0].required) {\r\n            mapSource[item].required = true\r\n          } else {\r\n            mapSource[item].required = false\r\n          }\r\n        }\r\n      })\r\n      this.editRulesMap = editRulesMap\r\n      let self = this\r\n      this.renderEditRules = {\r\n        renderValue: [{\r\n          validator(obj) {\r\n            return new Promise((resolve, reject) => {\r\n              self.validator(obj).then(res => {\r\n                resolve(true)\r\n              }).catch(e => {\r\n                reject(e)\r\n              })\r\n            })\r\n          }\r\n        }]\r\n      }\r\n    },\r\n    newRule(rule) { // 错误规则信息\r\n      return Object.assign({}, {\r\n        $options: rule,\r\n        required: rule.required,\r\n        min: rule.min,\r\n        max: rule.min,\r\n        type: rule.type,\r\n        pattern: rule.pattern,\r\n        validator: rule.validator,\r\n        maxWidth: rule.maxWidth,\r\n        message: rule.message\r\n      })\r\n    },\r\n    validCellRules({ row, cellValue, rowIndex, column, columnIndex }) { // 校验单元格\r\n      let self = this\r\n      const { map } = this.tableRenderMap\r\n      const errorRules = []\r\n      const syncVailds = []\r\n      const rules = this.editRulesMap[row.mapid]\r\n      if (rules) {\r\n        rules.forEach(rule => {\r\n          if (typeof rule.validator === 'function') {\r\n            let customValid\r\n            customValid = rule.validator({\r\n              cellValue,\r\n              rule,\r\n              rules,\r\n              row,\r\n              rowIndex,\r\n              column,\r\n              columnIndex,\r\n              itemMap: map[row.mapid]\r\n            })\r\n            if (customValid) {\r\n              if (self.getbasicDataType(customValid) === 'Error') {\r\n                self.validRuleErr = true\r\n                errorRules.push(self.newRule({ type: 'custom', message: customValid.message, rule: self.newRule(rule) }))\r\n              } else if (customValid.catch) {\r\n                // 如果为异步校验（注：异步校验是并发无序的）\r\n                syncVailds.push(\r\n                  customValid.catch(e => {\r\n                    self.validRuleErr = true\r\n                    errorRules.push(self.newRule({ type: 'custom', message: e ? e.message : rule.message, rule: self.newRule(rule) }))\r\n                  })\r\n                )\r\n              }\r\n            }\r\n          } else {\r\n            const isNumber = rule.type === 'number'\r\n            const numVal = isNumber ? (isNaN(parseFloat(cellValue)) ? 0 : parseFloat(cellValue)) : String(cellValue).length\r\n            if (rule.required && (cellValue === null || cellValue === undefined || cellValue === '')) {\r\n              self.validRuleErr = true\r\n              errorRules.push(self.newRule(rule))\r\n            } else if (\r\n              (isNumber && isNaN(cellValue)) ||\r\n              (!isNaN(rule.min) && numVal < parseFloat(rule.min)) ||\r\n              (!isNaN(rule.max) && numVal > parseFloat(rule.max)) ||\r\n              (rule.pattern && !(rule.pattern.test ? rule.pattern : new RegExp(rule.pattern)).test(cellValue))\r\n            ) {\r\n              self.validRuleErr = true\r\n              errorRules.push(self.newRule(rule))\r\n            }\r\n          }\r\n        })\r\n      }\r\n      return Promise.all(syncVailds).then(() => {\r\n        if (errorRules.length) {\r\n          const rest = { rules: errorRules, rule: errorRules[0] }\r\n          return Promise.reject(rest)\r\n        }\r\n      })\r\n    },\r\n    validator(obj) { // 校验器\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        return self.validCellRules(obj).then(() => {\r\n          resolve(true)\r\n        }).catch((error) => {\r\n          reject(new Error(typeof error.rule.message === 'function' ? error.rule.message(error.rule) : error.rule.message))\r\n        })\r\n      })\r\n    },\r\n    validateRow(row) { // 校验一条或多条数据\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        self.$refs.basicInfoTable.tableOptionFn().validate(row).then(res => {\r\n          resolve(res)\r\n        }).catch(e => {\r\n          reject(e)\r\n        })\r\n      })\r\n    },\r\n    validateAll() { // 校验全表\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        self.$refs.basicInfoTable.tableOptionFn().fullValidate(self.$refs.basicInfoTable.getTableData().fullData).then(res => {\r\n          resolve(res)\r\n        }).catch(e => {\r\n          reject(e)\r\n        })\r\n      })\r\n    },\r\n    getData() { // 获取表格数据\r\n      const { map } = this.tableRenderMap\r\n      let { fullData } = this.$refs.basicInfoTable.getPureTableData()\r\n      let resultData = {}\r\n      fullData.forEach((item, index) => {\r\n        if (map[item.mapid].needmap) {\r\n          Object.assign(resultData, {\r\n            [item.renderField]: item.renderValue\r\n          })\r\n        }\r\n        if (map[item.mapid].isTree) {\r\n          let { isHump } = (map[item.mapid].render && map[item.mapid].render.props && map[item.mapid].render.props.config) || { isHump: false }\r\n          let fieldkeys = isHump ? ['Code', 'Name', 'Id'] : (item.renderField.endsWith('_') ? ['code', 'name', 'id'] : ['_code', '_name', '_id'])\r\n          Object.assign(resultData, {\r\n            [map[item.mapid].field + fieldkeys[0]]: item[map[item.mapid].renderField + fieldkeys[0]] || '',\r\n            [map[item.mapid].field + fieldkeys[1]]: item[map[item.mapid].renderField + fieldkeys[1]] || '',\r\n            [map[item.mapid].field + fieldkeys[2]]: item[map[item.mapid].renderField + fieldkeys[2]] || ''\r\n          })\r\n        }\r\n      })\r\n      return {\r\n        viewData: resultData, // 渲染的可视数据\r\n        data: Object.assign({}, this.data, resultData), // 全量数据，\r\n        originalData: Object.assign({}, this.data) // 原始数据\r\n      }\r\n    },\r\n    generateSingItemRenderMap(column, level, columnIndex, nestIndex, map) { // 生成单条数据映射\r\n      let uuid = this.getUuid()\r\n      let renderField = nestIndex.split('.').join('_')\r\n      let render = column.cellRender || column.editRender\r\n      let curmap = {\r\n        mapid: uuid,\r\n        editable: !!column.editRender,\r\n        index: map.list.length + 1,\r\n        nestIndex: nestIndex,\r\n        itemConfig: column,\r\n        render: render,\r\n        level: level,\r\n        formula: column.formula ? column.formula + '' : '',\r\n        renderTitle: ''.padEnd(4 * (level - 1)) + column.title,\r\n        title: column.title, // 标题\r\n        renderField: 'renderValue', // 渲染数据\r\n        isTree: render && render.name === '$vxeTree', // 是不是下拉树，\r\n        field: column.field || renderField, // 原本字段\r\n        needmap: !!column.field // 是否需要反响映射\r\n      }\r\n      map.list.push(curmap)\r\n      map.map[uuid] = curmap\r\n      map.mapSource[column.field || renderField] = curmap\r\n      map.renderMap[renderField] = curmap\r\n    },\r\n    generateRenderMap(columns, level = 1, nestIndex = '', map = { list: [], renderMap: {}, map: {}, mapSource: {} }) { // 生成渲染项映射\r\n      columns.forEach((column, columnIndex) => {\r\n        if (column.visible !== false) {\r\n          this.generateSingItemRenderMap(column, level, columnIndex, nestIndex ? (nestIndex + '.' + columnIndex) : (columnIndex + ''), map)\r\n        }\r\n        if (Array.isArray(column.children) && column.children.length) {\r\n          this.generateRenderMap(column.children, level + 1, columnIndex, map)\r\n        }\r\n      })\r\n      return map\r\n    },\r\n    initItems(columns) { // 初始化table项\r\n      this.tableRenderMap = this.generateRenderMap(columns || this.itemsConfig)\r\n      this.tableRenderColumnsConfig = this.renderColumnsConfig\r\n      this.tableRenderColumnsGroups = Math.floor(this.tableRenderColumnsConfig / 2)\r\n    },\r\n    initData(obj) { // 初始化表格数据\r\n      obj = obj || this.data\r\n      const { list } = this.tableRenderMap\r\n      this.tableRenderData = list.map((item, index) => {\r\n        let resultData = {\r\n          index: item.index, // 行索引\r\n          nestIndex: item.nestIndex, // 嵌套关系\r\n          renderTitle: item.required ? item.renderTitle + '<span class=\"required\">*</span>' : item.renderTitle, // 渲染标题\r\n          editable: item.editable, // 是否可编辑\r\n          mapid: item.mapid, // 反向映射唯一id\r\n          required: item.required,\r\n          renderField: item.field, // 渲染字段\r\n          renderValue: obj[item.field] // 渲染值\r\n        }\r\n        if (item.isTree) {\r\n          let { isHump } = (item.render && item.render.props && item.render.props.config) || { isHump: false }\r\n          let fieldkeys = isHump ? ['Code', 'Name', 'Id'] : (item.renderField.endsWith('_') ? ['code', 'name', 'id'] : ['_code', '_name', '_id'])\r\n          Object.assign(resultData, {\r\n            [item.renderField + fieldkeys[0]]: obj[item.field + fieldkeys[0]],\r\n            [item.renderField + fieldkeys[1]]: obj[item.field + fieldkeys[1]],\r\n            [item.renderField + fieldkeys[2]]: obj[item.field + fieldkeys[2]]\r\n          })\r\n        }\r\n        return resultData\r\n      })\r\n    },\r\n    initFormula() { // 初始化公式 转化成渲染格式\r\n      let self = this\r\n      const { list, mapSource } = this.tableRenderMap\r\n      let resultData = {}\r\n      list.forEach((item, index) => {\r\n        if (item.formula) {\r\n          resultData[item.mapid + ':' + item.renderField] = self.transColFormulaToCellFomula(item.formula, item, mapSource)\r\n          item.renderFormule = resultData[item.renderField + ':' + item.mapid]\r\n        }\r\n      })\r\n      this.calculateConstraintConfigIn = Object.assign(\r\n        this.calculateConstraintConfigIn,\r\n        {\r\n          rowCodeCalcItemCodeField: 'mapid', // 配置了rowCodeFormulaConfig时使用的itemcode字段名\r\n          rowCodeFormulaConfig: resultData // { \"colField:itemcode\":\"{tableId:colField:itemcode}[运算符]\" }\r\n        })\r\n      return resultData\r\n    },\r\n    transColFormulaToCellFomula(formula, map, mapSource) { // 转化单条数据映射\r\n      let regR = new RegExp('({[a-zA-Z0-9_]*})', 'ig')\r\n      let rowsKey = formula.match(regR) === null ? [] : formula.match(regR)\r\n      if (rowsKey.length) {\r\n        for (let keyCF in rowsKey) {\r\n          let keyC = rowsKey[keyCF].replace(/\\{|\\}/g, '')\r\n          let reg = new RegExp('({' + keyC + '})', 'ig')\r\n          if (mapSource[keyC]) {\r\n            formula = formula.replace(reg, '{' + this.id + ':' + map.renderField + ':' + mapSource[keyC].mapid + '}')\r\n          } else {\r\n            if (this.data[keyC]) {\r\n              formula = formula.replace(reg, isNaN(parseFloat(this.data[keyC])) ? 0 : parseFloat(this.data[keyC]))\r\n            } else {\r\n              formula = formula.replace(reg, '{' + this.id + ':' + keyC + ':' + null + '}')\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return formula\r\n    },\r\n    init() { // 初始化\r\n      this.initItems()\r\n      this.initFormula()\r\n      this.initEditRules(this.editRules)\r\n      this.initData(this.data)\r\n    }\r\n  },\r\n  crated() {},\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  watch: {\r\n    toolbarConfig: {\r\n      handler() {\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    itemsConfig: {\r\n      handler() {\r\n        this.initItems()\r\n        this.initFormula()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    defaultMoneyUnit: {\r\n      handler() {},\r\n      immediate: true\r\n    },\r\n    id: {\r\n      handler() {},\r\n      immediate: true\r\n    },\r\n    mode: {\r\n      handler() {},\r\n      immediate: true\r\n    },\r\n    editConfig: {\r\n      handler() {},\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    renderColumnsConfig: {\r\n      handler() {},\r\n      immediate: true\r\n    },\r\n    editRules: {\r\n      handler() {\r\n        this.initEditRules(this.editRules)\r\n        this.initData(this.data)\r\n      },\r\n      immediate: true\r\n    },\r\n    data: {\r\n      handler() {\r\n        this.initData(this.data)\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.basic-info-table{\r\n .vxe-grid {\r\n   .vxe-table.border--default .vxe-table--header-wrapper,\r\n   .vxe-table.border--full .vxe-table--header-wrapper,\r\n   .vxe-table.border--outer .vxe-table--header-wrapper{\r\n      background: var(--hightlight-color);\r\n   }\r\n   .vxe-table .vxe-body--row {\r\n      background: #ffffff;\r\n     &.row--stripe {\r\n       background: var(--zebra-color);\r\n     }\r\n      .vxe-body--column{\r\n        height:34px;\r\n      }\r\n      .required{\r\n        color: #f00;\r\n        font-size: 18px;\r\n        padding: 0 0 0 5px;\r\n        position: relative;\r\n        top: 3px;\r\n      }\r\n     .vxe-body--column * {\r\n       border: none;\r\n       background: transparent;\r\n       &.is--disabled {\r\n         background: #f7fafd;\r\n       }\r\n     }\r\n    }\r\n  }\r\n }\r\n.basic-info-table.detail{\r\n  .vxe-grid .vxe-table .vxe-body--row {\r\n    .required{\r\n     display:none;\r\n    }\r\n  }\r\n}\r\n.vxe-select-option{\r\n   max-width: unset;\r\n}\r\n</style>\r\n"],"mappings":"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A,CAAAY,MAAA;kBACA;kBACAD,MAAA,0DAAAE,IAAA,CAAAb,SAAA;gBACA;kBACAW,MAAA;gBACA;gBACA,IAAAA,MAAA;kBACAF,OAAA;gBACA;kBACAC,MAAA,KAAAI,KAAA,CACA,0BACA;gBACA;cACA;YACA;UACA,EACA;UACAC,GAAA,GACA;YACAtB,QAAA;YACAC,OAAA;YACAG,OAAA;UACA,EACA;UACAmB,GAAA,GACA;YACAvB,QAAA;YACAC,OAAA;YACAb,GAAA;YACAc,GAAA;YACAlC,IAAA;YACAoC,OAAA;UACA,EACA;UACAoB,MAAA,GACA;YACAxB,QAAA;YACAC,OAAA;YACAG,OAAA;UACA;QAEA;MACA;IACA;IACAqB,mBAAA;MAAA;MACAzD,IAAA,EAAAO,KAAA;MACAL,OAAA,WAAAC,SAAA;QACA,QACA;UAAA;UACAK,KAAA;UACAR,IAAA;UACAW,KAAA;UACAC,KAAA;UACA8C,SAAA;UACAxC,QAAA;QACA,GACA;UAAA;UACAV,KAAA;UACAI,KAAA;UACA8C,SAAA;UACAhD,KAAA;UACAQ,QAAA;UACAS,UAAA;YACA/B,IAAA;YACAE,KAAA;cACAE,IAAA;YACA;UACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;UAAA;UACAQ,KAAA;UACAI,KAAA;UACA+C,UAAA;UACAD,SAAA;UACAhD,KAAA;UACAQ,QAAA;UACAJ,UAAA;YACAlB,IAAA;YACAE,KAAA;cACAE,IAAA;YACA;UACA;QACA,EACA;MACA;IACA;IACA4D,IAAA;MAAA;MACA5D,IAAA,GAAA8B,MAAA;MACA5B,OAAA,WAAAC,SAAA;QACA;UACA0D,YAAA;UACAN,GAAA;UACAO,KAAA;UACAC,QAAA;UACAC,SAAA;UACAR,MAAA;UACA5D,IAAA;QACA;MACA;IACA;IACAqE,SAAA;MAAA;MACAjE,IAAA,GAAA8B,MAAA,EAAAoC,QAAA;MACAhE,OAAA,WAAAC,SAAA;QACA,QACA;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"}]}