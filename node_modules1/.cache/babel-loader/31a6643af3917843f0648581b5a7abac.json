{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Table\\export\\export\\export.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Table\\export\\export\\export.js","mtime":1695716044947},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["defaultViewValueFormat","defaultViewValueFormatType","getCellValueAlign","getCellViewTitle","XlsxTool","FileSaver","rowUniqueLevelKey","Export","gloabelConfig","arguments","length","undefined","tableComponentInstance","_classCallCheck","moneyUnit","unit","xlsx","window","aTag","document","createElement","exportHistory","exportDefaultConfig","saveType","fileName","dataType","isExportOnlySourceField","isExportOnlyViewTitle","isExportHead","exportViewTitleType","isExportFooter","isExportOriginalData","isExportData","columns","datas","selection","isExportTree","index","ignoreColsTypes","viewValueFormat","value","row","column","footerMethods","_ref","data","map","columnIndex","columnIndexText","combinedType","Array","isArray","indexOf","result","item","field","parseFloat","toString","split","join","isNaN","reduce","prev","next","toFixed","e","Object","assign","_createClass","key","exportExcel","curUserConfig","context","cb","init","generateExportRowsMap","curExportConfig","generateExportSourceField","generateExportViewDataSource","generateExportOriginalDataSource","exportDownload","Xlsx","downloadCsv","obj","headerRows","dataColMap","headerRowsMap","viewValueFormatType","setExportColumns","File","push","exportConfig","exportDataSource","reverse","slice","self","filter","type","_this$curExportConfig","addReportTitleColumn","addUnitColumn","title","exportStyle","font","size","children","concat","align","h","bold","curRowIndex","pcCount","forEach","rowConlum","generateVisibleHeaderRowsMap","i","sheetVisibleData","addRow","sheetFieldData","addSheet","replace","newrow","cell","addCell","hMerge","vMerge","generateCellVisibletitleStyle","riverGenerateExportNestedHeader","setSheetCol","generateExportViewDataBody","generateExportViewDatafooter","sheet","_this","cols","col","colIndex","width","getColWidth","max","text","parseInt","Math","ceil","getStrByte","str","arr","len","count","s","escape","sheetOriginalData","generateExportOriginalDataHeader","generateExportOriginalDataBody","pCell","cell0","generateCurNestedHeaderCell","curRows","_this$getFloorData","getFloorData","floorLength","_this$curExportConfig2","_this$curExportConfig3","_this$curExportConfig4","cellSing","supplementHeaderVMergeCells","cells","treeData","floorCols","each","floor","pRowIndex","rowIndex","_self$tableComponentI","_self$tableComponentI2","seqIndex","treeConfig","isTreeSeqToFlat","generateCellViewValue","footData","generateFooterCellViewValue","_this$tableComponentI","_this$tableComponentI2","getViewCellValue","indent","treeNode","customerExportStyle","generateCellViewValueCustomerExportStyle","generateCellViewValueStyle","getViewCellValueType","_ref2","_ref2$align","_ref2$border","border","_ref2$font","_ref2$fill","fill","style","_objectSpread","shrinkToFit","textRotation","wrapText","v","left","right","top","bottom","leftColor","rightColor","topColor","bottomColor","color","family","charset","italic","underline","name","bgColor","fgColor","patternType","_column$cellRender","_column$cellRender2","cellRender","numFmt","_this2","_self$tableComponentI3","_this2$tableComponent","generateCellOrangeValue","_column$cellRender3","_this$tableComponentI3","_this$tableComponentI4","toBuffer","wbout","buf","ArrayBuffer","view","Uint8Array","charCodeAt","exportXlsx","saveAs","then","content","blob","Blob","worksheet","csv","utils","sheet_to_csv","setAttribute","href","URL","createObjectURL","click","revokeObjectURL"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/Table/export/export/export.js"],"sourcesContent":["/* eslint-disable no-useless-constructor */\r\n/*\r\n * describe:  基于vxe-table vxe-grid数据格式的导出工具类函数 基础版\r\n * @Date:   2020-09-02\r\n * Author: Titans@2396757591@qq.com\r\n * @Last Modified time: 2020-11-30\r\n */\r\n// import { columns, datas } from './testData.js'\r\n// import xlsx from 'js-xlsx'\r\n// import jszip from './util/jszipU.js'\r\nimport { defaultViewValueFormat, defaultViewValueFormatType, getCellValueAlign, getCellViewTitle } from './exportUtil.js'\r\nimport XlsxTool from 'xlsx'\r\nimport FileSaver from 'file-saver'\r\nimport { rowUniqueLevelKey } from '../../util/methods'\r\nexport class Export {\r\n  constructor(gloabelConfig = {}, tableComponentInstance) {\r\n    // 当前表格组件实例\r\n    this.tableComponentInstance = tableComponentInstance\r\n    // 导出时对金额涉及到单位的需要加对应的单位\r\n    this.moneyUnit = gloabelConfig.unit || '元'\r\n\r\n    this.XlsxTool = XlsxTool\r\n    this.xlsx = window.xlsx\r\n    this.aTag = document.createElement('a')\r\n    this.exportHistory = [] // 导出历史记录\r\n    this.exportDefaultConfig = {\r\n      saveType: '.xlsx',\r\n      fileName: 'export', // 文件名\r\n      dataType: 'fullData',\r\n      isExportOnlySourceField: false, // 是否只导出数据源表头字段，\r\n      isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n      isExportHead: true, // 是否导出表头\r\n      exportViewTitleType: 'nestTitle', // nestTitle(嵌套表头)， singTitle(单表头)\r\n      isExportFooter: false, // 是否导出表尾部\r\n      isExportOriginalData: true, // 是否导出源数据\r\n      isExportData: true, // 是否导出数据\r\n      columns: [], // 表头配置\r\n\r\n      datas: [], // 源数据,\r\n      selection: [], // 选中数据\r\n      isExportTree: false, // 是否是树形数据\r\n      index: true, // 是否添加序号,\r\n      ignoreColsTypes: ['dragSort', 'seq', 'checkbox', 'radio', 'optionRow', 'expand', 'attach', 'ach', 'list', 'attachlist', 'gloableOptionRow'], // 忽略导出的列类型\r\n      viewValueFormat(value, row, column) { // 视图数据格式化方法\r\n        // return value\r\n      },\r\n      footerMethods({ columns, data }) {\r\n        return columns.map((column, columnIndex) => {\r\n          //  combinedType: ['average', 'total'],\r\n          let columnIndexText = '合计'\r\n          let combinedType = 'total'\r\n          if (columnIndex === 0) {\r\n            return columnIndexText\r\n          } else if (Array.isArray(column.combinedType) && column.combinedType.indexOf(combinedType) >= 0) {\r\n            try {\r\n              let result = data.map((item, index) => {\r\n                let value = (typeof (item[column.field]) === 'number' || typeof (item[column.field]) === 'string') ? parseFloat(item[column.field].toString().split(',').join('')) : 0\r\n                return isNaN(parseFloat(value)) ? 0 : parseFloat(value)\r\n              })\r\n              if (result.length) {\r\n                result = result.reduce((prev, next) => {\r\n                  return prev + next\r\n                })\r\n                result = (result).toFixed(2)\r\n                return result\r\n              } else {\r\n                return 0\r\n              }\r\n            } catch (e) {\r\n              throw (e)\r\n            }\r\n          } else {\r\n            return ''\r\n          }\r\n        })\r\n      }\r\n    }\r\n    this.exportDefaultConfig = Object.assign({}, this.exportDefaultConfig, gloabelConfig)\r\n  }\r\n  exportExcel(curUserConfig = {}, context, cb) {\r\n    this.context = context\r\n    // 导出excel\r\n    this.init(curUserConfig)\r\n    this.generateExportRowsMap(this.curExportConfig.columns)\r\n    this.curExportConfig.datas = Array.isArray(this.curExportConfig.datas) ? this.curExportConfig.datas : this.curExportConfig[this.curExportConfig.dataType]\r\n    this.curExportConfig.datas = this.curExportConfig[this.curExportConfig.dataType]\r\n    if (this.curExportConfig.isExportOnlySourceField || this.curExportConfig.isExportOnlyViewTitle) {\r\n      this.generateExportSourceField(this.curExportConfig.isExportOnlySourceField ? 'field' : 'title')\r\n    } else {\r\n      if (this.curExportConfig.isExportData) {\r\n        this.generateExportViewDataSource()\r\n      }\r\n      if (this.curExportConfig.isExportOriginalData) {\r\n        this.generateExportOriginalDataSource()\r\n      }\r\n    }\r\n    if (this.curExportConfig.saveType === '.xlsx') {\r\n      this.exportDownload(this.Xlsx)\r\n    } else {\r\n      this.downloadCsv()\r\n    }\r\n  }\r\n  init(obj) {\r\n    // 初始化并记录上次导出历史\r\n    this.headerRows = 1\r\n    this.dataColMap = []\r\n    this.headerRowsMap = {}\r\n    this.curExportConfig = Object.assign({}, this.exportDefaultConfig, obj)\r\n    this.curExportConfig.viewValueFormat = defaultViewValueFormat\r\n    this.curExportConfig.viewValueFormatType = defaultViewValueFormatType\r\n    this.setExportColumns()\r\n    // let xlsx = window.xlsx\r\n    this.Xlsx = new this.xlsx.File()\r\n    this.exportHistory.push({ exportConfig: this.curExportConfig, exportDataSource: this.Xlsx })\r\n    this.exportHistory = this.exportHistory.reverse().slice(0, 20).reverse()\r\n  }\r\n  setExportColumns() {\r\n    // 设置导出列\r\n    let self = this\r\n    this.curExportConfig.columns = this.curExportConfig.columns.filter((item) => {\r\n      return self.curExportConfig.ignoreColsTypes.indexOf(item.type) < 0\r\n    })\r\n    const { addReportTitleColumn, addUnitColumn, fileName, unit } = this.curExportConfig\r\n    // 表头添加表名\r\n    if (addReportTitleColumn) {\r\n      this.curExportConfig.columns = [\r\n        {\r\n          title: fileName,\r\n          exportStyle: {\r\n            font: {\r\n              size: '24'\r\n            }\r\n          },\r\n          // 添加单位列\r\n          children: addUnitColumn ? [\r\n            {\r\n              title: `单位：${unit}`,\r\n              exportStyle: {\r\n                align: {\r\n                  h: 'right'\r\n                },\r\n                font: {\r\n                  bold: false\r\n                }\r\n              },\r\n              children: this.curExportConfig.columns\r\n            }\r\n          ] : this.curExportConfig.columns\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  generateExportRowsMap(columns, curRowIndex = 1, pcCount) {\r\n    // 生成视图数据导出元数据 列映射数据\r\n    let self = this\r\n    columns.forEach((rowConlum, index) => {\r\n      if (curRowIndex > self.headerRows) {\r\n        self.headerRows = curRowIndex\r\n      }\r\n      if (Array.isArray(rowConlum.children) && rowConlum.children.length) {\r\n        self.generateExportRowsMap(rowConlum.children, curRowIndex + 1, rowConlum.children.length)\r\n      } else {\r\n        // if (rowConlum !== undefined) {\r\n        //   rowConlum.pcCount = pcCount\r\n        //   // self.dataColCellsMap[rowConlum.field] = pcCount\r\n        // }\r\n        self.dataColMap.push(rowConlum)\r\n      }\r\n    })\r\n  }\r\n  generateVisibleHeaderRowsMap() {\r\n    // 生成嵌套表头行映射数据\r\n    for (let i = 1; i <= (this.curExportConfig.exportViewTitleType === 'nestTitle' ? this.headerRows : 1); i++) {\r\n      this.headerRowsMap['rows' + i] = this.sheetVisibleData.addRow()\r\n    }\r\n  }\r\n  generateExportSourceField(type) {\r\n    let self = this\r\n    this.sheetFieldData = this.Xlsx.addSheet(this.curExportConfig.fileName.replace('.xlsx', ''))\r\n    let newrow = self.sheetFieldData.addRow()\r\n    self.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      cell.value = column[type]\r\n      cell.hMerge = 0\r\n      cell.vMerge = 0\r\n      self.generateCellVisibletitleStyle(cell, column)\r\n    })\r\n  }\r\n  generateExportViewDataSource() {\r\n    // 生成视图数据导出数据源\r\n    if (this.curExportConfig.isExportOriginalData) {\r\n      this.sheetVisibleData = this.Xlsx.addSheet('视图数据')\r\n    } else {\r\n      this.sheetVisibleData = this.Xlsx.addSheet(this.curExportConfig.fileName.replace('.xlsx', ''))\r\n    }\r\n    this.generateVisibleHeaderRowsMap()\r\n    if (this.curExportConfig.isExportHead) {\r\n      if (this.curExportConfig.exportViewTitleType === 'nestTitle') {\r\n        this.riverGenerateExportNestedHeader(this.curExportConfig.columns)\r\n      } else {\r\n        this.riverGenerateExportNestedHeader(this.dataColMap)\r\n      }\r\n    }\r\n    this.setSheetCol(this.sheetVisibleData)\r\n    this.generateExportViewDataBody(this.curExportConfig.datas)\r\n    if (this.curExportConfig.isExportFooter) {\r\n      this.generateExportViewDatafooter(this.curExportConfig.datas)\r\n    }\r\n  }\r\n  setSheetCol(sheet, type = 'title') {\r\n    // 设置 列信息\r\n    // collapsed: false\r\n    // hidden: false\r\n    // max: 1\r\n    // min: 1\r\n    // numFmt: \"\"\r\n    // outlineLevel: 0\r\n    // style: Style\r\n    // align: (...)\r\n    // applyAlignment: (...)\r\n    // applyBorder: (...)\r\n    // applyFill: (...)\r\n    // applyFont: (...)\r\n    // border: (...)\r\n    // fill: (...)\r\n    // font: (...)\r\n    // width:0\r\n    // namedStyleIndex: (...)\r\n    let self = this\r\n    sheet.cols.forEach((col, colIndex) => {\r\n      col.width = self.getColWidth(colIndex, type)\r\n      col.max = 2000\r\n      col.field = this.dataColMap[colIndex]['field']\r\n    })\r\n  }\r\n  getColWidth(colIndex, type) {\r\n    // 获取colwidth\r\n    let text = this.dataColMap[colIndex][type]\r\n    if (!isNaN(parseInt(this.dataColMap[colIndex].width))) {\r\n      return Math.ceil(this.dataColMap[colIndex].width / 10)\r\n    } else if (text.length < 5) {\r\n      return 15\r\n    }\r\n    return Math.ceil(this.getStrByte(text) * 2)\r\n  }\r\n  getStrByte(str) {\r\n    //  获取字符串字节数\r\n    let arr = str.split('')\r\n    let len = arr.length\r\n    let count = 0\r\n    for (let i = 0; i < len; i++) {\r\n      let s = escape(arr[i])\r\n      // 例如：s = '你'; escape(a); \"%u4F60\"\r\n      if (s.indexOf('%u') >= 0) {\r\n        count = count + 2\r\n      } else {\r\n        count++\r\n      }\r\n    }\r\n    return count\r\n  }\r\n  generateExportOriginalDataSource() {\r\n    // 生成源数据导出数据源\r\n    this.sheetOriginalData = this.Xlsx.addSheet('源数据')\r\n    if (this.curExportConfig.isExportHead) {\r\n      this.generateExportOriginalDataHeader()\r\n    }\r\n    this.generateExportOriginalDataBody(this.curExportConfig.datas)\r\n    this.setSheetCol(this.sheetOriginalData, 'field')\r\n  }\r\n  riverGenerateExportNestedHeader(columns, curRowIndex = 1, pCell) {\r\n    // 递归生成嵌套表头\r\n    let self = this\r\n    columns.forEach((column, index) => {\r\n      if (Array.isArray(column.children) && column.children.length) {\r\n        let cell0 = self.generateCurNestedHeaderCell(self.headerRowsMap['rows' + curRowIndex], column, curRowIndex, pCell)\r\n        self.riverGenerateExportNestedHeader(column.children, curRowIndex + 1, cell0)\r\n      } else {\r\n        self.generateCurNestedHeaderCell(self.headerRowsMap['rows' + curRowIndex], column, curRowIndex, pCell)\r\n      }\r\n    })\r\n  }\r\n  generateCurNestedHeaderCell(row, column, curRows, pCell) {\r\n    // 生成表头数据并补齐空位\r\n    // cellType: (...)\r\n    // date1904: (...)\r\n    // formula: (...)\r\n    // hMerge: (...)\r\n    // hidden: (...)\r\n    // numFmt: (...)\r\n    // row: (...)\r\n    // vMerge: (...)\r\n    // _style: (...)\r\n    // _value: (...)\r\n    let cell0 = {}\r\n    if (Array.isArray(column.children) && column.children.length) {\r\n      let { floorLength } = this.getFloorData(column.children)\r\n      // for (let i = 0; i < column.children.length; i++) {\r\n      for (let i = 0; i < floorLength; i++) {\r\n        let cell = row.addCell()\r\n        if (i === 0) {\r\n          cell.value = getCellViewTitle(column, this.moneyUnit, this.curExportConfig?.addUnitColumn)\r\n          cell.hMerge = floorLength - 1\r\n          cell.vMerge = 0\r\n          cell0 = cell\r\n        } else {\r\n          cell.value = getCellViewTitle(column, this.moneyUnit, this.curExportConfig?.addUnitColumn)\r\n          cell.hMerge = 0\r\n          cell.vMerge = 0\r\n        }\r\n        this.generateCellVisibletitleStyle(cell, column)\r\n      }\r\n    } else {\r\n      let cellSing = row.addCell()\r\n      cellSing.value = getCellViewTitle(column, this.moneyUnit, this.curExportConfig?.addUnitColumn)\r\n      cellSing.hMerge = 0\r\n      cellSing.vMerge = this.curExportConfig.exportViewTitleType === 'nestTitle' ? this.headerRows - curRows : 0\r\n      cell0 = cellSing\r\n      this.generateCellVisibletitleStyle(cellSing, column)\r\n      if (this.curExportConfig.exportViewTitleType === 'nestTitle') {\r\n        this.supplementHeaderVMergeCells(row, column, curRows, pCell)\r\n      }\r\n      return cell0\r\n    }\r\n  }\r\n  supplementHeaderVMergeCells(row, column, curRows, pCell) {\r\n    // 当表头有合计行时补齐行单元格空位\r\n    for (let i = curRows + 1; i <= this.headerRows; i++) {\r\n      if (pCell) {\r\n        let cells = pCell.vMerge\r\n        for (let i = 0; i < cells; i++) {\r\n          this.headerRowsMap['rows' + i].addCell()\r\n        }\r\n      } else {\r\n        this.headerRowsMap['rows' + i].addCell()\r\n      }\r\n    }\r\n  }\r\n  getFloorData(treeData) {\r\n    // 获取当前嵌套子集的单元格个数以及深度\r\n    let max = 0\r\n    let floorCols = []\r\n    function each(data, floor) {\r\n      data.forEach((rowConlum, index) => {\r\n        if (floor > max) {\r\n          max = floor\r\n        }\r\n        if (Array.isArray(rowConlum.children) && rowConlum.children.length) {\r\n          each(rowConlum.children, floor + 1, rowConlum.children.length)\r\n        } else {\r\n          floorCols.push(rowConlum)\r\n        }\r\n      })\r\n    }\r\n    each(treeData, 1)\r\n    return {\r\n      floor: max,\r\n      floorLength: floorCols.length\r\n    }\r\n  }\r\n  generateExportViewDataBody(data, pRowIndex) {\r\n    // 生成视图数据导出主体数据\r\n    let self = this\r\n    data.forEach((row, rowIndex) => {\r\n      let newrow = self.sheetVisibleData.addRow()\r\n\r\n      row.seqIndex = !self?.tableComponentInstance?.treeConfig ? rowIndex + 1 : self.tableComponentInstance?.isTreeSeqToFlat ? row.seqIndex : pRowIndex + '.' + (+rowIndex + 1)\r\n\r\n      self.dataColMap.forEach((column, columnIndex) => {\r\n        let cell = newrow.addCell()\r\n        self.generateCellViewValue(cell, row, column, rowIndex + 1, pRowIndex)\r\n      })\r\n      if (self.curExportConfig.isExportTree && Array.isArray(row.children) && row.children.length) {\r\n        self.generateExportViewDataBody(row.children, row.seqIndex)\r\n      }\r\n    })\r\n  }\r\n  generateExportViewDatafooter(data) {\r\n    let self = this\r\n    let footData = this.curExportConfig.footerMethods({ columns: self.dataColMap, data: data })\r\n    let newrow = this.sheetVisibleData.addRow()\r\n    this.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      self.generateFooterCellViewValue(cell, footData[columnIndex], column)\r\n    })\r\n  }\r\n  generateCellViewValue(cell, item, column, rowIndex, pRowIndex) {\r\n    // 生成body单元格数据\r\n    if (column.field === 'seqIndex') {\r\n      cell.value = this.tableComponentInstance?.treeConfig ? this.tableComponentInstance?.isTreeSeqToFlat ? item.seqIndex : pRowIndex + '.' + rowIndex : rowIndex\r\n    } else {\r\n      cell.value = this.getViewCellValue(item, column)\r\n    }\r\n\r\n    // 树形表格设置缩进\r\n    const indent = !column.treeNode || !pRowIndex ? 0 : (item[rowUniqueLevelKey] || 0) * 2\r\n    if (column.customerExportStyle && typeof column.customerExportStyle === 'function') {\r\n      this.generateCellViewValueCustomerExportStyle(cell, column, indent, item)\r\n      return\r\n    }\r\n    this.generateCellViewValueStyle(cell, column, indent)\r\n  }\r\n  generateFooterCellViewValue(cell, value, column) {\r\n    // 生成footer单元格数据\r\n    cell.value = value\r\n    this.generateCellViewValueStyle(cell, column)\r\n  }\r\n  getViewCellValueType(item, column) {\r\n    return this.curExportConfig.viewValueFormatType(item[column.field], item, column)\r\n  }\r\n  getViewCellValue(item, column) {\r\n    // 获取body单元格视图数据\r\n    return this.curExportConfig.viewValueFormat(item[column.field], item, column, this)\r\n    // item[column.field]\r\n  }\r\n  generateCellVisibletitleStyle(cell, column) {\r\n    const { align = {}, border = {}, font = {}, fill = {} } = column?.exportStyle || {}\r\n    // 生成表头样式\r\n    cell.style.align = {\r\n      indent: 0,\r\n      shrinkToFit: false,\r\n      textRotation: 0,\r\n      wrapText: false,\r\n      h: 'center',\r\n      v: 'center',\r\n      ...align\r\n    }\r\n    cell.style.border = {\r\n      left: 'thin',\r\n      right: 'thin',\r\n      top: 'thin',\r\n      bottom: 'thin',\r\n      leftColor: 'FF000000',\r\n      rightColor: 'FF000000',\r\n      topColor: 'FF000000',\r\n      bottomColor: 'FF000000',\r\n      ...border\r\n    }\r\n    cell.style.font = {\r\n      color: '00000000',\r\n      bold: true,\r\n      family: 0,\r\n      charset: 0,\r\n      italic: false,\r\n      underline: false,\r\n      size: 12,\r\n      name: 'Verdana',\r\n      ...font\r\n    }\r\n    cell.style.fill = {\r\n      bgColor: 'ffffffff',\r\n      fgColor: 'ffD2E9FF',\r\n      patternType: 'solid',\r\n      ...fill\r\n    }\r\n  }\r\n  generateCellViewValueStyle(cell, column, indent) {\r\n    if (column.cellRender?.name === '$vxeRatio') {\r\n      cell.value = cell.value ? cell.value / 100 : cell.value\r\n      cell.numFmt = '0.0%'\r\n    } else if (column.cellRender?.name === '$vxeMoney') {\r\n      cell.numFmt = '0.00'\r\n    }\r\n    cell.style.border = {\r\n      left: 'thin',\r\n      right: 'thin',\r\n      top: 'thin',\r\n      bottom: 'thin',\r\n      leftColor: 'FF000000',\r\n      rightColor: 'FF000000',\r\n      topColor: 'FF000000',\r\n      bottomColor: 'FF000000'\r\n    }\r\n    cell.style.align = {\r\n      indent: indent || 0,\r\n      shrinkToFit: false,\r\n      textRotation: 0,\r\n      wrapText: false,\r\n      h: getCellValueAlign(column),\r\n      v: 'center'\r\n    }\r\n  }\r\n  generateCellViewValueCustomerExportStyle(cell, column, indent, row) {\r\n    cell.style.align = Object.assign({}, column.customerExportStyle({ row, column }).align || {\r\n      indent: indent || 0,\r\n      shrinkToFit: false,\r\n      textRotation: 0,\r\n      wrapText: false,\r\n      h: getCellValueAlign(column),\r\n      v: 'center'\r\n    })\r\n    cell.style.border = Object.assign({}, column.customerExportStyle({ row, column }).border || {\r\n      left: 'thin',\r\n      right: 'thin',\r\n      top: 'thin',\r\n      bottom: 'thin',\r\n      leftColor: 'FF000000',\r\n      rightColor: 'FF000000',\r\n      topColor: 'FF000000',\r\n      bottomColor: 'FF000000'\r\n    })\r\n    cell.style.fill = Object.assign({}, column.customerExportStyle({ row, column }).fill || {})\r\n    cell.style.font = Object.assign({}, column.customerExportStyle({ row, column }).font || {})\r\n  }\r\n  generateExportOriginalDataHeader() {\r\n    // 设置表头部样式\r\n    /**\r\n     * Cell intended to provide user access to the contents of Cell within an xlsx.Row.\r\n     *\r\n     * ```js\r\n     * const cell = row.addCell();\r\n     * cell.value = 'I am a cell!';\r\n     * cell.hMerge = 2;\r\n     * cell.vMerge = 1;\r\n     * cell.style.fill.patternType = 'solid';\r\n     * cell.style.fill.fgColor = '00FF0000';\r\n     * cell.style.fill.bgColor = 'FF000000';\r\n     * cell.style.align.h = 'center';\r\n     * cell.style.align.v = 'center';\r\n     * ```\r\n     *\r\n     * Set the cell value\r\n     *\r\n     * ```js\r\n     * const cell = row.addCell();\r\n     * // Date type\r\n     * cell.setDate(new Date());\r\n     * // Number type\r\n     * cell.setNumber(123456);\r\n     * cell.numFmt = '$#,##0.00';\r\n     * ```\r\n     */\r\n    let self = this\r\n    let newrow = self.sheetOriginalData.addRow()\r\n    self.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      self.generateCellVisibletitleStyle(cell, column)\r\n      cell.value = column.field || ''\r\n    })\r\n  }\r\n  generateExportOriginalDataBody(data, pRowIndex) {\r\n    // 生成body源数据\r\n    let self = this\r\n    data.forEach((row, rowIndex) => {\r\n      let newrow = self.sheetOriginalData.addRow()\r\n      row.seqIndex = !self.tableComponentInstance?.treeConfig ? rowIndex + 1 : this.tableComponentInstance?.isTreeSeqToFlat ? row.seqIndex : pRowIndex + '.' + (+rowIndex + 1)\r\n      self.dataColMap.forEach((column, columnIndex) => {\r\n        let cell = newrow.addCell()\r\n        self.generateCellOrangeValue(cell, row, column, rowIndex + 1, pRowIndex)\r\n      })\r\n      if (self.curExportConfig.isExportTree && Array.isArray(row.children) && row.children.length) {\r\n        self.generateExportOriginalDataBody(row.children, row.seqIndex)\r\n      }\r\n    })\r\n  }\r\n  generateCellOrangeValue(cell, item, column, rowIndex, pRowIndex) {\r\n    // 生成body单元格数据\r\n    if (column.field === 'seqIndex') {\r\n      cell.value = this.tableComponentInstance?.treeConfig ? this.tableComponentInstance?.isTreeSeqToFlat ? item.seqIndex : pRowIndex + '.' + rowIndex : rowIndex\r\n    } else {\r\n      cell.value = item[column.field] === undefined ? '' : item[column.field]\r\n    }\r\n    if (column.cellRender?.name === '$vxeRatio') {\r\n      cell.value = cell.value ? cell.value * 1 : cell.value\r\n      cell.numFmt = '.0%'\r\n    }\r\n    // 树形表格设置缩进\r\n    const indent = !column.treeNode || !pRowIndex ? 0 : (item[rowUniqueLevelKey] || 0) * 2\r\n    this.generateCellViewValueStyle(cell, column, indent)\r\n  }\r\n  toBuffer(wbout) {\r\n    const buf = new ArrayBuffer(wbout.length)\r\n    const view = new Uint8Array(buf)\r\n    for (let index = 0; index !== wbout.length; ++index) view[index] = wbout.charCodeAt(index) & 0xFF\r\n    return buf\r\n  }\r\n  exportDownload(exportXlsx) {\r\n    // 下载\r\n    let self = this\r\n    // const wbout = this.XlsxTool.write(exportXlsx, { bookType: 'xlsx', bookSST: false, type: 'binary' })\r\n    // const blob = new Blob([this.toBuffer(wbout)], { type: 'application/octet-stream' })\r\n    exportXlsx.saveAs('blob').then(function (content) {\r\n      const blob = new Blob([content], {\r\n        type: 'application/octet-stream'\r\n      })\r\n      // var blob = new Blob(['Hello, world!'], { type: 'text/plain;charset=utf-8' })\r\n      FileSaver.saveAs(blob, self.curExportConfig.fileName + self.curExportConfig.saveType)\r\n      // let objectUrl = URL.createObjectURL(blob)\r\n      // if ('download' in document.createElement('a')) {\r\n      //   let aTag = self.aTag\r\n      //   aTag.setAttribute('href', objectUrl)\r\n      //   aTag.setAttribute('download', self.curExportConfig.fileName + self.curExportConfig.saveType)\r\n      //   aTag.click()\r\n      //   self.curExportConfig.successCb(self.curExportConfig)\r\n      // } else {\r\n      //   // IE10+下载\r\n      //   navigator.msSaveBlob(blob, self.curExportConfig.fileName)\r\n      // }\r\n    })\r\n  }\r\n  downloadCsv(exportXlsx) {\r\n    let worksheet = this.sheetVisibleData // 这里我们只读取第一张sheet\r\n    let csv = this.XlsxTool.utils.sheet_to_csv(worksheet)\r\n    let blob = new Blob(['\\uFEFF' + csv], {\r\n      type: 'text/plaincharset=utf-8'\r\n    })\r\n    let aTag = this.aTag\r\n    aTag.setAttribute('download', this.curExportConfig.fileName + this.curExportConfig.saveType)\r\n    aTag.href = URL.createObjectURL(blob)\r\n    aTag.click()\r\n    URL.revokeObjectURL(blob)\r\n  }\r\n}\r\n// 调用\r\n// const $globalExport= new Export()\r\n// $globalExportExcel.exportExcel({\r\n//   fileName: 'export.xlsx', // 文件名\r\n//   isExportHead: true, // 是否导出表头\r\n//   isExportFooter: true, // 是否导出表尾部\r\n//   isExportOriginalData: true, // 是否导出源数据\r\n//   isExportData: true, // 是否导出数据\r\n//   columns: [], // 表头配置\r\n//   datas: [], // 数据源头\r\n//   index: true, // 是否添加序号\r\n//   ignoreColsTypes: ['dragSort', 'seq', 'checkbox', 'radio', 'optionRow', 'expand'],\r\n//   viewValueFormat(value, row, column) {\r\n//     return value\r\n//   }\r\n// })\r\n"],"mappings":"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"}]}