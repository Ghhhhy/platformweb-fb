{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Upload\\BossUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Upload\\BossUpload.vue","mtime":1694505521679},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["defaultServerUri","comUi","Store","USER_INFO","name","props","isShow","type","Boolean","limit","Number","default","size","String","editActived","openLoading","_default","uniqeName","queryparams","Object","deleteparams","downloadparams","minServer","afterUpload","Function","datas","afterDelete","queryConfig","accept","data","serverUri","className","uploadparams","delparams","downparams","userInfo","queryConfigFn","computed","multiple","appid","$store","state","curNavModule","undefined","components","methods","upload","mm","document","getElementsByClassName","concat","parentNode","children","click","getParams","file","_this","param","FormData","append","billguid","doctype","year","province","guid","queryConfigFnKeys","keys","length","forEach","key","onbeforeUpload","_this2","checkAccept","utilsLib","LoadingMark","showLoadingMark","params","$http","ajaxType","then","res","rscode","$message","showClose","message","removeLoadingMark","catch","err","console","log","finally","_this2$$refs$uploadFi","$refs","uploadFile","clearFiles","fileSuffix","substring","lastIndexOf","acceptArr","split","aceepts","map","item","i","toLowerCase","includes","uploadFiles","files","deleteFile","_this3","_objectSpread","delete","downloadFileFile","_this4","fileExist","urlObj","httpGlobalGatewayAgent","downLoadUrl","baseURL","url","fileguid","link","createElement","href","downloadMoreFile","_this5","window","gloableToolFn","serverGatewayMap","development","fileservice","tempwindow","open","location","downloadFile","_this6","download","downloadFileBak","_this7","code","headers","filename","fileName","decodeURI","fileContent","blob","Blob","a","style","display","URL","createObjectURL","body","appendChild","revokeObjectURL","removeChild","navigator","msSaveBlob","getFileList","_this8","Promise","resolve","reject","result","mixinsServerUri","assign","uploadSuccess","fileList","uploadError","onProgress","e","onExceed","mounted","watch","val","handler","newValue","oldValue","deep","immediate"],"sources":["src/components/Upload/BossUpload.vue"],"sourcesContent":["<!--文件上传组件-->\r\n<template>\r\n  <div v-show=\"isShow\" class=\"bs-file__upload\">\r\n    <el-upload\r\n      ref=\"uploadFile\"\r\n      :show-file-list=\"false\"\r\n      :multiple=\"multiple\"\r\n      :limit=\"limit\"\r\n      :accept=\"accept\"\r\n      action=\"\"\r\n      :data=\"uploadparams\"\r\n      :on-success=\"uploadSuccess\"\r\n      :on-error=\"uploadError\"\r\n      :on-progress=\"onProgress\"\r\n      :before-upload=\"onbeforeUpload\"\r\n      :on-exceed=\"onExceed\"\r\n      :http-request=\"() => {}\"\r\n      style=\"display: inline-block;\"\r\n    >\r\n      <el-button size=\"small\" type=\"primary\" :class=\"className\">上传</el-button>\r\n    </el-upload>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defaultServerUri } from './config'\r\nimport comUi from '@/components/index.js'\r\n// import Base64 from '@/utils/base64'\r\nimport Store from '@/utils/store'\r\nconst USER_INFO = 'userInfo'\r\nexport default {\r\n  name: 'BossUpload',\r\n  props: {\r\n    isShow: {\r\n      type: Boolean\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    size: {\r\n      // 输入框尺寸 medium/small/mini\r\n      type: String,\r\n      default: ''\r\n    },\r\n    editActived: {\r\n      type: Boolean\r\n    },\r\n    openLoading: {\r\n      type: Boolean,\r\n      default() {\r\n        return true\r\n      }\r\n    },\r\n    uniqeName: {\r\n      type: String,\r\n      default: 'bs-upload__input'\r\n    },\r\n    queryparams: {\r\n      // 查询参数\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    deleteparams: {\r\n      // 删除参数\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    downloadparams: {\r\n      // 下载参数\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    minServer: {\r\n      // 获取数据访问uri，可自定义\r\n      type: Object,\r\n      default() {\r\n        return defaultServerUri\r\n      }\r\n    },\r\n    afterUpload: {\r\n      // 上传后回调\r\n      type: Function,\r\n      default: function(datas) {}\r\n    },\r\n    afterDelete: {\r\n      // 删除后回调\r\n      type: Function,\r\n      default: function(datas) {}\r\n    },\r\n    queryConfig: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    accept: {\r\n      type: String,\r\n      default: 'image/*,.doc,.docx,.xls,.xlsx,.txt,.pdf,.jpg,.jpeg,.png,.txt,.7z,.zip,.rar'\r\n      // 上传文件格式不正确，正确格式为doc，docx ，xls，xlsx ，txt ，pdf，jpg，jpeg，png\r\n    }\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      serverUri: {},\r\n      className: this.uniqeName,\r\n      uploadparams: this.queryparams,\r\n      delparams: this.deleteparams,\r\n      downparams: this.downloadparams,\r\n      userInfo: Store(USER_INFO),\r\n      queryConfigFn: this.queryConfig\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    multiple() {\r\n      return this.limit > 1\r\n    },\r\n    appid() {\r\n      if (this.$store.state.curNavModule.appid === undefined ||\r\n        this.$store.state.curNavModule.appid === '' ||\r\n        this.$store.state.curNavModule.appid === null) {\r\n        return 'pay'\r\n      } else {\r\n        return this.$store.state.curNavModule.appid\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n\r\n  },\r\n\r\n  methods: {\r\n    upload() {\r\n      const mm = document.getElementsByClassName(`${this.className}`)[0].parentNode.children[1]\r\n      mm.click()\r\n    },\r\n    // 获取参数\r\n    getParams(file) {\r\n      let param = new FormData() // 创建form对象\r\n      param.append('file', file)\r\n      param.append('filename', file.name)\r\n      param.append('appid', this.appid)\r\n      param.append('billguid', this.uploadparams.billguid || '')\r\n      param.append('doctype', this.uploadparams.doctype || '')\r\n      param.append('year', this.userInfo.year)\r\n      param.append('province', this.userInfo.province)\r\n      param.append('userguid', this.userInfo.guid)\r\n      let queryConfigFnKeys = Object.keys(this.queryConfigFn)\r\n      if (queryConfigFnKeys.length) {\r\n        queryConfigFnKeys.forEach((key) => {\r\n          param.append(key, this.queryConfigFn[key])\r\n        })\r\n      }\r\n      // param.append('oldnode', this.uploadparams.oldnode || '')\r\n      // param.append('status', this.uploadparams.status || '')\r\n      // param.append('tablename', this.uploadparams.tablename || '')\r\n      // param.append('currnode', this.uploadparams.currnode || '')\r\n      // param.append('guid', this.uploadparams.guid || '')\r\n      // param.append('guids', this.uploadparams.guids || '')\r\n      // param.append('datatype', this.uploadparams.datatype || '')\r\n      // param.append('batchno', this.uploadparams.batchno || '')\r\n      // param.append('reportguid', this.uploadparams.reportguid || '')\r\n      // param.append('fields', this.uploadparams.fields || '')\r\n      // param.append('complex', this.uploadparams.complex || '')\r\n      return param\r\n    },\r\n\r\n    onbeforeUpload(file) {\r\n      //  校验处理\r\n      if (!this.checkAccept(file)) {\r\n        return\r\n      }\r\n      //  校验处理\r\n      this.openLoading && comUi.utilsLib.LoadingMark.showLoadingMark('', '上传中......')\r\n      const params = this.getParams(file)\r\n      this.$http[this.serverUri.upload.ajaxType](this.serverUri.upload.serverUri, params, null, 'multipart/form-data', 'openapi').then(res => {\r\n        if (res.rscode === '100000') {\r\n          this.$message({ showClose: true, message: '上传成功!', type: 'success' })\r\n          this.afterUpload(file, res.data)\r\n        } else {\r\n          this.$message({ showClose: true, message: '上传失败!', type: 'error' })\r\n        }\r\n        this.openLoading && comUi.utilsLib.LoadingMark.removeLoadingMark()\r\n      }).catch(err => {\r\n        console.log(err)\r\n        this.openLoading && comUi.utilsLib.LoadingMark.removeLoadingMark()\r\n      }).finally(() => {\r\n        this.$refs.uploadFile?.clearFiles()\r\n      })\r\n    },\r\n\r\n    checkAccept(file) {\r\n      var fileSuffix = file.name.substring(file.name.lastIndexOf('.') + 1)\r\n      if (this.accept === '*/*') {\r\n        return true\r\n      }\r\n\r\n      let acceptArr = this.accept.split(',')\r\n      let aceepts = acceptArr.map((item, i) => { return item.toLowerCase() })\r\n      if (!aceepts.includes(fileSuffix.toLowerCase())) {\r\n        this.$message({\r\n          message: `上传文件只能是${this.accept}格式!`,\r\n          type: 'warning'\r\n        })\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n\r\n    // 上传文件\r\n    uploadFiles(files) {\r\n      console.log(33, files)\r\n    },\r\n\r\n    // 删除单个或多个文件\r\n    deleteFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.deleteparams\r\n      }\r\n\r\n      this.$http[this.serverUri.delete.ajaxType](this.serverUri.delete.serverUri, params, '', '', 'params').then(res => {\r\n        if (res.rscode === '100000') {\r\n          this.$message({ showClose: true, message: '删除成功!', type: 'success' })\r\n          this.afterDelete()\r\n        } else {\r\n          this.$message({ showClose: true, message: '删除失败!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n      // this.$confirm('确认要删除吗?', '提示', {\r\n      //   confirmButtonText: '确定',\r\n      //   cancelButtonText: '取消',\r\n      //   type: 'warning'\r\n      // }).then(() => {\r\n      //   this.$http[this.serverUri.delete.ajaxType](this.serverUri.delete.serverUri, params, '', '', 'params').then(res => {\r\n      //     if (res.rscode === '100000') {\r\n      //       this.$message({ showClose: true, message: '删除成功!', type: 'success' })\r\n      //       this.afterDelete()\r\n      //     } else {\r\n      //       this.$message({ showClose: true, message: '删除失败!', type: 'error' })\r\n      //     }\r\n      //   }).catch(err => {\r\n      //     console.log(err)\r\n      //   })\r\n      // }).catch(() => {\r\n\r\n      // })\r\n    },\r\n\r\n    downloadFileFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.downparams\r\n      }\r\n      this.$http[this.serverUri.fileExist.ajaxType](this.serverUri.fileExist.serverUri, params).then(res => {\r\n        if (res.rscode === '100000') {\r\n          // console.log(555, this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri))\r\n          // const urlObj = this.$gloableToolFn.getFileUrl() + '/v2/stream/download'\r\n          // const urlObj = 'http://10.77.18.172:32306/v2/stream/download'\r\n          const urlObj = this.$http.httpGlobalGatewayAgent('fileservice/v2/stream/download')\r\n          const downLoadUrl = `${urlObj.baseURL}/${urlObj.url}?appid=${this.appid}&fileguid=${this.downparams.fileguid}`\r\n          let link = document.createElement('a')\r\n          link.href = downLoadUrl\r\n          // link.download=`路由导出表-${dayjs(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")}`//跨域下 名称会失效 无法设置名字\r\n          link.click()\r\n          // 通过JS打开新窗口会被拦截，换一种实现方式: 先打开页面, 后更改页面地址\r\n          // let tempwindow = window.open('_blank')\r\n          // tempwindow.location = downLoadUrl\r\n          // window.open(downLoadUrl)\r\n        } else {\r\n          this.$message({ showClose: true, message: '文件不存在!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n    downloadMoreFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        fileguid: this.downparams.fileguid\r\n      }\r\n      this.$http[this.serverUri.fileExist.ajaxType](this.serverUri.fileExist.serverUri, params).then(res => {\r\n        if (res.rscode === '100000') {\r\n          // console.log(555, this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri))\r\n          const urlObj = window.gloableToolFn.serverGatewayMap.development.fileservice + '/v2/stream/download'\r\n          const downLoadUrl = `${urlObj}?appid=${this.appid}&fileguid=${params.fileguid}`\r\n          // 通过JS打开新窗口会被拦截，换一种实现方式: 先打开页面, 后更改页面地址\r\n          let tempwindow = window.open('_blank')\r\n          tempwindow.location = downLoadUrl\r\n          // window.open(downLoadUrl)\r\n        } else {\r\n          this.$message({ showClose: true, message: '文件不存在!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n\r\n    downloadFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.downparams\r\n      }\r\n      this.$http[this.serverUri.fileExist.ajaxType](this.serverUri.fileExist.serverUri, params).then(res => {\r\n        if (res.rscode === '100000') {\r\n          // console.log(555, this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri))\r\n          const urlObj = this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri)\r\n          const downLoadUrl = `${urlObj.baseURL}/${urlObj.url}?appid=${this.appid}&fileguid=${this.downparams.fileguid}`\r\n\r\n          // 通过JS打开新窗口会被拦截，换一种实现方式: 先打开页面, 后更改页面地址\r\n          let tempwindow = window.open('_blank')\r\n          tempwindow.location = downLoadUrl\r\n          // window.open(downLoadUrl)\r\n        } else {\r\n          this.$message({ showClose: true, message: '文件不存在!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n\r\n    // 下载问题\r\n    downloadFileBak() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.downparams\r\n      }\r\n      this.$http[this.serverUri.download.ajaxType](this.serverUri.download.serverUri, params).then(res => {\r\n        const code = res.headers.rscode\r\n        const filename = res.headers.filename\r\n        if (Number(code) === 100000) {\r\n          const fileName = decodeURI(filename)\r\n          const fileContent = res.data\r\n\r\n          let blob = new Blob([fileContent], { type: 'application/octet-stream' })\r\n\r\n          // const blob = new Blob([fileContent])\r\n          if ('download' in document.createElement('a')) { // 非IE下载\r\n            const a = document.createElement('a')\r\n            a.download = fileName\r\n            a.style.display = 'none'\r\n            let url = URL.createObjectURL(blob)\r\n            a.href = url\r\n            document.body.appendChild(a)\r\n            a.click()\r\n            URL.revokeObjectURL(url) // 释放URL 对象\r\n            document.body.removeChild(a)\r\n          } else { // IE10+下载\r\n            navigator.msSaveBlob(blob, fileName)\r\n          }\r\n        } else {\r\n          this.$message({ showClose: true, message: '下载异常!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        this.$message({ showClose: true, message: '下载异常!', type: 'error' })\r\n        console.log(err)\r\n      })\r\n    },\r\n\r\n    // 获取文件列表\r\n    getFileList() {\r\n      return new Promise((resolve, reject) => {\r\n        this.$http['get']('fileservice/v2/files', this.queryparams).then(res => {\r\n          if (res.rscode === '100000') {\r\n            resolve(res.data || res.result)\r\n          }\r\n        }).catch(err => {\r\n          reject(err)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 服务参数合并\r\n    mixinsServerUri() {\r\n      this.serverUri = Object.assign({}, defaultServerUri, this.minServer)\r\n    },\r\n\r\n    // 上传成功钩子\r\n    uploadSuccess(res, file, fileList) {\r\n      console.log('success', res, file, fileList)\r\n    },\r\n\r\n    // 上传失败钩子\r\n    uploadError(err, file, fileList) {\r\n      console.log('error', err, file, fileList)\r\n    },\r\n\r\n    // 上传进度钩子\r\n    onProgress(e, file, fileList) {\r\n      console.log('progress', e, file, fileList)\r\n    },\r\n\r\n    // 选则文件超出最大限制个数\r\n    onExceed(files, fileList) {\r\n      this.$message({ showClose: true, message: `选择的文件超过最大设置数${this.limit}了!`, type: 'error' })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mixinsServerUri()\r\n  },\r\n  watch: {\r\n    className(val) {\r\n      this.className = val\r\n    },\r\n    minServer: {\r\n      handler(newValue, oldValue) {\r\n        this.mixinsServerUri()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    queryparams: {\r\n      handler(newValue, oldValue) {\r\n        this.uploadparams = this.queryparams\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    deleteparams: {\r\n      handler(newValue, oldValue) {\r\n        this.delparams = this.deleteparams\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    downloadparams: {\r\n      handler(newValue, oldValue) {\r\n        this.downparams = this.downloadparams\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    queryConfig: {\r\n      handler(newValue, oldValue) {\r\n        this.queryConfigFn = newValue\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"mappings":"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"}]}