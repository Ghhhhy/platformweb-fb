{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\manageSystem\\table\\Main.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\manageSystem\\table\\Main.vue","mtime":1694505522857},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["TableConfModal","FormConfModal","EnteringDefault","getFormConfData","SubTabConfigModal","name","components","props","allPropData","type","Object","default","_default","data","menuguids","curConfType","leftVisible","leftTreeData","curSplitPaneLeftWidth","isShowQueryConditions","serverUri","treeQueryparams","menuguid","useRight","batchno","datatype","eleCode","sxspecroleguid","treeleftTreeConfig","inputVal","treeConfig","curRadio","radioGroup","code","label","leftTreeConfig","pagerConfig","currentPage","total","curTableConfDatas","curTableConfDatasMapArr","curTableConfDatasMap","globleConfigCp","tableName","businessTableName","tableNote","measuringUnit","viewOrder","editableBatch","tableType","note","autoBuiltTables","editble","showCheckbox","canUse","aSingleTable","batchModify","rowConfig","noRecordIsAllowedToReport","subtotalRows","toolbarConfig","_objectSpread","disabledMoneyConversion","tableConfig","tableColumnsConfig","tableConfModalVisible","formConfModalVisible","enteringDefaultVisible","curLeftTreeClickNode","enteringDefaultFlag","SubTabConfigVisible","computed","curNavModule","$store","state","userInfo","methods","deepCopy","obj","me","_typeof","newObj","Array","key","hasOwnProperty","jsonStringify","columns","JSON","stringify","val","jsonParse","str","parse","k","v","indexOf","func","Function","e","changeInput","confrimData","curTree","console","log","tabStatusNumConfig","onSplitPaneResize","leftWidth","ajaxData","_ref","pageSize","queryParams","assign","getTableDatas","_this","showLoading","self","$http","post","then","res","tableData","list","transformConlumsDataToNest","forEach","column","columnIndex","isArray","children","length","renderType","renderName","options","params","split","map","item","index","value","defaultValue","_XID","transformConlumsDataToSingle","editRender","cellRender","itemRender","join","transformItemsDataToSingle","items","itemIndex","getTableConfByMenuguid","Promise","resolve","reject","get","mof_div_code","province","fiscalyear","year","rscode","catch","error","generateCurTableConfDataMap","curMenuConfs","_this2","resultObj","_self$jsonParse","configure","itemsConfig","globalConfig","formConfig","globalConfigCp","tablename","updatetime","menuname","id","push","setLeftMenuTree","concat","systemMenu","onLeftTreeNodeClick","node","leftTree","guid","$message","showClose","message","refreshTable","$refs","bsTableRef","tableOptionFn","reloadData","err","onEditTableClick","selection","_this$jsonParse","tableConfModalParams","onEditFormClick","_this$jsonParse2","onEditClick","_this$jsonParse3","subTabConfig","defaultConfig","buttons","buttonsInfo","itemsConfigNest","onAddClick","insertRowData","optionType","$ToolFn","utilFn","getUuid","pageConfig","editConfig","editRules","footerConfig","dataConfig","dataSouceType","onDeleteClick","_this3","ids","$confirm","confirmButtonText","cancelButtonText","del","success","onTableCellClick","_ref2","row","rowIndex","$rowIndex","$columnIndex","triggerRadio","triggerCheckbox","triggerTreeNode","triggerExpandNode","$event","getProvince","_this4","admdivname","flag","editClosed","_ref3","id__viewSort","mounted","$gloableToolFn","currentProvince","FuJian","watch","handler","newval","immediate"],"sources":["src/views/manageSystem/table/Main.vue"],"sourcesContent":["<!--  表格信息配置   Author:Titans@2396757591@qq.com -->\r\n<template>\r\n  <div class=\"height-all\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftVisible\">\r\n      <template v-slot:topTap>\r\n        <!-- <BsJsonEditor />  -->\r\n      </template>\r\n      <template v-slot:topTabPane> </template>\r\n      <template v-slot:query> </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <template v-slot:mainTree>\r\n        <div class=\"height-all left-tree-pane\">\r\n          <div class=\"mmc-left-tree-title\">\r\n            <BsTreeSet\r\n              :tree-config=\"treeConfig\"\r\n              @onAsideChange=\"leftVisible = false\"\r\n              @onChangeInput=\"changeInput\"\r\n              @onConfrimData=\"confrimData\"\r\n            />\r\n            <!-- <div class=\"mmc-title\">\r\n              <span class=\"fn-inline\">菜单树</span>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"mmc-left-tree-body\" style=\"height: calc(100% - 48px)\">\r\n            <BsBossTree\r\n              ref=\"testTree\"\r\n              is-need-root\r\n              :tree-props=\"{\r\n                label: 'name',\r\n                children: 'children',\r\n              }\"\r\n              open-loading\r\n              :is-server=\"false\"\r\n              :datas=\"leftTreeData\"\r\n              :server-uri=\"serverUri\"\r\n              :global-config=\"leftTreeConfig\"\r\n              :queryparams=\"treeQueryparams\"\r\n              :clickmethod=\"onLeftTreeNodeClick\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <BsTable1\r\n          ref=\"bsTableRef\"\r\n          :footer-config=\"{ showFooter: false }\"\r\n          :table-config=\"tableConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"curTableConfDatasMapArr\"\r\n          :toolbar-config=\"toolbarConfig\"\r\n          :pager-config=\"false\"\r\n          :edit-config=\"{}\"\r\n          @ajaxData=\"ajaxData\"\r\n          @editClosed=\"editClosed\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div\r\n                v-if=\"leftVisible === false\"\r\n                class=\"table-toolbar-contro-leftvisible\"\r\n                @click=\"leftVisible = true\"\r\n              ></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{\r\n                  (curLeftTreeClickNode.name ? curLeftTreeClickNode.name : '') + '菜单表配置'\r\n                }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:toolbar-custom-slot>\r\n            <div class=\"toolbar-slot-custom-slot fn-inline\">\r\n              <!-- <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"编辑表单项配置\"\r\n                @click=\"onEditFormClick\"\r\n              />\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"编辑表格列配置\"\r\n                @click=\"onEditTableClick\"\r\n              /> -->\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"新增\"\r\n                @click=\"onAddClick\"\r\n              />\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"删除\"\r\n                @click=\"onDeleteClick\"\r\n              />\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"编辑\"\r\n                @click=\"onEditClick\"\r\n              />\r\n            </div>\r\n          </template>\r\n        </BsTable1>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <div>\r\n      <TableConfModal\r\n        v-if=\"tableConfModalVisible\"\r\n        :dialog-visible.sync=\"tableConfModalVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n      <FormConfModal\r\n        v-if=\"formConfModalVisible\"\r\n        :dialog-visible.sync=\"formConfModalVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n      <EnteringDefault\r\n        v-if=\"enteringDefaultVisible\"\r\n        :dialog-visible.sync=\"enteringDefaultVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n      <SubTabConfigModal\r\n        v-if=\"SubTabConfigVisible\"\r\n        :dialog-visible.sync=\"SubTabConfigVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport TableConfModal from './tableConfModal.vue'\r\nimport FormConfModal from './FormConfModal.vue'\r\nimport EnteringDefault from './enteringDefault.vue'\r\nimport getFormConfData from './formConf.js'\r\nimport SubTabConfigModal from './SubTabConfigModal.vue'\r\nexport default {\r\n  name: '',\r\n  components: {\r\n    TableConfModal,\r\n    FormConfModal,\r\n    EnteringDefault,\r\n    SubTabConfigModal\r\n  },\r\n  props: {\r\n    allPropData: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      menuguids: [],\r\n      curConfType: 'table',\r\n      leftVisible: true,\r\n      leftTreeData: [],\r\n      curSplitPaneLeftWidth: 20,\r\n      isShowQueryConditions: false,\r\n      serverUri: 'mp-b-perm-service/v1/tableconf/menuguid',\r\n      treeQueryparams: {\r\n        menuguid: 'test_123456',\r\n        useRight: false,\r\n        batchno: 2,\r\n        datatype: 5,\r\n        eleCode: 'DEPBGTECO',\r\n        sxspecroleguid: '637B6D5A823F459AB313CBF94C87765B'\r\n      },\r\n      treeleftTreeConfig: {\r\n        inputVal: ''\r\n      },\r\n      treeConfig: {\r\n        curRadio: 'zf',\r\n        radioGroup: [\r\n          {\r\n            code: 'zf',\r\n            label: '政府部门树'\r\n          },\r\n          {\r\n            code: 'xuexiao',\r\n            label: '学校树'\r\n          },\r\n          {\r\n            code: 'jigou',\r\n            label: '机构树'\r\n          }\r\n        ]\r\n      },\r\n      leftTreeConfig: {\r\n        inputVal: ''\r\n      },\r\n      pagerConfig: {\r\n        currentPage: 1,\r\n        total: 100\r\n      },\r\n      curTableConfDatas: [],\r\n      currentPage: 1,\r\n      curTableConfDatasMapArr: [\r\n        // {\r\n        //   tableName: '1',\r\n        //   businessTableName: '1',\r\n        //   tableNote: '1',\r\n        //   measuringUnit: 1,\r\n        //   viewOrder: '001',\r\n        //   editableBatch: '001',\r\n        //   tableType: '001',\r\n        //   note: '1',\r\n        //   autoBuiltTables: false,\r\n        //   editble: true,\r\n        //   showCheckbox: true,\r\n        //   canUse: true,\r\n        //   aSingleTable: false,\r\n        //   batchModify: false,\r\n        //   rowConfig: false,\r\n        //   noRecordIsAllowedToReport: true,\r\n        //   subtotalRows: true\r\n        // }\r\n      ],\r\n      curTableConfDatasMap: {},\r\n      globleConfigCp: {\r\n        tableName: '',\r\n        businessTableName: '',\r\n        tableNote: '',\r\n        measuringUnit: '',\r\n        viewOrder: '',\r\n        editableBatch: '',\r\n        tableType: '',\r\n        note: '',\r\n        autoBuiltTables: false,\r\n        editble: true,\r\n        showCheckbox: true,\r\n        canUse: true,\r\n        aSingleTable: false,\r\n        batchModify: false,\r\n        rowConfig: false,\r\n        noRecordIsAllowedToReport: true,\r\n        subtotalRows: true\r\n      },\r\n      toolbarConfig: {\r\n        disabledMoneyConversion: true,\r\n        ...getFormConfData('tableInforConf', 'toolbarConfig')\r\n      },\r\n      tableConfig: getFormConfData('tableInforConf', 'tableConfig'),\r\n      tableColumnsConfig: getFormConfData(\r\n        'tableInforConf',\r\n        'tableColumnsConfig'\r\n      ),\r\n      tableConfModalVisible: false,\r\n      formConfModalVisible: false,\r\n      enteringDefaultVisible: false,\r\n      curLeftTreeClickNode: {},\r\n      enteringDefaultFlag: false,\r\n      SubTabConfigVisible: false\r\n    }\r\n  },\r\n  computed: {\r\n    curNavModule() {\r\n      return this.$store.state.curNavModule\r\n    },\r\n    userInfo() {\r\n      return this.$store.state.userInfo\r\n    }\r\n  },\r\n  methods: {\r\n    deepCopy(obj) {\r\n      // 深拷贝通用方法\r\n      let me = this\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n    jsonStringify(columns) {\r\n      // 对象转换成json字符串\r\n      return JSON.stringify(columns, function (key, val) {\r\n        if (typeof val === 'function') {\r\n          return val + ''\r\n        }\r\n        return val\r\n      })\r\n    },\r\n    jsonParse(str) {\r\n      // json字符串转换成对象\r\n      return JSON.parse(str, function (k, v) {\r\n        try {\r\n          if (\r\n            v.indexOf &&\r\n            (v.indexOf('function') > -1 || v.indexOf('=>') > -1)\r\n          ) {\r\n            // return eval('(function(){return ' + v + ' })()')\r\n            // eslint-disable-next-line no-new-func\r\n            let func = new Function('return ' + v)\r\n            return func()\r\n          }\r\n          return v\r\n        } catch (e) {\r\n          return v\r\n        }\r\n      })\r\n    },\r\n    changeInput(val) {\r\n      this.treeleftTreeConfig.inputVal = val\r\n    },\r\n    confrimData(curTree) {\r\n      this.confrimData.curRadio = curTree.code\r\n      switch (curTree.code) {\r\n        case 'zf':\r\n          console.log('切换成政府树条件，加载政府树...')\r\n          break\r\n        case 'xuexiao':\r\n          console.log('切换成学校树条件，加载学校树...')\r\n          this.tabStatusNumConfig['ycl'] = 12\r\n          break\r\n        case 'jigou':\r\n          console.log('切换成机构树条件，加载机构树...')\r\n          break\r\n      }\r\n    },\r\n    onSplitPaneResize(leftWidth) {\r\n      if (leftWidth > 1) {\r\n        this.curSplitPaneLeftWidth = leftWidth\r\n        this.leftVisible = true\r\n      } else {\r\n        this.leftVisible = false\r\n      }\r\n    },\r\n    ajaxData({ currentPage, pageSize }) {\r\n      this.pagerConfig.currentPage = currentPage\r\n      this.queryParams = Object.assign(this.queryParams, {\r\n        currentPage,\r\n        pageSize\r\n      })\r\n      this.getTableDatas(currentPage, pageSize)\r\n    },\r\n    getTableDatas(currentPage, pageSize) {\r\n      // 服务端查询数据\r\n      this.showLoading = true\r\n      let self = this\r\n      this.$http.post('url', this.queryParams).then((res) => {\r\n        if (res.code === 200) {\r\n          self.tableData = res.data.list\r\n          self.pagerConfig = {\r\n            total: res.data.total,\r\n            currentPage: currentPage\r\n          }\r\n          this.showLoading = false\r\n        }\r\n      })\r\n    },\r\n    transformConlumsDataToNest(columns) {\r\n      // columns转化为vxe-table columns数据结构\r\n      let self = this\r\n      columns.forEach((column, columnIndex) => {\r\n        if (Array.isArray(column.children) && column.children.length) {\r\n          column.children = self.transformConlumsDataToNest(column.children)\r\n        } else {\r\n          column[column.renderType] = {\r\n            name: column.renderName, // 渲染器名,\r\n            options: ((params) => {\r\n              if (typeof params === 'object') {\r\n                return self.deepCopy(params)\r\n              } else if (typeof params === 'string') {\r\n                return params\r\n                  ? params.split('+').map((item, index) => {\r\n                    return {\r\n                      value: item.split('#')[0],\r\n                      label: item.split('#')[1]\r\n                    }\r\n                  })\r\n                  : []\r\n              } else {\r\n                return params\r\n              }\r\n            })(column.options), // 下拉数据源\r\n            defaultValue: column.defaultValue, // 默认值\r\n            props: column.props // 额外参数\r\n          }\r\n          delete column._XID\r\n          delete column.renderType\r\n          delete column.renderName\r\n          delete column.options\r\n          delete column.props\r\n          delete column.defaultValue\r\n          delete self.deepCopy(column.props)\r\n        }\r\n      })\r\n      return columns\r\n    },\r\n    transformConlumsDataToSingle(columns) {\r\n      // vxe-table columns数据结构转化为单层columns\r\n      let self = this\r\n      columns.forEach((column, columnIndex) => {\r\n        if (Array.isArray(column.children) && column.children.length) {\r\n          column.children = self.transformConlumsDataToNest(column.children)\r\n        } else {\r\n          if (column.hasOwnProperty('editRender')) {\r\n            column.renderType = 'editRender'\r\n            column.renderName = column.editRender.name\r\n            column = Object.assign(column, self.deepCopy(column.editRender))\r\n            delete column.editRender\r\n          } else if (column.hasOwnProperty('cellRender')) {\r\n            column.renderType = 'cellRender'\r\n            column.renderName = column.cellRender.name\r\n            column = Object.assign(column, self.deepCopy(column.cellRender))\r\n          } else if (column.hasOwnProperty('itemRender')) {\r\n            column.renderType = 'itemRender'\r\n            column.renderName = column.itemRender.name\r\n            column = Object.assign(column, self.deepCopy(column.itemRender))\r\n          } else {\r\n          }\r\n          if (['$select', '$vxeSelect', '$vxeFormSelect', '$vxeSwitch', '$vxeRadio', '$vxeSwitch', '$vxeCheckbox'].indexOf(column.renderName) >= 0) {\r\n            column.options = column.options\r\n              .map((item, index) => {\r\n                return item.value + '#' + item.label\r\n              })\r\n              .join('+')\r\n          }\r\n        }\r\n      })\r\n      return columns\r\n    },\r\n    transformItemsDataToSingle(items) {\r\n      // vxe-table items数据结构转化为单层items\r\n      let self = this\r\n      items.forEach((item, itemIndex) => {\r\n        if (Array.isArray(item.children) && item.children.length) {\r\n          item.children = self.transformConlumsDataToNest(item.children)\r\n        } else {\r\n          if (item.hasOwnProperty('itemRender')) {\r\n            item.renderType = 'itemRender'\r\n            item.renderName = item.itemRender.name\r\n            item = Object.assign(item, self.deepCopy(item.itemRender))\r\n            delete item.itemRender\r\n          }\r\n          if (['$select', '$vxeSelect', '$vxeFormRadio', '$vxeFormSelect', '$vxeSwitch', '$vxeRadio', '$vxeSwitch', '$vxeCheckbox', '$vxeFormCheckbox'].indexOf(item.renderName) >= 0) {\r\n            item.options = Array.isArray(item.options) ? item.options\r\n              .map((item, index) => {\r\n                return item.value + '#' + item.label\r\n              })\r\n              .join('+') : item.options\r\n          }\r\n        }\r\n      })\r\n      return items\r\n    },\r\n    getTableConfByMenuguid(menuguid) {\r\n      // 根据菜单menuguid获取其下所有表配置\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        self.$http\r\n          .get('mp-b-perm-service/v1/tableconf/menuguid', {\r\n            menuguid: menuguid,\r\n            mof_div_code: self.userInfo.province, // 区划\r\n            fiscalyear: self.userInfo.year // 年份\r\n          })\r\n          .then((res) => {\r\n            if (res.rscode === '100000') {\r\n              resolve(res.data)\r\n              // resolve(self.generateCurTableConfDataMap(res.data))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            reject(error)\r\n          })\r\n      })\r\n    },\r\n    generateCurTableConfDataMap(curMenuConfs) {\r\n      // 生成当前menu下表格数据映射\r\n      let self = this\r\n      let resultObj = {}\r\n      let curTableConfDatasMap = {}\r\n      let curTableConfDatasMapArr = []\r\n      resultObj.curTableConfDatas = curMenuConfs\r\n      curMenuConfs.forEach((item, index) => {\r\n        let { itemsConfig, globalConfig, formConfig } = self.jsonParse(\r\n          item.configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        formConfig = formConfig || []\r\n        let globalConfigCp = Object.assign(\r\n          {\r\n            tablename: '',\r\n            businessTableName: '',\r\n            tableNote: '',\r\n            measuringUnit: '',\r\n            viewOrder: '',\r\n            editableBatch: '',\r\n            tableType: '',\r\n            note: '',\r\n            autoBuiltTables: '',\r\n            editble: '',\r\n            showCheckbox: '',\r\n            canUse: '',\r\n            aSingleTable: '',\r\n            batchModify: '',\r\n            rowConfig: '',\r\n            noRecordIsAllowedToReport: '',\r\n            subtotalRows: ''\r\n          },\r\n          globalConfig,\r\n          {\r\n            // tablename: item.tablename,\r\n            type: item.type,\r\n            updatetime: item.updatetime,\r\n            menuname: this.curLeftTreeClickNode.name,\r\n            id: item.id,\r\n            menuguid: item.menuguid\r\n          }\r\n        )\r\n        curTableConfDatasMapArr.push(globalConfigCp)\r\n        curTableConfDatasMap[item.id] = {\r\n          itemsConfig: self.transformConlumsDataToSingle(itemsConfig),\r\n          formConfig: self.transformItemsDataToSingle(formConfig),\r\n          id: item.id,\r\n          globalConfig: globalConfigCp,\r\n          menuguid: item.menuguid,\r\n          type: item.type\r\n        }\r\n      })\r\n      resultObj.curTableConfDatasMapArr = curTableConfDatasMapArr\r\n      resultObj.curTableConfDatasMap = curTableConfDatasMap\r\n      return resultObj\r\n    },\r\n    setLeftMenuTree() {\r\n      // 加载左侧树\r\n      this.leftTreeData = [].concat(this.$store.state.systemMenu)\r\n    },\r\n    onLeftTreeNodeClick(node, leftTree) {\r\n      // 左侧树点击事件\r\n      if (!(Array.isArray(node.children) && node.children.length)) {\r\n        let self = this\r\n        this.curLeftTreeClickNode = node\r\n        this.getTableConfByMenuguid(node.guid).then((res) => {\r\n          self.$message({\r\n            showClose: true,\r\n            message: `当前菜单数据查询成功,共计(${res.length}条)`,\r\n            type: 'success'\r\n          })\r\n          self.curTableConfDatasMapArr = res\r\n        })\r\n      }\r\n    },\r\n    refreshTable() {\r\n      // 刷新表格\r\n      let self = this\r\n      this.getTableConfByMenuguid(this.curLeftTreeClickNode.guid).then(\r\n        (res) => {\r\n          self.$message({\r\n            showClose: true,\r\n            message: '当前菜单数据已刷新',\r\n            type: 'success'\r\n          })\r\n          self.curTableConfDatasMapArr = res\r\n          self.$refs.bsTableRef\r\n            .tableOptionFn()\r\n            .reloadData(self.curTableConfDatasMapArr).then(() => {}).catch(err => {\r\n              console.log(err)\r\n            })\r\n        }\r\n      )\r\n    },\r\n    onEditTableClick() {\r\n      // 编辑点击事件\r\n      let selection = this.$refs.bsTableRef.selection\r\n      if (selection.length === 1) {\r\n        let { itemsConfig, globalConfig, formConfig } = this.jsonParse(\r\n          selection[0].configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        formConfig = formConfig || []\r\n        this.tableConfModalParams = Object.assign(selection[0], {\r\n          globalConfig: globalConfig,\r\n          itemsConfig: this.transformConlumsDataToSingle(itemsConfig),\r\n          formConfig: this.transformItemsDataToSingle(formConfig)\r\n        })\r\n        this.tableConfModalVisible = true\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请选择一条数据进行编辑',\r\n          type: 'info'\r\n        })\r\n      }\r\n    },\r\n    onEditFormClick() {\r\n      // 编辑点击事件\r\n      let selection = this.$refs.bsTableRef.selection\r\n      if (selection.length === 1) {\r\n        let { itemsConfig, globalConfig, formConfig } = this.jsonParse(\r\n          selection[0].configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        formConfig = formConfig || []\r\n        this.tableConfModalParams = Object.assign(selection[0], {\r\n          globalConfig: globalConfig,\r\n          itemsConfig: this.transformConlumsDataToSingle(itemsConfig),\r\n          formConfig: this.transformItemsDataToSingle(formConfig)\r\n        })\r\n        this.formConfModalVisible = true\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请选择一条数据进行编辑',\r\n          type: 'info'\r\n        })\r\n      }\r\n    },\r\n    onEditClick() {\r\n      let selection = this.$refs.bsTableRef.selection\r\n      if (selection.length === 1) {\r\n        let { itemsConfig, globalConfig, subTabConfig, defaultConfig } = this.jsonParse(\r\n          selection[0].configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        subTabConfig = subTabConfig || {\r\n          buttons: [],\r\n          buttonsInfo: {}\r\n        }\r\n        defaultConfig = defaultConfig || []\r\n        if (selection[0].type === 'form' || selection[0].type === 'formConf' || selection[0].type === 'detail' || selection[0].type === 'detailConf') {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(itemsConfig),\r\n            itemsConfig: this.transformItemsDataToSingle(itemsConfig)\r\n          })\r\n          this.formConfModalVisible = true\r\n        } else if (selection[0].type === 'tabPaneConf') {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(subTabConfig),\r\n            subTabConfig: subTabConfig\r\n          })\r\n          this.SubTabConfigVisible = true\r\n        } else if (selection[0].type === 'enteringDefault') {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(defaultConfig),\r\n            itemsConfig: this.transformConlumsDataToSingle(defaultConfig)\r\n          })\r\n          this.enteringDefaultVisible = true\r\n        } else {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(itemsConfig),\r\n            itemsConfig: this.transformConlumsDataToSingle(itemsConfig)\r\n          })\r\n          this.tableConfModalVisible = true\r\n        }\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请选择一条数据进行编辑',\r\n          type: 'info'\r\n        })\r\n      }\r\n    },\r\n    onAddClick() {\r\n      let self = this\r\n      this.$refs.bsTableRef.insertRowData({\r\n        data: {\r\n          menuguid: self.curLeftTreeClickNode.guid,\r\n          type: 'table',\r\n          optionType: 'add',\r\n          id: self.$ToolFn.utilFn.getUuid(),\r\n          menuname: self.curLeftTreeClickNode.name,\r\n          tablename: '',\r\n          configure: self.jsonStringify({\r\n            globalConfig: {}, // 全局配置\r\n            itemsConfig: [], // 项配置\r\n            pageConfig: {}, // 分页配置\r\n            editConfig: {}, // 编辑配置\r\n            editRules: {}, // 校验规则\r\n            footerConfig: {}, // 表尾配置\r\n            dataConfig: {\r\n              dataSouceType: 'query'\r\n            },\r\n            subTabConfig: [],\r\n            defaultConfig: [] // 录入默认值\r\n          })\r\n        // menuguid: '123456'\r\n        }\r\n      })\r\n    },\r\n    onDeleteClick() {\r\n      let self = this\r\n      let ids = this.$refs.bsTableRef.selection.map((item, index) => {\r\n        return item.id\r\n      })\r\n      let menuguid = this.$refs.bsTableRef.selection[0].menuguid\r\n      this.menuguids[0] = menuguid\r\n      if (ids.length) {\r\n        self.$confirm('确定删除？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          self.$http\r\n            .del('mp-b-perm-service/v1/tableconf', {\r\n              mof_div_code: self.userInfo.province, // 区划\r\n              fiscalyear: self.userInfo.year, // 年份s\r\n              ids: ids,\r\n              menuguids: this.menuguids\r\n            })\r\n            .then((res) => {\r\n              if (res.rscode === '100000') {\r\n                self.$message({\r\n                  showClose: true,\r\n                  message: `选中的${ids.length}条数据已删除`,\r\n                  type: 'success'\r\n                })\r\n                self.refreshTable()\r\n                // resolve(self.generateCurTableConfDataMap(res.data))\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log(error)\r\n            })\r\n        }).catch(e => {\r\n          self.$message.success('取消删除成功')\r\n        })\r\n      }\r\n    },\r\n    onTableCellClick({\r\n      row,\r\n      rowIndex,\r\n      $rowIndex,\r\n      column,\r\n      columnIndex,\r\n      $columnIndex,\r\n      triggerRadio,\r\n      triggerCheckbox,\r\n      triggerTreeNode,\r\n      triggerExpandNode,\r\n      $event\r\n    }) {\r\n      // this.tableConfModalParams = this.curTableConfDatasMap[row.id]\r\n      // this.TableConfModalVisible = true\r\n    },\r\n    // 区划默认值\r\n    getProvince() {\r\n      let obj = {\r\n        value: this.userInfo.province,\r\n        label: this.userInfo.admdivname\r\n      }\r\n      let flag = false\r\n      this.tableColumnsConfig[0].editRender.options.forEach(item => {\r\n        if (item.value === this.userInfo.province) {\r\n          flag = true\r\n        }\r\n      })\r\n      if (!flag) {\r\n        this.tableColumnsConfig[0].editRender.options.push(obj)\r\n      }\r\n      this.tableColumnsConfig[0].editRender.defaultValue = this.userInfo.province\r\n    },\r\n    // 编辑的时候录入默认值有个默认id\r\n    editClosed({ row, column }) {\r\n      // enteringDefaultFlag标识，当改过为录入默认值后，再更改才影响id变化\r\n      if (row.type === 'enteringDefault') {\r\n        row.id = 'D9A0B58E5C2242F3860E6D8151C211B2'\r\n        row.id__viewSort = 'D9A0B58E5C2242F3860E6D8151C211B2'\r\n        this.enteringDefaultFlag = true\r\n      } else if (row.type !== 'enteringDefault' && this.enteringDefaultFlag === true) {\r\n        row.id = this.$ToolFn.utilFn.getUuid()\r\n        row.id__viewSort = row.id\r\n        this.enteringDefaultFlag = false\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.setLeftMenuTree()\r\n    if (this.$gloableToolFn.currentProvince === this.$gloableToolFn.FuJian) {\r\n      this.getProvince()\r\n    }\r\n  },\r\n  watch: {\r\n    tableConfModalVisible: {\r\n      handler(newval) {\r\n        // if (!newval) {\r\n        //   this.refreshTable()\r\n        // }\r\n      },\r\n      // deep: true,\r\n      immediate: true\r\n    },\r\n    formConfModalVisible: {\r\n      handler(newval) {\r\n        // if (!newval) {\r\n        //   this.refreshTable()\r\n        // }\r\n      },\r\n      // deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.left-tree-pane {\r\n  .mmc-title {\r\n    height: 47px;\r\n    padding: 7px 15px;\r\n    line-height: 31px;\r\n    color: #464c5b;\r\n    font-size: 16px;\r\n    box-sizing: border-box;\r\n    border-bottom: 1px solid #dce3f3;\r\n    background-color: #e3f2fe;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}