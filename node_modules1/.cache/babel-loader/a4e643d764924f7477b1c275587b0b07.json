{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Toolbar\\toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Toolbar\\toolbar.vue","mtime":1694505521679},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["defaultTabStatusConfig","defaultServerConfig","buttonsNum","api","name","props","isHide","type","Boolean","topTip","showZero","value","default","_default","tabStatusBtnConfig","Object","serverConfig","rightButtons","Array","tabStatusNumConfig","data","statusButtonsNums","leftVisible","tabStatusBtnConfigIn","_objectSpread","tabStatusNumConfigIn","serverConfigIn","tabList","curTabSelect","rButtonsInfo","rBtns","_toConsumableArray","rButtons","rButtonsMore","queryparams","loading","methods","initData","initTabStatusBtnConfig","initServerConfig","assign","buttons","curButton","buttonsInfo","code","limit","initTabStatusNumConfig","self","list","forEach","item","num","labelNum","concat","label","changeAside","$emit","deepCopy","obj","me","_typeof","newObj","key","hasOwnProperty","onTabClick","_this","changeBtns","$nextTick","resize","bsToolbarClickEvent","onClickBtn","callback","loadStatusBtns","isServer","getHttpData","_this2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","getToolbarData","then","res","rscode","dealDataAfterLoad","stop","resData","arguments","length","undefined","dealData","newStatusInfo","newStatusButtonInfo","create","statusInfo","statusButtonInfo","map","btn","statuscode","displaytitle","codeBak","push","keys","guid","tabStatusBtnConfigAjax","contentW","$refs","toolbarContent","offsetWidth","normalW","normal","preSlotW","extendPre","lastSlotW","extendLast","overage","dealRbuttons","btnNomalW","btnNomal","pop","unshift","newOverage","shift","created","mounted","window","addEventListener","beforeDestroy","removeEventListener","watch","val","handler","newValue","oldValue","JSON","stringify","deep","immediate","btns","flag","openQuerySeach"],"sources":["src/components/Toolbar/toolbar.vue"],"sourcesContent":["<!-- 状态按钮左右可滑动工具条组件  by comer -->\r\n<template>\r\n  <div class=\"boss-toolbar\">\r\n    <ul ref=\"toolbarContent\" class=\"boss-toolbar__content\">\r\n      <!--折叠&收起-->\r\n      <li v-if=\"!isHide\" ref=\"arrow\" class=\"toolbar-btns toolbar-arrow\">\r\n        <div class=\"toolbar-arrow__btn fn-inline\" @click=\"changeAside\">\r\n          <i v-if=\"leftVisible\" class=\"fn-inline base-font basetoggle-left\"></i>\r\n          <i v-if=\"!leftVisible\" class=\"fn-inline base-font basetoggle-right\"></i>\r\n        </div>\r\n      </li>\r\n\r\n      <!--状态按钮-->\r\n      <li\r\n        v-if=\"tabList.length\"\r\n        ref=\"normal\"\r\n        class=\"toolbar-btns toobar-status__buttons\"\r\n        :class=\"statusButtonsNums\"\r\n      >\r\n        <BsTab\r\n          type=\"button\"\r\n          :tab-list=\"tabList\"\r\n          show-num\r\n          is-tool-bar\r\n          :top-tip=\"topTip\"\r\n          :show-zero=\"showZero\"\r\n          :default-select=\"curTabSelect\"\r\n          @onTabClick=\"onTabClick\"\r\n        />\r\n      </li>\r\n\r\n      <!--右侧按钮组-->\r\n      <li class=\"toolbar-btns toobar-right__buttons\">\r\n        <!--前置按钮插槽组-->\r\n        <slot ref=\"extendPre\" name=\"preBtns\"></slot>\r\n        <div v-if=\"rButtons.length\" class=\"right-button__content Ttab-con button\">\r\n          <ul ref=\"btnNomal\">\r\n            <li\r\n              v-for=\"(item,index) in rButtons\"\r\n              :key=\"index\"\r\n              class=\"fn-inline pointer\"\r\n              @click.stop=\"onClickBtn(item)\"\r\n            >\r\n              <div :ref=\"`rBtn${index}`\" class=\"tab-li fn-inline olh\">\r\n                <span>{{ item.label }}</span>\r\n              </div>\r\n            </li>\r\n            <li v-if=\"rButtonsMore.length\" class=\"fn-inline pointer\">\r\n              <vxe-button ref=\"btnMore\" content=\"更多\">\r\n                <template v-slot:dropdowns>\r\n                  <div\r\n                    v-for=\"(item, index) in rButtonsMore\"\r\n                    :key=\"index\"\r\n                    @click.stop=\"onClickBtn(item)\"\r\n                  >\r\n                    <vxe-button type=\"text\" :content=\"item.label\" />\r\n                  </div>\r\n                </template>\r\n              </vxe-button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <!--后置按钮插槽组-->\r\n        <slot ref=\"extendLast\" name=\"lastBtns\"></slot>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  defaultTabStatusConfig,\r\n  defaultServerConfig,\r\n  buttonsNum\r\n} from './config/config'\r\nimport api from '@/api/components/test/toolbar/toolbar'\r\nexport default {\r\n  name: 'BsToolBar',\r\n  props: {\r\n    isHide: {\r\n      // 是否隐藏折叠按钮  默认不隐藏\r\n      type: Boolean\r\n    },\r\n    topTip: {\r\n      // 数字右上角提示\r\n      type: Boolean\r\n    },\r\n    showZero: {\r\n      // num为0时是否显示tip提示，默认不显示\r\n      type: Boolean\r\n    },\r\n    value: {\r\n      // 左侧是否折叠起来，默认不折叠\r\n      type: Boolean,\r\n      default() {\r\n        return true\r\n      }\r\n    },\r\n    tabStatusBtnConfig: {\r\n      // 左侧状态按钮，配置项\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    serverConfig: {\r\n      // api接口配置\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    rightButtons: {\r\n      // 右侧按钮组 切记：如果要使用自己的右侧按钮，而不随状态按钮切换而切换,记得将配置changeBtns改为false\r\n      type: Array,\r\n      default() {\r\n        return []\r\n      }\r\n    },\r\n    tabStatusNumConfig: {\r\n      // 状态按钮，数量配置\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      statusButtonsNums: 'toolbar-6__nums',\r\n      leftVisible: this.value,\r\n      tabStatusBtnConfigIn: { ...defaultTabStatusConfig },\r\n      tabStatusNumConfigIn: this.tabStatusNumConfig,\r\n      serverConfigIn: { ...defaultServerConfig },\r\n      tabList: [],\r\n      curTabSelect: {},\r\n      rButtonsInfo: {},\r\n      rBtns: [...this.rightButtons],\r\n      rButtons: [...this.rightButtons],\r\n      rButtonsMore: [],\r\n      queryparams: {},\r\n      loading: false\r\n    }\r\n  },\r\n  methods: {\r\n    // 初始化参数\r\n    initData() {\r\n      this.initTabStatusBtnConfig()\r\n      this.initServerConfig()\r\n    },\r\n\r\n    // 初始化按钮数据\r\n    initTabStatusBtnConfig() {\r\n      this.tabStatusBtnConfigIn = Object.assign(\r\n        {},\r\n        this.tabStatusBtnConfigIn,\r\n        this.tabStatusBtnConfig\r\n      )\r\n      this.tabList = this.tabStatusBtnConfigIn.buttons\r\n      this.curTabSelect = this.tabStatusBtnConfigIn.curButton\r\n      this.rButtonsInfo = this.tabStatusBtnConfigIn.buttonsInfo\r\n      this.rButtons = this.rButtonsInfo[this.curTabSelect.code] || []\r\n      this.statusButtonsNums =\r\n        buttonsNum[this.tabStatusBtnConfigIn.limit] || buttonsNum[6]\r\n    },\r\n\r\n    // 初始化api服务数据\r\n    initServerConfig() {\r\n      this.serverConfigIn = Object.assign(\r\n        {},\r\n        this.serverConfigIn,\r\n        this.serverConfig\r\n      )\r\n      this.queryparams = this.serverConfigIn.queryparams\r\n    },\r\n\r\n    // 初始化状态按钮label数量携带处理\r\n    initTabStatusNumConfig() {\r\n      let self = this\r\n      let list = [...this.tabList]\r\n      list.forEach((item) => {\r\n        let num = self.tabStatusNumConfigIn[item.code]\r\n        if (num) {\r\n          item.num = num\r\n          item.labelNum = `${item.label}(${num})`\r\n        } else {\r\n          item.num = 0\r\n          item.labelNum = item.label\r\n        }\r\n      })\r\n\r\n      this.tabList = [...list]\r\n\r\n      // let curNum = this.tabStatusNumConfigIn[this.curTabSelect.code]\r\n      // if (curNum) {\r\n      //   this.curTabSelect.label = `${this.curTabSelect.label}(${curNum})`\r\n      // }\r\n    },\r\n\r\n    // aside状态切换\r\n    changeAside() {\r\n      this.leftVisible = !this.leftVisible\r\n      this.$emit('input', this.leftVisible)\r\n      this.$emit('onAsideChange', this.leftVisible)\r\n    },\r\n\r\n    deepCopy(obj) {\r\n      // 深拷贝通用方法\r\n      // var new_arr = JSON.parse(JSON.stringify(arr)) // 不仅可拷贝数组还能拷贝对象（ 但不能拷贝函数）\r\n      // 只拷贝对象\r\n      let me = this\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      // 根据obj的类型判断是新建一个数组还是一个对象\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        // 遍历obj,并且判断是obj的属性才拷贝\r\n        if (obj.hasOwnProperty(key)) {\r\n          // 判断属性值的类型，如果是对象递归调用深拷贝\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n\r\n    // 状态按钮切换\r\n    onTabClick(obj) {\r\n      this.curTabSelect = obj\r\n      // 如果右侧按钮组需要随着状态按钮切换而切换，则切换右侧按钮组\r\n      if (this.tabStatusBtnConfigIn.changeBtns) {\r\n        this.rButtons = []\r\n        this.rButtonsMore = []\r\n        this.rButtons = this.deepCopy(this.rButtonsInfo[obj.code] || [])\r\n        this.$nextTick(() => {\r\n          this.resize()\r\n        })\r\n      }\r\n\r\n      this.bsToolbarClickEvent(obj)\r\n    },\r\n\r\n    // 右侧按钮组点击\r\n    onClickBtn(obj) {\r\n      // 按钮触发，事件回调\r\n      this.bsToolbarClickEvent(obj)\r\n    },\r\n\r\n    // 点击事件回调\r\n    bsToolbarClickEvent(obj) {\r\n      let self = this\r\n      let methods = this.tabStatusBtnConfigIn.methods\r\n      if (typeof obj.callback === 'function') {\r\n        // 方式一: 工具栏按钮点击事件回调\r\n        obj.callback(obj, self)\r\n      } else {\r\n        // 方式二: toolbar事件代理\r\n        typeof methods.bsToolbarClickEvent === 'function' &&\r\n          methods.bsToolbarClickEvent(obj, self)\r\n      }\r\n    },\r\n\r\n    // api 请求获取状态按钮数据\r\n    loadStatusBtns() {\r\n      if (this.serverConfigIn.isServer) {\r\n        this.getHttpData()\r\n      }\r\n    },\r\n\r\n    // 获取请求数据\r\n    async getHttpData() {\r\n      let self = this\r\n      if (this.loading) {\r\n        return\r\n      }\r\n      this.loading = true\r\n      // await this.$http[this.serverConfigIn.ajaxType](this.serverConfigIn.serverUri, this.queryparams)\r\n      //   .then(res => {\r\n      //     if (res.rscode === 200) {\r\n      //       self.dealDataAfterLoad(res.data)\r\n      //     }\r\n      //     self.loading = false\r\n      //   })\r\n      //   .catch(err => {\r\n      //     self.loading = false\r\n      //     console.log(err, '状态按钮接口异常')\r\n      //   })\r\n\r\n      await api.getToolbarData().then((res) => {\r\n        if (res.rscode === 200) {\r\n          self.dealDataAfterLoad(res.data)\r\n        }\r\n      })\r\n    },\r\n\r\n    // 加载完后处理数据\r\n    dealDataAfterLoad(resData = {}) {\r\n      this.dealData(resData)\r\n      this.tabList = this.tabStatusBtnConfigIn.buttons || []\r\n      this.curTabSelect = this.tabStatusBtnConfigIn.curButton\r\n      this.rButtonsInfo = this.tabStatusBtnConfigIn.buttonsInfo\r\n      this.rButtons = this.rButtonsInfo[this.curTabSelect.code] || []\r\n    },\r\n\r\n    // 处理数据，赋值给tabStatusBtnConfigIn\r\n    dealData(resData = {}) {\r\n      let newStatusInfo = []\r\n      let newStatusButtonInfo = Object.create(null)\r\n      const { statusInfo, statusButtonInfo } = resData\r\n      statusInfo.map((item) => {\r\n        let btn = {\r\n          code: item.statuscode,\r\n          label: item.displaytitle,\r\n          codeBak: item.code\r\n        }\r\n\r\n        newStatusInfo.push(Object.assign({}, item, btn))\r\n      })\r\n\r\n      Object.keys(statusButtonInfo).forEach((key) => {\r\n        let btn = statusButtonInfo[key] || []\r\n        btn.forEach((item) => {\r\n          item.codeBak = item.code\r\n          item.code = item.guid\r\n          item.label = item.displaytitle\r\n        })\r\n\r\n        newStatusButtonInfo[key] = [...btn]\r\n      })\r\n\r\n      const tabStatusBtnConfigAjax = {\r\n        buttons: newStatusInfo,\r\n        buttonsInfo: newStatusButtonInfo,\r\n        curButton: newStatusInfo[0]\r\n      }\r\n\r\n      this.tabStatusBtnConfigIn = Object.assign(\r\n        {},\r\n        this.tabStatusBtnConfigIn,\r\n        tabStatusBtnConfigAjax\r\n      )\r\n    },\r\n    resize() {\r\n      const contentW =\r\n        (this.$refs.toolbarContent && this.$refs.toolbarContent.offsetWidth) || 0\r\n      // const arrowW = (this.$refs.arrow && this.$refs.arrow.offsetWidth) || 0\r\n      const normalW = (this.$refs.normal && this.$refs.normal.offsetWidth) || 0\r\n      const preSlotW =\r\n        (this.$refs.extendPre && this.$refs.extendPre.offsetWidth) || 0\r\n      const lastSlotW =\r\n        (this.$refs.extendLast && this.$refs.extendLast.offsetWidth) || 0\r\n      let overage = contentW - normalW - 180 - preSlotW - lastSlotW\r\n      this.dealRbuttons(overage)\r\n    },\r\n    dealRbuttons(overage) {\r\n      let self = this\r\n      const btnNomalW =\r\n        (this.$refs.btnNomal && this.$refs.btnNomal.offsetWidth - 74) || 0 // 右侧按钮组，去除更多剩余按钮的宽度\r\n      const preSlotW =\r\n        (this.$refs.extendPre && this.$refs.extendPre.offsetWidth) || 0\r\n      const lastSlotW =\r\n        (this.$refs.extendLast && this.$refs.extendLast.offsetWidth) || 0\r\n      // console.log('55', overage, btnNomalW)\r\n      if (btnNomalW > overage) {\r\n        // 放不下\r\n        if (this.rButtons.length) {\r\n          const btn = this.rButtons.pop()\r\n          this.rButtonsMore.unshift(btn)\r\n          let newOverage = btnNomalW - 74 - preSlotW - lastSlotW // 右侧按钮组,去除更多剩余空间\r\n          this.$nextTick(() => {\r\n            self.dealRbuttons(newOverage)\r\n          })\r\n        }\r\n      }\r\n\r\n      if (overage > btnNomalW && overage - btnNomalW > 150) {\r\n        if (this.rButtonsMore.length) {\r\n          const btn = this.rButtonsMore.shift()\r\n          this.rButtons.push(btn)\r\n          let newOverage = overage - 74\r\n          this.$nextTick(() => {\r\n            self.dealRbuttons(newOverage)\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {},\r\n  mounted() {\r\n    window.addEventListener('resize', this.resize)\r\n    this.initData()\r\n    this.loadStatusBtns()\r\n    this.initTabStatusNumConfig()\r\n    this.resize()\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('resize', this.resize)\r\n  },\r\n  watch: {\r\n    value(val) {\r\n      this.leftVisible = val\r\n    },\r\n    tabStatusBtnConfig: {\r\n      handler(newValue, oldValue) {\r\n        if (JSON.stringify(newValue) !== JSON.stringify(oldValue)) {\r\n          this.initTabStatusBtnConfig()\r\n        }\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    tabStatusNumConfig: {\r\n      handler(newValue, oldValue) {\r\n        this.tabStatusNumConfigIn = newValue\r\n        this.initTabStatusNumConfig()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    serverConfig: {\r\n      handler(newValue, oldValue) {\r\n        this.initServerConfig()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    rightButtons: {\r\n      handler(newValue, oldValue) {\r\n        let btns = newValue || []\r\n        this.rBtns = [...btns]\r\n        this.rButtons = [...btns]\r\n      },\r\n      immediate: true\r\n    },\r\n    queryparams: {\r\n      handler(newValue, oldValue) {\r\n        const flag = JSON.stringify(newValue) === JSON.stringify(oldValue)\r\n        if (this.serverConfigIn.openQuerySeach && !flag && oldValue) {\r\n          this.loadStatusBtns()\r\n        }\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scope>\r\n.boss-toolbar {\r\n  position: relative;\r\n  padding: 5px 5px;\r\n  background: var(--hightlight-color);\r\n  box-sizing: border-box;\r\n  .Ttab-con .button li {\r\n    width: 90px;\r\n  }\r\n  .Ttab-con {\r\n    .tab-li .fn-inline {\r\n      width: 74px;\r\n      max-width: 74px;\r\n    }\r\n  }\r\n  .boss-toolbar__content {\r\n    user-select: none;\r\n    display: flex;\r\n    white-space: nowrap;\r\n    position: relative;\r\n    font-size: 0;\r\n    .li {\r\n      margin: 0;\r\n      padding: 0;\r\n      list-style: none;\r\n    }\r\n    .toolbar-btns {\r\n      padding: 0;\r\n      min-width: 28px;\r\n      max-height: 34px;\r\n      text-align: center;\r\n      vertical-align: top;\r\n      cursor: pointer;\r\n      .tab-con-list li {\r\n        position: relative;\r\n      }\r\n      .tab-li {\r\n        max-width: 70px;\r\n        .label-num__topTip {\r\n          position: absolute;\r\n          color: white !important;\r\n          font-size: 12px;\r\n          background-color: red;\r\n          height: 20px;\r\n          padding: 0 8px;\r\n          line-height: 20px;\r\n          right: -6%;\r\n          top: -8px;\r\n          z-index: 99;\r\n          text-align: center;\r\n          border-radius: 24px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .toolbar-arrow {\r\n       margin: 0 30px 0 0;\r\n       width: 90px;\r\n      .toolbar-arrow__btn {\r\n        cursor: pointer;\r\n        color: #f83704;\r\n        width: 36px;\r\n        height: 36px;\r\n        background: #fff;\r\n        width: 36px;\r\n        height: 36px;\r\n        flex-shrink: 0;\r\n        text-align: center;\r\n        border: solid 1px #f83704;\r\n        box-sizing: border-box;\r\n      }\r\n      .base-font {\r\n        font-size: 24px;\r\n        font-style: normal;\r\n      }\r\n    }\r\n    .toolbar-2__nums {\r\n      width: 290px;\r\n    }\r\n    .toolbar-3__nums {\r\n      width: 380px;\r\n    }\r\n    .toolbar-4__nums {\r\n      width: 480px;\r\n    }\r\n    .toolbar-5__nums {\r\n      width: 580px;\r\n    }\r\n    .toolbar-6__nums {\r\n      width: 675px;\r\n    }\r\n\r\n    .toobar-status__buttons {\r\n      // width:650px;\r\n      flex-shrink: 0;\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      .Ttab-con {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    .toobar-right__buttons {\r\n      margin-right: -3px;\r\n      flex-grow: 1;\r\n      display: inline-flex;\r\n      align-items: center;\r\n      justify-content: flex-end;\r\n      .Ttab-con {\r\n        padding: 0px;\r\n      }\r\n      .right-button__content {\r\n        max-width: 100%;\r\n        .tab-li {\r\n          max-height: 32px;\r\n          padding: 0 14px;\r\n        }\r\n        .vxe-button--dropdown {\r\n          margin-left: 3px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}