{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Table\\tool\\util.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Table\\tool\\util.js","mtime":1694505521553},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["BigNumber","xeUtils","getbasicDataType","obj","Object","prototype","toString","call","slice","isEmptyObj","keys","length","hyphenate","str","replace","toLowerCase","hyphenToCamel","$0","$1","$2","toUpperCase","smallHump","$3","muchfieldarrsort","sarr","sort","compare","a","b","c","arguments","undefined","i","listToTree","tempData","idkey","pidKey","map","forEach","item","children","treeData","mapItem","push","listToTreeByNestCodeLength","data","nestCodeKey","pnestCodeKey","deepCopy","me","newObj","_typeof","Array","index","key","Map","mapV","mapK","set","Set","setV","setI","add","toNumberLocaleString","num","reduceCalc","arr","cb","reduce","bind","mathPow10","n","Number","padEnd","accurateJiafa","arg1","arg2","isNaN","plus","toNumber","accurateJianfa","minus","accurateChengFa","mul","accurateChuFa","precision","console","error","div","accurateFixed","number","val","toFixed","transToNumberLocalString","digits","result","parseInt","indexOf","toLocaleString","style","minimumIntegerDigit","minimumFractionDigits","maximumFractionDigits","minimumSignificantDigits","maximumSignificantDigits","numberArr","split","filter","RegExp","test","join","numberArr1","concat","_toConsumableArray","fill","transToNumber","e","transInputToNumber","maxDigits","String","substr","digitUppercase","money","type","cnNums","cnIntRadice","cnIntUnits","cnDecUnits","cnInteger","cnIntLast","maxNum","integerNum","decimalNum","parts","chineseStr","Math","abs","zeroCount","IntLen","p","q","m","decLen","performGradedSummarySingData","gradedCalcFields","self","isArray","preResult","next","curItemGradedSummaryValue","parseFloat","performGradedSummaryData","each","object","callback","constructor","NodeList","every","v","assign","dist","hasOwnProperty","deepAssignOne","src","level","maxLevel","value","deepAssign","arg","rst","getErrorKey","valikey","list","log","debounceItemChange","debounce","delay","timer","clearTimeout","setTimeout","formatFn","format","otheDataObj","regR","rowsKey","match","keyIndex","indexkey","arrSortGloabal","property","order","localeCompare"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/Table/tool/util.js"],"sourcesContent":["\r\n// import bigDecimal from './js-big-decimal.js'\r\n// let bigDecimalCall = bigDecimal\r\n// console.log(bigNumberCall)\r\nimport BigNumber from './big.js'\r\nimport xeUtils from 'xe-utils'\r\nexport default {\r\n  getbasicDataType(obj) {\r\n    // 获取数据类型\r\n    return Object.prototype.toString.call(obj).slice(8, -1)\r\n  },\r\n  isEmptyObj(obj) { // 空对象\r\n    return (this.getbasicDataType(obj) === 'object' && Object.keys(obj).length) || this.getbasicDataType(obj) === null\r\n  },\r\n  hyphenate(str) {\r\n    // 小驼峰转成连字符\r\n    return str.replace(/\\B([A-Z])/g, '-$1').toLowerCase()\r\n  },\r\n  hyphenToCamel(str) { // 下划线转小驼峰\r\n    return str.replace(/[A-Za-z]{1,}/ig, function ($0, $1, $2) {\r\n      return $0.toLowerCase()\r\n    }).replace(/([^_])(?:_+([^_]))/g, function ($0, $1, $2) {\r\n      return $1 + $2.toUpperCase()\r\n    })\r\n  },\r\n  smallHump(str) {\r\n    // 连字符转成小驼峰\r\n    return str.replace(/(\\w*)-(\\w*)/g, function ($1, $2, $3) {\r\n      return $2 + $3[0].toUpperCase() + $3.slice(1)\r\n    })\r\n  },\r\n  muchfieldarrsort(sarr, keys) {\r\n    // 多字段排序s\r\n    /** sarr：原始数组。 keys:要排序的多个字段,必须为数组 */\r\n    return sarr.sort(compare)\r\n    function compare(a, b, c = keys[0], i = 0) { // 按合并类型递归排序\r\n      // let c = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : groupfieldarr[0];\r\n      // let i = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\r\n      if (a[c] === b[c]) { // 等于的话进行判断是否还有后续字段需要排序，没有则返回0；有则递归进行后续字段排序处理。\r\n        if (i === (keys.length - 1)) { // 没有后续字段\r\n          i = 0\r\n          return 0\r\n        }\r\n        i += 1\r\n        return compare(a, b, keys[i], i) // 递归排序后续字段\r\n      } else if (a[c] > b[c]) { // 大于返回1\r\n        return 1\r\n      } else { // 小于返回-1\r\n        return -1\r\n      }\r\n    }\r\n  },\r\n  listToTree(tempData, idkey = 'id', pidKey = 'pid') { // 平行数据 idkey和pidKey 生成嵌套数据\r\n    let map = {}\r\n    tempData.forEach(function (item) {\r\n      map[item[idkey]] = item\r\n      item.children = []\r\n    })\r\n    let treeData = []\r\n    tempData.forEach(item => {\r\n      const mapItem = map[item[pidKey]]\r\n      if (mapItem) {\r\n        (mapItem.children || (mapItem.children = [])).push(item)\r\n      } else {\r\n        treeData.push(item)\r\n      }\r\n    })\r\n    return treeData\r\n  },\r\n  listToTreeByNestCodeLength(data, nestCodeKey) { // 平行数据 根据nestCodeKey 长度 生成嵌套数据\r\n    let map = {} // 构建map\r\n    data.forEach(function (item) {\r\n      map[item[nestCodeKey]] = item\r\n      item.children = []\r\n    })\r\n    let treeData = []\r\n    data.forEach(item => {\r\n      let pnestCodeKey = item[nestCodeKey]\r\n      pnestCodeKey = pnestCodeKey.slice(0, pnestCodeKey.length - 1)\r\n      let mapItem = map[item[pnestCodeKey]]\r\n      while (!mapItem && pnestCodeKey !== '') {\r\n        pnestCodeKey = pnestCodeKey.slice(0, pnestCodeKey.length - 1)\r\n        mapItem = map[pnestCodeKey]\r\n      }\r\n      if (mapItem) {\r\n        (mapItem.children || (mapItem.children = [])).push(item)\r\n      } else {\r\n        treeData.push(item)\r\n      }\r\n    })\r\n    return treeData\r\n  },\r\n  deepCopy(obj) {\r\n    // 深拷贝通用方法\r\n    let me = this\r\n    let newObj = null\r\n    if (typeof obj !== 'object' || obj === null) {\r\n      newObj = obj\r\n    } else {\r\n      if (obj instanceof Array) {\r\n        newObj = obj.map((item, index) => {\r\n          return me.deepCopy(item)\r\n        })\r\n      } else if (obj instanceof Object) {\r\n        newObj = {}\r\n        for (let key in obj) {\r\n          newObj[key] = me.deepCopy(obj[key])\r\n        }\r\n      } else if (obj instanceof Map) {\r\n        newObj = new Map()\r\n        obj.keys().forEach((mapV, mapK) => {\r\n          newObj.set(mapK, me.deepCopy(mapV))\r\n        })\r\n      } else if (obj instanceof Set) {\r\n        newObj = new Map()\r\n        Set.forEach((setV, setI) => {\r\n          newObj.add(me.deepCopy(setV))\r\n        })\r\n      } else {\r\n      }\r\n      // eslint-disable-next-line no-proto\r\n      // newObj.__proto__ = obj.__proto__\r\n    }\r\n    return newObj\r\n  },\r\n  toNumberLocaleString(num) {\r\n    return (num + '').replace(/(\\d{1,3})(?=(\\d{3})+(?:$|\\.))/g, '$1,').replace(/(,$)/, '')\r\n  },\r\n  reduceCalc(arr, cb) {\r\n    return arr.reduce(cb.bind(this))\r\n  },\r\n  mathPow10(n) { // 10的N次方\r\n    if (n >= 0) {\r\n      return Number('1'.padEnd(+n + 1, 0))\r\n    } else {\r\n      return 1 / Number('1'.padEnd(-n + 1, 0))\r\n    }\r\n  },\r\n  accurateJiafa(arg1, arg2) { // 精确加法\r\n    arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n    arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n    return new BigNumber(arg1).plus(new BigNumber(arg2)).toNumber()\r\n    // return bigDecimal.add(arg1, arg2)\r\n    // let r1, r2, m\r\n    // try { r1 = arg1.toString().split('.')[1].length } catch (e) { r1 = 0 }\r\n    // try { r2 = arg2.toString().split('.')[1].length } catch (e) { r2 = 0 }\r\n    // m = this.mathPow10(Math.max(r1, r2))\r\n    // return (arg1 * m + arg2 * m) / m\r\n  },\r\n  accurateJianfa(arg1, arg2) { // 精确减法\r\n    arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n    arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n    return new BigNumber(arg1).minus(new BigNumber(arg2)).toNumber()\r\n    // return bigDecimal.subtract(arg1, arg2)\r\n    // let r1, r2, m, n\r\n    // try { r1 = arg1.toString().split('.')[1].length } catch (e) { r1 = 0 }\r\n    // try { r2 = arg2.toString().split('.')[1].length } catch (e) { r2 = 0 }\r\n    // m = this.mathPow10(Math.max(r1, r2))\r\n    // // last modify by deeka\r\n    // // 动态控制精度长度\r\n    // n = (r1 >= r2) ? r1 : r2\r\n    // return this.accurateFixed(((arg1 * m - arg2 * m) / m), n)\r\n  },\r\n  accurateChengFa(arg1, arg2) { // 精确乘法\r\n    arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n    arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n    return new BigNumber(arg1).mul(new BigNumber(arg2)).toNumber()\r\n    // // return bigDecimal.multiply(arg1, arg2)\r\n    // let m = 0; let s1 = arg1.toString(); let s2 = arg2.toString()\r\n    // try { m += s1.split('.')[1].length } catch (e) { }\r\n    // try { m += s2.split('.')[1].length } catch (e) { }\r\n    // return Number(s1.replace('.', '')) * Number(s2.replace('.', '')) / this.mathPow10(m)\r\n  },\r\n  accurateChuFa(arg1 = 0, arg2 = 0, precision = 8) { // 精确除法\r\n    arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n    arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n    if (!arg2) {\r\n      console.error('除数不能为0')\r\n      return ''\r\n    } else {\r\n      return new BigNumber(arg1).div(new BigNumber(arg2)).toNumber()\r\n    }\r\n\r\n    // // return bigDecimal.divide(arg1, arg2, precision)\r\n    // let t1 = 0; let t2 = 0; let r1; let r2\r\n    // try { t1 = arg1.toString().split('.')[1].length } catch (e) { }\r\n    // try { t2 = arg2.toString().split('.')[1].length } catch (e) { }\r\n    // r1 = Number(arg1.toString().replace('.', ''))\r\n    // r2 = Number(arg2.toString().replace('.', ''))\r\n    // return this.accurateChengFa(r1 / r2, this.mathPow10(t2 - t1))\r\n  },\r\n  // accurateFixed(number, n) { // 保留小数位数(四舍五入)\r\n  //   // return bigDecimal.round(number, n)\r\n  //   n = n ? parseInt(n) : 0\r\n  //   if (n <= 0) {\r\n  //     return String(Math.round(number))\r\n  //   } else {\r\n  //     number = this.transInputToNumber(number * this.mathPow10(n) / this.mathPow10(n), n)\r\n  //   }\r\n  //   return String(number)\r\n  // },\r\n  // accurateFixed(number, n) { // 保留小数位数(截取)\r\n  //   let numberArr = this.transInputToNumber(number, n).split('.')\r\n  //   if (n > 0) {\r\n  //     return numberArr[0] + (numberArr[1] ? ('.' + numberArr[1].slice(0, n)) : '')\r\n  //   } else {\r\n  //     return numberArr[0] || ''\r\n  //   }\r\n  // },\r\n  accurateFixed(number, n) { // 保留小数位数(四舍五入)\r\n    const val = xeUtils.toFixed(number, n)\r\n    return val || ''\r\n  },\r\n  transToNumberLocalString(number, digits = 0) {\r\n    // 返回逗号隔开千分位的数字\r\n    let result = ''\r\n    digits = parseInt(digits)\r\n    // number = Number(number).toFixed(digits)\r\n    number = this.accurateFixed(number, digits)\r\n    if (isNaN(number)) {\r\n      number = this.accurateFixed('', digits)\r\n    }\r\n    if (number.indexOf('-') === 0) {\r\n      result = '-'\r\n    }\r\n    number = Number(number).toLocaleString('zh-Hans-CN', {\r\n      style: 'decimal',\r\n      minimumIntegerDigit: 1,\r\n      minimumFractionDigits: 1,\r\n      maximumFractionDigits: 20,\r\n      minimumSignificantDigits: 1,\r\n      maximumSignificantDigits: 21\r\n    })\r\n    let numberArr = number.split('').filter((item, index) => {\r\n      return new RegExp('^[0-9.,]$').test(item)\r\n    }).join('').split('.')\r\n    if (numberArr[0] === '') {\r\n      numberArr[0] = '0'\r\n    }\r\n    if (digits === 0) {\r\n      numberArr = [numberArr[0], (numberArr[1] ? '.' + numberArr[1] : '')]\r\n      return result + numberArr[0] + numberArr[1]\r\n    } else {\r\n      let numberArr1 = numberArr[1] ? numberArr[1].split('') : []\r\n      numberArr1 = [...numberArr1, ...new Array(digits).fill('0')]\r\n      numberArr1.length = digits\r\n      numberArr = [numberArr[0], '.', ...numberArr1]\r\n      return result + numberArr.join('')\r\n    }\r\n  },\r\n  transToNumber(number, digits = 0) {\r\n    //  任意字符过滤为数字\r\n    digits = isNaN(parseInt(digits)) ? 0 : parseInt(digits)\r\n    try {\r\n      number = this.accurateFixed(number, digits)\r\n      if (isNaN(number)) {\r\n        number = this.accurateFixed('', digits)\r\n      }\r\n      return number\r\n    } catch (e) {\r\n      return ''\r\n    }\r\n  },\r\n  transInputToNumber(number, maxDigits) {\r\n    let result = ''\r\n    number = String(number)\r\n    if (number.indexOf('-') === 0) {\r\n      result = '-'\r\n    }\r\n    let numberArr = number.split('').filter((item, index) => {\r\n      return new RegExp('^[0-9.]$').test(item)\r\n    }).join('').split('.')\r\n\r\n    if (numberArr[0] === '' && numberArr[1] !== undefined) {\r\n      numberArr[0] = '0'\r\n    }\r\n    if (numberArr.length > 1) {\r\n      if (maxDigits >= 0) {\r\n        numberArr[1] = numberArr[1].substr(0, maxDigits)\r\n      }\r\n      numberArr = [numberArr[0], '.', numberArr[1]]\r\n    } else {\r\n    }\r\n    return result + numberArr.join('')\r\n  },\r\n  digitUppercase(money, type = 'money') {\r\n    // 汉字的数字\r\n    // digitUppercase(-111111111111111.1111, 'number') \"负一百一十一万一千一百一十一亿一千一百一十一万一千一百一十一点一一\"\r\n    // digitUppercase(-111111111111111.1111) \"欠壹佰壹拾壹万壹仟壹佰壹拾壹亿壹仟壹佰壹拾壹万壹仟壹佰壹拾壹元壹角壹分\"\r\n    let cnNums = type === 'number' ? ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九', '十'] : ['零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖']\r\n    // 基本单位\r\n    let cnIntRadice = type === 'number' ? ['', '十', '百', '千'] : ['', '拾', '佰', '仟']\r\n    // 对应整数部分扩展单位\r\n    let cnIntUnits = type === 'number' ? ['', '万', '亿', '万'] : ['', '万', '亿', '万']\r\n    // 对应小数部分单位\r\n    let cnDecUnits = type === 'number' ? ['', '', '', ''] : ['角', '分', '毫', '厘']\r\n    // 整数金额时后面跟的字符\r\n    let cnInteger = type === 'number' ? '' : '整'\r\n    // 整型完以后的单位\r\n    let cnIntLast = type === 'number' ? '' : '元'\r\n    // 最大处理的数字\r\n    let maxNum = 999999999999999.9999\r\n    // 金额整数部分\r\n    let integerNum\r\n    // 金额小数部分\r\n    let decimalNum\r\n    // 输出的中文金额字符串\r\n    // 分离金额后用的数组，预定义\r\n    let parts\r\n    let chineseStr = money < 0 ? type === 'number' ? '负' : '欠' : ''\r\n    money = (money + '').split('').filter((item, index) => {\r\n      return new RegExp('^[0-9.]$').test(item)\r\n    }).join('')\r\n    if (money === '') { return '' }\r\n    money = Math.abs(money) + ''\r\n    if (money >= maxNum) {\r\n      // 超出最大处理数字\r\n      return ''\r\n    }\r\n    if (money === 0) {\r\n      chineseStr = chineseStr + (cnNums[0] + cnIntLast + cnInteger)\r\n      return chineseStr\r\n    }\r\n    // 转换为字符串\r\n    if (money.indexOf('.') === -1) {\r\n      integerNum = money\r\n      decimalNum = ''\r\n    } else {\r\n      parts = money.split('.')\r\n      integerNum = parts[0]\r\n      decimalNum = parts[1].substr(0, 4)\r\n    }\r\n    // 获取整型部分转换\r\n    if (parseInt(integerNum, 10) > 0) {\r\n      let zeroCount = 0\r\n      let IntLen = integerNum.length\r\n      for (let i = 0; i < IntLen; i++) {\r\n        let n = integerNum.substr(i, 1)\r\n        let p = IntLen - i - 1\r\n        let q = p / 4\r\n        let m = p % 4\r\n        if (n === '0') {\r\n          zeroCount++\r\n        } else {\r\n          if (zeroCount > 0) {\r\n            chineseStr += cnNums[0]\r\n          }\r\n          // 归零\r\n          zeroCount = 0\r\n          chineseStr += cnNums[parseInt(n)] + cnIntRadice[m]\r\n        }\r\n        if (m === 0 && zeroCount < 4) {\r\n          chineseStr += cnIntUnits[q]\r\n        }\r\n      }\r\n      chineseStr += cnIntLast\r\n    }\r\n    // 小数部分\r\n    if (decimalNum !== '') {\r\n      chineseStr = chineseStr + (type === 'number' ? '点' : '')\r\n      let decLen = decimalNum.length\r\n      for (let i = 0; i < decLen; i++) {\r\n        let n = decimalNum.substr(i, 1)\r\n        if (n !== '0') {\r\n          chineseStr += cnNums[Number(n)] + cnDecUnits[i]\r\n        }\r\n      }\r\n    }\r\n    if (chineseStr === '') {\r\n      chineseStr += cnNums[0] + cnIntLast + cnInteger\r\n    } else if (decimalNum === '') {\r\n      chineseStr += cnInteger\r\n    }\r\n    return chineseStr\r\n  },\r\n  performGradedSummarySingData(obj, gradedCalcFields) { // 分级汇总单条数据计算\r\n    let self = this\r\n    if (Array.isArray(obj.children) && obj.children.length) {\r\n      gradedCalcFields.forEach((key) => {\r\n        obj[key] = obj.children.reduce((preResult, next) => {\r\n          let curItemGradedSummaryValue = 0\r\n          if (Array.isArray(next.children) && next.children.length) {\r\n            curItemGradedSummaryValue = parseFloat(self.performGradedSummarySingData(next, gradedCalcFields)[key])\r\n          } else {\r\n            curItemGradedSummaryValue = parseFloat(next[key])\r\n          }\r\n          return preResult + (isNaN(curItemGradedSummaryValue) ? 0 : curItemGradedSummaryValue)\r\n        }, 0)\r\n      })\r\n    }\r\n    return obj\r\n  },\r\n  performGradedSummaryData(data, gradedCalcFields) { // 数组分级汇总计算\r\n    let self = this\r\n    data.forEach((item) => {\r\n      self.performGradedSummarySingData(item, gradedCalcFields)\r\n    })\r\n    return data\r\n  },\r\n  each(object, callback) {\r\n    /* js原生each方法 */\r\n    let type = (function (obj) {\r\n      switch (obj.constructor) {\r\n        case Object:\r\n          return 'Object'\r\n        case Array:\r\n          return 'Array'\r\n\r\n        case NodeList:\r\n          return 'NodeList'\r\n        default:\r\n          return 'null'\r\n      }\r\n    })(object)\r\n    // 为数组或类数组时, 返回: index, value\r\n    if (type === 'Array' || type === 'NodeList') {\r\n      // 由于存在类数组NodeList, 所以不能直接调用every方法\r\n      [].every.call(object, function (v, i) {\r\n        return callback.call(v, i, v) !== false\r\n      })\r\n    } else if (type === 'Object') {\r\n      // 为对象格式时,返回:key, value\r\n      for (let i in object) {\r\n        if (callback.call(object[i], i, object[i]) === false) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n  },\r\n  assign(dist) { // 表层合并\r\n    [...arguments].slice(1).forEach((obj) => {\r\n      for (var key in obj) {\r\n        if (obj.hasOwnProperty(key) && key !== 'constructor' && obj[key] !== undefined) {\r\n          dist[key] = obj[key]\r\n        }\r\n      }\r\n    })\r\n    return dist\r\n  },\r\n  deepAssignOne(dist, src, level = 0, maxLevel = 5) { // 深度合并一个\r\n    let self = this\r\n    for (var key in src) {\r\n      if (src.hasOwnProperty(key)) {\r\n        var value = src[key]\r\n        if (this.getbasicDataType(value) === 'Object') {\r\n          if (this.getbasicDataType(dist[key]) !== 'Object') {\r\n            dist[key] = {}\r\n          }\r\n          if (level < maxLevel) {\r\n            self.deepAssignOne(dist[key], value, level + 1, maxLevel)\r\n          } else {\r\n            dist[key] = src[key]\r\n          }\r\n        } else if (Array.isArray(value)) {\r\n          dist[key] = []\r\n          dist[key] = dist[key].concat(value)\r\n        } else if (value !== undefined) {\r\n          dist[key] = value\r\n        }\r\n      }\r\n    }\r\n  },\r\n  deepAssign() { // // 深度合并多个\r\n    let self = this\r\n    let arg = [...arguments]\r\n    var rst = arg[0]\r\n    arg.slice(1).forEach((src) => {\r\n      self.deepAssignOne(rst, src)\r\n    })\r\n    return rst\r\n  },\r\n  getErrorKey(data, key, valikey = (key) => { return true }, map = {}, list = []) { // 金典递归来获取数据里的重复key\r\n    let self = this\r\n    data.forEach((item, index) => {\r\n      if (!map[item[key]] && item[key] && valikey(item[key])) {\r\n        map[item[key]] = item\r\n      } else {\r\n        console.log('存在错误key的集合为', item, item[key])\r\n        list.push(item)\r\n        if (map[item[key]]) {\r\n          list.push(map[item[key]])\r\n        }\r\n      }\r\n      if (Array.isArray(item.children) && item.children.length) {\r\n        self.getErrorKey(item.children, key, valikey, map, list)\r\n      }\r\n    })\r\n    return list\r\n  },\r\n  debounceItemChange: (function (debounce) {\r\n    return debounce(1000)\r\n  })(function (delay) {\r\n    // 利用闭包保存定时器\r\n    let timer = null\r\n    return function (cb) {\r\n      // 在规定时间内再次触发会先清除定时器后再重设定时器\r\n      clearTimeout(timer)\r\n      timer = setTimeout(function () {\r\n        cb()\r\n      }, delay)\r\n    }\r\n  }),\r\n  formatFn(format, obj, otheDataObj) {\r\n    let regR = new RegExp('({[a-zA-Z0-9_]*})', 'ig')\r\n    let rowsKey = format.match(regR).map((key, keyIndex) => {\r\n      return key.replace(/{|}/gi, '')\r\n    })\r\n    console.log(rowsKey)\r\n    rowsKey.map((key, indexkey) => {\r\n      format = format.replace(new RegExp('{' + key + '}', 'ig'), obj[key] || (otheDataObj && otheDataObj[key]) || '')\r\n    })\r\n    return format\r\n  },\r\n  arrSortGloabal(data, property, type, order = 'asc') {\r\n    // 通用 排序\r\n    data.sort(function (a, b) {\r\n      if (order === 'asc') {\r\n        if (type === 'number') {\r\n          return a[property] - b[property]\r\n        }\r\n        return (String(a[property])).localeCompare(String(b[property]))\r\n      } else {\r\n        if (type === 'number') {\r\n          return b[property] - a[property]\r\n        }\r\n        return (String(b[property])).localeCompare(String(a[property]))\r\n      }\r\n    })\r\n    return data\r\n  }\r\n}\r\n"],"mappings":"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"}]}