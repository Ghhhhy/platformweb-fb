{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableBak\\export\\export\\export.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableBak\\export\\export\\export.js","mtime":1694505521584},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["XlsxTool","FileSaver","Export","gloabelConfig","arguments","length","undefined","_classCallCheck","xlsx","window","aTag","document","createElement","exportHistory","exportDefaultConfig","saveType","fileName","dataType","isExportHead","isExportOnlySourceField","isExportOnlyViewTitle","isExportFooter","isExportOriginalData","isExportData","columns","datas","selection","isExportTree","index","ignoreColsTypes","viewValueFormat","value","row","column","footerMethods","_ref","data","map","columnIndex","columnIndexText","combinedType","Array","isArray","indexOf","result","item","field","parseFloat","toString","split","join","isNaN","reduce","prev","next","toFixed","e","Object","assign","_createClass","key","exportExcel","curUserConfig","context","cb","init","generateExportRowsMap","curExportConfig","generateExportSourceField","generateExportViewDataSource","generateExportOriginalDataSource","exportDownload","Xlsx","downloadCsv","obj","headerRows","dataColMap","headerRowsMap","defaultViewValueFormat","File","push","exportConfig","exportDataSource","reverse","slice","setExportColums","self","filter","type","unshift","title","curRowIndex","pcCount","forEach","rowConlum","children","render","editRender","cellRender","contentRender","name","options","replace","Number","toLocaleString","vxeCheckboxValue","label","props","multiple","selectValue","generateVisibleHeaderRowsMap","i","sheetVisibleData","addRow","sheetFieldData","addSheet","newrow","cell","addCell","hMerge","vMerge","generateCellVisibletitleStyle","riverGenerateExportNestedHeader","setSheetCol","generateExportViewDataBody","generateExportViewDatafooter","sheet","_this","cols","col","colIndex","width","getColWidth","max","text","parseInt","Math","ceil","getStrByte","str","arr","len","count","s","escape","console","log","sheetOriginalData","generateExportOriginalDataHeader","generateExportOriginalDataBody","pCell","cell0","generateCurNestedHeaderCell","curRows","_this$getFloorData","getFloorData","floorLength","cellSing","supplementHeaderVMergeCells","treeData","floorCols","each","floor","pRowIndex","rowIndex","seqIndex","generateCellViewValue","footData","generateFooterCellViewValue","cells","getViewCellValue","generateCellViewValueStyle","style","align","indent","shrinkToFit","textRotation","wrapText","h","v","border","left","right","top","bottom","leftColor","rightColor","topColor","bottomColor","font","color","bold","family","charset","italic","underline","size","fill","bgColor","fgColor","patternType","getCellValueAlign","generateCellOrangeValue","toBuffer","wbout","buf","ArrayBuffer","view","Uint8Array","charCodeAt","exportXlsx","saveAs","then","content","blob","Blob","worksheet","csv","utils","sheet_to_csv","setAttribute","href","URL","createObjectURL","click","revokeObjectURL"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/TableBak/export/export/export.js"],"sourcesContent":["/* eslint-disable no-useless-constructor */\r\n/*\r\n * describe:  基于vxe-table vxe-grid数据格式的导出工具类函数 基础版\r\n * @Date:   2020-09-02\r\n * Author: Titans@2396757591@qq.com\r\n * @Last Modified time: 2020-09-3\r\n */\r\n// import { columns, datas } from './testData.js'\r\n// import xlsx from 'js-xlsx'\r\n// import jszip from './util/jszipU.js'\r\nimport XlsxTool from 'xlsx'\r\nimport FileSaver from 'file-saver'\r\nexport class Export {\r\n  constructor(gloabelConfig = {}) {\r\n    this.XlsxTool = XlsxTool\r\n    this.xlsx = window.xlsx\r\n    this.aTag = document.createElement('a')\r\n    this.exportHistory = [] // 导出历史记录\r\n    this.exportDefaultConfig = {\r\n      saveType: '.xlsx',\r\n      fileName: 'export', // 文件名\r\n      dataType: 'fullData',\r\n      isExportHead: true, // 是否导出表头\r\n      isExportOnlySourceField: false, // 是否只导出数据源表头字段，\r\n      isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n      isExportFooter: false, // 是否导出表尾部\r\n      isExportOriginalData: true, // 是否导出源数据\r\n      isExportData: true, // 是否导出数据\r\n      columns: [], // 表头配置\r\n      datas: [], // 源数据,\r\n      selection: [], // 选中数据\r\n      isExportTree: false, // 是否是树形数据\r\n      index: true, // 是否添加序号,\r\n      ignoreColsTypes: ['dragSort', 'seq', 'checkbox', 'radio', 'optionRow', 'expand', 'attach', 'ach', 'list', 'attachlist', 'gloableOptionRow'], // 忽略导出的列类型\r\n      viewValueFormat(value, row, column) { // 视图数据格式化方法\r\n        // return value\r\n      },\r\n      footerMethods({ columns, data }) {\r\n        return columns.map((column, columnIndex) => {\r\n          //  combinedType: ['average', 'total'],\r\n          let columnIndexText = '合计'\r\n          let combinedType = 'total'\r\n          if (columnIndex === 0) {\r\n            return columnIndexText\r\n          } else if (Array.isArray(column.combinedType) && column.combinedType.indexOf(combinedType) >= 0) {\r\n            try {\r\n              let result = data.map((item, index) => {\r\n                let value = (typeof (item[column.field]) === 'number' || typeof (item[column.field]) === 'string') ? parseFloat(item[column.field].toString().split(',').join('')) : 0\r\n                return isNaN(parseFloat(value)) ? 0 : parseFloat(value)\r\n              })\r\n              if (result.length) {\r\n                result = result.reduce((prev, next) => {\r\n                  return prev + next\r\n                })\r\n                result = (result).toFixed(2)\r\n                return result\r\n              } else {\r\n                return 0\r\n              }\r\n            } catch (e) {\r\n            }\r\n          } else {\r\n            return ''\r\n          }\r\n        })\r\n      }\r\n    }\r\n    this.exportDefaultConfig = Object.assign({}, this.exportDefaultConfig, gloabelConfig)\r\n  }\r\n  exportExcel(curUserConfig = {}, context, cb) {\r\n    this.context = context\r\n    // 导出excel\r\n    this.init(curUserConfig)\r\n    this.generateExportRowsMap(this.curExportConfig.columns)\r\n    this.curExportConfig.datas = this.curExportConfig[this.curExportConfig.dataType]\r\n    if (this.curExportConfig.isExportOnlySourceField || this.curExportConfig.isExportOnlyViewTitle) {\r\n      this.generateExportSourceField(this.curExportConfig.isExportOnlySourceField ? 'field' : 'title')\r\n    } else {\r\n      if (this.curExportConfig.isExportData) {\r\n        this.generateExportViewDataSource()\r\n      }\r\n      if (this.curExportConfig.isExportOriginalData) {\r\n        this.generateExportOriginalDataSource()\r\n      }\r\n    }\r\n    if (this.curExportConfig.saveType === '.xlsx') {\r\n      this.exportDownload(this.Xlsx)\r\n    } else {\r\n      this.downloadCsv()\r\n    }\r\n  }\r\n  init(obj) {\r\n    // 初始化并记录上次导出历史\r\n    this.headerRows = 1\r\n    this.dataColMap = []\r\n    this.headerRowsMap = {}\r\n    this.curExportConfig = Object.assign({}, this.exportDefaultConfig, obj)\r\n    this.curExportConfig.viewValueFormat = this.defaultViewValueFormat\r\n    // let xlsx = window.xlsx\r\n    this.Xlsx = new this.xlsx.File()\r\n    this.exportHistory.push({ exportConfig: this.curExportConfig, exportDataSource: this.Xlsx })\r\n    this.exportHistory = this.exportHistory.reverse().slice(0, 20).reverse()\r\n  }\r\n  setExportColums() {\r\n    // 设置导出列\r\n    let self = this\r\n    this.curExportConfig.columns = this.curExportConfig.columns.filter((item) => {\r\n      return self.curExportConfig.ignoreColsTypes.indexOf(item.type) < 0\r\n    })\r\n    if (this.curExportConfig.index) {\r\n      this.curExportConfig.columns.unshift({ title: '序号', field: 'seqIndex', type: 'seqIndex' })\r\n    }\r\n  }\r\n  generateExportRowsMap(columns, curRowIndex = 1, pcCount) {\r\n    // 生成视图数据导出元数据 列映射数据\r\n    let self = this\r\n    columns.forEach((rowConlum, index) => {\r\n      if (curRowIndex > self.headerRows) {\r\n        self.headerRows = curRowIndex\r\n      }\r\n      if (Array.isArray(rowConlum.children) && rowConlum.children.length) {\r\n        self.generateExportRowsMap(rowConlum.children, curRowIndex + 1, rowConlum.children.length)\r\n      } else {\r\n        // if (rowConlum !== undefined) {\r\n        //   rowConlum.pcCount = pcCount\r\n        //   // self.dataColCellsMap[rowConlum.field] = pcCount\r\n        // }\r\n        self.dataColMap.push(rowConlum)\r\n      }\r\n    })\r\n  }\r\n  defaultViewValueFormat(value, row, column) {\r\n    let render = column.editRender || column.cellRender || column.contentRender\r\n    if (render && render.name) {\r\n      let options = render.options || []\r\n      switch (render.name) {\r\n        case '$treeinput':\r\n          return (row[column.field + 'code'] + '-' + row[column.field + 'name']).replace(/(null-null|undefined-undefined)/ig, '')\r\n        case '$treeText':\r\n          return (row[column.field + 'code'] + '-' + row[column.field + 'name']).replace(/(null-null|undefined-undefined)/ig, '')\r\n        case '$vxeMoney':\r\n          value = Number(isNaN(parseFloat(value)) ? 0 : parseFloat(value).toFixed(2)).toLocaleString()\r\n          value = value.split('.').length === 1 ? value + '.00' : (value.split('.')[1].length === 1 ? value + '0' : value)\r\n          return value\r\n        case '$moneyRender':\r\n          value = Number(isNaN(parseFloat(value)) ? 0 : parseFloat(value).toFixed(2)).toLocaleString()\r\n          value = value.split('.').length === 1 ? value + '.00' : (value.split('.')[1].length === 1 ? value + '0' : value)\r\n          return value\r\n        case '$vxeCalculate':\r\n          value = Number(isNaN(parseFloat(value)) ? 0 : parseFloat(value).toFixed(2)).toLocaleString()\r\n          value = value.split('.').length === 1 ? value + '.00' : (value.split('.')[1].length === 1 ? value + '0' : value)\r\n          return value\r\n        case '$calculateRender':\r\n          value = Number(isNaN(parseFloat(value)) ? 0 : parseFloat(value).toFixed(2)).toLocaleString()\r\n          value = value.split('.').length === 1 ? value + '.00' : (value.split('.')[1].length === 1 ? value + '0' : value)\r\n          return value\r\n        case '$vxeDays':\r\n          return value\r\n        case '$vxeCheckbox':\r\n          let vxeCheckboxValue = []\r\n          options.forEach((item, index) => {\r\n            if (row[column.field].indexOf(item.value) >= 0) {\r\n              vxeCheckboxValue.push(item.label)\r\n            }\r\n          })\r\n          return vxeCheckboxValue.join(',')\r\n        case '$vxeRadio':\r\n          options.forEach((item, index) => {\r\n            if (row[column.field] === item.value) {\r\n              value = item.label\r\n            }\r\n          })\r\n          return value\r\n        case '$select':\r\n          if (render.props && render.props.multiple) {\r\n            let selectValue = []\r\n            options.forEach((item, index) => {\r\n              if (row[column.field].indexOf(item.value) >= 0) {\r\n                selectValue.push(item.label)\r\n              }\r\n            })\r\n            return selectValue.join(',')\r\n          } else {\r\n            options.forEach((item, index) => {\r\n              if (row[column.field] === item.value) {\r\n                value = item.label\r\n              }\r\n            })\r\n            return value\r\n          }\r\n        case '$vxeSelect':\r\n          if (render.props && render.props.multiple) {\r\n            let selectValue = []\r\n            options.forEach((item, index) => {\r\n              if (row[column.field].indexOf(item.value) >= 0) {\r\n                selectValue.push(item.label)\r\n              }\r\n            })\r\n            return selectValue.join(',')\r\n          } else {\r\n            options.forEach((item, index) => {\r\n              if (row[column.field] === item.value) {\r\n                value = item.label\r\n              }\r\n            })\r\n            return value\r\n          }\r\n        default:\r\n          return value\r\n      }\r\n    } else {\r\n      return value\r\n    }\r\n  }\r\n  generateVisibleHeaderRowsMap() {\r\n    // 生成嵌套表头行映射数据\r\n    for (let i = 1; i <= this.headerRows; i++) {\r\n      this.headerRowsMap['rows' + i] = this.sheetVisibleData.addRow()\r\n    }\r\n  }\r\n  generateExportSourceField(type) {\r\n    let self = this\r\n    this.sheetFieldData = this.Xlsx.addSheet(this.curExportConfig.fileName.replace('.xlsx', ''))\r\n    let newrow = self.sheetFieldData.addRow()\r\n    self.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      cell.value = column[type]\r\n      cell.hMerge = 0\r\n      cell.vMerge = 0\r\n      self.generateCellVisibletitleStyle(cell)\r\n    })\r\n  }\r\n  generateExportViewDataSource() {\r\n    // 生成视图数据导出数据源\r\n    if (this.curExportConfig.isExportOriginalData) {\r\n      this.sheetVisibleData = this.Xlsx.addSheet('视图数据')\r\n    } else {\r\n      this.sheetVisibleData = this.Xlsx.addSheet(this.curExportConfig.fileName.replace('.xlsx', ''))\r\n    }\r\n    this.generateVisibleHeaderRowsMap()\r\n    if (this.curExportConfig.isExportHead) {\r\n      this.riverGenerateExportNestedHeader(this.curExportConfig.columns)\r\n    }\r\n    this.setSheetCol(this.sheetVisibleData)\r\n    this.generateExportViewDataBody(this.curExportConfig.datas)\r\n    if (this.curExportConfig.isExportFooter) {\r\n      this.generateExportViewDatafooter(this.curExportConfig.datas)\r\n    }\r\n  }\r\n  setSheetCol(sheet, type = 'title') {\r\n    // 设置 列信息\r\n    // collapsed: false\r\n    // hidden: false\r\n    // max: 1\r\n    // min: 1\r\n    // numFmt: \"\"\r\n    // outlineLevel: 0\r\n    // style: Style\r\n    // align: (...)\r\n    // applyAlignment: (...)\r\n    // applyBorder: (...)\r\n    // applyFill: (...)\r\n    // applyFont: (...)\r\n    // border: (...)\r\n    // fill: (...)\r\n    // font: (...)\r\n    // width:0\r\n    // namedStyleIndex: (...)\r\n    let self = this\r\n    sheet.cols.forEach((col, colIndex) => {\r\n      col.width = self.getColWidth(colIndex, type)\r\n      col.max = 2000\r\n      col.field = this.dataColMap[colIndex]['field']\r\n    })\r\n  }\r\n  getColWidth(colIndex, type) {\r\n    // 获取colwidth\r\n    let text = this.dataColMap[colIndex][type]\r\n    if (!isNaN(parseInt(this.dataColMap[colIndex].width))) {\r\n      return Math.ceil(this.dataColMap[colIndex].width / 10)\r\n    } else if (text.length < 5) {\r\n      return 15\r\n    }\r\n    return Math.ceil(this.getStrByte(text) * 2)\r\n  }\r\n  getStrByte(str) {\r\n    //  获取字符串字节数\r\n    let arr = str.split('')\r\n    let len = arr.length\r\n    let count = 0\r\n    for (let i = 0; i < len; i++) {\r\n      let s = escape(arr[i])\r\n      // 例如：s = '你'; escape(a); \"%u4F60\"\r\n      if (s.indexOf('%u') >= 0) {\r\n        count = count + 2\r\n      } else {\r\n        count++\r\n      }\r\n    }\r\n    console.log(str, count)\r\n    return count\r\n  }\r\n  generateExportOriginalDataSource() {\r\n    // 生成源数据导出数据源\r\n    this.sheetOriginalData = this.Xlsx.addSheet('源数据')\r\n    if (this.curExportConfig.isExportHead) {\r\n      this.generateExportOriginalDataHeader()\r\n    }\r\n    this.generateExportOriginalDataBody(this.curExportConfig.datas)\r\n    this.setSheetCol(this.sheetOriginalData, 'field')\r\n  }\r\n  riverGenerateExportNestedHeader(columns, curRowIndex = 1, pCell) {\r\n    // 递归生成嵌套表头\r\n    let self = this\r\n    columns.forEach((column, index) => {\r\n      if (Array.isArray(column.children) && column.children.length) {\r\n        let cell0 = self.generateCurNestedHeaderCell(self.headerRowsMap['rows' + curRowIndex], column, curRowIndex, pCell)\r\n        self.riverGenerateExportNestedHeader(column.children, curRowIndex + 1, cell0)\r\n      } else {\r\n        self.generateCurNestedHeaderCell(self.headerRowsMap['rows' + curRowIndex], column, curRowIndex, pCell)\r\n      }\r\n    })\r\n  }\r\n  generateCurNestedHeaderCell(row, column, curRows, pCell) {\r\n    // 生成表头数据并补齐空位\r\n    // cellType: (...)\r\n    // date1904: (...)\r\n    // formula: (...)\r\n    // hMerge: (...)\r\n    // hidden: (...)\r\n    // numFmt: (...)\r\n    // row: (...)\r\n    // vMerge: (...)\r\n    // _style: (...)\r\n    // _value: (...)\r\n    let cell0 = {}\r\n    if (Array.isArray(column.children) && column.children.length) {\r\n      let { floorLength } = this.getFloorData(column.children)\r\n      // for (let i = 0; i < column.children.length; i++) {\r\n      for (let i = 0; i < floorLength; i++) {\r\n        let cell = row.addCell()\r\n        if (i === 0) {\r\n          cell.value = column['title']\r\n          cell.hMerge = floorLength - 1\r\n          cell.vMerge = 0\r\n          cell0 = cell\r\n        } else {\r\n          cell.value = column['title']\r\n          cell.hMerge = 0\r\n          cell.vMerge = 0\r\n        }\r\n        this.generateCellVisibletitleStyle(cell)\r\n      }\r\n    } else {\r\n      let cellSing = row.addCell()\r\n      cellSing.value = column['title']\r\n      cellSing.hMerge = 0\r\n      cellSing.vMerge = this.headerRows - curRows\r\n      cell0 = cellSing\r\n      this.generateCellVisibletitleStyle(cellSing)\r\n      this.supplementHeaderVMergeCells(row, column, curRows, pCell)\r\n      return cell0\r\n    }\r\n  }\r\n  getFloorData(treeData) {\r\n    // 获取当前嵌套子集的单元格个数以及深度\r\n    let max = 0\r\n    let floorCols = []\r\n    function each(data, floor) {\r\n      data.forEach((rowConlum, index) => {\r\n        if (floor > max) {\r\n          max = floor\r\n        }\r\n        if (Array.isArray(rowConlum.children) && rowConlum.children.length) {\r\n          each(rowConlum.children, floor + 1, rowConlum.children.length)\r\n        } else {\r\n          floorCols.push(rowConlum)\r\n        }\r\n      })\r\n    }\r\n    each(treeData, 1)\r\n    return {\r\n      floor: max,\r\n      floorLength: floorCols.length\r\n    }\r\n  }\r\n  generateExportViewDataBody(data, pRowIndex) {\r\n    // 生成视图数据导出主体数据\r\n    let self = this\r\n    data.forEach((row, rowIndex) => {\r\n      let newrow = self.sheetVisibleData.addRow()\r\n      row.seqIndex = pRowIndex === undefined ? rowIndex + 1 : pRowIndex + '.' + (+rowIndex + 1)\r\n      self.dataColMap.forEach((column, columnIndex) => {\r\n        let cell = newrow.addCell()\r\n        self.generateCellViewValue(cell, row, column, rowIndex + 1, pRowIndex)\r\n      })\r\n      if (self.curExportConfig.isExportTree && Array.isArray(row.children) && row.children.length) {\r\n        self.generateExportViewDataBody(row.children, row.seqIndex)\r\n      }\r\n    })\r\n  }\r\n  generateExportViewDatafooter(data) {\r\n    let self = this\r\n    let footData = this.curExportConfig.footerMethods({ columns: self.dataColMap, data: data })\r\n    let newrow = this.sheetVisibleData.addRow()\r\n    this.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      self.generateFooterCellViewValue(cell, footData[columnIndex], column)\r\n    })\r\n  }\r\n  supplementHeaderVMergeCells(row, column, curRows, pCell) {\r\n    // 当表头有合计行时补齐行单元格空位\r\n    for (let i = curRows + 1; i <= this.headerRows; i++) {\r\n      if (pCell) {\r\n        let cells = pCell.vMerge\r\n        for (let i = 0; i < cells; i++) {\r\n          this.headerRowsMap['rows' + i].addCell()\r\n        }\r\n      } else {\r\n        this.headerRowsMap['rows' + i].addCell()\r\n      }\r\n    }\r\n  }\r\n  generateCellViewValue(cell, item, column, rowIndex, pRowIndex) {\r\n    // 生成body单元格数据\r\n    if (column.field === 'seqIndex') {\r\n      cell.value = pRowIndex !== undefined ? pRowIndex + '.' + rowIndex : rowIndex\r\n    } else {\r\n      cell.value = this.getViewCellValue(item, column)\r\n    }\r\n    this.generateCellViewValueStyle(cell, column)\r\n  }\r\n  generateFooterCellViewValue(cell, value, column) {\r\n    // 生成footer单元格数据\r\n    cell.value = value\r\n    this.generateCellViewValueStyle(cell, column)\r\n  }\r\n  getViewCellValue(item, column) {\r\n    // 获取body单元格视图数据\r\n    return this.curExportConfig.viewValueFormat(item[column.field], item, column)\r\n    // item[column.field]\r\n  }\r\n  generateCellVisibletitleStyle(cell) {\r\n    // 生成表头样式\r\n    cell.style.align = {\r\n      indent: 0,\r\n      shrinkToFit: false,\r\n      textRotation: 0,\r\n      wrapText: false,\r\n      h: 'center',\r\n      v: 'center'\r\n    }\r\n    cell.style.border = {\r\n      left: 'thin',\r\n      right: 'thin',\r\n      top: 'thin',\r\n      bottom: 'thin',\r\n      leftColor: 'FF000000',\r\n      rightColor: 'FF000000',\r\n      topColor: 'FF000000',\r\n      bottomColor: 'FF000000'\r\n    }\r\n    cell.style.font = {\r\n      color: '00000000',\r\n      bold: true,\r\n      family: 0,\r\n      charset: 0,\r\n      italic: false,\r\n      underline: false,\r\n      size: 12,\r\n      name: 'Verdana'\r\n    }\r\n    cell.style.fill = {\r\n      bgColor: 'ffffffff',\r\n      fgColor: 'ffD2E9FF',\r\n      patternType: 'solid'\r\n    }\r\n  }\r\n  generateCellViewValueStyle(cell, column) {\r\n    cell.style.border = {\r\n      left: 'thin',\r\n      right: 'thin',\r\n      top: 'thin',\r\n      bottom: 'thin',\r\n      leftColor: 'FF000000',\r\n      rightColor: 'FF000000',\r\n      topColor: 'FF000000',\r\n      bottomColor: 'FF000000'\r\n    }\r\n    cell.style.align = {\r\n      indent: 0,\r\n      shrinkToFit: false,\r\n      textRotation: 0,\r\n      wrapText: false,\r\n      h: this.getCellValueAlign(column),\r\n      v: 'center'\r\n    }\r\n  }\r\n  getCellValueAlign(column) {\r\n    let render = column.editRender || column.cellRender || column.contentRender\r\n    switch (column.type) {\r\n      case 'money':\r\n        return 'right'\r\n      case 'seqIndex':\r\n        return 'center'\r\n      default:\r\n        if (render && render.name) {\r\n          switch (render.name) {\r\n            case '$moneyRender':\r\n              return 'right'\r\n            case '$calculateRender':\r\n              return 'right'\r\n            case '$vxeDays':\r\n              return 'right'\r\n            case '$vxeCheckbox':\r\n              return 'left'\r\n            default:\r\n              return column.align || 'left'\r\n          }\r\n        } else {\r\n          return column.align || 'left'\r\n        }\r\n    }\r\n  }\r\n  generateExportOriginalDataHeader() {\r\n    // 设置表头部样式\r\n    /**\r\n     * Cell intended to provide user access to the contents of Cell within an xlsx.Row.\r\n     *\r\n     * ```js\r\n     * const cell = row.addCell();\r\n     * cell.value = 'I am a cell!';\r\n     * cell.hMerge = 2;\r\n     * cell.vMerge = 1;\r\n     * cell.style.fill.patternType = 'solid';\r\n     * cell.style.fill.fgColor = '00FF0000';\r\n     * cell.style.fill.bgColor = 'FF000000';\r\n     * cell.style.align.h = 'center';\r\n     * cell.style.align.v = 'center';\r\n     * ```\r\n     *\r\n     * Set the cell value\r\n     *\r\n     * ```js\r\n     * const cell = row.addCell();\r\n     * // Date type\r\n     * cell.setDate(new Date());\r\n     * // Number type\r\n     * cell.setNumber(123456);\r\n     * cell.numFmt = '$#,##0.00';\r\n     * ```\r\n     */\r\n    let self = this\r\n    let newrow = self.sheetOriginalData.addRow()\r\n    self.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      self.generateCellVisibletitleStyle(cell, column)\r\n      cell.value = column.field || ''\r\n    })\r\n  }\r\n  generateExportOriginalDataBody(data, pRowIndex) {\r\n    // 生成body源数据\r\n    let self = this\r\n    data.forEach((row, rowIndex) => {\r\n      let newrow = self.sheetOriginalData.addRow()\r\n      row.seqIndex = pRowIndex === undefined ? rowIndex + 1 : pRowIndex + '.' + (+rowIndex + 1)\r\n      self.dataColMap.forEach((column, columnIndex) => {\r\n        let cell = newrow.addCell()\r\n        self.generateCellOrangeValue(cell, row, column, rowIndex + 1, pRowIndex)\r\n      })\r\n      if (self.curExportConfig.isExportTree && Array.isArray(row.children) && row.children.length) {\r\n        self.generateExportOriginalDataBody(row.children, row.seqIndex)\r\n      }\r\n    })\r\n  }\r\n  generateCellOrangeValue(cell, item, column, rowIndex, pRowIndex) {\r\n    // 生成body单元格数据\r\n    if (column.field === 'seqIndex') {\r\n      cell.value = pRowIndex !== undefined ? pRowIndex + '.' + rowIndex : rowIndex\r\n    } else {\r\n      cell.value = item[column.field] === undefined ? '' : item[column.field]\r\n    }\r\n    this.generateCellViewValueStyle(cell, column)\r\n  }\r\n  toBuffer(wbout) {\r\n    const buf = new ArrayBuffer(wbout.length)\r\n    const view = new Uint8Array(buf)\r\n    for (let index = 0; index !== wbout.length; ++index) view[index] = wbout.charCodeAt(index) & 0xFF\r\n    return buf\r\n  }\r\n  exportDownload(exportXlsx) {\r\n    // 下载\r\n    let self = this\r\n    // const wbout = this.XlsxTool.write(exportXlsx, { bookType: 'xlsx', bookSST: false, type: 'binary' })\r\n    // const blob = new Blob([this.toBuffer(wbout)], { type: 'application/octet-stream' })\r\n    exportXlsx.saveAs('blob').then(function (content) {\r\n      const blob = new Blob([content], {\r\n        type: 'application/octet-stream'\r\n      })\r\n      // var blob = new Blob(['Hello, world!'], { type: 'text/plain;charset=utf-8' })\r\n      FileSaver.saveAs(blob, self.curExportConfig.fileName + self.curExportConfig.saveType)\r\n      // let objectUrl = URL.createObjectURL(blob)\r\n      // if ('download' in document.createElement('a')) {\r\n      //   let aTag = self.aTag\r\n      //   aTag.setAttribute('href', objectUrl)\r\n      //   aTag.setAttribute('download', self.curExportConfig.fileName + self.curExportConfig.saveType)\r\n      //   aTag.click()\r\n      //   self.curExportConfig.successCb(self.curExportConfig)\r\n      // } else {\r\n      //   // IE10+下载\r\n      //   navigator.msSaveBlob(blob, self.curExportConfig.fileName)\r\n      // }\r\n    })\r\n  }\r\n  downloadCsv(exportXlsx) {\r\n    let worksheet = this.sheetVisibleData // 这里我们只读取第一张sheet\r\n    let csv = this.XlsxTool.utils.sheet_to_csv(worksheet)\r\n    let blob = new Blob(['\\uFEFF' + csv], {\r\n      type: 'text/plaincharset=utf-8'\r\n    })\r\n    let aTag = this.aTag\r\n    aTag.setAttribute('download', this.curExportConfig.fileName + this.curExportConfig.saveType)\r\n    aTag.href = URL.createObjectURL(blob)\r\n    aTag.click()\r\n    URL.revokeObjectURL(blob)\r\n  }\r\n}\r\n// 调用\r\n// const $globalExport= new Export()\r\n// $globalExportExcel.exportExcel({\r\n//   fileName: 'export.xlsx', // 文件名\r\n//   isExportHead: true, // 是否导出表头\r\n//   isExportFooter: true, // 是否导出表尾部\r\n//   isExportOriginalData: true, // 是否导出源数据\r\n//   isExportData: true, // 是否导出数据\r\n//   columns: [], // 表头配置\r\n//   datas: [], // 数据源头\r\n//   index: true, // 是否添加序号\r\n//   ignoreColsTypes: ['dragSort', 'seq', 'checkbox', 'radio', 'optionRow', 'expand'],\r\n//   viewValueFormat(value, row, column) {\r\n//     return value\r\n//   }\r\n// })\r\n"],"mappings":"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"}]}