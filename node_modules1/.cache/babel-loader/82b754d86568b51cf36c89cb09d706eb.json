{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\specialMonitor\\MonitoringProjectManagement\\MonitoringProjectManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\specialMonitor\\MonitoringProjectManagement\\MonitoringProjectManagement.vue","mtime":1694505522904},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["proconf","getDateString","AddDialog","HttpModule","components","watch","data","leftTreeFilterText","lookdialogVisible","showGlAttachmentDialog","declareCode","radioShow","breakRuleVisible","treeTypeConfig","curRadio","treeGlobalConfig","inputVal","treeQueryparams","elementcode","province","year","wheresql","treeServerUri","treeAjaxType","treeData","leftTreeVisible","toolBarStatusBtnConfig","changeBtns","buttons","toolBarStatusButtons","curButton","type","iconName","iconNameActive","iconUrl","label","code","curValue","buttonsInfo","statusRightToolBarButton","methods","bsToolbarClickEvent","onStatusTabClick","tabStatusNumConfig","isShowQueryConditions","toolBarStatusSelect","tableLoading","tableColumnsConfig","PoliciesTableColumns","tableData","tableToolbarConfig","disabledMoneyConversion","moneyConversion","search","import","export","print","zoom","custom","slots","tools","mainPagerConfig","total","currentPage","pageSize","tableFooterConfig","showFooter","logData","showLogView","dialogVisible","dialogTitle","addTableData","modifyData","menuName","$store","state","curNavModule","name","params5","menuId","tokenid","userInfo","roleguid","appId","isHaveZero","condition","mofDivCodes","mofDivCode","leftTreeConfig","showFilter","isInitLoadData","scrollLoad","isleaf","levelno","valueKeys","format","placeholder","multipleValueType","treeProps","labelFormat","nodeKey","children","multiple","isLazeLoad","readonly","clearable","queryConfig","highQueryConfig","searchDataList","highQueryData","declareName","codeList","mounted","obj","queryTableDatas","getSearchDataList","searchDataObj","forEach","item","itemRender","field","getConditionList","getLeftTreeData","_this","console","log","that","params","substring","getLeftTree","then","res","rscode","treeResdata","getChildrenData","$message","error","datas","text","operationToolbarButtonClickEvent","context","e","clickAddBtn","exportData","onToolbarBtnClick","_ref","table","refresh","changeInput","val","getItem","_this2","push","getCodeList","_this3","onClickmethod","node","id","treeSetConfrimData","curTree","elementCode","$refs","leftTree","refreshTree","asideChange","cellClick","key","column","property","row","agencyCodes","manageMofCodes","queryTableDatasCount","ajaxTableData","_ref2","onQueryConditionsClick","isOpen","_this$codeList","length","info","_this4","param","guid","flowRevoke","success","message","finally","_this5","waitFlowCount","_this6","page","pubFlag","manageMofDepCode","objCode","objName","objLevel","fiscalYear","queryTableDatasRule","_res$data$records","records","map","v","beginDate","endDate","created","getters","getLoginAuthentication"],"sources":["src/views/specialMonitor/MonitoringProjectManagement/MonitoringProjectManagement.vue"],"sourcesContent":["<!-- 监控事项批复 -->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          show-zero\r\n          :is-open=\"isShowQueryConditions\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <template v-slot:query>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n          @onConfrimData=\"treeSetConfrimData\"\r\n        />\r\n        <BsTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :filter-text=\"leftTreeFilterText\"\r\n          :config=\"leftTreeConfig\"\r\n          :tree-data=\"treeData\"\r\n          @onNodeClick=\"onClickmethod\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <AddDialog\r\n      v-if=\"dialogVisible\"\r\n      :ref=\"queryTableDatas\"\r\n      :title=\"dialogTitle\"\r\n      :code-list=\"codeList\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf, getDateString } from './MonitoringProjectManagement.js'\r\nimport AddDialog from './children/addDialog'\r\nimport HttpModule from '@/api/frame/main/Monitoring/Declaration.js'\r\nexport default {\r\n  components: {\r\n    AddDialog\r\n  },\r\n  watch: {\r\n  },\r\n  data() {\r\n    return {\r\n      leftTreeFilterText: '',\r\n      lookdialogVisible: false,\r\n      showGlAttachmentDialog: false,\r\n      declareCode: '',\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      treeTypeConfig: {\r\n        curRadio: 'AGENCY'\r\n      },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      },\r\n      treeQueryparams: { elementcode: 'admdiv', province: '610000000', year: '2021', wheresql: 'and code like \\'' + 61 + '%\\'' },\r\n      treeServerUri: 'http://10.77.18.172:32303/v2/basedata/simpletree/where',\r\n      treeAjaxType: 'get',\r\n      treeData: [],\r\n      leftTreeVisible: true,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        changeBtns: true,\r\n        buttons: proconf.toolBarStatusButtons,\r\n        curButton: {\r\n          type: 'button',\r\n          iconName: 'base-all.png',\r\n          iconNameActive: 'base-all-active.png',\r\n          iconUrl: '',\r\n          label: '待批复',\r\n          code: '1',\r\n          curValue: '1'\r\n        },\r\n        buttonsInfo: proconf.statusRightToolBarButton,\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        }\r\n      },\r\n      tabStatusNumConfig: {\r\n        '1': 0,\r\n        '2': 0,\r\n        '3': 0\r\n      },\r\n      isShowQueryConditions: true,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        iconName: 'base-all.png',\r\n        iconNameActive: 'base-all-active.png',\r\n        iconUrl: '',\r\n        label: '待批复',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableColumnsConfig: proconf.PoliciesTableColumns,\r\n      tableData: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        search: false, // 是否有search\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 20\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      modifyData: {},\r\n      // 请求 & 角色权限相关配置\r\n      menuName: this.$store.state.curNavModule.name,\r\n      params5: '',\r\n      menuId: '',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      condition: {},\r\n      mofDivCodes: [],\r\n      mofDivCode: '',\r\n      leftTreeConfig: { // 左侧单位树配置\r\n        showFilter: false, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 0, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '请选择',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{label}', // {code}-{name}\r\n          nodeKey: 'code', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        multiple: false, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true\r\n      },\r\n      queryConfig: proconf.highQueryConfig,\r\n      searchDataList: proconf.highQueryData,\r\n      declareName: '',\r\n      codeList: []\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    search(obj) {\r\n      this.searchDataList = obj\r\n      this.queryTableDatas()\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    getLeftTreeData() {\r\n      console.log('getLeftTreeData')\r\n      let that = this\r\n      let params = {}\r\n      if (this.userInfo.province === '610000000') {\r\n        params = {\r\n          elementcode: 'admdiv',\r\n          province: '610000000',\r\n          year: '2021',\r\n          wheresql: 'and code like \\'' + 61 + '%\\''\r\n        }\r\n      } else if (\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610200000' ||\r\n        this.userInfo.province === '610300000' ||\r\n        this.userInfo.province === '610400000' ||\r\n        this.userInfo.province === '610500000' ||\r\n        this.userInfo.province === '610600000' ||\r\n        this.userInfo.province === '610700000' ||\r\n        this.userInfo.province === '610800000' ||\r\n        this.userInfo.province === '610900000' ||\r\n        this.userInfo.province === '611000000' ||\r\n        this.userInfo.province === '611200000'\r\n      ) {\r\n        params = {\r\n          elementcode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 4) + '%\\''\r\n        }\r\n      } else {\r\n        params = {\r\n          elementcode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 6) + '%\\''\r\n        }\r\n      }\r\n      HttpModule.getLeftTree(params).then(res => {\r\n        if (res.rscode === '100000') {\r\n          let treeResdata = that.getChildrenData(res.data)\r\n          that.treeData = treeResdata\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    },\r\n    getChildrenData(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.text\r\n        if (item.children) {\r\n          that.getChildrenData(item.children)\r\n        }\r\n      })\r\n\r\n      return datas\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n      }\r\n    },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      switch (obj.code) {\r\n        // 添加\r\n        case 'add':\r\n          this.clickAddBtn()\r\n          break\r\n        // 导出\r\n        case 'export':\r\n          this.exportData(obj, context, e)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.treeGlobalConfig.inputVal = val\r\n    },\r\n    getItem(code, data) {\r\n      data.forEach(item => {\r\n        if (code === item.code) {\r\n          let data = []\r\n          data.push(item)\r\n          this.getCodeList(data)\r\n        } else if (item.children) {\r\n          this.getItem(code, item.children)\r\n        }\r\n      })\r\n    },\r\n    getCodeList(data) {\r\n      data.forEach(item => {\r\n        this.codeList.push(item.code)\r\n        if (item.children) {\r\n          this.getCodeList(item.children)\r\n        }\r\n      })\r\n    },\r\n    onClickmethod(node) {\r\n      let code = node.node.code\r\n      this.codeList = []\r\n      let treeData = node.treeData\r\n      this.getItem(code, treeData)\r\n      console.log(this.codeList)\r\n      if (node.id !== '0') {\r\n        console.log(node)\r\n        this.mofDivCode = ''\r\n      } else {\r\n        this.condition = {}\r\n      }\r\n      this.queryTableDatas()\r\n    },\r\n    treeSetConfrimData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      console.log(key, obj.row)\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh() {\r\n      this.agencyCodes = []\r\n      this.manageMofCodes = []\r\n      this.mofDivCodes = []\r\n      this.queryTableDatas()\r\n      this.queryTableDatasCount()\r\n    },\r\n    ajaxTableData({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig.currentPage = currentPage\r\n      this.mainPagerConfig.pageSize = pageSize\r\n      this.queryTableDatas()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 新增或修改弹框\r\n    clickAddBtn(row) {\r\n      if (this.codeList?.length === 0) {\r\n        return this.$message.info('请先选择左侧区划')\r\n      }\r\n      this.dialogTitle = '新增'\r\n      this.dialogVisible = true\r\n    },\r\n    // 导出\r\n    exportData() {\r\n      const param = {\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        menuName: this.$store.state.curNavModule.name\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.flowRevoke(param).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.$message.success('导出')\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      }).finally(() => { this.tableLoading = false })\r\n    },\r\n    queryTableDatasCount() {\r\n      const params = {\r\n        menuId: this.$store.state.curNavModule.guid\r\n      }\r\n      HttpModule.queryTableDatasCount(params).then(res => {\r\n        if (res.code === '000000') {\r\n          this.tabStatusNumConfig['1'] = res.data.waitFlowCount\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    // 查询 table 数据\r\n    queryTableDatas() {\r\n      const param = {\r\n        page: this.mainPagerConfig.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig.pageSize, // 每页条数\r\n        declareName: this.declareName,\r\n        pubFlag: '',\r\n        manageMofDepCode: this.searchDataList.manageMofDepCode,\r\n        mofDivCode: this.codeList ? this.codeList[0] : '',\r\n        objCode: this.searchDataList.objCode,\r\n        objName: this.searchDataList.objName,\r\n        // bizType: '',\r\n        objLevel: this.searchDataList.objLevel,\r\n        // mofDivCodeList: this.codeList,\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        // flowStatus: this.toolBarStatusSelect.curValue,\r\n        fiscalYear: this.userInfo.year\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.queryTableDatasRule(param).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          res.data.records?.map((v) => {\r\n            v.beginDate = v.beginDate ? getDateString(v.beginDate) : ''\r\n            v.endDate = v.endDate ? getDateString(v.endDate) : ''\r\n          })\r\n          this.tableData = res.data.records\r\n          this.mainPagerConfig.total = res.data.total\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.getLeftTreeData()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.radio-right{\r\nfloat: right;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}