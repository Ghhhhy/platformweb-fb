{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\threePublicExpensesTableEntry\\utils\\index.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\threePublicExpensesTableEntry\\utils\\index.js","mtime":1694576524437},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH0KZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcigiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC4iKTsgfQpmdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09ICJzdHJpbmciKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgdmFyIG4gPSBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobykuc2xpY2UoOCwgLTEpOyBpZiAobiA9PT0gIk9iamVjdCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09ICJNYXAiIHx8IG4gPT09ICJTZXQiKSByZXR1cm4gQXJyYXkuZnJvbShvKTsgaWYgKG4gPT09ICJBcmd1bWVudHMiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfQpmdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldOyByZXR1cm4gYXJyMjsgfQpmdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5TGltaXQociwgbCkgeyB2YXIgdCA9IG51bGwgPT0gciA/IG51bGwgOiAidW5kZWZpbmVkIiAhPSB0eXBlb2YgU3ltYm9sICYmIHJbU3ltYm9sLml0ZXJhdG9yXSB8fCByWyJAQGl0ZXJhdG9yIl07IGlmIChudWxsICE9IHQpIHsgdmFyIGUsIG4sIGksIHUsIGEgPSBbXSwgZiA9ICEwLCBvID0gITE7IHRyeSB7IGlmIChpID0gKHQgPSB0LmNhbGwocikpLm5leHQsIDAgPT09IGwpIHsgaWYgKE9iamVjdCh0KSAhPT0gdCkgcmV0dXJuOyBmID0gITE7IH0gZWxzZSBmb3IgKDsgIShmID0gKGUgPSBpLmNhbGwodCkpLmRvbmUpICYmIChhLnB1c2goZS52YWx1ZSksIGEubGVuZ3RoICE9PSBsKTsgZiA9ICEwKTsgfSBjYXRjaCAocikgeyBvID0gITAsIG4gPSByOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIWYgJiYgbnVsbCAhPSB0LnJldHVybiAmJiAodSA9IHQucmV0dXJuKCksIE9iamVjdCh1KSAhPT0gdSkpIHJldHVybjsgfSBmaW5hbGx5IHsgaWYgKG8pIHRocm93IG47IH0gfSByZXR1cm4gYTsgfSB9CmZ1bmN0aW9uIF9hcnJheVdpdGhIb2xlcyhhcnIpIHsgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIGFycjsgfQppbXBvcnQgeyBlYWNoVHJlZSwgdG9UcmVlQXJyYXksIHRvRGF0ZVN0cmluZyB9IGZyb20gJ3hlLXV0aWxzJzsKCi8qKg0KICog5qC55o2u5YiX55Sf5oiQ5oyH5a6a5pWw6YeP55qE6KGMDQogKiBAcGFyYW0gY291bnQNCiAqLwpleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVSb3dzKCkgewogIHZhciBjb3VudCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogODsKICB2YXIgY29sdW1ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkOwogIHZhciByb3dzID0gW107CiAgdmFyIF9sb29wID0gZnVuY3Rpb24gX2xvb3AoKSB7CiAgICB2YXIgcm93ID0ge307CiAgICBlYWNoVHJlZShjb2x1bW5zLCBmdW5jdGlvbiAoaXRlbSkgewogICAgICBpZiAoaXRlbS5maWVsZCkgewogICAgICAgIHJvd1tpdGVtLmZpZWxkXSA9ICcnOwogICAgICB9CiAgICB9KTsKICAgIHJvd3MucHVzaChyb3cpOwogIH07CiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb3VudDsgaSsrKSB7CiAgICBfbG9vcCgpOwogIH0KICByZXR1cm4gcm93czsKfQoKLyoqDQogKiDnlJ/miJDmoKHpqozop4TliJkNCiAqIEBwYXJhbSBjb3VudA0KICogQHJldHVybiB7e319DQogKi8KZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlRWRpdG9yUnVsZXMoY29sdW1ucykgewogIHZhciBydWxlcyA9IHt9OwogIGVhY2hUcmVlKGNvbHVtbnMsIGZ1bmN0aW9uIChpdGVtKSB7CiAgICBpZiAoaXRlbS5maWVsZCkgewogICAgICBydWxlc1tpdGVtLmZpZWxkXSA9IFt7CiAgICAgICAgcmVxdWlyZWQ6IHRydWUsCiAgICAgICAgdHJpZ2dlcjogJ2NoYW5nZScsCiAgICAgICAgbWVzc2FnZTogJ+ivpeWNleWFg+agvOS4uuW/heWhq+mhuScKICAgICAgfV07CiAgICB9CiAgfSk7CiAgcmV0dXJuIHJ1bGVzOwp9CgovKioNCiAqIOiOt+WPlnRyZWXnu5PmnoTmt7HluqYNCiAqIEBwYXJhbSB0cmVlRGF0YQ0KICogQHJldHVybiB7bnVtYmVyfQ0KICovCmV4cG9ydCB2YXIgZ2V0TWF4Rmxvb3IgPSBmdW5jdGlvbiBnZXRNYXhGbG9vcihhcnIpIHsKICB2YXIgbWF4TGV2ZWwgPSAwOwogIChmdW5jdGlvbiBjYWxsQmFjayhhcnIsIGxldmVsKSB7CiAgICArK2xldmVsOwogICAgbWF4TGV2ZWwgPSBNYXRoLm1heChsZXZlbCwgbWF4TGV2ZWwpOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHsKICAgICAgdmFyIGl0ZW0gPSBhcnJbaV07CiAgICAgIGlmIChpdGVtLmNoaWxkcmVuICYmIGl0ZW0uY2hpbGRyZW4ubGVuZ3RoID4gMCkgewogICAgICAgIGNhbGxCYWNrKGl0ZW0uY2hpbGRyZW4sIGxldmVsKTsKICAgICAgfSBlbHNlIHsKICAgICAgICBkZWxldGUgaXRlbS5jaGlsZHJlbjsKICAgICAgfQogICAgfQogIH0pKGFyciwgMCk7CiAgcmV0dXJuIG1heExldmVsOwp9OwoKLyoqDQogKiDmib7liLDmoLnoioLngrkNCiAqLwpleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVGaWVsZE1hcChjb2x1bW5zKSB7CiAgdmFyIGZpZWxkTWFwID0gbmV3IE1hcCgpOwogIGNvbHVtbnMuZmlsdGVyKGZ1bmN0aW9uIChjb2x1bW4pIHsKICAgIHJldHVybiBjb2x1bW4udHlwZSAhPT0gJ2NoZWNrYm94JzsKICB9KS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICB2YXIgdGl0bGUgPSBpdGVtLnRpdGxlLAogICAgICBjaGlsZHJlbiA9IGl0ZW0uY2hpbGRyZW47CiAgICBpZiAoY2hpbGRyZW4gJiYgY2hpbGRyZW4ubGVuZ3RoKSB7CiAgICAgIHZhciBhcnIgPSB0b1RyZWVBcnJheShjaGlsZHJlbikuZmlsdGVyKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgcmV0dXJuIG5vZGUuZmllbGQgIT09IHVuZGVmaW5lZDsKICAgICAgfSk7CiAgICAgIGFyci5mb3JFYWNoKGZ1bmN0aW9uIChpdCwgaW5kZXgpIHsKICAgICAgICB2YXIgcGFja2FnZVRpdGxlID0gIiIuY29uY2F0KHRpdGxlKS5jb25jYXQoaW5kZXggPiAwID8gJ18nICsgaW5kZXggOiAnJyk7CiAgICAgICAgZmllbGRNYXAuc2V0KHBhY2thZ2VUaXRsZSwgaXQpOwogICAgICB9KTsKICAgIH0gZWxzZSB7CiAgICAgIGZpZWxkTWFwLnNldCh0aXRsZSwgaXRlbSk7CiAgICB9CiAgfSk7CiAgcmV0dXJuIGZpZWxkTWFwOwp9CgovKioNCiAqIOiOt+WPlkV4Y2Vs6KGo5Lit5a2Y5YKo55qE5pel5pyf5pe26Ze05oizDQogKiBAZGVzY3JpcHRpb24g77yIRXhjZWzlrZjlgqjnmoTml6XmnJ/mmK/ku44xOTAw5bm0MeaciDHml6XlvIDlp4vmjInlpKnmlbDmnaXorqHnrpfnmoTvvIzkuZ/lsLHmmK/or7QxOTAw5bm0MeaciDHml6XlnKhFeGNlbOS4reaYrzHjgIJqc+S4reaYr+S7jjE5NzDlubQx5pyIMeaXpeW8gOWni++8iQ0KICogQHBhcmFtIHtudW1iZXJ9IG51bSAtIGV4Y2Vs5a2Y5YKo55qE5pWw5a2XDQogKiBAcmV0dXJucyB7c3RyaW5nfSBqc+S4reeahOaXtumXtOaIsw0KICovCmZ1bmN0aW9uIGdldEV4Y2VsVGltZXN0YW1wKG51bSkgewogIGlmIChudW0gaW5zdGFuY2VvZiBPYmplY3QpIHJldHVybjsKICBudW0gPSBOdW1iZXIobnVtKTsKICB2YXIgbWlsbGlzZWNvbmQgPSAwOyAvLyDovazljJblkI7nmoTmr6vnp5LmlbAKICBpZiAobnVtID4gNjApIHsKICAgIC8vIOWvueWkp+S6jjYw55qE5pel5pyf6L+b6KGM5YePMeWkhOeQhgogICAgbWlsbGlzZWNvbmQgPSAobnVtIC0gMjU1NjggLSAxKSAqIDM2MDAgKiAyNCAqIDEwMDA7CiAgfSBlbHNlIHsKICAgIG1pbGxpc2Vjb25kID0gKG51bSAtIDI1NTY4KSAqIDM2MDAgKiAyNCAqIDEwMDA7CiAgfQogIHJldHVybiBtaWxsaXNlY29uZDsKfQoKLyoqDQogKiDmoLnmja7lr7zlhaV4bHN455Sf5oiQ6KGo5qC85pWw5o2uDQogKi8KZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlSW1wb3J0VGFibGVEYXRhKCkgewogIHZhciBkYXRhID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTsKICB2YXIgY29sdW1ucyA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDogW107CiAgdmFyIHJvd3MgPSBbXTsKICAvLyDojrflj5booajlpLTlsYLnuqcKICB2YXIgZGVlcCA9IGdldE1heEZsb29yKGNvbHVtbnMpOwogIC8vIOaIquWPluecn+WunuaVsOaNrgogIHZhciBkYXRhU291cmNlID0gZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkYXRhLnNsaWNlKGRlZXAgLSAxKTsKICAvLyDojrflj5Z0aXRsZeaYoOWwhAogIHZhciBmaWVsZE1hcCA9IGdlbmVyYXRlRmllbGRNYXAoY29sdW1ucyk7CiAgZGF0YVNvdXJjZSA9PT0gbnVsbCB8fCBkYXRhU291cmNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkYXRhU291cmNlLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgIC8vIGl0ZW3kuLrlr7zlhaXmlbDmja7ooYx7IFt0aXRsZV06IHZhbHVlIH0g5qC85byPCiAgICB2YXIgcm93ID0gT2JqZWN0LmVudHJpZXMoaXRlbSkucmVkdWNlKGZ1bmN0aW9uIChyb3csIF9yZWYpIHsKICAgICAgdmFyIF9yZWYyID0gX3NsaWNlZFRvQXJyYXkoX3JlZiwgMiksCiAgICAgICAga2V5ID0gX3JlZjJbMF0sCiAgICAgICAgdmFsdWUgPSBfcmVmMlsxXTsKICAgICAgaWYgKGZpZWxkTWFwLmhhcyhrZXkpKSB7CiAgICAgICAgdmFyIF9maWVsZE1hcCRnZXQgPSBmaWVsZE1hcC5nZXQoa2V5KSwKICAgICAgICAgIGZpZWxkID0gX2ZpZWxkTWFwJGdldC5maWVsZCwKICAgICAgICAgIGVkaXRSZW5kZXIgPSBfZmllbGRNYXAkZ2V0LmVkaXRSZW5kZXI7CiAgICAgICAgLy8gZXhjZWwg5a+55pel5pyf5qC85byP5a+85YWl55qE5pe26Ze05oiz5pyJ6K+v5beu77yM6ZyA6KaB6L+b6KGM6L2s5o2iCiAgICAgICAgaWYgKChlZGl0UmVuZGVyID09PSBudWxsIHx8IGVkaXRSZW5kZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGVkaXRSZW5kZXIudHlwZSkgPT09ICdkYXRlJyAmJiB2YWx1ZSkgewogICAgICAgICAgdmFyIHRpbWVzdGFtcCA9IGdldEV4Y2VsVGltZXN0YW1wKHZhbHVlKTsKICAgICAgICAgIHJvd1tmaWVsZF0gPSB0b0RhdGVTdHJpbmcodGltZXN0YW1wLCAneXl5eS1NTS1kZCcpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICByb3dbZmllbGRdID0gdmFsdWU7CiAgICAgIH0KICAgICAgcmV0dXJuIHJvdzsKICAgIH0sIHt9KTsKICAgIHJvd3MucHVzaChyb3cpOwogIH0pOwogIHJldHVybiByb3dzOwp9"},{"version":3,"names":["eachTree","toTreeArray","toDateString","generateRows","count","arguments","length","undefined","columns","rows","_loop","row","item","field","push","i","generateEditorRules","rules","required","trigger","message","getMaxFloor","arr","maxLevel","callBack","level","Math","max","children","generateFieldMap","fieldMap","Map","filter","column","type","forEach","title","node","it","index","packageTitle","concat","set","getExcelTimestamp","num","Object","Number","millisecond","generateImportTableData","data","deep","dataSource","slice","entries","reduce","_ref","_ref2","_slicedToArray","key","value","has","_fieldMap$get","get","editRender","timestamp"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/views/main/MointoringMatters/threePublicExpensesTableEntry/utils/index.js"],"sourcesContent":["import { eachTree, toTreeArray, toDateString } from 'xe-utils'\r\n\r\n/**\r\n * 根据列生成指定数量的行\r\n * @param count\r\n */\r\nexport function generateRows(count = 8, columns) {\r\n  const rows = []\r\n  for (let i = 0; i < count; i++) {\r\n    const row = {}\r\n    eachTree(columns, item => {\r\n      if (item.field) {\r\n        row[item.field] = ''\r\n      }\r\n    })\r\n    rows.push(row)\r\n  }\r\n  return rows\r\n}\r\n\r\n/**\r\n * 生成校验规则\r\n * @param count\r\n * @return {{}}\r\n */\r\nexport function generateEditorRules(columns) {\r\n  const rules = {}\r\n  eachTree(columns, item => {\r\n    if (item.field) {\r\n      rules[item.field] = [\r\n        {\r\n          required: true,\r\n          trigger: 'change',\r\n          message: '该单元格为必填项'\r\n        }\r\n      ]\r\n    }\r\n  })\r\n  return rules\r\n}\r\n\r\n/**\r\n * 获取tree结构深度\r\n * @param treeData\r\n * @return {number}\r\n */\r\nexport const getMaxFloor = (arr) => {\r\n  let maxLevel = 0;\r\n  (function callBack(arr, level) {\r\n    ++level\r\n    maxLevel = Math.max(level, maxLevel)\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let item = arr[i]\r\n      if (item.children && item.children.length > 0) {\r\n        callBack(item.children, level)\r\n      } else {\r\n        delete item.children\r\n      }\r\n    }\r\n  })(arr, 0)\r\n  return maxLevel\r\n}\r\n\r\n/**\r\n * 找到根节点\r\n */\r\nexport function generateFieldMap(columns) {\r\n  const fieldMap = new Map()\r\n  columns.filter(column => column.type !== 'checkbox')\r\n    .forEach(item => {\r\n      const { title, children } = item\r\n      if (children && children.length) {\r\n        const arr = toTreeArray(children).filter(node => node.field !== undefined)\r\n        arr.forEach((it, index) => {\r\n          const packageTitle = `${title}${index > 0 ? '_' + index : ''}`\r\n          fieldMap.set(packageTitle, it)\r\n        })\r\n      } else {\r\n        fieldMap.set(title, item)\r\n      }\r\n    })\r\n  return fieldMap\r\n}\r\n\r\n/**\r\n * 获取Excel表中存储的日期时间戳\r\n * @description （Excel存储的日期是从1900年1月1日开始按天数来计算的，也就是说1900年1月1日在Excel中是1。js中是从1970年1月1日开始）\r\n * @param {number} num - excel存储的数字\r\n * @returns {string} js中的时间戳\r\n */\r\nfunction getExcelTimestamp(num) {\r\n  if (num instanceof Object) return\r\n  num = Number(num)\r\n  let millisecond = 0 // 转化后的毫秒数\r\n  if (num > 60) { // 对大于60的日期进行减1处理\r\n    millisecond = (num - 25568 - 1) * 3600 * 24 * 1000\r\n  } else {\r\n    millisecond = (num - 25568) * 3600 * 24 * 1000\r\n  }\r\n  return millisecond\r\n}\r\n\r\n/**\r\n * 根据导入xlsx生成表格数据\r\n */\r\nexport function generateImportTableData(data = [], columns = []) {\r\n  const rows = []\r\n  // 获取表头层级\r\n  const deep = getMaxFloor(columns)\r\n  // 截取真实数据\r\n  const dataSource = data?.slice(deep - 1)\r\n  // 获取title映射\r\n  const fieldMap = generateFieldMap(columns)\r\n  dataSource?.forEach(item => {\r\n    // item为导入数据行{ [title]: value } 格式\r\n    const row = Object.entries(item)\r\n      .reduce((row, [key, value]) => {\r\n        if (fieldMap.has(key)) {\r\n          const { field, editRender } = fieldMap.get(key)\r\n          // excel 对日期格式导入的时间戳有误差，需要进行转换\r\n          if (editRender?.type === 'date' && value) {\r\n            const timestamp = getExcelTimestamp(value)\r\n            row[field] = toDateString(timestamp, 'yyyy-MM-dd')\r\n            return\r\n          }\r\n          row[field] = value\r\n        }\r\n        return row\r\n      }, {})\r\n    rows.push(row)\r\n  })\r\n  return rows\r\n}\r\n"],"mappings":"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"}]}