{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\monitProcFeedback\\monitProcFeedbackModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\monitProcFeedback\\monitProcFeedbackModal.vue","mtime":1694505522810},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvKSB7ICJAYmFiZWwvaGVscGVycyAtIHR5cGVvZiI7IHJldHVybiBfdHlwZW9mID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgU3ltYm9sICYmICJzeW1ib2wiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiAiZnVuY3Rpb24iID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9CmZ1bmN0aW9uIG93bktleXMoZSwgcikgeyB2YXIgdCA9IE9iamVjdC5rZXlzKGUpOyBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykgeyB2YXIgbyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7IHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLCByKS5lbnVtZXJhYmxlOyB9KSksIHQucHVzaC5hcHBseSh0LCBvKTsgfSByZXR1cm4gdDsgfQpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9CmZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgdmFsdWUpIHsga2V5ID0gX3RvUHJvcGVydHlLZXkoa2V5KTsgaWYgKGtleSBpbiBvYmopIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7IHZhbHVlOiB2YWx1ZSwgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSB9KTsgfSBlbHNlIHsgb2JqW2tleV0gPSB2YWx1ZTsgfSByZXR1cm4gb2JqOyB9CmZ1bmN0aW9uIF90b1Byb3BlcnR5S2V5KGFyZykgeyB2YXIga2V5ID0gX3RvUHJpbWl0aXZlKGFyZywgInN0cmluZyIpOyByZXR1cm4gX3R5cGVvZihrZXkpID09PSAic3ltYm9sIiA/IGtleSA6IFN0cmluZyhrZXkpOyB9CmZ1bmN0aW9uIF90b1ByaW1pdGl2ZShpbnB1dCwgaGludCkgeyBpZiAoX3R5cGVvZihpbnB1dCkgIT09ICJvYmplY3QiIHx8IGlucHV0ID09PSBudWxsKSByZXR1cm4gaW5wdXQ7IHZhciBwcmltID0gaW5wdXRbU3ltYm9sLnRvUHJpbWl0aXZlXTsgaWYgKHByaW0gIT09IHVuZGVmaW5lZCkgeyB2YXIgcmVzID0gcHJpbS5jYWxsKGlucHV0LCBoaW50IHx8ICJkZWZhdWx0Iik7IGlmIChfdHlwZW9mKHJlcykgIT09ICJvYmplY3QiKSByZXR1cm4gcmVzOyB0aHJvdyBuZXcgVHlwZUVycm9yKCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLiIpOyB9IHJldHVybiAoaGludCA9PT0gInN0cmluZyIgPyBTdHJpbmcgOiBOdW1iZXIpKGlucHV0KTsgfQpmdW5jdGlvbiBfcmVnZW5lcmF0b3JSdW50aW1lKCkgeyAidXNlIHN0cmljdCI7IC8qISByZWdlbmVyYXRvci1ydW50aW1lIC0tIENvcHlyaWdodCAoYykgMjAxNC1wcmVzZW50LCBGYWNlYm9vaywgSW5jLiAtLSBsaWNlbnNlIChNSVQpOiBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvYmxvYi9tYWluL0xJQ0VOU0UgKi8gX3JlZ2VuZXJhdG9yUnVudGltZSA9IGZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7IHJldHVybiBlOyB9OyB2YXIgdCwgZSA9IHt9LCByID0gT2JqZWN0LnByb3RvdHlwZSwgbiA9IHIuaGFzT3duUHJvcGVydHksIG8gPSBPYmplY3QuZGVmaW5lUHJvcGVydHkgfHwgZnVuY3Rpb24gKHQsIGUsIHIpIHsgdFtlXSA9IHIudmFsdWU7IH0sIGkgPSAiZnVuY3Rpb24iID09IHR5cGVvZiBTeW1ib2wgPyBTeW1ib2wgOiB7fSwgYSA9IGkuaXRlcmF0b3IgfHwgIkBAaXRlcmF0b3IiLCBjID0gaS5hc3luY0l0ZXJhdG9yIHx8ICJAQGFzeW5jSXRlcmF0b3IiLCB1ID0gaS50b1N0cmluZ1RhZyB8fCAiQEB0b1N0cmluZ1RhZyI7IGZ1bmN0aW9uIGRlZmluZSh0LCBlLCByKSB7IHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkodCwgZSwgeyB2YWx1ZTogciwgZW51bWVyYWJsZTogITAsIGNvbmZpZ3VyYWJsZTogITAsIHdyaXRhYmxlOiAhMCB9KSwgdFtlXTsgfSB0cnkgeyBkZWZpbmUoe30sICIiKTsgfSBjYXRjaCAodCkgeyBkZWZpbmUgPSBmdW5jdGlvbiBkZWZpbmUodCwgZSwgcikgeyByZXR1cm4gdFtlXSA9IHI7IH07IH0gZnVuY3Rpb24gd3JhcCh0LCBlLCByLCBuKSB7IHZhciBpID0gZSAmJiBlLnByb3RvdHlwZSBpbnN0YW5jZW9mIEdlbmVyYXRvciA/IGUgOiBHZW5lcmF0b3IsIGEgPSBPYmplY3QuY3JlYXRlKGkucHJvdG90eXBlKSwgYyA9IG5ldyBDb250ZXh0KG4gfHwgW10pOyByZXR1cm4gbyhhLCAiX2ludm9rZSIsIHsgdmFsdWU6IG1ha2VJbnZva2VNZXRob2QodCwgciwgYykgfSksIGE7IH0gZnVuY3Rpb24gdHJ5Q2F0Y2godCwgZSwgcikgeyB0cnkgeyByZXR1cm4geyB0eXBlOiAibm9ybWFsIiwgYXJnOiB0LmNhbGwoZSwgcikgfTsgfSBjYXRjaCAodCkgeyByZXR1cm4geyB0eXBlOiAidGhyb3ciLCBhcmc6IHQgfTsgfSB9IGUud3JhcCA9IHdyYXA7IHZhciBoID0gInN1c3BlbmRlZFN0YXJ0IiwgbCA9ICJzdXNwZW5kZWRZaWVsZCIsIGYgPSAiZXhlY3V0aW5nIiwgcyA9ICJjb21wbGV0ZWQiLCB5ID0ge307IGZ1bmN0aW9uIEdlbmVyYXRvcigpIHt9IGZ1bmN0aW9uIEdlbmVyYXRvckZ1bmN0aW9uKCkge30gZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUoKSB7fSB2YXIgcCA9IHt9OyBkZWZpbmUocCwgYSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7IHZhciBkID0gT2JqZWN0LmdldFByb3RvdHlwZU9mLCB2ID0gZCAmJiBkKGQodmFsdWVzKFtdKSkpOyB2ICYmIHYgIT09IHIgJiYgbi5jYWxsKHYsIGEpICYmIChwID0gdik7IHZhciBnID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUucHJvdG90eXBlID0gR2VuZXJhdG9yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUocCk7IGZ1bmN0aW9uIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyh0KSB7IFsibmV4dCIsICJ0aHJvdyIsICJyZXR1cm4iXS5mb3JFYWNoKGZ1bmN0aW9uIChlKSB7IGRlZmluZSh0LCBlLCBmdW5jdGlvbiAodCkgeyByZXR1cm4gdGhpcy5faW52b2tlKGUsIHQpOyB9KTsgfSk7IH0gZnVuY3Rpb24gQXN5bmNJdGVyYXRvcih0LCBlKSB7IGZ1bmN0aW9uIGludm9rZShyLCBvLCBpLCBhKSB7IHZhciBjID0gdHJ5Q2F0Y2godFtyXSwgdCwgbyk7IGlmICgidGhyb3ciICE9PSBjLnR5cGUpIHsgdmFyIHUgPSBjLmFyZywgaCA9IHUudmFsdWU7IHJldHVybiBoICYmICJvYmplY3QiID09IF90eXBlb2YoaCkgJiYgbi5jYWxsKGgsICJfX2F3YWl0IikgPyBlLnJlc29sdmUoaC5fX2F3YWl0KS50aGVuKGZ1bmN0aW9uICh0KSB7IGludm9rZSgibmV4dCIsIHQsIGksIGEpOyB9LCBmdW5jdGlvbiAodCkgeyBpbnZva2UoInRocm93IiwgdCwgaSwgYSk7IH0pIDogZS5yZXNvbHZlKGgpLnRoZW4oZnVuY3Rpb24gKHQpIHsgdS52YWx1ZSA9IHQsIGkodSk7IH0sIGZ1bmN0aW9uICh0KSB7IHJldHVybiBpbnZva2UoInRocm93IiwgdCwgaSwgYSk7IH0pOyB9IGEoYy5hcmcpOyB9IHZhciByOyBvKHRoaXMsICJfaW52b2tlIiwgeyB2YWx1ZTogZnVuY3Rpb24gdmFsdWUodCwgbikgeyBmdW5jdGlvbiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpIHsgcmV0dXJuIG5ldyBlKGZ1bmN0aW9uIChlLCByKSB7IGludm9rZSh0LCBuLCBlLCByKTsgfSk7IH0gcmV0dXJuIHIgPSByID8gci50aGVuKGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnLCBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZykgOiBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZygpOyB9IH0pOyB9IGZ1bmN0aW9uIG1ha2VJbnZva2VNZXRob2QoZSwgciwgbikgeyB2YXIgbyA9IGg7IHJldHVybiBmdW5jdGlvbiAoaSwgYSkgeyBpZiAobyA9PT0gZikgdGhyb3cgbmV3IEVycm9yKCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nIik7IGlmIChvID09PSBzKSB7IGlmICgidGhyb3ciID09PSBpKSB0aHJvdyBhOyByZXR1cm4geyB2YWx1ZTogdCwgZG9uZTogITAgfTsgfSBmb3IgKG4ubWV0aG9kID0gaSwgbi5hcmcgPSBhOzspIHsgdmFyIGMgPSBuLmRlbGVnYXRlOyBpZiAoYykgeyB2YXIgdSA9IG1heWJlSW52b2tlRGVsZWdhdGUoYywgbik7IGlmICh1KSB7IGlmICh1ID09PSB5KSBjb250aW51ZTsgcmV0dXJuIHU7IH0gfSBpZiAoIm5leHQiID09PSBuLm1ldGhvZCkgbi5zZW50ID0gbi5fc2VudCA9IG4uYXJnO2Vsc2UgaWYgKCJ0aHJvdyIgPT09IG4ubWV0aG9kKSB7IGlmIChvID09PSBoKSB0aHJvdyBvID0gcywgbi5hcmc7IG4uZGlzcGF0Y2hFeGNlcHRpb24obi5hcmcpOyB9IGVsc2UgInJldHVybiIgPT09IG4ubWV0aG9kICYmIG4uYWJydXB0KCJyZXR1cm4iLCBuLmFyZyk7IG8gPSBmOyB2YXIgcCA9IHRyeUNhdGNoKGUsIHIsIG4pOyBpZiAoIm5vcm1hbCIgPT09IHAudHlwZSkgeyBpZiAobyA9IG4uZG9uZSA/IHMgOiBsLCBwLmFyZyA9PT0geSkgY29udGludWU7IHJldHVybiB7IHZhbHVlOiBwLmFyZywgZG9uZTogbi5kb25lIH07IH0gInRocm93IiA9PT0gcC50eXBlICYmIChvID0gcywgbi5tZXRob2QgPSAidGhyb3ciLCBuLmFyZyA9IHAuYXJnKTsgfSB9OyB9IGZ1bmN0aW9uIG1heWJlSW52b2tlRGVsZWdhdGUoZSwgcikgeyB2YXIgbiA9IHIubWV0aG9kLCBvID0gZS5pdGVyYXRvcltuXTsgaWYgKG8gPT09IHQpIHJldHVybiByLmRlbGVnYXRlID0gbnVsbCwgInRocm93IiA9PT0gbiAmJiBlLml0ZXJhdG9yLnJldHVybiAmJiAoci5tZXRob2QgPSAicmV0dXJuIiwgci5hcmcgPSB0LCBtYXliZUludm9rZURlbGVnYXRlKGUsIHIpLCAidGhyb3ciID09PSByLm1ldGhvZCkgfHwgInJldHVybiIgIT09IG4gJiYgKHIubWV0aG9kID0gInRocm93Iiwgci5hcmcgPSBuZXcgVHlwZUVycm9yKCJUaGUgaXRlcmF0b3IgZG9lcyBub3QgcHJvdmlkZSBhICciICsgbiArICInIG1ldGhvZCIpKSwgeTsgdmFyIGkgPSB0cnlDYXRjaChvLCBlLml0ZXJhdG9yLCByLmFyZyk7IGlmICgidGhyb3ciID09PSBpLnR5cGUpIHJldHVybiByLm1ldGhvZCA9ICJ0aHJvdyIsIHIuYXJnID0gaS5hcmcsIHIuZGVsZWdhdGUgPSBudWxsLCB5OyB2YXIgYSA9IGkuYXJnOyByZXR1cm4gYSA/IGEuZG9uZSA/IChyW2UucmVzdWx0TmFtZV0gPSBhLnZhbHVlLCByLm5leHQgPSBlLm5leHRMb2MsICJyZXR1cm4iICE9PSByLm1ldGhvZCAmJiAoci5tZXRob2QgPSAibmV4dCIsIHIuYXJnID0gdCksIHIuZGVsZWdhdGUgPSBudWxsLCB5KSA6IGEgOiAoci5tZXRob2QgPSAidGhyb3ciLCByLmFyZyA9IG5ldyBUeXBlRXJyb3IoIml0ZXJhdG9yIHJlc3VsdCBpcyBub3QgYW4gb2JqZWN0IiksIHIuZGVsZWdhdGUgPSBudWxsLCB5KTsgfSBmdW5jdGlvbiBwdXNoVHJ5RW50cnkodCkgeyB2YXIgZSA9IHsgdHJ5TG9jOiB0WzBdIH07IDEgaW4gdCAmJiAoZS5jYXRjaExvYyA9IHRbMV0pLCAyIGluIHQgJiYgKGUuZmluYWxseUxvYyA9IHRbMl0sIGUuYWZ0ZXJMb2MgPSB0WzNdKSwgdGhpcy50cnlFbnRyaWVzLnB1c2goZSk7IH0gZnVuY3Rpb24gcmVzZXRUcnlFbnRyeSh0KSB7IHZhciBlID0gdC5jb21wbGV0aW9uIHx8IHt9OyBlLnR5cGUgPSAibm9ybWFsIiwgZGVsZXRlIGUuYXJnLCB0LmNvbXBsZXRpb24gPSBlOyB9IGZ1bmN0aW9uIENvbnRleHQodCkgeyB0aGlzLnRyeUVudHJpZXMgPSBbeyB0cnlMb2M6ICJyb290IiB9XSwgdC5mb3JFYWNoKHB1c2hUcnlFbnRyeSwgdGhpcyksIHRoaXMucmVzZXQoITApOyB9IGZ1bmN0aW9uIHZhbHVlcyhlKSB7IGlmIChlIHx8ICIiID09PSBlKSB7IHZhciByID0gZVthXTsgaWYgKHIpIHJldHVybiByLmNhbGwoZSk7IGlmICgiZnVuY3Rpb24iID09IHR5cGVvZiBlLm5leHQpIHJldHVybiBlOyBpZiAoIWlzTmFOKGUubGVuZ3RoKSkgeyB2YXIgbyA9IC0xLCBpID0gZnVuY3Rpb24gbmV4dCgpIHsgZm9yICg7ICsrbyA8IGUubGVuZ3RoOykgaWYgKG4uY2FsbChlLCBvKSkgcmV0dXJuIG5leHQudmFsdWUgPSBlW29dLCBuZXh0LmRvbmUgPSAhMSwgbmV4dDsgcmV0dXJuIG5leHQudmFsdWUgPSB0LCBuZXh0LmRvbmUgPSAhMCwgbmV4dDsgfTsgcmV0dXJuIGkubmV4dCA9IGk7IH0gfSB0aHJvdyBuZXcgVHlwZUVycm9yKF90eXBlb2YoZSkgKyAiIGlzIG5vdCBpdGVyYWJsZSIpOyB9IHJldHVybiBHZW5lcmF0b3JGdW5jdGlvbi5wcm90b3R5cGUgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgbyhnLCAiY29uc3RydWN0b3IiLCB7IHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgY29uZmlndXJhYmxlOiAhMCB9KSwgbyhHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSwgImNvbnN0cnVjdG9yIiwgeyB2YWx1ZTogR2VuZXJhdG9yRnVuY3Rpb24sIGNvbmZpZ3VyYWJsZTogITAgfSksIEdlbmVyYXRvckZ1bmN0aW9uLmRpc3BsYXlOYW1lID0gZGVmaW5lKEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCB1LCAiR2VuZXJhdG9yRnVuY3Rpb24iKSwgZS5pc0dlbmVyYXRvckZ1bmN0aW9uID0gZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSAiZnVuY3Rpb24iID09IHR5cGVvZiB0ICYmIHQuY29uc3RydWN0b3I7IHJldHVybiAhIWUgJiYgKGUgPT09IEdlbmVyYXRvckZ1bmN0aW9uIHx8ICJHZW5lcmF0b3JGdW5jdGlvbiIgPT09IChlLmRpc3BsYXlOYW1lIHx8IGUubmFtZSkpOyB9LCBlLm1hcmsgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHQsIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKSA6ICh0Ll9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBkZWZpbmUodCwgdSwgIkdlbmVyYXRvckZ1bmN0aW9uIikpLCB0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoZyksIHQ7IH0sIGUuYXdyYXAgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4geyBfX2F3YWl0OiB0IH07IH0sIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSksIGRlZmluZShBc3luY0l0ZXJhdG9yLnByb3RvdHlwZSwgYywgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSksIGUuQXN5bmNJdGVyYXRvciA9IEFzeW5jSXRlcmF0b3IsIGUuYXN5bmMgPSBmdW5jdGlvbiAodCwgciwgbiwgbywgaSkgeyB2b2lkIDAgPT09IGkgJiYgKGkgPSBQcm9taXNlKTsgdmFyIGEgPSBuZXcgQXN5bmNJdGVyYXRvcih3cmFwKHQsIHIsIG4sIG8pLCBpKTsgcmV0dXJuIGUuaXNHZW5lcmF0b3JGdW5jdGlvbihyKSA/IGEgOiBhLm5leHQoKS50aGVuKGZ1bmN0aW9uICh0KSB7IHJldHVybiB0LmRvbmUgPyB0LnZhbHVlIDogYS5uZXh0KCk7IH0pOyB9LCBkZWZpbmVJdGVyYXRvck1ldGhvZHMoZyksIGRlZmluZShnLCB1LCAiR2VuZXJhdG9yIiksIGRlZmluZShnLCBhLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSwgZGVmaW5lKGcsICJ0b1N0cmluZyIsIGZ1bmN0aW9uICgpIHsgcmV0dXJuICJbb2JqZWN0IEdlbmVyYXRvcl0iOyB9KSwgZS5rZXlzID0gZnVuY3Rpb24gKHQpIHsgdmFyIGUgPSBPYmplY3QodCksIHIgPSBbXTsgZm9yICh2YXIgbiBpbiBlKSByLnB1c2gobik7IHJldHVybiByLnJldmVyc2UoKSwgZnVuY3Rpb24gbmV4dCgpIHsgZm9yICg7IHIubGVuZ3RoOykgeyB2YXIgdCA9IHIucG9wKCk7IGlmICh0IGluIGUpIHJldHVybiBuZXh0LnZhbHVlID0gdCwgbmV4dC5kb25lID0gITEsIG5leHQ7IH0gcmV0dXJuIG5leHQuZG9uZSA9ICEwLCBuZXh0OyB9OyB9LCBlLnZhbHVlcyA9IHZhbHVlcywgQ29udGV4dC5wcm90b3R5cGUgPSB7IGNvbnN0cnVjdG9yOiBDb250ZXh0LCByZXNldDogZnVuY3Rpb24gcmVzZXQoZSkgeyBpZiAodGhpcy5wcmV2ID0gMCwgdGhpcy5uZXh0ID0gMCwgdGhpcy5zZW50ID0gdGhpcy5fc2VudCA9IHQsIHRoaXMuZG9uZSA9ICExLCB0aGlzLmRlbGVnYXRlID0gbnVsbCwgdGhpcy5tZXRob2QgPSAibmV4dCIsIHRoaXMuYXJnID0gdCwgdGhpcy50cnlFbnRyaWVzLmZvckVhY2gocmVzZXRUcnlFbnRyeSksICFlKSBmb3IgKHZhciByIGluIHRoaXMpICJ0IiA9PT0gci5jaGFyQXQoMCkgJiYgbi5jYWxsKHRoaXMsIHIpICYmICFpc05hTigrci5zbGljZSgxKSkgJiYgKHRoaXNbcl0gPSB0KTsgfSwgc3RvcDogZnVuY3Rpb24gc3RvcCgpIHsgdGhpcy5kb25lID0gITA7IHZhciB0ID0gdGhpcy50cnlFbnRyaWVzWzBdLmNvbXBsZXRpb247IGlmICgidGhyb3ciID09PSB0LnR5cGUpIHRocm93IHQuYXJnOyByZXR1cm4gdGhpcy5ydmFsOyB9LCBkaXNwYXRjaEV4Y2VwdGlvbjogZnVuY3Rpb24gZGlzcGF0Y2hFeGNlcHRpb24oZSkgeyBpZiAodGhpcy5kb25lKSB0aHJvdyBlOyB2YXIgciA9IHRoaXM7IGZ1bmN0aW9uIGhhbmRsZShuLCBvKSB7IHJldHVybiBhLnR5cGUgPSAidGhyb3ciLCBhLmFyZyA9IGUsIHIubmV4dCA9IG4sIG8gJiYgKHIubWV0aG9kID0gIm5leHQiLCByLmFyZyA9IHQpLCAhIW87IH0gZm9yICh2YXIgbyA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBvID49IDA7IC0tbykgeyB2YXIgaSA9IHRoaXMudHJ5RW50cmllc1tvXSwgYSA9IGkuY29tcGxldGlvbjsgaWYgKCJyb290IiA9PT0gaS50cnlMb2MpIHJldHVybiBoYW5kbGUoImVuZCIpOyBpZiAoaS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7IHZhciBjID0gbi5jYWxsKGksICJjYXRjaExvYyIpLCB1ID0gbi5jYWxsKGksICJmaW5hbGx5TG9jIik7IGlmIChjICYmIHUpIHsgaWYgKHRoaXMucHJldiA8IGkuY2F0Y2hMb2MpIHJldHVybiBoYW5kbGUoaS5jYXRjaExvYywgITApOyBpZiAodGhpcy5wcmV2IDwgaS5maW5hbGx5TG9jKSByZXR1cm4gaGFuZGxlKGkuZmluYWxseUxvYyk7IH0gZWxzZSBpZiAoYykgeyBpZiAodGhpcy5wcmV2IDwgaS5jYXRjaExvYykgcmV0dXJuIGhhbmRsZShpLmNhdGNoTG9jLCAhMCk7IH0gZWxzZSB7IGlmICghdSkgdGhyb3cgbmV3IEVycm9yKCJ0cnkgc3RhdGVtZW50IHdpdGhvdXQgY2F0Y2ggb3IgZmluYWxseSIpOyBpZiAodGhpcy5wcmV2IDwgaS5maW5hbGx5TG9jKSByZXR1cm4gaGFuZGxlKGkuZmluYWxseUxvYyk7IH0gfSB9IH0sIGFicnVwdDogZnVuY3Rpb24gYWJydXB0KHQsIGUpIHsgZm9yICh2YXIgciA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyByID49IDA7IC0tcikgeyB2YXIgbyA9IHRoaXMudHJ5RW50cmllc1tyXTsgaWYgKG8udHJ5TG9jIDw9IHRoaXMucHJldiAmJiBuLmNhbGwobywgImZpbmFsbHlMb2MiKSAmJiB0aGlzLnByZXYgPCBvLmZpbmFsbHlMb2MpIHsgdmFyIGkgPSBvOyBicmVhazsgfSB9IGkgJiYgKCJicmVhayIgPT09IHQgfHwgImNvbnRpbnVlIiA9PT0gdCkgJiYgaS50cnlMb2MgPD0gZSAmJiBlIDw9IGkuZmluYWxseUxvYyAmJiAoaSA9IG51bGwpOyB2YXIgYSA9IGkgPyBpLmNvbXBsZXRpb24gOiB7fTsgcmV0dXJuIGEudHlwZSA9IHQsIGEuYXJnID0gZSwgaSA/ICh0aGlzLm1ldGhvZCA9ICJuZXh0IiwgdGhpcy5uZXh0ID0gaS5maW5hbGx5TG9jLCB5KSA6IHRoaXMuY29tcGxldGUoYSk7IH0sIGNvbXBsZXRlOiBmdW5jdGlvbiBjb21wbGV0ZSh0LCBlKSB7IGlmICgidGhyb3ciID09PSB0LnR5cGUpIHRocm93IHQuYXJnOyByZXR1cm4gImJyZWFrIiA9PT0gdC50eXBlIHx8ICJjb250aW51ZSIgPT09IHQudHlwZSA/IHRoaXMubmV4dCA9IHQuYXJnIDogInJldHVybiIgPT09IHQudHlwZSA/ICh0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHQuYXJnLCB0aGlzLm1ldGhvZCA9ICJyZXR1cm4iLCB0aGlzLm5leHQgPSAiZW5kIikgOiAibm9ybWFsIiA9PT0gdC50eXBlICYmIGUgJiYgKHRoaXMubmV4dCA9IGUpLCB5OyB9LCBmaW5pc2g6IGZ1bmN0aW9uIGZpbmlzaCh0KSB7IGZvciAodmFyIGUgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgZSA+PSAwOyAtLWUpIHsgdmFyIHIgPSB0aGlzLnRyeUVudHJpZXNbZV07IGlmIChyLmZpbmFsbHlMb2MgPT09IHQpIHJldHVybiB0aGlzLmNvbXBsZXRlKHIuY29tcGxldGlvbiwgci5hZnRlckxvYyksIHJlc2V0VHJ5RW50cnkociksIHk7IH0gfSwgY2F0Y2g6IGZ1bmN0aW9uIF9jYXRjaCh0KSB7IGZvciAodmFyIGUgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgZSA+PSAwOyAtLWUpIHsgdmFyIHIgPSB0aGlzLnRyeUVudHJpZXNbZV07IGlmIChyLnRyeUxvYyA9PT0gdCkgeyB2YXIgbiA9IHIuY29tcGxldGlvbjsgaWYgKCJ0aHJvdyIgPT09IG4udHlwZSkgeyB2YXIgbyA9IG4uYXJnOyByZXNldFRyeUVudHJ5KHIpOyB9IHJldHVybiBvOyB9IH0gdGhyb3cgbmV3IEVycm9yKCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHQiKTsgfSwgZGVsZWdhdGVZaWVsZDogZnVuY3Rpb24gZGVsZWdhdGVZaWVsZChlLCByLCBuKSB7IHJldHVybiB0aGlzLmRlbGVnYXRlID0geyBpdGVyYXRvcjogdmFsdWVzKGUpLCByZXN1bHROYW1lOiByLCBuZXh0TG9jOiBuIH0sICJuZXh0IiA9PT0gdGhpcy5tZXRob2QgJiYgKHRoaXMuYXJnID0gdCksIHk7IH0gfSwgZTsgfQpmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csIGtleSwgYXJnKSB7IHRyeSB7IHZhciBpbmZvID0gZ2VuW2tleV0oYXJnKTsgdmFyIHZhbHVlID0gaW5mby52YWx1ZTsgfSBjYXRjaCAoZXJyb3IpIHsgcmVqZWN0KGVycm9yKTsgcmV0dXJuOyB9IGlmIChpbmZvLmRvbmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0gZWxzZSB7IFByb21pc2UucmVzb2x2ZSh2YWx1ZSkudGhlbihfbmV4dCwgX3Rocm93KTsgfSB9CmZ1bmN0aW9uIF9hc3luY1RvR2VuZXJhdG9yKGZuKSB7IHJldHVybiBmdW5jdGlvbiAoKSB7IHZhciBzZWxmID0gdGhpcywgYXJncyA9IGFyZ3VtZW50czsgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsgdmFyIGdlbiA9IGZuLmFwcGx5KHNlbGYsIGFyZ3MpOyBmdW5jdGlvbiBfbmV4dCh2YWx1ZSkgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJuZXh0IiwgdmFsdWUpOyB9IGZ1bmN0aW9uIF90aHJvdyhlcnIpIHsgYXN5bmNHZW5lcmF0b3JTdGVwKGdlbiwgcmVzb2x2ZSwgcmVqZWN0LCBfbmV4dCwgX3Rocm93LCAidGhyb3ciLCBlcnIpOyB9IF9uZXh0KHVuZGVmaW5lZCk7IH0pOyB9OyB9Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCgovLyBpbXBvcnQgeyBwcm9jb25mIH0gZnJvbSAnLi9jcmVhdGVQcm9jZXNzaW5nLmpzJwppbXBvcnQgSHR0cE1vZHVsZSBmcm9tICdAL2FwaS9mcmFtZS9tYWluL2Z1bmRNb25pdG9yaW5nL2NyZWF0ZVByb2Nlc3NpbmcuanMnOwovLyBpbXBvcnQgeyBjaGVja1Bob25lIH0gZnJvbSAnQC91dGlscy9pbmRleC5qcycKaW1wb3J0IFZYRVRhYmxlIGZyb20gJ3Z4ZS10YWJsZSc7CmltcG9ydCBsb2FkQnNDb25maWcgZnJvbSAnQC92aWV3cy9tYWluL2R5bmFtaWNUYWJsZVNldHRpbmcvY29uZmlnJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdIYW5kbGVEaWFsb2cnLAogIG1peGluczogW2xvYWRCc0NvbmZpZ10sCiAgY29tcHV0ZWQ6IHsKICAgIHVzZXJJbmZvOiBmdW5jdGlvbiB1c2VySW5mbygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvOwogICAgfQogIH0sCiAgcHJvcHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjb25maWdUeXBlSWQ6IHt9LAogICAgICB0YWJsZUxvYWRpbmc6IGZhbHNlLAogICAgICB0YWJDb2RlOiAnZGNsLWhzZmsnLAogICAgICBzaG93Rm9ybVR5cGU6IHsKICAgICAgICBzaG93MTogdHJ1ZSwKICAgICAgICBzaG93MjogdHJ1ZSwKICAgICAgICBzaG93MzogZmFsc2UsCiAgICAgICAgc2hvdzQ6IGZhbHNlLAogICAgICAgIHNob3c1OiBmYWxzZQogICAgICB9LAogICAgICBmb3JtRGF0YTogW10sCiAgICAgIHZhbGlkYXRlRGF0YToge30sCiAgICAgIHRpdGxlOiAn55uR5o6n5aSE55CG5Y2VJywKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGNyZWF0ZVZhbGlkYXRlOiB7CgogICAgICAgIC8vIHBob25lMTogWwogICAgICAgIC8vICAgeyB2YWxpZGF0b3I6IHByb2NvbmYubW9iaWxlUGhvbmVWYWxpZCwgdHJpZ2dlcjogJ2NoYW5nZScgfQogICAgICAgIC8vIF0KICAgICAgfSwKICAgICAgZG93bmxvYWRQYXJhbXM6IHsKICAgICAgICBmaWxlZ3VpZDogJycKICAgICAgfSwKICAgICAgY3JlYXRlRGF0YUxpc3Q6IHt9LAogICAgICBhdHRhY2htZW50aWQ6ICcnLAogICAgICBpc0NyZWF0ZTogdHJ1ZSwKICAgICAgc2hvd2JveDogZmFsc2UsCiAgICAgIGZpbGVMaXN0MzogW3t9XSwKICAgICAgZmlsZURhdGEzOiBbXSwKICAgICAgZmlsZURhdGFCYWtEZWwzOiBbXSwKICAgICAgYWRkTG9hZGluZzogZmFsc2UsCiAgICAgIHBhcmFtNToge30KICAgICAgLy8gLS0tLQogICAgfTsKICB9LAoKICBtZXRob2RzOiB7CiAgICBnZXRBdHRhY2htZW50SW5mbzogZnVuY3Rpb24gZ2V0QXR0YWNobWVudEluZm8oYmlsbGd1aWQpIHsKICAgICAgaWYgKCFiaWxsZ3VpZCkgcmV0dXJuIFtdOwogICAgICB2YXIgcGFyYW1zID0gewogICAgICAgIHllYXI6IHRoaXMudXNlckluZm8ueWVhciwKICAgICAgICBwcm92aW5jZTogdGhpcy5tb2ZEaXZDb2RlIHx8IHRoaXMudXNlckluZm8ucHJvdmluY2UsCiAgICAgICAgYmlsbGd1aWQ6IGJpbGxndWlkCiAgICAgIH07CiAgICAgIHJldHVybiBIdHRwTW9kdWxlLmdldEZpbGUocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgZmlsZUxpc3QgPSBKU09OLnBhcnNlKHJlcy5kYXRhKSB8fCBbXTsKICAgICAgICBmaWxlTGlzdC5sZW5ndGggJiYgZmlsZUxpc3QuZm9yRWFjaChmdW5jdGlvbiAoZWxlbWVudCkgewogICAgICAgICAgdmFyIHNpemUgPSBlbGVtZW50LmZpbGVzaXplIC8gMTAyNDsKICAgICAgICAgIGVsZW1lbnQuZmlsZXNpemUgPSBzaXplLnRvRml4ZWQoMikgKyAnS0InOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBmaWxlTGlzdDsKICAgICAgfSk7CiAgICB9LAogICAgc2V0T3RoZXJGb3JtSXRlbTogZnVuY3Rpb24gc2V0T3RoZXJGb3JtSXRlbSgpIHsKICAgICAgdGhpcy5zaG93Rm9ybVR5cGUgPSB7CiAgICAgICAgc2hvdzE6IGZhbHNlLAogICAgICAgIHNob3cyOiBmYWxzZSwKICAgICAgICBzaG93MzogZmFsc2UsCiAgICAgICAgc2hvdzQ6IGZhbHNlLAogICAgICAgIHNob3c1OiBmYWxzZQogICAgICB9OwogICAgfSwKICAgIHNldEZvcm1EaXNhYmxlZDogZnVuY3Rpb24gc2V0Rm9ybURpc2FibGVkKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgdmFyIGZvcm1JdGVtSW5kZXhMaXN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTsKICAgICAgaWYgKCFmb3JtSXRlbUluZGV4TGlzdC5sZW5ndGgpIHJldHVybjsKICAgICAgZm9ybUl0ZW1JbmRleExpc3QuZm9yRWFjaChmdW5jdGlvbiAoZm9ybUl0ZW0pIHsKICAgICAgICBfdGhpczJbImNyZWF0ZUNvbmZpZyIuY29uY2F0KGZvcm1JdGVtKV0uZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgaXRlbS5pdGVtUmVuZGVyLnByb3BzWydkaXNhYmxlZCddID0gdHJ1ZTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgLyoqDQogICAgICoNCiAgICAgKiBAcGFyYW0ge0FycmF5W3N0cmluZ119IGZvcm1JdGVtSW5kZXhMaXN0IOWcqGRhdGHlrprkuYnnmoTooajljZXlrZfmrrVsaXN0DQogICAgICogQHBhcmFtIHtBcnJheVtzdHJpbmddfSBmaWxlZExpc3Qg6ZyA6KaB56aB55So55qE5a2X5q61LOS8oGZpbGVk55qE5YC8DQogICAgICovCiAgICBzZXRGb3JtSXRlbURpc2FibGVkOiBmdW5jdGlvbiBzZXRGb3JtSXRlbURpc2FibGVkKGZvcm1JdGVtSW5kZXhMaXN0LCBmaWxlZExpc3QpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIC8vCiAgICAgIGlmICghZm9ybUl0ZW1JbmRleExpc3QubGVuZ3RoKSByZXR1cm47CiAgICAgIGZvcm1JdGVtSW5kZXhMaXN0LmZvckVhY2goZnVuY3Rpb24gKGZvcm1JdGVtKSB7CiAgICAgICAgX3RoaXMzWyJjcmVhdGVDb25maWciLmNvbmNhdChmb3JtSXRlbSldLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIGlmIChmaWxlZExpc3QuaW5jbHVkZXMoaXRlbS5maWVsZCkpIHsKICAgICAgICAgICAgaXRlbS5pdGVtUmVuZGVyLnByb3BzWydkaXNhYmxlZCddID0gdHJ1ZTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGl0ZW0uaXRlbVJlbmRlci5wcm9wc1snZGlzYWJsZWQnXSA9IGZhbHNlOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBkaWFsb2dDbG9zZTogZnVuY3Rpb24gZGlhbG9nQ2xvc2UoKSB7CiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IGZhbHNlOwogICAgICB0aGlzLiRlbWl0KCdjbG9zZScpOwogICAgfSwKICAgIGl0ZW1DaGFuZ2U6IGZ1bmN0aW9uIGl0ZW1DaGFuZ2UoX3JlZiwgYnNmb3JtKSB7CiAgICAgIHZhciBfdGhpcyQkcmVmcyRjcmVhdGVSZWYsIF90aGlzJCRyZWZzJGNyZWF0ZVJlZjIsIF90aGlzJCRyZWZzJGNyZWF0ZVJlZjMsIF90aGlzJCRyZWZzJGNyZWF0ZVJlZjQ7CiAgICAgIHZhciAkZm9ybSA9IF9yZWYuJGZvcm0sCiAgICAgICAgcHJvcGVydHkgPSBfcmVmLnByb3BlcnR5LAogICAgICAgIGl0ZW1WYWx1ZSA9IF9yZWYuaXRlbVZhbHVlLAogICAgICAgIGRhdGEgPSBfcmVmLmRhdGE7CiAgICAgIGNvbnNvbGUubG9nKCdjaGFuZ2VJdGVtcHJvcGVydHknLCBwcm9wZXJ0eSk7CiAgICAgIC8vIGZvcm3ooajljZXogZTliqjlvZPliY3lrZfmrrVjaGFuZ2Xkuovku7bku6PnkIYKICAgICAgc3dpdGNoIChwcm9wZXJ0eSkgewogICAgICAgIGNhc2UgJ3Zpb2xhdGVUeXBlJzoKICAgICAgICAgIChfdGhpcyQkcmVmcyRjcmVhdGVSZWYgPSB0aGlzLiRyZWZzLmNyZWF0ZVJlZikgPT09IG51bGwgfHwgX3RoaXMkJHJlZnMkY3JlYXRlUmVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3RoaXMkJHJlZnMkY3JlYXRlUmVmMiA9IF90aGlzJCRyZWZzJGNyZWF0ZVJlZi4kcmVmcykgPT09IG51bGwgfHwgX3RoaXMkJHJlZnMkY3JlYXRlUmVmMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF90aGlzJCRyZWZzJGNyZWF0ZVJlZjMgPSBfdGhpcyQkcmVmcyRjcmVhdGVSZWYyLmZvcm0pID09PSBudWxsIHx8IF90aGlzJCRyZWZzJGNyZWF0ZVJlZjMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfdGhpcyQkcmVmcyRjcmVhdGVSZWY0ID0gX3RoaXMkJHJlZnMkY3JlYXRlUmVmMy5jbGVhclZhbGlkYXRlKSA9PT0gbnVsbCB8fCBfdGhpcyQkcmVmcyRjcmVhdGVSZWY0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdGhpcyQkcmVmcyRjcmVhdGVSZWY0LmNhbGwoX3RoaXMkJHJlZnMkY3JlYXRlUmVmMyk7CiAgICAgICAgICB0aGlzLmNyZWF0ZURhdGFMaXN0LnZpb2xhdGVUeXBlID0gaXRlbVZhbHVlOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnaGFuZGxlVHlwZSc6CiAgICAgICAgICB0aGlzLmNyZWF0ZURhdGFMaXN0LmhhbmRsZVR5cGUgPSBpdGVtVmFsdWU7CiAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdoYW5kbGVSZXN1bHQnOgogICAgICAgICAgdGhpcy5jcmVhdGVEYXRhTGlzdC5oYW5kbGVSZXN1bHQgPSBpdGVtVmFsdWU7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICBnZXRUYWJsZUNvbmZCeU1lbnVndWlkOiBmdW5jdGlvbiBnZXRUYWJsZUNvbmZCeU1lbnVndWlkKG1lbnVndWlkKSB7CiAgICAgIC8vIOagueaNruiPnOWNlW1lbnVndWlk6I635Y+W5YW25LiL5omA5pyJ6KGo6YWN572uCiAgICAgIHZhciBzZWxmID0gdGhpczsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBzZWxmLiRodHRwLmdldCgnbXAtYi1wZXJtLXNlcnZpY2UvdjEvdGFibGVjb25mL21lbnVndWlkJywgewogICAgICAgICAgbWVudWd1aWQ6IG1lbnVndWlkLAogICAgICAgICAgbW9mX2Rpdl9jb2RlOiBzZWxmLnVzZXJJbmZvLnByb3ZpbmNlLAogICAgICAgICAgLy8g5Yy65YiSCiAgICAgICAgICBmaXNjYWx5ZWFyOiBzZWxmLnVzZXJJbmZvLnllYXIgLy8g5bm05Lu9CiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICBpZiAocmVzLnJzY29kZSA9PT0gJzEwMDAwMCcpIHsKICAgICAgICAgICAgcmVzb2x2ZShyZXMuZGF0YSk7CiAgICAgICAgICAgIC8vIHJlc29sdmUoc2VsZi5nZW5lcmF0ZUN1clRhYmxlQ29uZkRhdGFNYXAocmVzLmRhdGEpKQogICAgICAgICAgfQogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgZ2V0Rmxvd1BhcmFtVm9MaXN0OiBmdW5jdGlvbiBnZXRGbG93UGFyYW1Wb0xpc3QoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwogICAgICAvLyDojrflj5bliqjmgIHphY3nva7ooajljZXph4zpnaLnu5HlrprlvpdmaWVsZCDlubbkuJTnu4Too4XmiJBbe2tleTrooajljZXmr4/pobnlvpdmaWxlZCx2YWx1ZTrooajljZVmaWxlZOe7keWumuWAvH3vvIzvvIwuLi5d5Lyg57uZ5ZCO56uvCiAgICAgIHZhciBmbG93UGFyYW1Wb0xpc3QgPSBbXTsKICAgICAgdmFyIGZvcm1EYXRhID0ge307CiAgICAgIGlmICh0aGlzLmZvcm1EYXRhICYmIHRoaXMuZm9ybURhdGEubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5mb3JtRGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgICAgICAgaWYgKGl0ZW0udHlwZSAhPT0gJ2NvbXBvbmVudHMnKSB7CiAgICAgICAgICAgIC8vIOWIpOaWreS4jeaYr+S4iuS8oOe7hOS7tgogICAgICAgICAgICB2YXIgZm9ybUl0ZW1EYXRhID0ge307CiAgICAgICAgICAgIGlmIChpdGVtLmZvcm1SZWZLZXkpIHsKICAgICAgICAgICAgICBmb3JtSXRlbURhdGEgPSBfdGhpczQuJHJlZnNbaXRlbS5mb3JtUmVmS2V5XVswXS5nZXRGb3JtRGF0YSgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGZvcm1JdGVtRGF0YSA9IF90aGlzNC4kcmVmc1siY3JlYXRlUmVmIi5jb25jYXQoaW5kZXgpXVswXS5nZXRGb3JtRGF0YSgpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGl0ZW0uZm9ybUl0ZW1MaXN0LmZvckVhY2goZnVuY3Rpb24gKGlpLCBpZHgpIHsKICAgICAgICAgICAgICB2YXIgb2JqID0ge307CiAgICAgICAgICAgICAgb2JqLmJpektleSA9IGlpLmZpZWxkOwogICAgICAgICAgICAgIG9iai5iaXpWYWx1ZSA9IGZvcm1JdGVtRGF0YVtpaS5maWVsZF07CiAgICAgICAgICAgICAgaWYgKGl0ZW0ubmVlZFVwbG9hZCkgewogICAgICAgICAgICAgICAgLy8g6I635Y+W6ZyA6KaB5LiK5Lyg55qE5ZOq5Liq6KGo5Y2V55qE5pWw5o2uCiAgICAgICAgICAgICAgICBpZiAoaWkuZmllbGQuaW5kZXhPZignY29tbWVudERlcHQnKSA+IC0xKSB7CiAgICAgICAgICAgICAgICAgIHZhciBvYmoyID0gewogICAgICAgICAgICAgICAgICAgIGJpektleTogJ2NvbW1lbnROYW1lJywKICAgICAgICAgICAgICAgICAgICBiaXpWYWx1ZTogaWkuaXRlbVJlbmRlci5vcHRpb25zLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtLnZhbHVlID09PSBvYmouYml6VmFsdWU7CiAgICAgICAgICAgICAgICAgICAgfSkubGFiZWwKICAgICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICAgICAgZmxvd1BhcmFtVm9MaXN0LnB1c2gob2JqMik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBmbG93UGFyYW1Wb0xpc3QucHVzaChvYmopOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBmb3JtRGF0YVtpaS5maWVsZF0gPSBmb3JtSXRlbURhdGFbaWkuZmllbGRdOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHZhciBvYmogPSB7fTsKICAgICAgICAgICAgb2JqLmJpektleSA9IGl0ZW0uZmllbGQ7CiAgICAgICAgICAgIG9iai5iaXpWYWx1ZSA9IF90aGlzNC5jcmVhdGVEYXRhTGlzdC5jcmVhdGVkQXR0YWNobWVudGlkOwogICAgICAgICAgICBmbG93UGFyYW1Wb0xpc3QucHVzaChvYmopOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICAgIHJldHVybiB7CiAgICAgICAgZmxvd1BhcmFtVm9MaXN0OiBmbG93UGFyYW1Wb0xpc3QsCiAgICAgICAgZm9ybURhdGE6IGZvcm1EYXRhCiAgICAgIH07CiAgICB9LAogICAgLy8g5Y+N6aaICiAgICBkb0ZlZWRiYWNrOiBmdW5jdGlvbiBkb0ZlZWRiYWNrKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGZvcm1WYWxpZGFQYXNzLCBfdGhpczUkZ2V0Rmxvd1BhcmFtVm8sIGZsb3dQYXJhbVZvTGlzdCwgZm9ybURhdGEsIHBhcmFtczsKICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKCFPYmplY3Qua2V5cyhfdGhpczUudmFsaWRhdGVEYXRhKS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKE9iamVjdC5rZXlzKF90aGlzNS52YWxpZGF0ZURhdGEpLm1hcChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgICAgICAgICB2YXIgX3JlZjI7CiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKF94LCBfeDIpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIChfcmVmMiA9IF9yZWYyIHx8IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICAgICAgICAgICAgICB2YXIgZm9ybUluc3RhbmNlLCB2YWxpZDsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICAgICAgICAgIHdoaWxlICgxKSBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgICAgICBmb3JtSW5zdGFuY2UgPSBfdGhpczUuJHJlZnNba2V5XTsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZm9ybUluc3RhbmNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZvcm1JbnN0YW5jZVswXS52YWxpZGF0ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsaWQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWxpZCA9PT0gdW5kZWZpbmVkKSByZXNvbHZlKHRydWUpOwogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICAgICAgICAgICAgfSkpKS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgZm9ybVZhbGlkYVBhc3MgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBpZiAoZm9ybVZhbGlkYVBhc3MuZXZlcnkoZnVuY3Rpb24gKG9uZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIG9uZTsKICAgICAgICAgICAgICB9KSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iKTsKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF90aGlzNSRnZXRGbG93UGFyYW1WbyA9IF90aGlzNS5nZXRGbG93UGFyYW1Wb0xpc3QoKSwgZmxvd1BhcmFtVm9MaXN0ID0gX3RoaXM1JGdldEZsb3dQYXJhbVZvLmZsb3dQYXJhbVZvTGlzdCwgZm9ybURhdGEgPSBfdGhpczUkZ2V0Rmxvd1BhcmFtVm8uZm9ybURhdGE7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZmxvd1BhcmFtVm9MaXN0LCBmb3JtRGF0YSk7CiAgICAgICAgICAgICAgZm9ybURhdGEuZmxvd1BhcmFtVm9MaXN0ID0gZmxvd1BhcmFtVm9MaXN0OwogICAgICAgICAgICAgIF90aGlzNS50YWJsZUxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgIHBhcmFtcyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBfdGhpczUuY3JlYXRlRGF0YUxpc3QpLCBmb3JtRGF0YSksIHt9LCB7CiAgICAgICAgICAgICAgICBhY3Rpb25UeXBlOiAnMicsCiAgICAgICAgICAgICAgICBtZW51SWQ6IF90aGlzNS4kc3RvcmUuc3RhdGUuY3VyTmF2TW9kdWxlLmd1aWQKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBIdHRwTW9kdWxlLndvcmtGbG93VXBkYXRlKFtwYXJhbXNdKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIF90aGlzNS50YWJsZUxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAwMDAwMCcpIHsKICAgICAgICAgICAgICAgICAgX3RoaXM1LiRtZXNzYWdlLnN1Y2Nlc3MoJ+aguOWunuWPjemmiOaIkOWKnycpOwogICAgICAgICAgICAgICAgICBfdGhpczUuZGlhbG9nQ2xvc2UoKTsKICAgICAgICAgICAgICAgICAgX3RoaXM1LiRwYXJlbnQucXVlcnlUYWJsZURhdGFzKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBpbml0TW9kYWw6IGZ1bmN0aW9uIGluaXRNb2RhbCgpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CiAgICAgIGNvbnNvbGUubG9nKCfmn6XnnIvmlbDmja4nLCBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmNyZWF0ZURhdGFMaXN0KSk7CiAgICAgIHRoaXMuZ2V0VGFibGVDb25mQnlNZW51Z3VpZCh0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUuZ3VpZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgcmVzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIF90aGlzNi5jb25maWdUeXBlSWRbaXRlbS50eXBlXSA9IGl0ZW0uaWQ7CiAgICAgICAgfSk7CiAgICAgICAgX3RoaXM2LmxvYWRDb25maWcoX3RoaXM2LmNvbmZpZ1R5cGVJZCk7CiAgICAgICAgLy8gdGhpcy5nZXRWYWxpZGF0ZUNvbmZpZyh0aGlzLmNvbmZpZ1R5cGVJZCkKICAgICAgfSk7CiAgICB9LAogICAgLy8g5LiL6L296ZmE5Lu2CiAgICBkb3dubG9hZEF0dGFjaG1lbnQ6IGZ1bmN0aW9uIGRvd25sb2FkQXR0YWNobWVudChyb3cpIHsKICAgICAgY29uc29sZS5sb2cocm93LCAn54K55Ye75LiL6L29Jyk7CiAgICAgIGlmICghcm93LmZpbGVndWlkKSByZXR1cm47CiAgICAgIHRoaXMuZG93bmxvYWRQYXJhbXMuZmlsZWd1aWQgPSByb3cuZmlsZWd1aWQ7CiAgICAgIHRoaXMuJHJlZnMuYXR0YWNobWVudFVwbG9hZC5kb3dubG9hZEZpbGVGaWxlKCk7CiAgICB9LAogICAgbG9hZENvbmZpZzogZnVuY3Rpb24gbG9hZENvbmZpZyhjb25maWdUeXBlSWQpIHsKICAgICAgdmFyIF90aGlzNyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBoLCBmb3JtLCBwYXJhbXMsIGNvbmZpZ1F1ZXJ5RGF0YSwgY3JlYXRlRGF0YUxpc3QsIGZvcm1EZWZhdWx0VmFsdWUsIGksIGVhY2hGb3JtLCBqLCBmb3JtSXRlbSwgZmlsZUxpc3QsIF90aGlzOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBoID0gX3RoaXM3LiRjcmVhdGVFbGVtZW50OwogICAgICAgICAgICAgIC8vIOivt+axguW3peS9nOa1gWZvcm1pdGVt6YWN572u6aG5CiAgICAgICAgICAgICAgZm9ybSA9IGNvbmZpZ1R5cGVJZC5mb3JtOwogICAgICAgICAgICAgIGlmIChmb3JtKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIpOwogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcGFyYW1zID0gewogICAgICAgICAgICAgICAgdGFibGVJZDogewogICAgICAgICAgICAgICAgICBpZDogZm9ybSwKICAgICAgICAgICAgICAgICAgZmlzY2FseWVhcjogX3RoaXM3LnVzZXJJbmZvLnllYXIsCiAgICAgICAgICAgICAgICAgIG1vZl9kaXZfY29kZTogX3RoaXM3LnVzZXJJbmZvLnByb3ZpbmNlLAogICAgICAgICAgICAgICAgICBtZW51Z3VpZDogX3RoaXM3LiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUuZ3VpZAogICAgICAgICAgICAgICAgICAvLyB1c2VyZ3VpZDogJycKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNzsKICAgICAgICAgICAgICByZXR1cm4gX3RoaXM3LmxvYWRCc0NvbmZpZyhwYXJhbXMpOwogICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY29uZmlnUXVlcnlEYXRhID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXM3LiRzZXQoX3RoaXM3LCAnZm9ybURhdGEnLCBjb25maWdRdWVyeURhdGEuaXRlbXNDb25maWcpOwogICAgICAgICAgICAgIF90aGlzNy4kc2V0KF90aGlzNywgJ3ZhbGlkYXRlRGF0YScsIGNvbmZpZ1F1ZXJ5RGF0YS5lZGl0UnVsZXMpOwogICAgICAgICAgICAgIGNyZWF0ZURhdGFMaXN0ID0gT2JqZWN0LmFzc2lnbih7fSwgX3RoaXM3LmNyZWF0ZURhdGFMaXN0KTsKICAgICAgICAgICAgICBmb3JtRGVmYXVsdFZhbHVlID0gY29uZmlnUXVlcnlEYXRhLmVkaXRDb25maWcuZGVmYXVsdFZhbHVlIHx8IHt9OwogICAgICAgICAgICAgIGlmIChPYmplY3Qua2V5cyhmb3JtRGVmYXVsdFZhbHVlKSkgewogICAgICAgICAgICAgICAgLy8g6YeN5paw57uE6KOF6buY6K6k5YC8CiAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhmb3JtRGVmYXVsdFZhbHVlKS5mb3JFYWNoKGZ1bmN0aW9uIChmaWVsZEtleSkgewogICAgICAgICAgICAgICAgICBpZiAoIWNyZWF0ZURhdGFMaXN0W2ZpZWxkS2V5XSkgewogICAgICAgICAgICAgICAgICAgIGNyZWF0ZURhdGFMaXN0W2ZpZWxkS2V5XSA9IGZvcm1EZWZhdWx0VmFsdWVbZmllbGRLZXldOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgLy8g5aaC5p6c6KGo5Y2V6aG56YWN572u5LqG6ZmE5Lu2IOWImemAmui/h+aOpeWPoyDmi7/liLDpmYTku7bliJfooagg5bm25LiU6YeN5paw57uZ6KGo5Y2V5b6X6YWN572u6aG55b6XaXRlbVJlbmRlcuaMgui9veS4gOS4qmZpbGVMaXN0CiAgICAgICAgICAgICAgaSA9IDA7CiAgICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgICAgaWYgKCEoaSA8IF90aGlzNy5mb3JtRGF0YS5sZW5ndGgpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGVhY2hGb3JtID0gX3RoaXM3LmZvcm1EYXRhW2ldOwogICAgICAgICAgICAgIGlmICghKGVhY2hGb3JtLmZvcm1JdGVtTGlzdCAmJiBlYWNoRm9ybS5mb3JtSXRlbUxpc3QubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzMjsKICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBqID0gMDsKICAgICAgICAgICAgY2FzZSAxODoKICAgICAgICAgICAgICBpZiAoIShqIDwgZWFjaEZvcm0uZm9ybUl0ZW1MaXN0Lmxlbmd0aCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMzA7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgZm9ybUl0ZW0gPSBlYWNoRm9ybS5mb3JtSXRlbUxpc3Rbal07CiAgICAgICAgICAgICAgaWYgKCEoZm9ybUl0ZW0uaXRlbVJlbmRlci5uYW1lID09PSAnJGN1c3RvbWVyRmlsZVJlbmRlcicpKSB7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI1OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNy5nZXRBdHRhY2htZW50SW5mbyhjcmVhdGVEYXRhTGlzdFtmb3JtSXRlbS5maWVsZF0pOwogICAgICAgICAgICBjYXNlIDIzOgogICAgICAgICAgICAgIGZpbGVMaXN0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgX3RoaXM3LiRzZXQoZm9ybUl0ZW0uaXRlbVJlbmRlciwgJ2ZpbGVMaXN0JywgZmlsZUxpc3QpOwogICAgICAgICAgICBjYXNlIDI1OgogICAgICAgICAgICAgIGlmIChmb3JtSXRlbS5pdGVtUmVuZGVyLmdldFNlcnZlclRpbWUpIHsKICAgICAgICAgICAgICAgIC8vIOWmguaenOmFjee9ruS6huiOt+WPluacjeWKoeWZqOaXtumXtCDliJnlj5bmnI3liqHlmajml7bpl7QKICAgICAgICAgICAgICAgIGNyZWF0ZURhdGFMaXN0W2Zvcm1JdGVtLmZpZWxkXSA9IGNyZWF0ZURhdGFMaXN0LnNlcnZlclRpbWU7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmIChmb3JtSXRlbS5pdGVtUmVuZGVyLmdldFVzZXJOYW1lKSB7CiAgICAgICAgICAgICAgICAvLyDlpoLmnpzphY3nva7kuobojrflj5bmnI3liqHlmajml7bpl7Qg5YiZ5Y+W5pyN5Yqh5Zmo5pe26Ze0CiAgICAgICAgICAgICAgICBjcmVhdGVEYXRhTGlzdFtmb3JtSXRlbS5maWVsZF0gPSBjcmVhdGVEYXRhTGlzdC51c2VyTmFtZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIGNhc2UgMjc6CiAgICAgICAgICAgICAgaisrOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIGNhc2UgMzA6CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAzMzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgY2FzZSAzMjoKICAgICAgICAgICAgICBpZiAoZWFjaEZvcm0udHlwZSA9PT0gJ2NvbXBvbmVudHMnKSB7CiAgICAgICAgICAgICAgICAvLyDlpoLmnpzooajljZXphY3nva7kuobkuIrkvKDnu4Tku7Yg5YiZ57uZ6KGo5Y2V5pWw5o2u6YWN572u5LiA5Liq5LiK5Lyg57uE5Lu25b6X5ZSv5LiASUQg55So5LqO6I635Y+W5LiK5Lyg6ZmE5Lu25b6XaWQKICAgICAgICAgICAgICAgIGNyZWF0ZURhdGFMaXN0W2VhY2hGb3JtLmZpZWxkXSA9IGNyZWF0ZURhdGFMaXN0LmNyZWF0ZWRBdHRhY2htZW50aWQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICBjYXNlIDMzOgogICAgICAgICAgICAgIGkrKzsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDE0OwogICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICBjYXNlIDM2OgogICAgICAgICAgICAgIF90aGlzNy4kc2V0KF90aGlzNywgJ2NyZWF0ZURhdGFMaXN0JywgY3JlYXRlRGF0YUxpc3QpOwogICAgICAgICAgICAgIC8vIOe7mXZ4ZXRhYmxl6YWN572u5riy5p+T5ZmoICDmuLLmn5Pmlofku7bliJfooagKICAgICAgICAgICAgICBfdGhpcyA9IF90aGlzNzsKICAgICAgICAgICAgICBWWEVUYWJsZS5yZW5kZXJlci5hZGQoJyRjdXN0b21lckZpbGVSZW5kZXInLCB7CiAgICAgICAgICAgICAgICByZW5kZXJJdGVtQ29udGVudDogZnVuY3Rpb24gcmVuZGVySXRlbUNvbnRlbnQoaCwgcmVuZGVyT3B0cywgX3JlZjMpIHsKICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSBfcmVmMy5kYXRhLAogICAgICAgICAgICAgICAgICAgIHByb3BlcnR5ID0gX3JlZjMucHJvcGVydHk7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjdXN0b21lckZpbGVSZW5kZXInLCByZW5kZXJPcHRzLCBkYXRhLCBwcm9wZXJ0eSk7CiAgICAgICAgICAgICAgICAgIHZhciBmaWxlTGlzdCA9IHJlbmRlck9wdHMuZmlsZUxpc3QgfHwgW107CiAgICAgICAgICAgICAgICAgIHJldHVybiBmaWxlTGlzdC5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gaCgiZGl2IiwgW2goImEiLCB7CiAgICAgICAgICAgICAgICAgICAgICAic3R5bGUiOiAiY29sb3I6ICMxODkwZmY7IHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyIsCiAgICAgICAgICAgICAgICAgICAgICAib24iOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIF90aGlzLmRvd25sb2FkQXR0YWNobWVudChpdGVtKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIFtpdGVtLmZpbGVuYW1lXSldKTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIGNhc2UgMzk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9LAogIHdhdGNoOiB7fSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkge30sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCflvZPliY3kvKDov4fmnaXlvpdmb3JtRGF0YScsIHRoaXMuY3JlYXRlRGF0YUxpc3QpOwogICAgY29uc29sZS5sb2coJ+W9k+WJjeS8oOi/h+adpeW+l+ihqOWNlemFjee9rumhuScsIHRoaXMuZm9ybURhdGEpOwogIH0sCiAgZGVzdG9yeWVkOiBmdW5jdGlvbiBkZXN0b3J5ZWQoKSB7CiAgICBWWEVUYWJsZS5yZW5kZXJlci5kZWxldGUoJyRjdXN0b21lckZpbGVSZW5kZXInKTsKICB9Cn07"},{"version":3,"names":["HttpModule","VXETable","loadBsConfig","name","mixins","computed","userInfo","$store","state","props","data","configTypeId","tableLoading","tabCode","showFormType","show1","show2","show3","show4","show5","formData","validateData","title","dialogVisible","createValidate","downloadParams","fileguid","createDataList","attachmentid","isCreate","showbox","fileList3","fileData3","fileDataBakDel3","addLoading","param5","methods","getAttachmentInfo","billguid","params","year","province","mofDivCode","getFile","then","res","fileList","JSON","parse","length","forEach","element","size","filesize","toFixed","setOtherFormItem","setFormDisabled","_this2","formItemIndexList","arguments","undefined","formItem","concat","item","itemRender","setFormItemDisabled","filedList","_this3","includes","field","dialogClose","$emit","itemChange","_ref","bsform","_this$$refs$createRef","_this$$refs$createRef2","_this$$refs$createRef3","_this$$refs$createRef4","$form","property","itemValue","console","log","$refs","createRef","form","clearValidate","call","violateType","handleType","handleResult","getTableConfByMenuguid","menuguid","self","Promise","resolve","reject","$http","get","mof_div_code","fiscalyear","rscode","catch","error","getFlowParamVoList","_this4","flowParamVoList","index","type","formItemData","formRefKey","getFormData","formItemList","ii","idx","obj","bizKey","bizValue","needUpload","indexOf","obj2","options","find","value","label","push","createdAttachmentid","doFeedback","_this5","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","formValidaPass","_this5$getFlowParamVo","wrap","_callee2$","_context2","prev","next","Object","keys","all","map","key","_ref2","_x","_x2","_callee","formInstance","valid","_callee$","_context","abrupt","validate","sent","stop","apply","every","one","_objectSpread","actionType","menuId","curNavModule","guid","workFlowUpdate","code","$message","success","$parent","queryTableDatas","initModal","_this6","assign","id","loadConfig","downloadAttachment","row","attachmentUpload","downloadFileFile","_this7","_callee3","h","configQueryData","formDefaultValue","i","eachForm","j","_this","_callee3$","_context3","$createElement","tableId","$set","itemsConfig","editRules","editConfig","defaultValue","fieldKey","getServerTime","serverTime","getUserName","userName","renderer","add","renderItemContent","renderOpts","_ref3","click","filename","watch","created","mounted","destoryed","delete"],"sources":["src/views/main/monitProcFeedback/monitProcFeedbackModal.vue"],"sourcesContent":["<!--处理弹框-->\r\n<template>\r\n  <div v-loading=\"tableLoading\">\r\n    <vxe-modal\r\n      v-model=\"dialogVisible\"\r\n      :title=\"title\"\r\n      width=\"96%\"\r\n      height=\"90%\"\r\n      :show-footer=\"true\"\r\n      @close=\"dialogClose\"\r\n    >\r\n      <div v-loading=\"addLoading\" class=\"payVoucherInput\">\r\n        <div v-for=\"(item,index) in formData\" :key=\"item.titleName\">\r\n          <template v-if=\"item.type !== 'components'\">\r\n            <div style=\"color:#40aaff;margin-bottom:5px;font-size:16px;font-weight:bold\">{{ item.titleName }}</div>\r\n            <BsForm\r\n              :ref=\"item.formRefKey || `createRef${index}`\"\r\n              class=\"createRef\"\r\n              :form-items-config=\"item.formItemList\"\r\n              :form-data-list=\"createDataList\"\r\n              :form-validation-config=\"validateData[item.formRefKey]\"\r\n              :is-editable=\"isCreate\"\r\n              title-align=\"top\"\r\n              @itemChange=\"itemChange\"\r\n            />\r\n          </template>\r\n          <BsUploadBak\r\n            v-if=\"item.type === 'components'\"\r\n            ref=\"myUpload\"\r\n            :disabled=\"false\"\r\n            :allow-delete=\"true\"\r\n            :allow-download=\"true\"\r\n            :allow-preview=\"true\"\r\n            :is-upload=\"true\"\r\n            :attachment-id=\"createDataList[item.field]\"\r\n            :file-list=\"fileList3\"\r\n            :file-data-bak-del.sync=\"fileDataBakDel3\"\r\n            :file-data.sync=\"fileData3\"\r\n          />\r\n        </div>\r\n        <BsUpload\r\n          ref=\"attachmentUpload\"\r\n          :downloadparams=\"downloadParams\"\r\n          uniqe-name=\"attachmentUpload\"\r\n        />\r\n      </div>\r\n      <div slot=\"footer\" style=\"height: 80px;margin:0 15px\">\r\n        <div v-if=\"showbox\" id=\"bigbox\"></div>\r\n        <el-divider style=\"color:#E7EBF0\" />\r\n        <div type=\"flex\" justify=\"space-around\">\r\n          <div>\r\n            <vxe-button status=\"primary\" @click=\"doFeedback\">确定</vxe-button>\r\n            <vxe-button @click=\"dialogClose\">取消</vxe-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </vxe-modal>\r\n  </div>\r\n</template>\r\n<script>\r\n// import { proconf } from './createProcessing.js'\r\nimport HttpModule from '@/api/frame/main/fundMonitoring/createProcessing.js'\r\n// import { checkPhone } from '@/utils/index.js'\r\nimport VXETable from 'vxe-table'\r\nimport loadBsConfig from '@/views/main/dynamicTableSetting/config'\r\nexport default {\r\n  name: 'HandleDialog',\r\n  mixins: [loadBsConfig],\r\n  computed: {\r\n    userInfo() {\r\n      return this.$store.state.userInfo\r\n    }\r\n  },\r\n  props: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      configTypeId: {},\r\n      tableLoading: false,\r\n      tabCode: 'dcl-hsfk',\r\n      showFormType: {\r\n        show1: true,\r\n        show2: true,\r\n        show3: false,\r\n        show4: false,\r\n        show5: false\r\n      },\r\n      formData: [],\r\n      validateData: {},\r\n      title: '监控处理单',\r\n      dialogVisible: false,\r\n      createValidate: {\r\n\r\n        // phone1: [\r\n        //   { validator: proconf.mobilePhoneValid, trigger: 'change' }\r\n        // ]\r\n      },\r\n      downloadParams: {\r\n        fileguid: ''\r\n      },\r\n      createDataList: {},\r\n      attachmentid: '',\r\n      isCreate: true,\r\n      showbox: false,\r\n      fileList3: [{}],\r\n      fileData3: [],\r\n      fileDataBakDel3: [],\r\n      addLoading: false,\r\n      param5: {}\r\n      // ----\r\n    }\r\n  },\r\n  methods: {\r\n    getAttachmentInfo(billguid) {\r\n      if (!billguid) return []\r\n      let params = {\r\n        year: this.userInfo.year,\r\n        province: this.mofDivCode || this.userInfo.province,\r\n        billguid: billguid\r\n      }\r\n      return HttpModule.getFile(params).then((res) => {\r\n        let fileList = JSON.parse(res.data) || []\r\n        fileList.length && fileList.forEach(element => {\r\n          let size = element.filesize / 1024\r\n          element.filesize = size.toFixed(2) + 'KB'\r\n        })\r\n        return fileList\r\n      })\r\n    },\r\n    setOtherFormItem() {\r\n      this.showFormType = {\r\n        show1: false,\r\n        show2: false,\r\n        show3: false,\r\n        show4: false,\r\n        show5: false\r\n      }\r\n    },\r\n    setFormDisabled(formItemIndexList = []) {\r\n      if (!formItemIndexList.length) return\r\n      formItemIndexList.forEach((formItem) => {\r\n        this[`createConfig${formItem}`].forEach(item => {\r\n          item.itemRender.props['disabled'] = true\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     *\r\n     * @param {Array[string]} formItemIndexList 在data定义的表单字段list\r\n     * @param {Array[string]} filedList 需要禁用的字段,传filed的值\r\n     */\r\n    setFormItemDisabled(formItemIndexList, filedList) { //\r\n      if (!formItemIndexList.length) return\r\n      formItemIndexList.forEach((formItem) => {\r\n        this[`createConfig${formItem}`].forEach(item => {\r\n          if (filedList.includes(item.field)) {\r\n            item.itemRender.props['disabled'] = true\r\n          } else {\r\n            item.itemRender.props['disabled'] = false\r\n          }\r\n        })\r\n      })\r\n    },\r\n    dialogClose() {\r\n      this.dialogVisible = false\r\n      this.$emit('close')\r\n    },\r\n    itemChange({ $form, property, itemValue, data }, bsform) {\r\n      console.log('changeItemproperty', property)\r\n      // form表单联动当前字段change事件代理\r\n      switch (property) {\r\n        case 'violateType' :\r\n          this.$refs.createRef?.$refs?.form?.clearValidate?.()\r\n          this.createDataList.violateType = itemValue\r\n          break\r\n        case 'handleType' :\r\n          this.createDataList.handleType = itemValue\r\n          break\r\n        case 'handleResult' :\r\n          this.createDataList.handleResult = itemValue\r\n          break\r\n        default :\r\n          break\r\n      }\r\n    },\r\n    getTableConfByMenuguid(menuguid) {\r\n      // 根据菜单menuguid获取其下所有表配置\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        self.$http\r\n          .get('mp-b-perm-service/v1/tableconf/menuguid', {\r\n            menuguid: menuguid,\r\n            mof_div_code: self.userInfo.province, // 区划\r\n            fiscalyear: self.userInfo.year // 年份\r\n          })\r\n          .then((res) => {\r\n            if (res.rscode === '100000') {\r\n              resolve(res.data)\r\n              // resolve(self.generateCurTableConfDataMap(res.data))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            reject(error)\r\n          })\r\n      })\r\n    },\r\n    getFlowParamVoList() {\r\n      // 获取动态配置表单里面绑定得field 并且组装成[{key:表单每项得filed,value:表单filed绑定值}，，...]传给后端\r\n      let flowParamVoList = []\r\n      let formData = {}\r\n      if (this.formData && this.formData.length) {\r\n        this.formData.forEach((item, index) => {\r\n          if (item.type !== 'components') { // 判断不是上传组件\r\n            let formItemData = {}\r\n            if (item.formRefKey) {\r\n              formItemData = this.$refs[item.formRefKey][0].getFormData()\r\n            } else {\r\n              formItemData = this.$refs[`createRef${index}`][0].getFormData()\r\n            }\r\n            item.formItemList.forEach((ii, idx) => {\r\n              let obj = {}\r\n              obj.bizKey = ii.field\r\n              obj.bizValue = formItemData[ii.field]\r\n              if (item.needUpload) { // 获取需要上传的哪个表单的数据\r\n                if (ii.field.indexOf('commentDept') > -1) {\r\n                  let obj2 = {\r\n                    bizKey: 'commentName',\r\n                    bizValue: ii.itemRender.options.find(item => { return item.value === obj.bizValue }).label\r\n                  }\r\n                  flowParamVoList.push(obj2)\r\n                }\r\n                flowParamVoList.push(obj)\r\n              }\r\n              formData[ii.field] = formItemData[ii.field]\r\n            })\r\n          } else {\r\n            let obj = {}\r\n            obj.bizKey = item.field\r\n            obj.bizValue = this.createDataList.createdAttachmentid\r\n            flowParamVoList.push(obj)\r\n          }\r\n        })\r\n      }\r\n      return { flowParamVoList, formData }\r\n    },\r\n\r\n    // 反馈\r\n    async doFeedback() {\r\n      if (Object.keys(this.validateData).length) {\r\n        let formValidaPass = await Promise.all(\r\n          Object.keys(this.validateData).map(key => {\r\n            return new Promise(async(resolve, reject) => {\r\n              let formInstance = this.$refs[key]\r\n              if (!formInstance) {\r\n                resolve(true)\r\n                return\r\n              }\r\n              let valid = await formInstance[0].validate()\r\n              if (valid === undefined) resolve(true)\r\n            })\r\n          })\r\n        )\r\n        if (!formValidaPass.every(one => { return one })) return\r\n      }\r\n      let { flowParamVoList, formData } = this.getFlowParamVoList()\r\n      console.log(flowParamVoList, formData)\r\n      formData.flowParamVoList = flowParamVoList\r\n      this.tableLoading = true\r\n      let params = {\r\n        ...this.createDataList,\r\n        ...formData,\r\n        actionType: '2',\r\n        menuId: this.$store.state.curNavModule.guid\r\n      }\r\n      HttpModule.workFlowUpdate([params]).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.$message.success('核实反馈成功')\r\n          this.dialogClose()\r\n\r\n          this.$parent.queryTableDatas()\r\n        }\r\n      })\r\n    },\r\n    initModal() {\r\n      console.log('查看数据', Object.assign({}, this.createDataList))\r\n      this.getTableConfByMenuguid(this.$store.state.curNavModule.guid).then(res => {\r\n        res.forEach(item => {\r\n          this.configTypeId[item.type] = item.id\r\n        })\r\n        this.loadConfig(this.configTypeId)\r\n        // this.getValidateConfig(this.configTypeId)\r\n      })\r\n    },\r\n    // 下载附件\r\n    downloadAttachment(row) {\r\n      console.log(row, '点击下载')\r\n      if (!row.fileguid) return\r\n      this.downloadParams.fileguid = row.fileguid\r\n      this.$refs.attachmentUpload.downloadFileFile()\r\n    },\r\n    async loadConfig(configTypeId) { // 请求工作流formitem配置项\r\n      let { form } = configTypeId\r\n      if (!form) return\r\n      let params = {\r\n        tableId: {\r\n          id: form,\r\n          fiscalyear: this.userInfo.year,\r\n          mof_div_code: this.userInfo.province,\r\n          menuguid: this.$store.state.curNavModule.guid\r\n          // userguid: ''\r\n        }\r\n      }\r\n      let configQueryData = await this.loadBsConfig(params)\r\n      this.$set(this, 'formData', configQueryData.itemsConfig)\r\n      this.$set(this, 'validateData', configQueryData.editRules)\r\n      let createDataList = Object.assign({}, this.createDataList)\r\n      let formDefaultValue = configQueryData.editConfig.defaultValue || {}\r\n      if (Object.keys(formDefaultValue)) { // 重新组装默认值\r\n        Object.keys(formDefaultValue).forEach(fieldKey => {\r\n          if (!createDataList[fieldKey]) {\r\n            createDataList[fieldKey] = formDefaultValue[fieldKey]\r\n          }\r\n        })\r\n      }\r\n      // 如果表单项配置了附件 则通过接口 拿到附件列表 并且重新给表单得配置项得itemRender挂载一个fileList\r\n      for (let i = 0; i < this.formData.length; i++) {\r\n        let eachForm = this.formData[i]\r\n        if (eachForm.formItemList && eachForm.formItemList.length) {\r\n          for (let j = 0; j < eachForm.formItemList.length; j++) {\r\n            let formItem = eachForm.formItemList[j]\r\n            if (formItem.itemRender.name === '$customerFileRender') { // 判断是渲染文件列表\r\n              let fileList = await this.getAttachmentInfo(createDataList[formItem.field])\r\n              this.$set(formItem.itemRender, 'fileList', fileList)\r\n            }\r\n            if (formItem.itemRender.getServerTime) { // 如果配置了获取服务器时间 则取服务器时间\r\n              createDataList[formItem.field] = createDataList.serverTime\r\n            }\r\n            if (formItem.itemRender.getUserName) { // 如果配置了获取服务器时间 则取服务器时间\r\n              createDataList[formItem.field] = createDataList.userName\r\n            }\r\n          }\r\n        } else if (eachForm.type === 'components') { // 如果表单配置了上传组件 则给表单数据配置一个上传组件得唯一ID 用于获取上传附件得id\r\n          createDataList[eachForm.field] = createDataList.createdAttachmentid\r\n        }\r\n      }\r\n      this.$set(this, 'createDataList', createDataList)\r\n      // 给vxetable配置渲染器  渲染文件列表\r\n      let _this = this\r\n      VXETable.renderer.add('$customerFileRender', {\r\n        renderItemContent(h, renderOpts, { data, property }) {\r\n          console.log('customerFileRender', renderOpts, data, property)\r\n          let fileList = renderOpts.fileList || []\r\n          return fileList.map(item => {\r\n            return <div>\r\n              <a style=\"color: #1890ff; text-decoration: underline;\" onClick={() => { _this.downloadAttachment(item) }}>{item.filename}</a>\r\n            </div>\r\n          })\r\n        }\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n    console.log('当前传过来得formData', this.createDataList)\r\n    console.log('当前传过来得表单配置项', this.formData)\r\n  },\r\n  destoryed() {\r\n    VXETable.renderer.delete('$customerFileRender')\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n /deep/ .createRef{\r\n  .vxe-form--item.vxe-col--24{\r\n     .vxe-form--item-inner{\r\n      align-items: flex-start !important;\r\n    }\r\n  }\r\n  .vxe-textarea--inner[disabled]{\r\n    background: var(--common-background) !important;\r\n  }\r\n}\r\n\r\n</style>\r\n"],"mappings":"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"}]}