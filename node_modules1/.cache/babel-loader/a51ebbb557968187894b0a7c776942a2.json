{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\api\\http.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\api\\http.js","mtime":1694576524268},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["axios","baseUrl","Qs","store","Encrypt","goLogin","elink","document","createElement","defaults","timeout","baseURL","window","location","origin","withCredentials","headers","post","oldUrl","interceptors","request","use","config","_store$getters$getLog","getters","getLoginAuthentication","tokenid","appguid","menuguid","state","curNavModule","guid","error","Promise","reject","response","globalGatewayAgent","url","Origin","serveUrl","split","filter","item","serverName","envProxy","gloableToolFn","serverGatewayMap","process","env","NODE_ENV","Reflect","get","undefined","has","splice","join","httpGlobalGatewayAgent","globalGatewayAgentConfig","smSecretUtils","status","msg","data","message","userInvalid","includes","indexOf","r","confirm","_window$gloableToolFn","_window$gloableToolFn2","localStorage","removeItem","href","gloableUrl","portalLoginUrl","referrer","code","console","log","errorInfor","Axios","params","contentType","resolve","then","catch","arguments","length","postFormData","formData","FormData","Object","entries","forEach","_ref","_ref2","_slicedToArray","key","value","append","put","patch","del","dataType","paramsData","delete","downLoad","responseType","postStringify","openLoading","method","stringify","postDownloadXlsxInArrayBuffer","name","result","outputFilename","concat","blob","Blob","type","download","style","display","URL","createObjectURL","body","appendChild","click","revokeObjectURL","removeChild","navigator","msSaveBlob","DownLoadToExcel","fileName","DownLoadToFile","objectUrl","a","setAttribute"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/api/http.js"],"sourcesContent":["// 本文件不允许私自修改，环保除引用第三方接口外一律使用post请求方式，接口定义请参考接口规范书写，这里只做全局http请求状态拦截，其他用户状态一律放行，页面内部做判断自行处理\r\nimport axios from 'axios'\r\n// import globalGatewayAgentConf from '../../public/static/js/config/serverGatewayMap.js'\r\nimport {\r\n  baseUrl\r\n} from './url'\r\nimport Qs from 'qs'\r\nimport store from '../store/index'\r\nimport Encrypt from './smSecret/smSecret.js'\r\nimport goLogin from '../utils/goLogin'\r\n// window.gloableToolFn.serverGatewayMap = globalGatewayAgentConf\r\nconst elink = document.createElement('a')\r\naxios.defaults.timeout = 300000\r\naxios.defaults.baseURL = baseUrl || window.location.origin\r\naxios.defaults.withCredentials = false\r\naxios.defaults.headers.post['Content-Type'] = 'application/json'\r\nconst oldUrl = axios.defaults.baseURL\r\n// 请求拦截\r\naxios.defaults.headers['Access-Control-Allow-Methods'] = 'GET, POST, PUT,PATCH'\r\naxios.defaults.headers['Access-Control-Allow-Origin'] = '*'\r\n// axios.defaults.headers['Access-Control-Allow-Headers'] = 'Origin, X-Requested-With, Content-Type, Accept,tokenid,appguid'\r\naxios.defaults.headers['Access-Control-Allow-Headers'] = 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Origin,X-Requested-With,Content-Type,Content-Range,Range,tokenid,appguid'\r\n\r\naxios.interceptors.request.use(function(config) {\r\n  const { tokenid, appguid } = store.getters.getLoginAuthentication\r\n  // config.headers.token = '1234444'\r\n  // config.headers.os = 0\r\n  config.headers.menuguid = store.state.curNavModule ? (store.state.curNavModule.guid || store.state.curNavModule.menuguid) : ''\r\n  config.headers.appguid = appguid\r\n  if (tokenid) {\r\n    config.headers.tokenid = tokenid\r\n  }\r\n  return config\r\n}, function(error) {\r\n  return Promise.reject(error.response)\r\n})\r\n// axios.interceptors.request.onerror = function handleError() {\r\n//   Promise.reject(createError('Network Error', axios.interceptors.request.config, null, axios.interceptors.request))\r\n// }\r\n// 全局网关\r\nconst globalGatewayAgent = (url, Origin) => { // 注册全局网关\r\n  const serveUrl = url.split('/').filter(item => !!item)\r\n  const serverName = serveUrl[0]\r\n  // console.log(window, 'globalGatewayAgent')\r\n  const envProxy = window.gloableToolFn.serverGatewayMap[process.env.NODE_ENV]\r\n  axios.defaults.baseURL = Origin || process.env.NODE_ENV === 'development'\r\n    ? Reflect.get(envProxy, serverName)\r\n    : oldUrl + (Reflect.get(envProxy, serverName) !== undefined ? Reflect.get(envProxy, serverName) : '')\r\n  if (Reflect.has(envProxy, serverName)) {\r\n    // 删除url代理前缀\r\n    serveUrl.splice(0, 1)\r\n    url = serveUrl.join('/')\r\n  }\r\n  return url\r\n}\r\n\r\n// 外部通过全局网关获取baseURL  url\r\nexport const httpGlobalGatewayAgent = (url, Origin) => { // 注册全局网关\r\n  const serveUrl = url.split('/').filter(item => !!item)\r\n  const serverName = serveUrl[0]\r\n  const envProxy = window.gloableToolFn.serverGatewayMap[process.env.NODE_ENV]\r\n\r\n  const baseURL = Origin || process.env.NODE_ENV === 'development'\r\n    ? Reflect.get(envProxy, serverName)\r\n    : oldUrl + (Reflect.get(envProxy, serverName) !== undefined ? Reflect.get(envProxy, serverName) : '')\r\n  axios.defaults.baseURL = baseURL\r\n\r\n  if (Reflect.has(envProxy, serverName)) {\r\n    // 删除url代理前缀\r\n    serveUrl.splice(0, 1)\r\n    url = serveUrl.join('/')\r\n  }\r\n  return {\r\n    baseURL,\r\n    url\r\n  }\r\n}\r\nexport const globalGatewayAgentConfig = window.gloableToolFn.serverGatewayMap\r\nexport const smSecretUtils = Encrypt\r\naxios.interceptors.response.use(function(response) {\r\n  if (response.status === 200) {\r\n    let msg = response.data.msg || response.data.message || ''\r\n    let userInvalid = false\r\n    if (msg === '系统异常(网关异常)') {\r\n      let data = response.data.data\r\n      userInvalid = data.includes('token信息无效')\r\n    }\r\n    if (msg.indexOf('token信息无效') !== -1 || msg.indexOf('用户失效') !== -1 || userInvalid) {\r\n      let r = confirm('用户信息失效，请前往平台重新登录。点击确认返回首页')\r\n      if (r) {\r\n        localStorage.removeItem('__boss_cache__bsSxczyAccessToken')\r\n        window.location.href = window.gloableToolFn.serverGatewayMap?.gloableUrl?.portalLoginUrl || (document.referrer || '/')\r\n      }\r\n    }\r\n    switch (response.data.code) {\r\n      case (401):\r\n        console.log('Unauthorized,表示用户没有权限(令牌、用户名、密码错误)')\r\n        goLogin()\r\n        break\r\n      case (400):\r\n        console.log('Invalid Request,用户发出的请求有错误')\r\n        break\r\n      case (403):\r\n        console.log('Forbidden, 表示用户得到授权(与 401 错误相对)，但是访问是被禁止的')\r\n        break\r\n      case (404):\r\n        console.log('Not Found,用户发出的请求针对的是不存在的记录，服务器没有进行操作')\r\n        break\r\n      case (406):\r\n        console.log('Not Acceptable， 用户请求的格式不可得(比如用户请求 JSON格式，但是只有XMLs格式)。')\r\n        break\r\n      case (422):\r\n        console.log('Unprocesable entitz， 当创建一个对象时，发生一个验证错误')\r\n        break\r\n      case (500):\r\n        console.log('Internal Server Error， 服务器发生错误，用户将无法判断发出的请求是否成功。')\r\n        break\r\n      default:\r\n        break\r\n    }\r\n  }\r\n  return response\r\n}, function(error) {\r\n  // 对响应错误做处理\r\n  return {\r\n    data: {\r\n      code: 0,\r\n      errorInfor: error\r\n    },\r\n    code: 0\r\n  }\r\n})\r\nexport let Axios = axios\r\n// 封装axios的get请求\r\nexport function get(url, params, Origin, contentType) {\r\n  axios.defaults.headers.get['Access-Control-Allow-Origin'] = '*'\r\n  axios.defaults.headers.get['Content-Type'] = contentType || 'application/json'\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(globalGatewayAgent(url, Origin), {\r\n        params: params\r\n      })\r\n      .then(response => {\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\n// 封装axios的post请求\r\nexport function post(url, data = {}, Origin, contentType) {\r\n  // axios.defaults.headers.post['Content-Type'] = 'application/json' || 'application/x-www-form-urlencoded\r\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\n  axios.defaults.headers.post['Content-Type'] = contentType || 'application/json'\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(globalGatewayAgent(url, Origin), data)\r\n      .then(response => {\r\n        // console.log('post', '\\n', url, 'response', response, '\\n', data, '\\n', response)\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\n// 封装axios的post-formData请求，避免每次都要用post调用时要new FormData\r\nexport function postFormData(url, data = {}, Origin) {\r\n  // axios.defaults.headers.post['Content-Type'] = 'application/json' || 'application/x-www-form-urlencoded\r\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\n  axios.defaults.headers.post['Content-Type'] = 'multipart/form-data'\r\n  const formData = new FormData()\r\n  Object.entries(data || {}).forEach(([key, value]) => {\r\n    formData.append(key, value)\r\n  })\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(globalGatewayAgent(url, Origin), formData)\r\n      .then(response => {\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n// export async function getAsync(url, params, Origin, contentType) {\r\n//   axios.defaults.headers.get['Content-Type'] = contentType || 'application/json'\r\n//   if (Origin) {\r\n//     axios.defaults.baseURL = Origin\r\n//   }\r\n//   let res = await axios.get(url, {\r\n//     params: params,\r\n//     headers: {\r\n//       'Access-Control-Allow-Origin': '*',\r\n//       'Content-Type': 'application/json;charset=UTF-8'\r\n//     }\r\n//   })\r\n//   return new Promise((resolve) => {\r\n//     if (res.code === 0) {\r\n//       resolve(res)\r\n//     } else {\r\n//       resolve(res)\r\n//     }\r\n//   })\r\n// }\r\n\r\n// export async function postAsync(url, params = {}, Origin, contentType) {\r\n//   if (Origin) {\r\n//     axios.defaults.baseURL = Origin\r\n//   }\r\n//   axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\n//   axios.defaults.headers.post['Content-Type'] = contentType || 'application/json'\r\n//   if (Origin) {\r\n//     axios.defaults.baseURL = Origin\r\n//   }\r\n//   let res = await axios.post(url, params)\r\n//   return new Promise((resolve) => {\r\n//     if (res.code === 0) {\r\n//       resolve(res)\r\n//     } else {\r\n//       resolve(res)\r\n//     }\r\n//   })\r\n// }\r\n\r\n// 封装axios的put请求\r\nexport function put(url, data = {}, Origin, contentType) {\r\n  // axios.defaults.headers.post['Content-Type'] = 'application/json' || 'application/x-www-form-urlencoded'\r\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\n  axios.defaults.headers.post['Content-Type'] = contentType || 'application/json'\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .put(globalGatewayAgent(url, Origin), data)\r\n      .then(response => {\r\n        // console.log('post', '\\n', url, 'response', response, '\\n', data, '\\n', response)\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\n// 封装axios的patch请求\r\nexport function patch(url, data = {}, Origin, contentType) {\r\n  // axios.defaults.headers.post['Content-Type'] = 'application/json' || 'application/x-www-form-urlencoded'\r\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\n  axios.defaults.headers.post['Content-Type'] = contentType || 'application/json'\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .patch(globalGatewayAgent(url, Origin), data)\r\n      .then(response => {\r\n        // console.log('post', '\\n', url, 'response', response, '\\n', data, '\\n', response)\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\n// 封装axios的delete请求\r\nexport function del(url, params, Origin, contentType, dataType) {\r\n  // axios.defaults.headers.post['Content-Type'] = 'application/json' || 'application/x-www-form-urlencoded'\r\n  axios.defaults.headers.post['Access-Control-Allow-Origin'] = '*'\r\n  axios.defaults.headers.post['Content-Type'] =\r\n    contentType || 'application/json'\r\n  const paramsData = dataType ? { params: params } : { data: params }\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .delete(globalGatewayAgent(url, Origin), paramsData)\r\n      .then(response => {\r\n        // console.log('post', '\\n', url, 'response', response, '\\n', params, '\\n', response)\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\n// 封装axios的下载数据流转换成excel\r\nexport function downLoad(url, params = {}, Origin) {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(globalGatewayAgent(url, Origin), { params: params }, {\r\n        responseType: 'blob'\r\n      })\r\n      .then(response => {\r\n        resolve(response)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\n// 封装axios的post请求-序列化\r\nexport function postStringify(url, data = {},\r\n  Origin, openLoading) {\r\n  globalGatewayAgent(url, Origin)\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: 'post',\r\n      url: url,\r\n      data: Qs.stringify(data)\r\n    })\r\n      .then(response => {\r\n        resolve(response.data)\r\n      })\r\n      .catch(error => {\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n\r\nexport function postDownloadXlsxInArrayBuffer(url, data = {}, name = '下载文件', Origin, openLoading) {\r\n  axios.request({\r\n    responseType: 'arraybuffer',\r\n    url: globalGatewayAgent(url, Origin),\r\n    method: 'post',\r\n    data: data\r\n  }).then((result) => {\r\n    const outputFilename = `${name}.xlsx`\r\n    const blob = new Blob([result.data], { type: 'application/vnd.ms-excel' })\r\n    if ('download' in document.createElement('a')) {\r\n      const elink = document.createElement('a')\r\n      elink.download = outputFilename\r\n      elink.style.display = 'none'\r\n      elink.href = URL.createObjectURL(blob)\r\n      document.body.appendChild(elink)\r\n      elink.click()\r\n      URL.revokeObjectURL(elink.href)\r\n      document.body.removeChild(elink)\r\n    } else {\r\n      navigator.msSaveBlob(blob, outputFilename)\r\n    }\r\n    return outputFilename\r\n  })\r\n}\r\n\r\n// 封装axios的下载数据流转换成excel\r\nexport function DownLoadToExcel(url, data = {}, fileName, Origin) {\r\n  fileName = fileName + '.xls'\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(globalGatewayAgent(url, Origin), data, {\r\n        responseType: 'blob'\r\n      })\r\n      .then(response => {\r\n        const blob = new Blob([response.data], {\r\n          type: 'application/vnd.ms-excel'\r\n        })\r\n        if ('download' in document.createElement('a')) {\r\n          // 非IE下载\r\n          elink.download = fileName\r\n          elink.href = URL.createObjectURL(blob)\r\n          elink.click()\r\n          URL.revokeObjectURL(elink.href)\r\n        } else {\r\n          // IE10+下载\r\n          navigator.msSaveBlob(blob, fileName)\r\n        }\r\n        resolve()\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\nexport function DownLoadToFile(url, data = {}, fileName, Origin) {\r\n  axios.defaults.baseURL = Origin || oldUrl\r\n  fileName = fileName + '.xlsx' || 'download.xlsx'\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(globalGatewayAgent(url, Origin), data, {\r\n        'responseType': 'blob',\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Content-Type': 'application/x-www-form-urlencoded;charset=utf-8'\r\n      })\r\n      .then(response => {\r\n        const blob = new Blob([response.data], {\r\n          type: 'application/octet-stream'\r\n        })\r\n        let objectUrl = URL.createObjectURL(blob)\r\n        if ('download' in document.createElement('a')) {\r\n          let a = document.createElement('a')\r\n          a.setAttribute('href', objectUrl)\r\n          a.setAttribute('download', fileName)\r\n          a.click()\r\n        } else {\r\n          // IE10+下载\r\n          navigator.msSaveBlob(blob, fileName)\r\n        }\r\n        resolve(blob)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        reject(error)\r\n      })\r\n  })\r\n}\r\n"],"mappings":"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"}]}