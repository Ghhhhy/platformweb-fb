{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableOld\\util\\methods.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableOld\\util\\methods.js","mtime":1694505521663},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","_toPropertyKey","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","Array","from","test","iter","isArray","len","arr2","tableColumns","defaultRenderers","defaultFormatters","formatters","util","getbasicDataType","hyphenate","str","replace","toLowerCase","smallHump","$1","$2","$3","toUpperCase","deepCopy","me","newObj","reduceCalc","cb","reduce","accurateJiafa","num1","num2","n1","n2","f1","split","f2","b1","b2","r1","r2","fill","join","accurateJianfa","accurateChuFa","divisor","dividend","parseFloat","accurateChengFa","multiplier1","multiplier2","m","result","transToNumberLocalString","number","digits","parseInt","indexOf","toLocaleString","numberArr","item","index","RegExp","numberArr1","concat","transToNumber","transInputToNumber","digitUppercase","money","cnNums","cnIntRadice","cnIntUnits","cnDecUnits","cnInteger","cnIntLast","maxNum","integerNum","decimalNum","parts","chineseStr","Math","abs","substr","zeroCount","IntLen","q","decLen","each","object","callback","NodeList","every","isObj","x","toObject","val","assignKey","to","assign","propIsEnumerable","propertyIsEnumerable","symbols","deepAssign","target","setMoneyUnitCp","Unitlevel","oldUnitlevel","xGrid","$refs","fullData","getTableData","fullDataCp","freeze","JSON","parse","stringify","conlums","getTableColumn","fullColumn","row","rowIndex","column","conlumIndex","own","fieldType","field","console","log","toFixed","reloadData","transformMoneyByUnit","data","unit","rendererList","dataCp","transformRowMoneyByUnit","conlum","itemRender","cellRender","editRender","contentRender","children","sortMethods","arrSortGloabal","_ref","property","order","sort","b","localeCompare","arrSortTreeString","_ref2","$table","valueA","valueB","shift","arrSortTreeData","_ref3","arrSortNumberOption","_ref4","render","options","label","arrSortNumberCheckbox","_ref5","rTypeSuffix","arrSort_old","_ref6","arrSortString","arrSortNumber","props","multiple","_ref7","_ref8","arrSortStringSuffix","_ref9","arrSortNumberSuffix","_ref10","arrSort","_ref11","sortTypeMap","$vxeMoney","$vxeDays","$vxeCalculate","$vxeTree","$vxeInput","$vxeSelect","$vxeEditDownTextarea","$vxeTime","$vxeRadio","$vxeCheckbox","$$vxeEditDownJson","$vxeEditDownConditions","$vxeIntervar","$treeinput","$treeText","$span","$href","$moneyRender","$calculateRender","$select","registFn","registGlobleFormatters","$VXETable","formats","add","bind","registGloableConlumsConfig","reverRegistGloableConlumsConfig","arrc","registSingelRowConfig","registSingelRowFilter","registSingelRowFormater","registSingelRowSorts","registSingRowCalcRenderer","formula","registSingelRowFilter_old","filters","filterRender","tableConfigCp","filterMethod","_ref12","option","filterMultiple","isCase","dataType","vals","sVal","filterTypeMap","$vxeInputtext","$vxeInputinteger","$vxeInputfloat","$vxeInputnumber","$vxeInputyear","$vxeInputdate","$vxeInputglobal","$EditDownTextarea","treeinput","formatter","registSingelRowRenderer","cellRenderConfig","registRenderers","reverRegistRenderers","registFilters","registFormatters","registTableRender","renderers","renderer","initMethods","initCreated","initMounted","moneyUnit","defaultMoneyUnit","initFirst","initTableGlobalConfig","initContextMenuConfig","initSeqConfig","initExpandConfig","initToolbar","initEditConfig","initTableFormConfig","initCalculateConstraintConfig","initTableConfig","initEditRules","initTable","initTableData","initTableConlums","setPagerConfig","tableGlobalConfigIn","tableGlobalConfig","tableConfig","_this","calculateConstraintConfigIn","colFormulaConfig","generateCalcColFormulaMap","tableColumnsConfig","tableColumnsConfigIn","unidirectionalData","generateTableConlums","globalConfig","$nextTick","currentPage","checkType","seq","optionSort","generateOptionRow","hasOptionRow","optionRow","calculateConstraintConfig","toolbarConfig","toolbarConfigIn","toolbarConfigInCopy","toolbarConfigInCp","yearlist","formSearchData","year","_this2","selection","calclataResult","reductionRowFormula","rowformulaConfig","addMissingFieldsAndCalcColFormula","tableData","id","reductionRowCodeFormula","rowCodeFormulaConfig","tableDataIn","xTable","tableSourceData","clearFilter","clearCheckboxRow","handleDefaults","tableFormConfig","tableFormConfigIn","startIndex","seqConfig","seqMethod","_ref13","$rowIndex","columnIndex","$seq","pagerConfigIn","treeConfig","pageSize","editConfig","editConfigIn","editConfigInCp","expandConfig","expandConfigIn","expandAll","contextMenuConfig","contextMenuConfigIn","initTreeConfig","treeConfigIn","dblExpandAll","onlyDblTreeNodeExpand","dblExpand","accordion","iconOpen","iconClose","initFooterConfig","footerConfigIn","footerConfig","editRulesIn","addTreeReg","editRules","tableOptionFn","updateFooter","exportData","openExport","original","importDataEvent","importData","setAllCheckboxRow","removeCheckboxRow","$XModal","confirm","revertEvent","_this3","reLoadTable","deleteRowData","rows","copySelectionRowData","_arguments","_this4","_callee","rowIndexTo","rowTo","newRowSelectionsData","_callee$","_context","getCheckboxRecords","insertMark","date","Date","format","isNew","_XID","insert","setActiveCell","message","copyRowData","_arguments2","_this5","_callee2","rowSource","rowSourceData","newRowDataObj","_yield$self$$refs$xGr","_callee2$","_context2","getData","setCurrentRow","validate","errMap","insertRowData","_arguments3","_this6","_callee3","dataObj","_yield$self$$refs$xGr2","_callee3$","_context3","insertAt","reloadColumn","reLoadTableData","refreshTable","_this7","ifRenderTable","reloadTableConlums","reloadTableRenderData","reCalcAndReLoadTableData","calcTableData","clearDataRenderField","map","itemN","ki","listData","getListData","insertRecords","getInsertRecords","updateRecords","getUpdateRecords","removeRecords","getRemoveRecords","_this$$refs$xGrid$$re","keepSource","_this$$refs$xGrid$get","visibleData","footerData","getPureTableData","_this$$refs$xGrid$$re2","_this$$refs$xGrid$get2","getOptionData","getRecordset","getInsertRowData","getSelectionData","validEvent","_arguments4","_this8","_callee4","_callee4$","_context4","status","fullValidEvent","_arguments5","_this9","_callee5","msgList","_callee5$","_context5","$createElement","fullValidate","errList","params","rules","rule","title","msg","selectValidEvent","_this10","_callee6","selectRecords","_callee6$","_context6","insertEvent","_ref14","tableEventFn","setColumnDrop","_this11","Sortable","$Sortable","sortable","$el","querySelector","onEnd","_ref15","newIndex","oldIndex","tableColumn","getColumns","currRow","splice","loadColumn","onContextMenuClick","_ref16","event","menu","window","code","hideColumn","resetColumn","visible","resizable","toggleAllCheckboxRow","remove","clearData","maximize","zoom","$Export","triggerExportOption","print","filename","mode","isHeader","isFooter","clearSort","triggerReverseCheck","_xGrid$getTableData","setCheckboxRow","handleCheckboxChange","records","$emit","handleCheckboxAllChange","onOptionRowClick","methods","onOptionSortRowClick","_ref17","items","optionType","temp","unshift","toolBarEvent","toolbarButtonClickEvent","button","onToolbarOperrateClick","_this12","context","triggerImportOption","downloadTemplateCallback","Cb","downLoadImportTemplate","importSuccessCallback","loading","setTimeout","expandAllState","_this12$$refs$xGrid","_this12$$refs$xGrid$c","clearTreeExpand","_this12$$refs$xGrid2","_this12$$refs$xGrid2$","setAllTreeExpand","finally","setMoneyUnit","$forceUpdate","pageEvent","pagerConfig","total","pagerConfigInCp","handlePageChange","_ref18","loadData","handleRefresh","formSearchSubmit","getColumnsList","newColumnsList","delSearchfromMain","filterValue","_ref19","_this13","$event","newTbleDatas","search","dataNews","tableColumnsFieldArr","includes","searchParams","onAdvancedSearchBtnClick","proxyFn","handleSearch","_this14","filterName","$XEUtils","trim","filterRE","searchProps","rest","searchTree","some","eachTree","match","apiList","setTreeExpand","defaultExpandRows","searchEvent","debounce","leading","trailing","axiosEvent","$asyncGet","url","_this15","_callee7","_callee7$","_context7","$http","get","origin","$asyncPost","_this16","_callee8","_callee8$","_context8","post","$post","response","$get","tableEvent","cellOptionCallBack","keydown","radioChange","cellClick","_this17","cellClickCheck","shiftKey","isCheckedByCheckboxRow","cellDblclick","treeNode","dblRowExpandAll","toggleTreeExpand","_this18","cellContextMenu","cellMouseenter","cellMouseleave","headerCellClick","headerCellDblclick","footerCellClick","footerCellDblclick","footerCellContextMenu","sortChange","filterChange","resizableChange","toggleRowExpand","contextMenuClick","currentChange","_this19","editClosed","_this20","performTableDataCalculate","editActived","editDisabled","validError","scroll","custom","formSubmitInvalid","formReset","formToggleCollapse","calculateConstraintTool","_this21","reductionColFormula","calcRowTableData","_this22","colFormulaMap","colFormulaMapCp","hasCalcColFormulaMap","ifDoWhile","colFormulaMapArr","cmai","regR","rowsKey","keyCF","keyC","reg","calcResult","eval","Infinity","rowFormulaMap","tableId","rowFormulaMapCp","hasCalcrowFormulaMap","rowFormulaMapArr","formulaArr","rowCellArr","reverDataCodeRowMap","codeKey","dataCodeRowMap","rowCodeFormulaMap","_this$reverDataCodeRo","rowCodeFormulaMapCp","hasCalcrowCodeFormulaMap","rowCodeFormulaMapArr","riverColumnsGenerateCalcColFormulaMap","columns","tableColumnsFieldMap","tableColumnsSingArr","tableColumnsTitleFieldMap","tableColumnsSingEditFieldArr","getFormColCalBack","formulaConditions","formColCalList","rowFormula","j","_ref20","_this23","$columnIndex","itemcode","setSelectCell","generateColumnsAllMap","viewToSourceMap","rowsObjTemp","tableColumnsTitleMap","needMap","isEditForFormula","isForFormulaData","isForFormula","isActiveCellEdit","_ref21","otherFn","_this$$refs$xGrid$get3","dealData","newData","itemVal","prefix","regTreePrefix","formValidationConfig","_this24","pattern","addTreePrefixKey2","treeData","_this25","treeArr","$set","batchModify","omBatchModifySureClick","_ref22","modifyItem","formData","exportAndImportFn","getPrintOption","exportModalFormData","checkColumns","isColGroup","onPrintClick","_this$getTableData","exportModalData","isExportTree","saveType","fileName","isExportHead","isExportFooter","isExportOnlySourceField","isExportOnlyViewTitle","isExportOriginalData","isExportData","datas","ignoreColsTypes","viewValueFormat","exportModalVisible","onExportClick","_this26","successCb","exportExcel","dealExportViewData","_this27","viewData","_this$generateColumns","colFormulaConfigm","keyIndex","reverseParseViewDataTosource","deaImportViewData","_this28","valiRules","_this$generateColumns2","validResult","validResultFieldTitle","parseViewValue","transValue","viewValue","viewToSourceValueArr","newRule","$options","required","min","max","validator","maxWidth","validCellRules","argObj","_this29","errorRules","syncVailds","cellValue","isFunction","customValid","isError","validRuleErr","isNumber","numVal","toNumber","getSize","all","exportByTempalte","exportConlums","exportConlumsTitle","_this$generateColumns3","tabPanal","config","importConfig","importModalVisible","onDownloadTemplateClick","exportViewTitleType","onImportFileClick","_this30","_callee9","_callee9$","_context9","$Import","importExcel","$message","success","onImportClick"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/TableOld/util/methods.js"],"sourcesContent":["// methods   Author:Titans@2396757591@qq.com\r\n/* eslint-disable no-eval */\r\nimport { tableColumns, defaultRenderers, defaultFormatters } from '../config/tableDefaultConfig'\r\nimport formatters from './formatter'\r\nconst util = {\r\n  getbasicDataType(obj) {\r\n    // 获取数据类型\r\n    return Object.prototype.toString.call(obj).slice(8, -1)\r\n  },\r\n  hyphenate(str) {\r\n    // 小驼峰转成连字符\r\n    return str.replace(/\\B([A-Z])/g, '-$1').toLowerCase()\r\n  },\r\n  smallHump(str) {\r\n    // 连字符转成小驼峰\r\n    return str.replace(/(\\w*)-(\\w*)/g, function($1, $2, $3) {\r\n      return $2 + $3[0].toUpperCase() + $3.slice(1)\r\n    })\r\n  },\r\n  deepCopy(obj) {\r\n    // 深拷贝通用方法\r\n    let me = this\r\n    if (typeof obj !== 'object' || obj === null) return obj\r\n    let newObj = obj instanceof Array ? [] : {}\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        newObj[key] = typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n      }\r\n    }\r\n    return newObj\r\n  },\r\n  reduceCalc(arr, cb) {\r\n    return arr.reduce(cb, 0)\r\n  },\r\n  accurateJiafa(num1, num2) { // 精确加法\r\n    let n1 = String(num1)\r\n    let n2 = String(num2)\r\n    let f1 = n1.split('.')[1]\r\n    let f2 = n2.split('.')[1]\r\n    let b1 = f1 ? f1.length : 0\r\n    let b2 = f2 ? f2.length : 0\r\n    let r1 = n1.replace('.', '')\r\n    let r2 = n2.replace('.', '')\r\n    try {\r\n      if (b1 > b2) {\r\n        r2 = r2 + new Array(b1 - b2).fill(0).join('')\r\n        return String((Number(r1) + Number(r2)) / ('1' + new Array(b1).fill(0).join('')))\r\n      } else if (b2 > b1) {\r\n        r1 = r1 + new Array(b2 - b1).fill(0).join('')\r\n        return String((Number(r1) + Number(r2)) / ('1' + new Array(b2).fill(0).join('')))\r\n      } else {\r\n        return String(Number(r1) + Number(r2)) / ('1' + new Array(b2).fill(0).join(''))\r\n      }\r\n    } catch (e) {\r\n      return ''\r\n    }\r\n  },\r\n  accurateJianfa(num1, num2) { // 精确减法\r\n    let n1 = String(num1)\r\n    let n2 = String(num2)\r\n    let f1 = n1.split('.')[1]\r\n    let f2 = n2.split('.')[1]\r\n    let b1 = f1 ? f1.length : 0\r\n    let b2 = f2 ? f2.length : 0\r\n    let r1 = n1.replace('.', '')\r\n    let r2 = n2.replace('.', '')\r\n    try {\r\n      if (b1 > b2) {\r\n        r2 = r2 + new Array(b1 - b2).fill(0).join('')\r\n        return String((r1 - r2) / ('1' + new Array(b1).fill(0).join('')))\r\n      } else if (b2 > b1) {\r\n        r1 = r1 + new Array(b2 - b1).fill(0).join('')\r\n        return String((r1 - r2) / ('1' + new Array(b2).fill(0).join('')))\r\n      } else {\r\n        return String(r1 - r2) / ('1' + new Array(b2).fill(0).join(''))\r\n      }\r\n    } catch (e) {\r\n      return ''\r\n    }\r\n  },\r\n  accurateChuFa(divisor, dividend) { /* 获取小数相除的精确结果 */\r\n    if (parseFloat(divisor) === 0 || parseFloat(dividend) === 0) {\r\n      return '0'\r\n    }\r\n    let n1 = String(divisor)\r\n    let n2 = String(dividend)\r\n    let f1 = n1.split('.')[1]\r\n    let f2 = n2.split('.')[1]\r\n    let b1 = f1 ? f1.length : 0\r\n    let b2 = f2 ? f2.length : 0\r\n    let r1 = n1.replace('.', '')\r\n    let r2 = n2.replace('.', '')\r\n    try {\r\n      if (b1 > b2) {\r\n        r2 = r2 + new Array(b1 - b2).fill(0).join('')\r\n      } else if (b2 > b1) {\r\n        r1 = r1 + new Array(b2 - b1).fill(0).join('')\r\n      } else { }\r\n      return String(r1 / r2)\r\n    } catch (e) {\r\n      return ''\r\n    }\r\n  },\r\n  accurateChengFa(multiplier1, multiplier2) { /* 获取小数相乘的精确结果 */\r\n    if (parseFloat(multiplier1) === 0 || parseFloat(multiplier2) === 0) {\r\n      return '0'\r\n    }\r\n    let m = 0\r\n    let n1 = String(multiplier1)\r\n    let n2 = String(multiplier2)\r\n    let f1 = n1.split('.')[1]\r\n    let f2 = n2.split('.')[1]\r\n    m += f1 ? f1.length : 0\r\n    m += f2 ? f2.length : 0\r\n    let result = String(n1.replace('.', '') * n2.replace('.', ''))\r\n    try {\r\n      if (m === 0) {\r\n        return result\r\n      } else {\r\n        return String(result / ('1' + new Array(m).fill(0).join('')))\r\n      }\r\n    } catch (e) {\r\n      return ''\r\n    }\r\n  },\r\n  transToNumberLocalString(number, digits = 0) {\r\n    // 返回逗号隔开千分位的数字\r\n    let result = ''\r\n    number = String(number)\r\n    digits = parseInt(digits)\r\n    if (number.indexOf('-') === 0) {\r\n      result = '-'\r\n    }\r\n    number = Number(number).toLocaleString()\r\n    let numberArr = number.split('').filter((item, index) => {\r\n      return new RegExp('^[0-9.,]$').test(item)\r\n    }).join('').split('.')\r\n    if (numberArr[0] === '') {\r\n      numberArr[0] = '0'\r\n    }\r\n    if (digits === 0) {\r\n      numberArr = [numberArr[0]]\r\n      return result + numberArr[0]\r\n    } else {\r\n      let numberArr1 = numberArr[1] ? numberArr[1].split('') : []\r\n      numberArr1 = [...numberArr1, ...new Array(digits).fill('0')]\r\n      numberArr1.length = digits\r\n      numberArr = [numberArr[0], '.', ...numberArr1]\r\n      return result + numberArr.join('')\r\n    }\r\n  },\r\n  transToNumber(number, digits = 0) {\r\n    //  任意字符过滤为数字\r\n    let result = ''\r\n    number = String(number)\r\n    digits = parseInt(digits)\r\n    if (number.indexOf('-') === 0) {\r\n      result = '-'\r\n    }\r\n    let numberArr = number.split('').filter((item, index) => {\r\n      return new RegExp('^[0-9.]$').test(item)\r\n    }).join('').split('.')\r\n    if (numberArr[0] === '' && numberArr[1]) {\r\n      numberArr[0] = '0'\r\n    }\r\n    if (digits === 0) {\r\n      return result + numberArr[0]\r\n    } else {\r\n      let numberArr1 = numberArr[1] ? numberArr[1].split('') : []\r\n      numberArr1 = [...numberArr1, ...new Array(digits).fill('0')]\r\n      numberArr1.length = digits\r\n      numberArr = [numberArr[0], '.', ...numberArr1]\r\n      return result + numberArr.join('')\r\n    }\r\n  },\r\n  transInputToNumber(number) {\r\n    let result = ''\r\n    number = String(number)\r\n    if (number.indexOf('-') === 0) {\r\n      result = '-'\r\n    }\r\n    let numberArr = number.split('').filter((item, index) => {\r\n      return new RegExp('^[0-9.]$').test(item)\r\n    }).join('').split('.')\r\n    if (numberArr[0] === '' && numberArr[1]) {\r\n      numberArr[0] = '0'\r\n    }\r\n    if (numberArr.length > 1) {\r\n      numberArr = [numberArr[0], '.', numberArr[1]]\r\n    } else {\r\n    }\r\n    return result + numberArr.join('')\r\n  },\r\n  digitUppercase(money) {\r\n    // 汉字的数字\r\n    let cnNums = ['零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖']\r\n    // 基本单位\r\n    let cnIntRadice = ['', '拾', '佰', '仟']\r\n    // 对应整数部分扩展单位\r\n    let cnIntUnits = ['', '万', '亿', '兆']\r\n    // 对应小数部分单位\r\n    let cnDecUnits = ['角', '分', '毫', '厘']\r\n    // 整数金额时后面跟的字符\r\n    let cnInteger = '整'\r\n    // 整型完以后的单位\r\n    let cnIntLast = '元'\r\n    // 最大处理的数字\r\n    let maxNum = 999999999999999.9999\r\n    // 金额整数部分\r\n    let integerNum\r\n    // 金额小数部分\r\n    let decimalNum\r\n    // 输出的中文金额字符串\r\n    // 分离金额后用的数组，预定义\r\n    let parts\r\n    let chineseStr = money < 0 ? '欠' : ''\r\n    money = (money + '').split('').filter((item, index) => {\r\n      return new RegExp('^[0-9.]$').test(item)\r\n    }).join('')\r\n    if (money === '') { return '' }\r\n    money = Math.abs(money) + ''\r\n    if (money >= maxNum) {\r\n      // 超出最大处理数字\r\n      return ''\r\n    }\r\n    if (money === 0) {\r\n      chineseStr = chineseStr + (cnNums[0] + cnIntLast + cnInteger)\r\n      return chineseStr\r\n    }\r\n    // 转换为字符串\r\n    if (money.indexOf('.') === -1) {\r\n      integerNum = money\r\n      decimalNum = ''\r\n    } else {\r\n      parts = money.split('.')\r\n      integerNum = parts[0]\r\n      decimalNum = parts[1].substr(0, 4)\r\n    }\r\n    // 获取整型部分转换\r\n    if (parseInt(integerNum, 10) > 0) {\r\n      let zeroCount = 0\r\n      let IntLen = integerNum.length\r\n      for (let i = 0; i < IntLen; i++) {\r\n        let n = integerNum.substr(i, 1)\r\n        let p = IntLen - i - 1\r\n        let q = p / 4\r\n        let m = p % 4\r\n        if (n === '0') {\r\n          zeroCount++\r\n        } else {\r\n          if (zeroCount > 0) {\r\n            chineseStr += cnNums[0]\r\n          }\r\n          // 归零\r\n          zeroCount = 0\r\n          chineseStr += cnNums[parseInt(n)] + cnIntRadice[m]\r\n        }\r\n        if (m === 0 && zeroCount < 4) {\r\n          chineseStr += cnIntUnits[q]\r\n        }\r\n      }\r\n      chineseStr += cnIntLast\r\n    }\r\n    // 小数部分\r\n    if (decimalNum !== '') {\r\n      let decLen = decimalNum.length\r\n      for (let i = 0; i < decLen; i++) {\r\n        let n = decimalNum.substr(i, 1)\r\n        if (n !== '0') {\r\n          chineseStr += cnNums[Number(n)] + cnDecUnits[i]\r\n        }\r\n      }\r\n    }\r\n    if (chineseStr === '') {\r\n      chineseStr += cnNums[0] + cnIntLast + cnInteger\r\n    } else if (decimalNum === '') {\r\n      chineseStr += cnInteger\r\n    }\r\n    return chineseStr\r\n  },\r\n  each: function(object, callback) {\r\n    /* js原生each方法 */\r\n    var type = (function(obj) {\r\n      switch (obj.constructor) {\r\n        case Object:\r\n          return 'Object'\r\n        case Array:\r\n          return 'Array'\r\n\r\n        case NodeList:\r\n          return 'NodeList'\r\n        default:\r\n          return 'null'\r\n      }\r\n    })(object)\r\n    // 为数组或类数组时, 返回: index, value\r\n    if (type === 'Array' || type === 'NodeList') {\r\n      // 由于存在类数组NodeList, 所以不能直接调用every方法\r\n      [].every.call(object, function(v, i) {\r\n        return callback.call(v, i, v) !== false\r\n      })\r\n    } else if (type === 'Object') {\r\n      // 为对象格式时,返回:key, value\r\n      for (var i in object) {\r\n        if (callback.call(object[i], i, object[i]) === false) {\r\n          break\r\n        }\r\n      }\r\n    }\r\n  },\r\n  isObj(x) {\r\n    let type = typeof x\r\n    return x !== null && (type === 'object' || type === 'function')\r\n  },\r\n  toObject(val) {\r\n    if (val === null || val === undefined) {\r\n      throw new TypeError('Cannot convert undefined or null to object')\r\n    }\r\n\r\n    return Object(val)\r\n  },\r\n  assignKey(to, from, key) {\r\n    let self = this\r\n    let hasOwnProperty = Object.prototype.hasOwnProperty\r\n    let val = from[key]\r\n    if (val === undefined || val === null) {\r\n      return\r\n    }\r\n    if (hasOwnProperty.call(to, key)) {\r\n      if (to[key] === undefined || to[key] === null) {\r\n        throw new TypeError('Cannot convert undefined or null to object (' + key + ')')\r\n      }\r\n    }\r\n    if (!hasOwnProperty.call(to, key) || !self.isObj(val)) {\r\n      to[key] = val\r\n    } else {\r\n      to[key] = self.assign(Object(to[key]), from[key])\r\n    }\r\n  },\r\n  assign(to, from) {\r\n    let self = this\r\n    let propIsEnumerable = Object.prototype.propertyIsEnumerable\r\n    if (to === from) {\r\n      return to\r\n    }\r\n    from = Object(from)\r\n    for (let key in from) {\r\n      if (hasOwnProperty.call(from, key)) {\r\n        self.assignKey(to, from, key)\r\n      }\r\n    }\r\n    if (Object.getOwnPropertySymbols) {\r\n      let symbols = Object.getOwnPropertySymbols(from)\r\n      for (let i = 0; i < symbols.length; i++) {\r\n        if (propIsEnumerable.call(from, symbols[i])) {\r\n          self.assignKey(to, from, symbols[i])\r\n        }\r\n      }\r\n    }\r\n    return to\r\n  },\r\n  deepAssign(target) {\r\n    // 深度合并\r\n    // deepAssign({ a: { b: 0 } }, { a: { b: 1, c: 2 } }, { a: { c: 3 } })\r\n    let self = this\r\n    target = self.toObject(target)\r\n    for (let s = 1; s < arguments.length; s++) {\r\n      self.assign(target, arguments[s])\r\n    }\r\n    return target\r\n  },\r\n  setMoneyUnitCp(Unitlevel, oldUnitlevel) {\r\n    // 设置金额单位 废弃\r\n    if (Unitlevel === '') {\r\n      return\r\n    }\r\n    let xGrid = this.$refs.xGrid\r\n    if (!xGrid) {\r\n      return\r\n    }\r\n    // let fullData = this.getData()\r\n    let fullData = xGrid.getTableData().fullData\r\n    let fullDataCp = Object.freeze(JSON.parse(JSON.stringify(fullData)))\r\n    let conlums = xGrid.getTableColumn().fullColumn\r\n    fullData.forEach((row, rowIndex) => {\r\n      conlums.forEach((column, conlumIndex) => {\r\n        if (column.own.fieldType) {\r\n          let value = (typeof (row[column.own.field]) === 'number' || typeof (row[column.own.field]) === 'string') ? parseFloat(row[column.own.field].toString().split(',').join('')) : 0\r\n          console.log('处理前', value)\r\n          value = isNaN(value) ? 0 : value\r\n          value = value * oldUnitlevel / Unitlevel\r\n          console.log('处理前', value)\r\n          // eslint-disable-next-line no-useless-escape\r\n          row[column.own.field] = parseFloat(value.toFixed(2))\r\n          row[column.own.field] = Number(row[column.own.field].toFixed(2)).toLocaleString()\r\n        }\r\n      })\r\n    })\r\n    console.log(fullData, conlums, fullDataCp)\r\n    xGrid.reloadData(fullData).then().catch()\r\n  },\r\n  transformMoneyByUnit(data, conlums, type = 'big', unit, rendererList = ['$moneyRender']) {\r\n    // 循环转化金额数据\r\n    let self = this\r\n    let dataCp = [...data]\r\n    console.log(dataCp)\r\n    dataCp.forEach((row, rowIndex) => {\r\n      self.transformRowMoneyByUnit(row, conlums, type, unit, rendererList)\r\n    })\r\n    return dataCp\r\n  },\r\n  transformRowMoneyByUnit(row, conlums, type, unit, rendererList) {\r\n    // 递归转化单条数据\r\n    let self = this\r\n    conlums.forEach((conlum, conlumIndex) => {\r\n      let itemRender = conlum.cellRender || conlum.editRender || conlum.contentRender\r\n      if (itemRender && rendererList.indexOf(itemRender.name) >= 0 && !conlum.children) {\r\n        if (type === 'big') {\r\n          row[conlum.field] = (parseFloat(row[conlum.field]) / unit).toFixed(2)\r\n        } else {\r\n          row[conlum.field] = (parseFloat(row[conlum.field]) * unit).toFixed(2)\r\n        }\r\n      }\r\n      if (Array.isArray(conlum.children) && conlum.children.length) {\r\n        self.transformRowMoneyByUnit(row, conlum.children, type, unit, rendererList)\r\n      }\r\n    })\r\n  }\r\n}\r\nconst sortMethods = {\r\n  arrSortGloabal({ data, property, order }) {\r\n    // 通用 排序\r\n    data.sort(function (a, b) {\r\n      if (order === 'asc') {\r\n        if (isNaN(Number(a[property]))) {\r\n          return (String(a[property])).localeCompare(String(b[property]))\r\n        }\r\n        return a[property] - b[property]\r\n      } else {\r\n        if (isNaN(Number(a[property]))) {\r\n          return (String(b[property])).localeCompare(String(a[property]))\r\n        }\r\n        return b[property] - a[property]\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  // 调整 废弃开始\r\n  arrSortTreeString({ $table, data, column, property, order }) {\r\n    // tree 排序\r\n    data.sort(function (a, b) {\r\n      let valueA = a[property].split('##')\r\n      let valueB = b[property].split('##')\r\n      valueA.shift()\r\n      valueA = valueA.join('-')\r\n      valueB.shift()\r\n      valueB = valueB.join('-')\r\n      if (order === 'asc') {\r\n        return String(valueA).localeCompare(String(valueB))\r\n      } else {\r\n        return String(valueB).localeCompare(String(valueA))\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortTreeData({ $table, data, column, property, order }) {\r\n    data.sort(function(a, b) {\r\n      let valueA = a[property]\r\n      let valueB = b[property]\r\n      if (order === 'asc') {\r\n        return String(valueA).localeCompare(String(valueB))\r\n      } else {\r\n        return String(valueB).localeCompare(String(valueA))\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortNumberOption({ $table, data, column, property, order }) {\r\n    // options 排序\r\n    let render = column.own && (column.own.editRender || column.own.cellRender || column.own.contentRender)\r\n    if (render && render.name) {\r\n      let options = render.options || []\r\n      data.sort(function (a, b) {\r\n        let valueA = ''\r\n        let valueB = ''\r\n        options.forEach((item, index) => {\r\n          if (item.value === a[property]) {\r\n            valueA = item.label\r\n          }\r\n          if (item.value === b[property]) {\r\n            valueB = item.label\r\n          }\r\n        })\r\n        if (order === 'asc') {\r\n          return String(valueA).localeCompare(String(valueB))\r\n        } else {\r\n          return String(valueB).localeCompare(String(valueA))\r\n        }\r\n      })\r\n      return data\r\n    } else {\r\n      return this.arrSortGloabal({ $table, data, column, property, order })\r\n    }\r\n  },\r\n  arrSortNumberCheckbox({ $table, data, column, property, order, rTypeSuffix }) {\r\n    // checkbox 排序\r\n    // let render = column.own && (column.own.editRender || column.own.cellRender || column.own.contentRender)\r\n    // if (render && render.name) {\r\n    //   let options = render.options || []\r\n    //   data.sort(function (a, b) {\r\n    //     a[property] = Array.isArray(a[property]) ? a[property] : []\r\n    //     b[property] = Array.isArray(b[property]) ? b[property] : []\r\n    //     let valueA = []\r\n    //     let valueB = []\r\n    //     options.forEach((item, index) => {\r\n    //       let indexOfA = a[property].indexOf(item.value)\r\n    //       let indexOfB = b[property].indexOf(item.value)\r\n    //       if (indexOfA >= 0) {\r\n    //         valueA[indexOfA] = item.label\r\n    //       }\r\n    //       if (indexOfB >= 0) {\r\n    //         valueA[indexOfB] = item.label\r\n    //       }\r\n    //     })\r\n    //     if (order === 'asc') {\r\n    //       return (valueA.join('')).localeCompare(valueB.join(''))\r\n    //     } else {\r\n    //       return (valueB.join('')).localeCompare(valueA.join(''))\r\n    //     }\r\n    //   })\r\n    //   return data\r\n    // } else {\r\n    //   return this.arrSortGloabal({ $table, data, column, property, order })\r\n    // }\r\n    data.sort(function (a, b) {\r\n      if (order === 'asc') {\r\n        return (a[property + rTypeSuffix]).localeCompare(b[property + rTypeSuffix])\r\n      } else {\r\n        return (b[property + rTypeSuffix]).localeCompare(a[property + rTypeSuffix])\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSort_old({ $table, data, column, property, order }) {\r\n    // 排序\r\n    let self = this\r\n    let render = column.own && (column.own.editRender || column.own.cellRender || column.own.contentRender)\r\n    if (render && render.name) {\r\n      switch (render.name) {\r\n        case '$treeinput':\r\n          return self.arrSortTreeString({ $table, data, column, property, order })\r\n        case '$treeText':\r\n          return self.arrSortTreeString({ $table, data, column, property, order })\r\n        case '$span':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$href':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$EditDownTextarea':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$EditDownConditions':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$moneyRender':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$calculateRender':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$vxeDays':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$vxeRadio':\r\n          return self.arrSortNumberOption({ $table, data, column, property, order })\r\n        case '$vxeTime':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$vxeMoney':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$select':\r\n          return self.arrSortNumberOption({ $table, data, column, property, order })\r\n        case '$vxeSelect':\r\n          if (render.props.multiple) {\r\n            return self.arrSortNumberCheckbox({ $table, data, column, property, order, rTypeSuffix: '_select_sort' })\r\n          } else {\r\n            return self.arrSortNumberOption({ $table, data, column, property, order, rTypeSuffix: '_select_sort' })\r\n          }\r\n        case '$vxeCheckbox':\r\n          return self.arrSortNumberCheckbox({ $table, data, column, property, order, rTypeSuffix: '_checkbox_sort' })\r\n        default:\r\n          return self.arrSortGloabal({ $table, data, column, property, order })\r\n      }\r\n    } else {\r\n      data.sort(function(a, b) {\r\n        if (order === 'asc') {\r\n          if (isNaN(Number(a[property]))) {\r\n            return (a[property].toString()).localeCompare(b[property].toString())\r\n          }\r\n          return a[property] - b[property]\r\n        } else {\r\n          if (isNaN(Number(a[property]))) {\r\n            return (b[property].toString()).localeCompare(a[property].toString())\r\n          }\r\n          return b[property] - a[property]\r\n        }\r\n      })\r\n    }\r\n    return data\r\n  },\r\n  // 调整 废弃结束\r\n  arrSortString({ $table, data, column, property, order }) {\r\n    // 字符 排序\r\n    data.sort(function(a, b) {\r\n      if (order === 'asc') {\r\n        return (String(a[property])).localeCompare(String(b[property]))\r\n      } else {\r\n        return (String(b[property])).localeCompare(String(a[property]))\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortNumber({ $table, data, column, property, order }) {\r\n    // 数字 排序\r\n    data.sort(function(a, b) {\r\n      if (order === 'asc') {\r\n        return a[property] - b[property]\r\n      } else {\r\n        return b[property] - a[property]\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortStringSuffix({ $table, data, column, property, order, rTypeSuffix }) {\r\n    // 通用 排序 new\r\n    data.sort(function(a, b) {\r\n      if (order === 'asc') {\r\n        return (String(a[property])).localeCompare(String(b[property]))\r\n      } else {\r\n        return (String(b[property])).localeCompare(String(a[property]))\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortNumberSuffix({ $table, data, column, property, order, rTypeSuffix }) {\r\n    // 通用 排序 new\r\n    data.sort(function(a, b) {\r\n      if (order === 'asc') {\r\n        return parseFloat(a[property]) - parseFloat(b[property])\r\n      } else {\r\n        return parseFloat(b[property]) - parseFloat(a[property])\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSort({ $table, data, column, property, order }) {\r\n    // 排序\r\n    let self = this\r\n    const sortTypeMap = {\r\n      // number类型排序\r\n      $vxeMoney: 'arrSortNumberSuffix',\r\n      $vxeDays: 'arrSortNumberSuffix',\r\n      $vxeCalculate: 'arrSortNumberSuffix',\r\n      // 字符类型排序\r\n      $vxeTree: 'arrSortStringSuffix',\r\n      $vxeInput: 'arrSortStringSuffix',\r\n      $vxeSelect: 'arrSortStringSuffix',\r\n      $vxeEditDownTextarea: 'arrSortStringSuffix',\r\n      $vxeTime: 'arrSortStringSuffix',\r\n      $vxeRadio: 'arrSortStringSuffix',\r\n      $vxeCheckbox: 'arrSortStringSuffix',\r\n      $$vxeEditDownJson: 'arrSortStringSuffix',\r\n      $vxeEditDownConditions: 'arrSortStringSuffix',\r\n      $vxeIntervar: 'arrSortStringSuffix',\r\n      // 短期保留\r\n      $treeinput: 'arrSortTreeString',\r\n      $treeText: 'arrSortTreeString',\r\n      $span: 'arrSortString',\r\n      $href: 'arrSortString',\r\n      $moneyRender: 'arrSortNumber',\r\n      $calculateRender: 'arrSortNumber',\r\n      $select: 'arrSortNumberOption'\r\n    }\r\n    let render = column.own && (column.own.editRender || column.own.cellRender || column.own.contentRender)\r\n    if (render && render.name && sortTypeMap[render.name]) {\r\n      return self[sortTypeMap[render.name]]({ $table, data, column, property, order, rTypeSuffix: '__viewSort' })\r\n    } else {\r\n      data.sort(function(a, b) {\r\n        if (order === 'asc') {\r\n          if (isNaN(Number(a[property]))) {\r\n            return (a[property].toString()).localeCompare(b[property].toString())\r\n          }\r\n          return a[property] - b[property]\r\n        } else {\r\n          if (isNaN(Number(a[property]))) {\r\n            return (b[property].toString()).localeCompare(a[property].toString())\r\n          }\r\n          return b[property] - a[property]\r\n        }\r\n      })\r\n    }\r\n    return data\r\n  }\r\n\r\n}\r\nconst registFn = {\r\n  registGlobleFormatters(obj) {\r\n    let self = this\r\n    Object.keys(obj).forEach((item, index) => {\r\n      self.$VXETable.formats.add(item, obj[item].bind(self))\r\n    })\r\n  },\r\n  registGloableConlumsConfig(arr = []) {\r\n    // 注册列格式化，渲染器，过滤项目等全局函数\r\n    let self = this\r\n    function reverRegistGloableConlumsConfig(arrc) {\r\n      arrc.forEach((item, index) => {\r\n        self.registSingelRowConfig(arrc, item, index)\r\n        if (Array.isArray(item.children) && item.children.length) {\r\n          self.registGloableConlumsConfig(item.children)\r\n        }\r\n      })\r\n    }\r\n    reverRegistGloableConlumsConfig(arr)\r\n  },\r\n  registSingelRowConfig(arr, item, index) {\r\n    // 注册 单条数据配置项\r\n    let self = this\r\n    arr[index] = self.registSingelRowFilter(item)\r\n    // 调整\r\n    self.registSingelRowFormater(item)\r\n    self.registSingelRowSorts(item)\r\n    // self.registSingelRowRenderer(item)\r\n    // self.registSingRowCalcRenderer(item)\r\n  },\r\n  registSingRowCalcRenderer(item) {\r\n    // 注册单条数据计算渲染器\r\n    if (item.formula && !item.editRender) {\r\n      item.editRender = {\r\n        name: '$vxeCalculate'\r\n      }\r\n    }\r\n  },\r\n  registSingelRowFilter_old(item) {\r\n    // 绑定单条列过滤器配置\r\n    if (Array.isArray(item.children)) {\r\n      return\r\n    }\r\n    if (item.filters !== undefined || item.filters || item.filterRender !== undefined || item.filterRender) {\r\n      // if (item.filters === false) {\r\n      //   delete item.filters\r\n      //   delete item.filterRender\r\n      //   delete item.filterMethod\r\n      // }\r\n\r\n      // type+editable\r\n      // { value: '$vxeInput', label: '输入框' },\r\n      // { value: '$vxeSelect', label: '下拉选择' },\r\n      // { value: '$vxeCalculate', label: '计算' },\r\n      // { value: '$vxeMoney', label: '金额' },\r\n      // { value: '$vxeEditDownTextarea', label: '文本输入框' },\r\n      // { value: '$vxeDays', label: '天数' },\r\n      // { value: '$vxeTime', label: '时间' },\r\n      // { value: '$vxeRadio', label: '单选' },\r\n      // { value: '$vxeCheckbox', label: '复选' },\r\n      // { value: '$treeinput', label: '下拉树' },\r\n      // { value: '$EditDownJson', label: 'JSON' },\r\n      // { value: '$href', label: '链接' }\r\n      return\r\n    }\r\n    let self = this\r\n    let itemRender = item.cellRender || item.editRender || item.contentRender\r\n    if (item.filters === undefined || item.filters === true) {\r\n      if (item.field && self.tableConfigCp.filters[item.field]) {\r\n        item.filters = self.tableConfigCp.filters[item.field].filters ? self.tableConfigCp.filters[item.field].filters : [{ data: '' }]\r\n        if (typeof (self.tableConfigCp.filters[item.field].filterMethod) === 'function') {\r\n          item.filterMethod = self.tableConfigCp.filters[item.field].filterMethod ? self.tableConfigCp.filters[item.field].filterMethod : ({ option, row, column }) => {\r\n            return row[column.property] === Number(option.data)\r\n          }\r\n        }\r\n      } else if (item.field && itemRender) {\r\n        switch (itemRender.name) {\r\n          case '$select':\r\n            item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n            item.filterMultiple = true\r\n            break\r\n          case '$vxeSelect':\r\n            item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n            item.filterMultiple = true\r\n            break\r\n          case '$calculateRender':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$vxeCalculate':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$moneyRender':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$vxeMoney':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$href':\r\n            item.filters = [{ data: '' }]\r\n            item.filterRender = { name: 'FilterInput' }\r\n            break\r\n          case '$vxeRadio':\r\n            item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n            item.filterMultiple = true\r\n            break\r\n          case '$vxeCheckbox':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterChoose' }\r\n            break\r\n          case '$vxeInput':\r\n            // text, search, number, integer, float, password, date, datetime, week, month, year\r\n            if (this.getbasicDataType(itemRender.props) === 'Object' && itemRender.props.type) {\r\n              switch (itemRender.props.type) {\r\n                case 'text':\r\n                  item.filters = [{ data: { vals: [], sVal: '' } }]\r\n                  item.filterRender = { name: 'FilterContent' }\r\n                  break\r\n                case 'float':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                case 'number':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'number' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                case 'year':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'year' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                case 'date':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '', dataType: 'date' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                default:\r\n                  if (itemRender.name === '$optionSort' || itemRender.name === 'optionRow') {\r\n                    delete item.filters\r\n                    delete item.filterRender\r\n                    delete item.filterMethod\r\n                  } else {\r\n                    item.filters = [{ data: '' }]\r\n                    item.filterRender = { name: 'FilterInput' }\r\n                  }\r\n                  break\r\n              }\r\n            } else {\r\n              item.filters = [{ data: '' }]\r\n              item.filterRender = { name: 'FilterInput' }\r\n            }\r\n            break\r\n          case '$EditDownTextarea':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterContent' }\r\n            break\r\n          case '$vxeEditDownTextarea':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterContent' }\r\n            break\r\n          case '$treeinput':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterContent' }\r\n            break\r\n          default:\r\n            if (['seq', 'checkbox', 'dragSort', 'radio', 'optionRow'].indexOf(item.type)) {\r\n              delete item.filters\r\n              delete item.filterRender\r\n              delete item.filterMethod\r\n            } else {\r\n              item.filters = [{ data: '' }]\r\n              item.filterRender = { name: 'FilterInput' }\r\n            }\r\n            break\r\n        }\r\n      } else {\r\n        item.filters = [{ data: '' }]\r\n        item.filterRender = { name: 'FilterInput' }\r\n      }\r\n    }\r\n  },\r\n  registSingelRowFilter(item) {\r\n    // 绑定单条列过滤器配置\r\n    const filterTypeMap = {\r\n      // number类型排序\r\n      $vxeMoney: {\r\n        filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }],\r\n        filterRender: { name: 'FilterComplex' }\r\n      },\r\n      $vxeCalculate: {\r\n        filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }],\r\n        filterRender: { name: 'FilterComplex' }\r\n      },\r\n      $vxeDays: {\r\n        filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }],\r\n        filterRender: { name: 'FilterComplex' }\r\n      },\r\n      // 字符类型排序\r\n      $vxeTree: {\r\n        filters: [{ data: { vals: [], sVal: '' } }],\r\n        filterRender: { name: 'FilterContent' }\r\n      },\r\n      $vxeTime: {\r\n        filters: [{ data: { type: 'has', isCase: false, value: '' } }],\r\n        filterRender: { name: 'FilterComplex' }\r\n      },\r\n      $vxeInput: {\r\n        $vxeInputtext: {\r\n          filters: [{ data: { vals: [], sVal: '' } }],\r\n          filterRender: { name: 'FilterContent' }\r\n        },\r\n        $vxeInputinteger: {\r\n          filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'integer' } }],\r\n          filterRender: { name: 'FilterComplex' }\r\n        },\r\n        $vxeInputfloat: {\r\n          filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }],\r\n          filterRender: { name: 'FilterComplex' }\r\n        },\r\n        $vxeInputnumber: {\r\n          filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'number' } }],\r\n          filterRender: { name: 'FilterComplex' }\r\n        },\r\n        $vxeInputyear: {\r\n          filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'year' } }],\r\n          filterRender: { name: 'FilterComplex' }\r\n        },\r\n        $vxeInputdate: {\r\n          filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'date' } }],\r\n          filterRender: { name: 'FilterComplex' }\r\n        },\r\n        $vxeInputglobal: {\r\n          filters: [{ data: '' }],\r\n          filterRender: { name: 'FilterInput' }\r\n        }\r\n      },\r\n      $vxeEditDownTextarea: {\r\n        filters: [{ data: { vals: [], sVal: '' } }],\r\n        filterRender: { name: 'FilterContent' }\r\n      },\r\n      $vxeCheckbox: {\r\n        filters: [{ data: { vals: [], sVal: '' } }],\r\n        filterRender: { name: 'FilterSelect' }\r\n      },\r\n      $vxeRadio: {\r\n        filters: [{ data: '' }],\r\n        filterRender: { name: 'FilterInput' }\r\n      },\r\n      $$vxeEditDownJson: {\r\n        filters: [{ data: '' }],\r\n        filterRender: { name: 'FilterInput' }\r\n      },\r\n      $vxeEditDownConditions: {\r\n        filters: [{ data: '' }],\r\n        filterRender: { name: 'FilterInput' }\r\n      },\r\n      $vxeIntervar: {\r\n        filters: [{ data: '' }],\r\n        filterRender: { name: 'FilterInput' }\r\n      },\r\n      // 短期保留\r\n      $calculateRender: {\r\n        filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }],\r\n        filterRender: { name: 'FilterComplex' }\r\n      },\r\n      $moneyRender: {\r\n        filters: [{ data: { type: 'has', isCase: false, value: '', dataType: 'float' } }],\r\n        filterRender: { name: 'FilterComplex' }\r\n      },\r\n      $href: {\r\n        filters: [{ data: '' }],\r\n        filterRender: { name: 'FilterInput' }\r\n      },\r\n      $EditDownTextarea: {\r\n        filters: [{ data: { vals: [], sVal: '' } }],\r\n        filterRender: { name: 'FilterContent' }\r\n      },\r\n      treeinput: {\r\n        filters: [{ data: { vals: [], sVal: '' } }],\r\n        filterRender: { name: 'FilterContent' }\r\n      }\r\n    }\r\n    if (Array.isArray(item.children)) {\r\n      return item\r\n    }\r\n    try {\r\n      let itemRender = item.cellRender || item.editRender\r\n      if (itemRender && (item.filters + '' === 'true')) {\r\n        if (itemRender) {\r\n          if (itemRender.name && filterTypeMap[itemRender.name]) {\r\n            if (itemRender.name === '$vxeInput') {\r\n              if (this.getbasicDataType(itemRender.props) === 'Object' && filterTypeMap['$vxeInput'][itemRender.name + itemRender.props.type]) {\r\n                item = Object.assign({}, item, filterTypeMap['$vxeInput'][itemRender.name + itemRender.props.type])\r\n              } else {\r\n                item = Object.assign({}, item, filterTypeMap['$vxeInput'][itemRender.name + 'global'])\r\n              }\r\n            } else {\r\n              item = Object.assign({}, item, filterTypeMap[itemRender.name])\r\n            }\r\n          } else {\r\n            const { options } = itemRender\r\n            switch (itemRender.name) {\r\n            // 调整 开始\r\n              case '$select':\r\n                item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n                item.filterMultiple = true\r\n                break\r\n              // 调整 开始\r\n              case '$vxeSelect':\r\n                item.filters = Array.isArray(options) ? options : []\r\n                item.filterMultiple = true\r\n                break\r\n              case '$vxeRadio':\r\n                item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n                item.filterMultiple = true\r\n                break\r\n              case '$vxeCheckbox':\r\n                item.filters = [{ data: { vals: [], sVal: '' } }]\r\n                item.filterRender = { name: 'FilterSelect' }\r\n                break\r\n              default:\r\n                if (['seq', 'checkbox', 'dragSort', 'radio', 'optionRow'].indexOf(item.type)) {\r\n                  delete item.filters\r\n                  delete item.filterRender\r\n                  delete item.filterMethod\r\n                } else {\r\n                  item.filters = [{ data: '' }]\r\n                  item.filterRender = { name: 'FilterInput' }\r\n                }\r\n                break\r\n            }\r\n          }\r\n        }\r\n      } else if (!(typeof item.filters === 'object')) {\r\n        item.filters = false\r\n      } else {\r\n      }\r\n    } catch (e) {\r\n      throw (e)\r\n    }\r\n    return item\r\n  },\r\n  registSingelRowFormater(item) {\r\n    // 绑定单条列格式化配置 废弃\r\n    let self = this\r\n    if (item.field && self.tableConfigCp.formatters[item.field]) {\r\n      item.formatter = self.tableConfigCp.formatters[item.field]\r\n    }\r\n  },\r\n  registSingelRowRenderer(item) {\r\n    // 绑定单条列渲染器配置 废弃\r\n    let self = this\r\n    let itemRender = item.cellRender || item.editRender || item.contentRender\r\n    if (item.field && self.tableConfigCp.cellRenderConfig[item.field] && !itemRender) {\r\n      item[self.tableConfigCp.cellRenderConfig[item.field].type] = self.tableConfigCp.cellRenderConfig[item.field]\r\n    }\r\n  },\r\n  registSingelRowSorts(item) {\r\n    // 绑定单条列排序配置\r\n    if (!item.children && item['sortable'] === undefined) {\r\n      item['sortable'] = item['sortable'] || true\r\n    }\r\n  },\r\n  registRenderers(arr = []) {\r\n    // 初始化绑定列渲染器\r\n    let self = this\r\n    function reverRegistRenderers(arrc) {\r\n      arrc.forEach((item, index) => {\r\n        reverRegistRenderers(item)\r\n        if (Array.isArray(item.children) && item.children.length) {\r\n          self.registRenderers(item.children)\r\n        }\r\n      })\r\n    }\r\n    reverRegistRenderers(arr)\r\n  },\r\n  registFilters(arr = []) {\r\n    // 初始化绑定列过滤器函数 废弃\r\n    let self = this\r\n    arr.forEach((item, index) => {\r\n      self.registSingelRowFilter(item)\r\n      if (Array.isArray(item.children) && item.children.length) {\r\n        self.registFormatters(item.children)\r\n      }\r\n    })\r\n  },\r\n  registFormatters(arr = []) {\r\n    // 初始化绑定列格式化函数 废弃\r\n    let self = this\r\n    arr.forEach((item, index) => {\r\n      self.registSingelRowFormater(item)\r\n      if (Array.isArray(item.children) && item.children.length) {\r\n        self.registFormatters(item.children)\r\n      }\r\n    })\r\n  },\r\n  registTableRender(renderers) {\r\n    // 注册渲染器\r\n    for (let i in renderers) {\r\n      this.$VXETable.renderer.add(i, renderers[i])\r\n    }\r\n  }\r\n}\r\nconst initMethods = {\r\n  initCreated() {\r\n    // 初始化Created\r\n    // 即将废弃\r\n    this.registTableRender(defaultRenderers)\r\n    this.registGlobleFormatters(defaultFormatters)\r\n  },\r\n  initMounted() {\r\n    // 初始化Mounted\r\n    this.moneyUnit = this.defaultMoneyUnit\r\n    this.initFirst()\r\n  },\r\n  initFirst() {\r\n    // 组件初始化\r\n    this.initTableGlobalConfig()\r\n    this.initContextMenuConfig()\r\n    this.initSeqConfig()\r\n    this.initExpandConfig()\r\n    this.initToolbar()\r\n    this.initEditConfig()\r\n    this.initTableFormConfig()\r\n    this.initCalculateConstraintConfig()\r\n    this.initTableConfig()\r\n    this.initEditRules()\r\n    this.initTable()\r\n    this.initTableData()\r\n  },\r\n  initTable() {\r\n    this.initTableConlums()\r\n    this.setPagerConfig()\r\n  },\r\n  initTableGlobalConfig() {\r\n    // 初始化全局配置\r\n    this.tableGlobalConfigIn = Object.assign({}, this.tableGlobalConfigIn, this.tableGlobalConfig)\r\n  },\r\n  initTableConfig() {\r\n    // 初始化表格列和渲染器配置\r\n    this.tableConfigCp = Object.assign({}, this.tableConfigCp, this.tableConfig)\r\n    this.registTableRender(this.tableConfigCp.renderers)\r\n  },\r\n  initTableConlums() {\r\n    // 初始化列配置\r\n    this.calculateConstraintConfigIn = Object.assign({}, this.calculateConstraintConfigIn, {\r\n      colFormulaConfig: { // 列公式配置\r\n      }\r\n    })\r\n    this.generateCalcColFormulaMap(this.tableColumnsConfig)\r\n    this.tableColumnsConfigIn = this.unidirectionalData ? this.deepCopy(this.generateTableConlums(this.tableColumnsConfig, this.tableConfigCp.globalConfig)) : this.generateTableConlums(this.tableColumnsConfig, this.tableConfigCp.globalConfig)\r\n    this.$nextTick(() => {\r\n      this.setPagerConfig({\r\n        currentPage: 1\r\n      })\r\n    })\r\n    return this.tableColumnsConfigIn\r\n  },\r\n  generateTableConlums(conlums, globalConfig) {\r\n    // 生成表头\r\n    let tableColumnsConfigIn = []\r\n    if (globalConfig.checkType) {\r\n      tableColumnsConfigIn.push(tableColumns[globalConfig.checkType])\r\n    }\r\n    if (globalConfig.seq) {\r\n      tableColumnsConfigIn.push(tableColumns['seq'])\r\n    }\r\n    tableColumnsConfigIn = [...tableColumnsConfigIn, ...conlums]\r\n    if (globalConfig.optionSort) {\r\n      tableColumnsConfigIn.push(tableColumns['optionSort'])\r\n    }\r\n    this.registGloableConlumsConfig(tableColumnsConfigIn)\r\n    return tableColumnsConfigIn\r\n  },\r\n  generateOptionRow(tableColumnsConfigIn, globalConfig) {\r\n    // 初始化操作列 废弃\r\n    if (globalConfig.hasOptionRow) {\r\n      let optionRow = tableColumns['optionRow']\r\n      if (this.getbasicDataType(this.tableConfigCp.cellRenderConfig.optionRow) === 'Object') {\r\n        let cellRender = optionRow.cellRender\r\n        cellRender = Object.assign({}, this.tableConfigCp.cellRenderConfig.optionRow)\r\n        optionRow[this.tableConfigCp.cellRenderConfig.optionRow.type] = cellRender\r\n      }\r\n      tableColumnsConfigIn.push(optionRow)\r\n    }\r\n    return tableColumnsConfigIn\r\n  },\r\n  initCalculateConstraintConfig() {\r\n    // 初始化计算和约束配置\r\n    this.calculateConstraintConfigIn = Object.assign({}, this.calculateConstraintConfigIn, this.calculateConstraintConfig)\r\n  },\r\n  initToolbar() {\r\n    // 初始化工具栏\r\n    if (this.getbasicDataType(this.toolbarConfig) === 'Boolean') {\r\n      this.toolbarConfigIn = undefined\r\n      this.toolbarConfigInCopy = {}\r\n    } else {\r\n      this.toolbarConfigIn = Object.assign({}, this.toolbarConfigInCp, this.toolbarConfig)\r\n      this.toolbarConfigInCopy = this.toolbarConfigIn\r\n      if (this.toolbarConfigInCopy.yearlist.length) {\r\n        this.formSearchData.year = this.toolbarConfigInCopy.yearlist[0]\r\n      }\r\n    }\r\n  },\r\n  initTableData(data) {\r\n    // 初始化表格数据\r\n    let self = this\r\n    this.selection = []\r\n    let calclataResult = this.reductionRowFormula(this.calculateConstraintConfigIn.rowformulaConfig, this.addMissingFieldsAndCalcColFormula(data || this.tableData), this.id)\r\n    calclataResult = this.reductionRowCodeFormula(this.calculateConstraintConfigIn.rowCodeFormulaConfig, calclataResult, this.id)\r\n    this.tableDataIn = this.unidirectionalData ? this.deepCopy(calclataResult) : calclataResult\r\n    this.$nextTick().then(() => {\r\n      if (this.$refs.xGrid) {\r\n        self.$refs.xGrid.$refs.xTable.tableSourceData = self.deepCopy(self.getTableData().fullData)\r\n        self.$refs.xGrid.clearFilter().then(() => {\r\n          self.$refs.xGrid.$refs.xTable.clearCheckboxRow()\r\n          self.$refs.xGrid.$refs.xTable.handleDefaults()\r\n        })\r\n      }\r\n    })\r\n    return this.tableDataIn\r\n  },\r\n  initTableFormConfig() {\r\n    if (this.getbasicDataType(this.tableFormConfig) === 'Boolean') {\r\n      this.tableFormConfigIn = undefined\r\n    } else {\r\n      this.tableFormConfigIn = Object.assign({}, this.tableFormConfig)\r\n    }\r\n  },\r\n  initSeqConfig(startIndex = 0) {\r\n    // 初始化序号配置项\r\n    let self = this\r\n    this.seqConfig = {\r\n      startIndex: 1, // 设置序号的起始值 number0\r\n      seqMethod({ row, $rowIndex, rowIndex, column, columnIndex, seq, $seq }) {\r\n        if (self.pagerConfigIn && !self.treeConfig) {\r\n          return self.pagerConfigIn.pageSize * (self.pagerConfigIn.currentPage - 1) + seq\r\n        } else {\r\n          return $seq === '' || $seq === undefined ? seq : $seq + '.' + seq\r\n        }\r\n      }\r\n    }\r\n  },\r\n  initEditConfig() { // 编辑配置\r\n    if (this.getbasicDataType(this.editConfig) === 'Boolean') {\r\n      this.editConfigIn = undefined\r\n    } else {\r\n      this.editConfigIn = Object.assign(this.editConfigInCp, this.editConfig)\r\n    }\r\n  },\r\n  initExpandConfig() {\r\n    // 编辑展开配置\r\n    if (this.getbasicDataType(this.expandConfig) === 'Undefined' || this.getbasicDataType(this.expandConfig) === 'Boolean') {\r\n      this.expandConfigIn = {\r\n        expandAll: false\r\n      }\r\n    } else {\r\n      this.expandConfigIn = Object.assign({}, this.expandConfig)\r\n    }\r\n  },\r\n  initContextMenuConfig() {\r\n    // 更新右键配置\r\n    if (this.getbasicDataType(this.contextMenuConfig) === 'Undefined' || this.getbasicDataType(this.contextMenuConfig) === 'Boolean') {\r\n      this.contextMenuConfigIn = {}\r\n    } else {\r\n      this.contextMenuConfigIn = Object.assign({}, this.contextMenuConfigIn, this.contextMenuConfig)\r\n    }\r\n  },\r\n  initTreeConfig() {\r\n    // 表格树配置\r\n    if (this.getbasicDataType(this.treeConfig) === 'Boolean') {\r\n      this.treeConfigIn = this.treeConfig\r\n    } else {\r\n      this.treeConfigIn = Object.assign({\r\n        dblExpandAll: false, // 双击展开当前节点树形数据\r\n        onlyDblTreeNodeExpand: false, // 在不允许编辑模式下是否仅仅双击树列才允许执行展开\r\n        dblExpand: false, // 是否执行双击展开树形数据\r\n        children: 'children',\r\n        accordion: true,\r\n        iconOpen: 'fa fa-minus-square-o',\r\n        iconClose: 'fa fa-plus-square-o'\r\n      }, this.treeConfig)\r\n    }\r\n  },\r\n  initFooterConfig() {\r\n    // 更新footer配置\r\n    this.footerConfigIn = Object.assign({}, this.footerConfigIn, this.footerConfig)\r\n  },\r\n  initEditRules() {\r\n    // 编辑校验规则\r\n    this.editRulesIn = Object.assign({}, this.editRulesIn, this.addTreeReg({ ...this.editRules }))\r\n  }\r\n}\r\nconst tableOptionFn = {\r\n  tableOptionFn() {\r\n    // 全局表格组件xgrid调用实例\r\n    return this.$refs.xGrid\r\n  },\r\n  updateFooter() {\r\n    // 更新表尾\r\n    return this.$refs.xGrid.updateFooter()\r\n  },\r\n  exportData(obj) {\r\n    // 导出数据\r\n    this.$refs.xGrid.openExport({\r\n      // 默认勾选源\r\n      original: true\r\n    })\r\n  },\r\n  importDataEvent() {\r\n    // 导入数据\r\n    this.$refs.xGrid.importData()\r\n  },\r\n  setAllCheckboxRow() {\r\n    // 设置所有选中\r\n    this.$refs.xGrid.setAllCheckboxRow(true)\r\n    this.updateFooter().then(() => { }).catch(() => { })\r\n  },\r\n  clearCheckboxRow() {\r\n    // 清除所有选中\r\n    this.$refs.xGrid.clearCheckboxRow()\r\n    this.updateFooter().then(() => {}).catch(() => {})\r\n  },\r\n  removeCheckboxRow() {\r\n    // 删除选中行操作\r\n    let self = this\r\n    this.$XModal.confirm('您确定要删除所选中数据吗?').then(type => {\r\n      if (type === 'confirm') {\r\n        self.$refs.xGrid.removeCheckboxRow()\r\n      }\r\n    })\r\n  },\r\n  revertEvent() {\r\n    // 撤销操作\r\n    this.$XModal.confirm('您确定要还原数据吗?').then(type => {\r\n      if (type === 'confirm') {\r\n        this.reLoadTable()\r\n      }\r\n    })\r\n  },\r\n  deleteRowData(rows) {\r\n    // 删除选中行操作\r\n    let self = this\r\n    this.$XModal.confirm('您确定要删除所选中数据吗?').then(type => {\r\n      if (type === 'confirm') {\r\n        self.$refs.xGrid.removeCheckboxRow(rows)\r\n      }\r\n    })\r\n  },\r\n  async copySelectionRowData(obj = {}) {\r\n    // 复制选中行数据\r\n    let self = this\r\n    const { rowIndexTo, data } = obj\r\n    let rowTo = rowIndexTo === undefined ? -1 : rowIndexTo\r\n    let newRowSelectionsData = data || self.$refs.xGrid.getCheckboxRecords()\r\n    if (newRowSelectionsData.length) {\r\n      newRowSelectionsData.forEach((item, index) => {\r\n        Object.assign({}, item, {\r\n          insertMark: '新数据',\r\n          date: new Date().format('YYYY-MM-DD hh:mm:ss:c'),\r\n          isNew: true,\r\n          _XID: ''\r\n        })\r\n      })\r\n      await self.$refs.xGrid.insert(newRowSelectionsData)\r\n      await self.$refs.xGrid.setActiveCell(rowTo)\r\n    } else {\r\n      self.$XModal.message({ message: '请先选择新增数据的模版!' })\r\n    }\r\n  },\r\n  async copyRowData(obj = {}) {\r\n    // 复制行\r\n    let self = this\r\n    const { rowSource, rowIndexTo } = obj\r\n    let rowSourceData = rowSource === undefined ? 0 : rowSource\r\n    let rowTo = rowIndexTo === undefined ? -1 : rowIndexTo\r\n    // 复制行\r\n    let newRowDataObj = { ...self.$refs.xGrid.getData(rowSourceData) }\r\n    newRowDataObj = Object.assign({}, newRowDataObj, {\r\n      insertMark: '新数据',\r\n      date: new Date().format('YYYY-MM-DD hh:mm:ss:c'),\r\n      isNew: true,\r\n      _XID: ''\r\n    })\r\n    let { row } = await self.$refs.xGrid.insert(newRowDataObj, rowTo)\r\n    await self.$refs.xGrid.setCurrentRow(row)\r\n    await self.$refs.xGrid.setActiveCell(row)\r\n    await self.$refs.xGrid.validate(row).catch(errMap => errMap)\r\n    // this.$XModal.message({ message: `复制单条数据完成，行号为 ${rowTo + 1}` })\r\n  },\r\n  async insertRowData(obj = {}) {\r\n    // 新增行\r\n    let self = this\r\n    const { data, rowIndexTo } = obj\r\n    let rowTo = rowIndexTo === undefined ? -1 : rowIndexTo\r\n    let dataObj = Object.assign({}, data === undefined ? {} : data, {\r\n      insertMark: '新数据',\r\n      date: new Date().format('YYYY-MM-DD hh:mm:ss:c'),\r\n      isNew: true,\r\n      _XID: ''\r\n    })\r\n    let { row } = await self.$refs.xGrid.insertAt(dataObj, rowTo)\r\n    await self.$refs.xGrid.setCurrentRow(row)\r\n    await self.$refs.xGrid.setActiveCell(row)\r\n    await self.$refs.xGrid.validate(row).catch(errMap => {\r\n      console.log('validate', errMap)\r\n      return errMap\r\n    })\r\n    // await this.$refs.xGrid.fullValidate(row).catch(errMap => {\r\n    //   console.log('fullValidate', errMap)\r\n    //   return errMap\r\n    // })\r\n    // this.$XModal.message({ message: `复制单条数据完成，行号为 ${rowTo + 1}` })\r\n  },\r\n  reLoadTable() {\r\n    let self = this\r\n    let xGrid = this.$refs.xGrid\r\n    this.initTable()\r\n    // xGrid.reloadData(xGrid.getTableData().fullData)\r\n    xGrid.reloadColumn(self.initTableConlums())\r\n    xGrid.reloadData(self.initTableData()).then().catch()\r\n  },\r\n  reLoadTableData() {\r\n    let xGrid = this.$refs.xGrid\r\n    // xGrid.reloadData(xGrid.getTableData().fullData)\r\n    xGrid.reloadData(this.initTableData()).then().catch()\r\n  },\r\n  refreshTable(data) {\r\n    // 重新加载所有\r\n    if (data) {\r\n      // 重新加载数据刷新视图 调整 即将废弃\r\n      let xGrid = this.$refs.xGrid\r\n      // xGrid.reloadData(xGrid.getTableData().fullData)\r\n      xGrid.reloadData(data || this.tableDataIn).then().catch()\r\n    } else {\r\n      this.initMounted()\r\n      this.ifRenderTable = false\r\n      this.$nextTick(() => {\r\n        this.ifRenderTable = true\r\n      })\r\n    }\r\n  },\r\n  reloadTableConlums(conlums) {\r\n    // 重加载表头\r\n    this.$refs.xGrid.reloadColumn(conlums ? this.generateTableConlums(conlums, this.tableConfigCp.globalConfig) : self.initTableConlums()).then().catch()\r\n  },\r\n  reloadTableRenderData(data = []) {\r\n    // 重加载渲染数据\r\n    let xGrid = this.$refs.xGrid\r\n    xGrid.reloadData(data)\r\n    this.selection = []\r\n    if (xGrid) {\r\n      xGrid.removeCheckboxRow()\r\n    }\r\n  },\r\n  reCalcAndReLoadTableData(data = []) {\r\n    // 重新计算tableData并刷新视图\r\n    let self = this\r\n    return new Promise((resolve, reject) => {\r\n      self.calcTableData(data)\r\n      self.updateFooter().then(() => {\r\n        resolve(self.getTableData())\r\n      }).catch((e) => {\r\n        reject(e)\r\n      })\r\n    })\r\n  },\r\n  clearDataRenderField(data) {\r\n    // 删除viewSort字段\r\n    let self = this\r\n    return data.map((item, index) => {\r\n      let itemN = Object.assign({}, item)\r\n      Object.keys(itemN).forEach((key, ki) => {\r\n        if (key.indexOf('__viewSort') >= 0 || key.indexOf('__sort') >= 0) {\r\n          delete itemN[key]\r\n        }\r\n        if (Array.isArray(itemN.children) && itemN.children.length) {\r\n          itemN.children = self.clearDataRenderField(itemN.children)\r\n        }\r\n      })\r\n      return itemN\r\n    })\r\n  },\r\n  getTableData() {\r\n    // 获取表格数据\r\n    const listData = this.getListData()\r\n    const insertRecords = this.$refs.xGrid.getInsertRecords()\r\n    const updateRecords = this.$refs.xGrid.getUpdateRecords()\r\n    const removeRecords = this.$refs.xGrid.getRemoveRecords()\r\n    const { keepSource, tableSourceData } = this.$refs.xGrid.$refs.xTable\r\n    const { fullData, visibleData, tableData, footerData } = this.$refs.xGrid.getTableData()\r\n    const selection = this.$refs.xGrid.getCheckboxRecords()\r\n    const { tableColumnsConfig, editRules } = this\r\n    return { keepSource, tableSourceData, fullData, visibleData, tableData, footerData, tableColumnsConfig, selection, editRules, listData, insertRecords, removeRecords, updateRecords }\r\n  },\r\n  getPureTableData() {\r\n    // 获取表格纯净数据\r\n    const listData = this.getListData()\r\n    const insertRecords = this.$refs.xGrid.getInsertRecords()\r\n    const updateRecords = this.$refs.xGrid.getUpdateRecords()\r\n    const removeRecords = this.$refs.xGrid.getRemoveRecords()\r\n    const { keepSource, tableSourceData } = this.$refs.xGrid.$refs.xTable\r\n    const { fullData, visibleData, tableData, footerData } = this.$refs.xGrid.getTableData()\r\n    const selection = this.$refs.xGrid.getCheckboxRecords()\r\n    const { tableColumnsConfig, editRules } = this\r\n    return { keepSource, tableSourceData: this.clearDataRenderField(tableSourceData), fullData: this.clearDataRenderField(fullData), visibleData: this.clearDataRenderField(visibleData), tableData: this.clearDataRenderField(tableData), footerData, tableColumnsConfig, selection: this.clearDataRenderField(selection), editRules, listData: this.clearDataRenderField(listData), insertRecords: this.clearDataRenderField(insertRecords), updateRecords: this.clearDataRenderField(updateRecords), removeRecords: this.clearDataRenderField(removeRecords) }\r\n  },\r\n  getOptionData() {\r\n    // 获取当前操作数据\r\n    return this.$refs.xGrid.getRecordset()\r\n  },\r\n  getInsertRowData() {\r\n    // 获取新增行\r\n    return this.$refs.xGrid.getInsertRecords()\r\n    // this.$XModal.alert(insertRecords.length)\r\n  },\r\n  getSelectionData() {\r\n    // 获取选中\r\n    return this.$refs.xGrid.getCheckboxRecords()\r\n    // this.$XModal.alert(selectRecords.length)\r\n  },\r\n  getData(rowIndex = []) {\r\n    return this.$refs.xGrid.getData(rowIndex)\r\n  },\r\n  validate(row = true) {\r\n    return this.$refs.xGrid.validate(row)\r\n  },\r\n  async validEvent(row = true) {\r\n    // 校验\r\n    const errMap = await this.$refs.xGrid.validate(row).catch(errMap => errMap)\r\n    if (errMap) {\r\n      this.$XModal.message({ status: 'error', message: '校验不通过！' })\r\n    } else {\r\n      this.$XModal.message({ status: 'success', message: '校验成功！' })\r\n    }\r\n  },\r\n  async fullValidEvent(row = true) {\r\n    // 所有校验\r\n    const errMap = await this.$refs.xGrid.fullValidate(row).catch(errMap => errMap)\r\n    if (errMap) {\r\n      let msgList = []\r\n      Object.values(errMap).forEach(errList => {\r\n        errList.forEach(params => {\r\n          let { rowIndex, column, rules } = params\r\n          rules.forEach(rule => {\r\n            msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\r\n          })\r\n        })\r\n      })\r\n      this.$XModal.message({\r\n        status: 'error',\r\n        message: () => {\r\n          return [\r\n            <div class=\"red\" style=\"max-height: 400px;overflow: auto;\">\r\n              {\r\n                msgList.map(msg => <div>{ msg }</div>)\r\n              }\r\n            </div>\r\n          ]\r\n        }\r\n      })\r\n    } else {\r\n      this.$XModal.message({ status: 'success', message: '校验成功！' })\r\n    }\r\n  },\r\n  async selectValidEvent() {\r\n    // 选中校验\r\n    let selectRecords = this.$refs.xGrid.getCheckboxRecords()\r\n    if (selectRecords.length > 0) {\r\n      const errMap = await this.$refs.xGrid.validate(selectRecords).catch(errMap => errMap)\r\n      if (errMap) {\r\n        this.$XModal.message({ status: 'error', message: '校验不通过！' })\r\n        return false\r\n      } else {\r\n        this.$XModal.message({ status: 'success', message: '校验成功！' })\r\n        return true\r\n      }\r\n    } else {\r\n      this.$XModal.message({ status: 'warning', message: '未选中数据！' })\r\n    }\r\n  },\r\n  insertEvent(row, column) {\r\n    // 插入数据\r\n    let xTable = this.$refs.xTable\r\n    xTable.insertAt(null, row)\r\n      .then(({ row }) => xTable.setActiveCell(row, column.property))\r\n  }\r\n}\r\nconst tableEventFn = {\r\n  setColumnDrop() {\r\n    let Sortable = this.$Sortable\r\n    this.$nextTick(() => {\r\n      let xTable = this.$refs.xGrid\r\n      this.sortable = Sortable.create(xTable.$el.querySelector('.body--wrapper>.vxe-table--header .vxe-header--row'), {\r\n        handle: '.vxe-header--column:not(.col--expand)',\r\n        onEnd: ({ newIndex, oldIndex }) => {\r\n          let tableColumn = xTable.getColumns()\r\n          let currRow = tableColumn.splice(oldIndex, 1)[0]\r\n          tableColumn.splice(newIndex, 0, currRow)\r\n          xTable.loadColumn(tableColumn)\r\n        }\r\n      })\r\n    })\r\n  },\r\n  onContextMenuClick({ menu, row, column, columnIndex, rowIndex }, event) { // 右键菜单\r\n    event = event || window.event\r\n    let self = this\r\n    let xGrid = this.$refs.xGrid\r\n    switch (menu.code) {\r\n      case 'hideColumn':// 隐藏当前列\r\n        xGrid.hideColumn(column)\r\n        break\r\n      case 'showAllColumn': // 显示所有列\r\n        xGrid.resetColumn()\r\n        break\r\n      case 'recover_all': // 显示所有列\r\n        self.reloadTableConlums(self.tableColumnsConfig)\r\n        break\r\n      case 'resetColumn': // 重新加载\r\n        xGrid.resetColumn({ visible: true, resizable: true })\r\n        break\r\n      case 'toggleAllCheckboxRow': // 重新加载\r\n        xGrid.toggleAllCheckboxRow()\r\n        break\r\n      case 'reload': // 重新加载\r\n        break\r\n      case 'insertAt': // 插入数据\r\n        self.insertRowData({})\r\n        break\r\n      case 'remove': // 移除数据\r\n        xGrid.remove(row)\r\n        break\r\n      case 'clear': // 清除单元格数据\r\n        xGrid.clearData(row, column.property)\r\n        break\r\n      case 'verify': // 校验并定位到第一个错误\r\n        // this.validate().catch(errMap => console.log(errMap))\r\n        this.validEvent()\r\n        break\r\n      case 'maximize': // 表格最大化\r\n        xGrid.maximize()\r\n        break\r\n      case 'revert': // 表格还原\r\n        self.revertEvent()\r\n        break\r\n      case 'zoom': // 切换表格最大化\r\n        xGrid.zoom()\r\n        break\r\n      // case 'copy': // 复制文本\r\n      //   if (self.$XEClipboard.copy(row[column.property])) {\r\n      //     self.$XModal.message({ message: '已复制到剪贴板！', status: 'success' })\r\n      //   }\r\n      //   break\r\n      // case 'paste': // 复制文本\r\n      //   let clipboardData = (event.clipboardData || event.originalEvent.clipboardData)\r\n      //   row[column.property] = clipboardData\r\n      //   break\r\n      //  case 'save':\r\n      //  self.$XModal.message({ message: '保存成功', status: 'success' })\r\n      //  break\r\n      case 'exportDataXlsx':\r\n        console.log('this.$Export', this, this.$Export)\r\n        this.triggerExportOption()\r\n        // this.$Export.exportExcel({\r\n        //   columns: this.tableColumnsConfig,\r\n        //   datas: this.getTableData().fullData\r\n        // })\r\n        // xGrid.openExport({\r\n        //   filename: 'export',\r\n        //   sheetName: 'Sheet1',\r\n        //   type: 'xlsx',\r\n        //   isPrint: true\r\n        // })\r\n        break\r\n      case 'print':\r\n        xGrid.print({\r\n          filename: 'printData',\r\n          mode: 'current',\r\n          isHeader: true,\r\n          isFooter: true\r\n        })\r\n        break\r\n      case 'logCurrentData':\r\n        console.log(row[column.property], row, column, columnIndex, rowIndex)\r\n        console.log(this.getTableData())\r\n        break\r\n      case 'exportDataPdf':\r\n        xGrid.exportData({\r\n          filename: '导出',\r\n          type: 'pdf'\r\n        })\r\n        break\r\n      case 'clearSort':\r\n        xGrid.clearSort()\r\n        break\r\n      case 'sortAsc':\r\n        xGrid.sort(column.property, 'asc')\r\n        break\r\n      case 'sortDesc':\r\n        xGrid.sort(column.property, 'desc')\r\n        break\r\n    }\r\n    return false\r\n  },\r\n  triggerReverseCheck() {\r\n    // 反选\r\n    let self = this\r\n    let xGrid = self.$refs.xGrid\r\n    return new Promise((resolve, reject) => {\r\n      // let selectionNew = []\r\n      let selection = xGrid.getCheckboxRecords()\r\n      let { tableData } = xGrid.getTableData()\r\n      // tableData.forEach((row, rowIndex) => {\r\n      //   if (!selection.some((item, index) => {\r\n      //     return row._XID === item._XID\r\n      //   })) {\r\n      //     selectionNew.push(row)\r\n      //   }\r\n      // })\r\n      // xGrid.clearCheckboxRow().then(() => {\r\n      xGrid.setCheckboxRow(tableData, true).then(() => {\r\n        xGrid.setCheckboxRow(selection, false).then(() => {\r\n          self.selection = xGrid.getCheckboxRecords()\r\n          resolve(self.selection)\r\n        }).catch(e => {\r\n          reject(e)\r\n        })\r\n      }).catch(e => {\r\n        reject(e)\r\n      })\r\n      // }).catch(e => {\r\n      //   reject(e)\r\n      // })\r\n    })\r\n  },\r\n  handleCheckboxChange(obj, e) {\r\n    // 多选选中或去选某一条事件\r\n    this.selection = obj.records\r\n    this.$emit('checkboxChange', obj, e)\r\n    this.$emit('ProxyEvent', 'checkboxChange', obj, e)\r\n    this.updateFooter().then(() => {}).catch(() => {})\r\n  },\r\n  handleCheckboxAllChange(obj, e) {\r\n    // 全选选中或去选某一条事件\r\n    this.selection = obj.records\r\n    this.$emit('checkboxAll', obj, e)\r\n    this.$emit('ProxyEvent', 'checkboxAll', obj, e)\r\n    this.updateFooter().then(() => {}).catch(() => {})\r\n  },\r\n  onOptionRowClick(obj) {\r\n    // 操作列点击事件\r\n    this.$emit('onOptionRowClick', obj, this)\r\n    this.$emit('ProxyEvent', 'onOptionRowClick', obj, this)\r\n    let methods = this.tableConfigCp.methods\r\n    typeof (methods.onOptionRowClick) === 'function' && methods.onOptionRowClick(obj, this)\r\n  },\r\n  onOptionSortRowClick({ row, column, $rowIndex, data, items, optionType }) {\r\n    switch (optionType) {\r\n      case 'upSort':\r\n        if ($rowIndex > 0) {\r\n          let temp = data[$rowIndex - 1]\r\n          data[$rowIndex - 1] = data[$rowIndex]\r\n          data[$rowIndex] = temp\r\n          // [data[$rowIndex - 1]], data[$rowIndex]] = [data[$rowIndex], data[$rowIndex-1]] ts\r\n        }\r\n        break\r\n      case 'downSort':\r\n        if ($rowIndex < data.length - 1) {\r\n          let temp = data[$rowIndex + 1]\r\n          data[$rowIndex + 1] = data[$rowIndex]\r\n          data[$rowIndex] = temp\r\n          // [data[$rowIndex + 1]], data[$rowIndex]] = [data[$rowIndex], data[$rowIndex + 1]] ts\r\n        }\r\n        break\r\n      case 'topSort':\r\n        if ($rowIndex > 0) {\r\n          data.unshift(data.splice($rowIndex, 1)[0])\r\n        }\r\n        break\r\n      case 'bottomSort':\r\n        if ($rowIndex < data.length - 1) {\r\n          data.push(data.splice($rowIndex, 1)[0])\r\n        }\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    this.$refs.xGrid.reloadData(data).then().catch()\r\n  }\r\n}\r\nconst toolBarEvent = {\r\n  toolbarButtonClickEvent(obj, e) { // toolbar事件代理\r\n    // 工具栏左侧按钮点击事件\r\n    let self = this\r\n    self.$emit('onToolbarBtnClick', obj, this)\r\n    let methods = this.tableConfigCp.methods\r\n    if (typeof (obj.button.callback) === 'function') {\r\n      obj.button.callback(obj, self, e)\r\n    } else {\r\n      typeof (methods.toolbarButtonClickEvent) === 'function' && methods.toolbarButtonClickEvent(obj, self, e)\r\n    }\r\n  },\r\n  onToolbarOperrateClick(code) {\r\n    let self = this\r\n    switch (code) {\r\n      case 'reverseCheck':\r\n        this.triggerReverseCheck().then((res) => {\r\n          this.$emit('triggerReverseCheck', { records: res }, this)\r\n          this.$emit('ProxyEvent', 'triggerReverseCheck', { records: res }, this)\r\n        }).catch(e => {\r\n          console.log(e)\r\n          throw (e)\r\n        })\r\n        break\r\n      case 'refresh':\r\n        this.$emit('onToolbarBtnClick', { context: this, xGrid: this.$refs.xGrid, code: 'refresh' })\r\n        // this.reloadTableConlums(this.tableColumnsConfig)\r\n        // this.refreshTable()\r\n        break\r\n      case 'calculator':\r\n        this.$XModal.message({ status: 'info', message: '此功能正在开发中' })\r\n        break\r\n      case 'zoom':\r\n        this.$refs.xGrid.zoom().then(() => { }).catch(() => {})\r\n        break\r\n      case 'export':\r\n        this.triggerExportOption()\r\n        break\r\n      case 'custom':\r\n        break\r\n      case 'import':\r\n        this.triggerImportOption(\r\n          {\r\n            downloadTemplateCallback(Cb) {\r\n              self.downLoadImportTemplate()\r\n            },\r\n            importSuccessCallback(res) {\r\n              console.log('当前导入数据', res)\r\n            }\r\n          }\r\n        )\r\n        break\r\n      case 'expandAll':\r\n        this.loading = true\r\n        // 设置宏任务，延迟执行避免js进程同步运行大量操作导致渲染进程loading假死\r\n        setTimeout(() => {\r\n          const handle = self.expandAllState\r\n            ? () => this.$refs.xGrid?.clearTreeExpand?.()\r\n            : () => this.$refs.xGrid?.setAllTreeExpand?.(true)\r\n          handle()\r\n            .finally(() => {\r\n              this.expandAllState = !this.expandAllState\r\n              this.loading = false\r\n            })\r\n        }, 16.67)\r\n        break\r\n    }\r\n  },\r\n  setMoneyUnit(Unitlevel, oldUnitlevel) {\r\n    // 设置金额单位\r\n    let xGrid = this.$refs.xGrid\r\n    if (!xGrid) {\r\n      return\r\n    }\r\n    xGrid.$forceUpdate()\r\n    xGrid.updateFooter().then(() => {}).catch(() => {})\r\n  }\r\n}\r\nconst pageEvent = { // 分页事件\r\n  setPagerConfig(obj) {\r\n    // 处理异常情况，total为function\r\n    if (this.getbasicDataType(this.pagerConfig.total) === 'Function') {\r\n      this.pagerConfig.total = 0\r\n    }\r\n    // 更新分页配置\r\n    if (this.getbasicDataType(this.pagerConfig) === 'Boolean') {\r\n      this.pagerConfigIn = undefined\r\n    } else {\r\n      if (obj) {\r\n        this.pagerConfigIn = Object.assign({}, this.pagerConfigIn ? this.pagerConfigIn : this.pagerConfigInCp, obj)\r\n      } else {\r\n        this.pagerConfigIn = Object.assign({}, this.pagerConfigIn ? this.pagerConfigIn : this.pagerConfigInCp, this.pagerConfig)\r\n      }\r\n    }\r\n  },\r\n  handlePageChange({ currentPage, pageSize }) {\r\n    // 分页改变事件\r\n    this.pagerConfigIn.currentPage = currentPage\r\n    this.pagerConfigIn.pageSize = pageSize\r\n    this.loadData()\r\n  },\r\n  handleRefresh() {\r\n    // 刷新\r\n    this.formSearchSubmit({ data: {} })\r\n  },\r\n  getColumnsList() {\r\n    let newColumnsList = []\r\n    this.tableColumnsConfig.forEach(v => {\r\n      newColumnsList.push(v.field)\r\n    })\r\n    return newColumnsList\r\n  },\r\n  delSearchfromMain() {\r\n    // 父组件调用此方法清空查询数据\r\n    this.formSearchData.filterValue = ''\r\n  },\r\n  formSearchSubmit({ data, $event }) {\r\n    let newTbleDatas = []\r\n    // this.formSearchData.filterValue\r\n    let search = this.formSearchData.filterValue\r\n    if (search !== '') {\r\n      console.log('this.tableDataIn', this.tableData)\r\n      this.tableDataIn.forEach(dataNews => {\r\n        let newColumnsList = this.tableColumnsFieldArr\r\n        console.log(newColumnsList)\r\n        for (let i = 0; i < Object.keys(dataNews).length; i++) {\r\n          if (newColumnsList.includes(Object.keys(dataNews)[i]) && String(dataNews[Object.keys(dataNews)[i]]).indexOf(search) > -1) {\r\n            newTbleDatas.push(dataNews)\r\n            break\r\n          }\r\n        }\r\n      })\r\n      this.reloadTableRenderData(newTbleDatas)\r\n    } else {\r\n      this.reloadTableRenderData(this.tableDataIn)\r\n    }\r\n  },\r\n  loadData() {\r\n    // 加载数据\r\n    let self = this\r\n    let searchParams = {\r\n      params: this.formSearchData,\r\n      currentPage: this.pagerConfigIn.currentPage,\r\n      pageSize: this.pagerConfigIn.pageSize\r\n    }\r\n    self.$emit('ajaxData', searchParams, this)\r\n  },\r\n  onAdvancedSearchBtnClick() {\r\n    this.$emit('onAdvancedSearchBtnClick', {\r\n      params: this.formSearchData,\r\n      currentPage: this.pagerConfigIn.currentPage,\r\n      pageSize: this.pagerConfigIn.pageSize\r\n    }, this)\r\n  }\r\n}\r\nconst proxyFn = {\r\n  // resgistEventProxy() {\r\n  // let arg=[...arguments]\r\n  //   // 注册事件代理\r\n  //   let self = this\r\n  //   Object.keys(self.tableEventIn).forEach((item, index) => {\r\n  //     self.$on(self.hyphenate(item), self.tableEventIn[item].bind(self))\r\n  //   })\r\n  // }\r\n  handleSearch() {\r\n    const filterName = this.$XEUtils.toString(this.filterName).trim().toLowerCase()\r\n    if (filterName) {\r\n      const filterRE = new RegExp(filterName, 'gi')\r\n      const options = { children: 'list' }\r\n      const searchProps = ['name', 'desc', 'type', 'enum', 'defVal']\r\n      const rest = this.$XEUtils.searchTree(this.tableData, item => searchProps.some(key => item[key].toLowerCase().indexOf(filterName) > -1), options)\r\n      this.$XEUtils.eachTree(rest, item => {\r\n        searchProps.forEach(key => {\r\n          item[key] = item[key].replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\r\n        })\r\n      }, options)\r\n      this.apiList = rest\r\n      this.$nextTick(() => {\r\n        if (this.$refs.xTable) {\r\n          this.$refs.xTable.setAllTreeExpand(true)\r\n        }\r\n      })\r\n    } else {\r\n      this.apiList = this.tableData\r\n      this.$nextTick(() => {\r\n        if (this.$refs.xTable) {\r\n          this.$refs.xTable.setTreeExpand(this.defaultExpandRows, true)\r\n        }\r\n      })\r\n    }\r\n  },\r\n  // 调用频率间隔 500 毫秒\r\n  searchEvent() {\r\n    this.$XEUtils.debounce(function () {\r\n      this.handleSearch()\r\n    }, 500, { leading: false, trailing: true })\r\n  }\r\n}\r\nconst axiosEvent = {\r\n  async $asyncGet(url, params, cb) { // 使用异步调用，返回结果后再执行\r\n    await this.$http.get(url, params, origin)\r\n  },\r\n  async $asyncPost(url, params, cb) { // 使用异步调用，返回结果后再执行\r\n    await this.$http.post(url, params, origin)\r\n  },\r\n  $post(url, params, origin) {\r\n    let self = this\r\n    return new Promise((resolve, reject) => {\r\n      self.$http.post(url, {\r\n        params: params\r\n      })\r\n        .then(response => {\r\n          if (response.code === 200) {\r\n            resolve(response.data)\r\n          } else {\r\n            resolve([])\r\n          }\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  },\r\n  $get(url, params, origin) {\r\n    let self = this\r\n    return new Promise((resolve, reject) => {\r\n      self.$http.get(url, {\r\n        params: params\r\n      })\r\n        .then(response => {\r\n          if (response.code === 200) {\r\n            resolve(response.data)\r\n          } else {\r\n            resolve([])\r\n          }\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n}\r\nconst tableEvent = {\r\n  cellOptionCallBack() { // 渲染器回调事件\r\n    this.$emit('cellOptionCallBack', ...arguments, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'cellOptionCallBack', ...arguments, this, this.$refs.xGrid)\r\n  },\r\n  // cellChange() { // 渲染器回调事件\r\n  //   this.$emit('cellChange', ...arguments, this, this.$refs.xGrid)\r\n  // },\r\n  keydown(obj) {\r\n    // 添加enter 切换下一个编辑单元格\r\n    // let self = this\r\n    // let event = obj.event || window.event\r\n    // const { xGrid } = self.$refs\r\n    // const { row, rowIndex, column } = xGrid.getActiveRecord()\r\n    // if (event.keyCode === 13 && row !== null) {\r\n    //   const { fullData } = self.getTableData()\r\n    //   let indexof = self.tableColumnsSingEditFieldArr.indexOf(column.property)\r\n    //   if (indexof + 1 < self.tableColumnsSingEditFieldArr.length) {\r\n    //     xGrid.setActiveCell(row, self.tableColumnsSingEditFieldArr[indexof + 1])\r\n    //   } else {\r\n    //     xGrid.setCurrentRow(fullData[rowIndex + 1]).then(() => {\r\n    //       xGrid.setActiveCell(fullData[rowIndex + 1], self.tableColumnsSingEditFieldArr[0])\r\n    //     })\r\n    //   }\r\n    // } else {\r\n    this.$emit('keydown', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'keydown', obj, this, this.$refs.xGrid)\r\n    // }\r\n  }, // 当表格被激活且键盘被按下时会触发的事件  { $event }\r\n  radioChange(obj) {\r\n    this.$emit('radioChange', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'radioChange', obj, this, this.$refs.xGrid)\r\n  }, // 只对 type = radio 有效， 当手动勾选并且值发生改变时触发的事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellClick(obj) {\r\n    let self = this\r\n    const { xGrid } = this.$refs\r\n    if (this.tableConfigCp.globalConfig.cellClickCheck) {\r\n      // const { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, triggerRadio, triggerCheckbox, triggerTreeNode, triggerExpandNode, $event } = obj\r\n      const { row, $event, column } = obj\r\n      if (column.type !== 'checkbox') {\r\n        if ($event.shiftKey) {\r\n          // option\r\n        } else {\r\n          xGrid.setCheckboxRow([row], !xGrid.isCheckedByCheckboxRow(row)).then(() => {\r\n            self.selection = this.$refs.xGrid.getCheckboxRecords()\r\n            self.updateFooter().then(() => {\r\n              xGrid.setCurrentRow(row).then(() => {})\r\n            }).catch(() => {})\r\n          })\r\n        }\r\n      }\r\n    }\r\n    this.$emit('cellClick', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'cellClick', obj, this, this.$refs.xGrid)\r\n  }, // 单元格被点击时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellDblclick(obj) {\r\n    const { row, column } = obj\r\n    if (this.treeConfigIn && this.treeConfigIn.dblExpand) {\r\n      if (this.editConfigIn && column.treeNode) {\r\n        if (this.treeConfigIn.dblExpandAll) {\r\n          this.dblRowExpandAll(row)\r\n        } else {\r\n          this.tableOptionFn().toggleTreeExpand(row).then(() => {\r\n          })\r\n        }\r\n      } else if (!this.editConfigIn && this.treeConfigIn.onlyDblTreeNodeExpand && column.treeNode) {\r\n        if (this.treeConfigIn.dblExpandAll) {\r\n          this.dblRowExpandAll(row)\r\n        } else {\r\n          this.tableOptionFn().toggleTreeExpand(row).then(() => {\r\n          })\r\n        }\r\n      } else if (!this.editConfigIn) {\r\n        if (this.treeConfigIn.dblExpandAll) {\r\n          this.dblRowExpandAll(row)\r\n        } else {\r\n          this.tableOptionFn().toggleTreeExpand(row).then(() => {\r\n          })\r\n        }\r\n      } else {\r\n\r\n      }\r\n    } else {\r\n      this.$emit('cellDblclick', obj, this, this.$refs.xGrid)\r\n      this.$emit('ProxyEvent', 'cellDblclick', obj, this, this.$refs.xGrid)\r\n    }\r\n  }, // 单元格被双击时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  dblRowExpandAll(row) {\r\n    let self = this\r\n    self.tableOptionFn().toggleTreeExpand(row).then((res) => {\r\n      if (Array.isArray(row[this.treeConfigIn.children]) && row[this.treeConfigIn.children].length) {\r\n        row[this.treeConfigIn.children].forEach((item, index) => {\r\n          self.dblRowExpandAll(item)\r\n        })\r\n      }\r\n    })\r\n  },\r\n  cellContextMenu(obj) {\r\n    this.$emit('cellContextMenu', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'cellContextMenu', obj, this, this.$refs.xGrid)\r\n  }, // 只对 context - menu 配置时有效， 单元格被鼠标右键时触发该事件 { type, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellMouseenter(obj) {\r\n    this.$emit('cellMouseenter', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'cellMouseenter', obj, this, this.$refs.xGrid)\r\n  }, // 当单元格 hover 进入时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellMouseleave(obj) {\r\n    this.$emit('cellMouseleave', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'cellMouseleave', obj, this, this.$refs.xGrid)\r\n  }, // 当单元格 hover 退出时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  headerCellClick(obj) {\r\n    this.$emit('headerCellClick', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'headerCellClick', obj, this, this.$refs.xGrid)\r\n  }, // 表头单元格被点击时会触发该事件 { $rowIndex, column, columnIndex, $columnIndex, triggerResizable, triggerSort, triggerFilter, $event }\r\n  headerCellDblclick(obj) {\r\n    this.$emit('headerCellDblclick', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'headerCellDblclick', obj, this, this.$refs.xGrid)\r\n  }, // 表头单元格被双击时会触发该事件 { $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  // headerCellContextMenu(obj) {\r\n  //   this.$emit('headerCellContextMenu', obj, this, this.$refs.xGrid)\r\n  // }, // 只对 context-menu 配置时有效，表头单元格被鼠标右键时触发该事件 { type, column, columnIndex, $event }\r\n  footerCellClick(obj) {\r\n    this.$emit('footerCellClick', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'footerCellClick', obj, this, this.$refs.xGrid)\r\n  }, // 表尾单元格被点击时会触发该事件 // { items, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  footerCellDblclick(obj) {\r\n    this.$emit('footerCellDblclick', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'footerCellDblclick', obj, this, this.$refs.xGrid)\r\n  }, // 表尾单元格被双击时会触发该事件 { items, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  footerCellContextMenu(obj) {\r\n    this.$emit('footerCellContextMenu', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'footerCellContextMenu', obj, this, this.$refs.xGrid)\r\n  }, // 只对 context - menu 配置时有效， 表尾单元格被鼠标右键时触发该事件 { type, column, columnIndex, $event }\r\n  sortChange(obj) {\r\n    this.$emit('sortChange', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'sortChange', obj, this, this.$refs.xGrid)\r\n  }, // 当排序条件发生变化时会触发该事件 { column, column.property, order, $event }\r\n  filterChange(obj) {\r\n    this.$emit('filterChange', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'filterChange', obj, this, this.$refs.xGrid)\r\n  }, // 当筛选条件发生变化时会触发该事件 { column, property, values, datas, filters, $event }{ column, property, values, datas, filters, $event }\r\n  resizableChange(obj) {\r\n    this.$emit('resizableChange', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'resizableChange', obj, this, this.$refs.xGrid)\r\n  }, // 当列宽拖动发生变化时会触发该事件 { $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  toggleRowExpand(obj) {\r\n    this.$emit('toggleRowExpand', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'toggleRowExpand', obj, this, this.$refs.xGrid)\r\n  }, // 当行展开或收起时会触发该事件 { expanded, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  toggleTreeExpand(obj) {\r\n    this.$emit('toggleTreeExpand', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'toggleTreeExpand', obj, this, this.$refs.xGrid)\r\n  }, // 当树节点展开或收起时会触发该事件 { expanded, row, column, columnIndex, $columnIndex, $event }\r\n  contextMenuClick(obj) {\r\n    this.$emit('contextMenuClick', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'contextMenuClick', obj, this, this.$refs.xGrid)\r\n  }, // 只对 context-menu 配置时有效，当点击快捷菜单时会触发该事件 { menu, type, row, rowIndex, column, columnIndex, $event }\r\n  currentChange(obj) {\r\n    // this.performTableDataCalculate(obj)\r\n    this.$nextTick(() => {\r\n      this.$emit('currentChange', obj, this, this.$refs.xGrid)\r\n      this.$emit('ProxyEvent', 'currentChange', obj, this, this.$refs.xGrid)\r\n    })\r\n  }, // 只对 highlightCurrentRow 有效，当手动选中行并且值发生改变时触发的事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  editClosed(obj) {\r\n    this.performTableDataCalculate(obj).then((row) => {\r\n      this.$emit('editClosed', Object.assign(obj, { row: row }), this, this.$refs.xGrid)\r\n      this.$emit('ProxyEvent', 'editClosed', obj, this, this.$refs.xGrid)\r\n    })\r\n  }, // 只对 edit-config 配置时有效，单元格编辑状态下被关闭时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  editActived(obj) {\r\n    this.$emit('editActived', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'editActived', obj, this, this.$refs.xGrid)\r\n  }, // 只对 edit-config 配置时有效，单元格被激活编辑时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  editDisabled(obj) {\r\n    this.$emit('editDisabled', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'editDisabled', obj, this, this.$refs.xGrid)\r\n  }, // 只对 edit-config 配置时有效，当单元格激活时如果是禁用状态时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  validError(obj) {\r\n    this.$emit('validError', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'validError', obj, this, this.$refs.xGrid)\r\n  }, // 只对 edit-rules 配置时有效，当数据校验不通过时会触发该事件 { rule, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  scroll(obj) {\r\n    this.$emit('scroll', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'scroll', obj, this, this.$refs.xGrid)\r\n  }, // 表格滚动时会触发该事件 { type, scrollTop, scrollLeft, isX, isY, $event }\r\n  custom(obj) {\r\n    this.$emit('custom', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'custom', obj, this, this.$refs.xGrid)\r\n  },\r\n  formSubmitInvalid(obj) {\r\n    this.$emit('formSubmitInvalid', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'formSubmitInvalid', obj, this, this.$refs.xGrid)\r\n  }, // 只对 form-config 配置时有效，表单提交时如果校验不通过会触发该事件 { data, errMap, $event }\r\n  formReset(obj) {\r\n    this.$emit('formReset', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'formReset', obj, this, this.$refs.xGrid)\r\n  }, // 只对 form-config 配置时有效，表单重置时会触发该事件 { data, $event }\r\n  formToggleCollapse(obj) {\r\n    this.$emit('formToggleCollapse', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'formToggleCollapse', obj, this, this.$refs.xGrid)\r\n  }, // 只对 form-config 配置时有效，当折叠按钮被手动点击时会触发该事件 { collapse, data, $event }\r\n  zoom(obj) {\r\n    this.$emit('zoom', obj, this, this.$refs.xGrid)\r\n    this.$emit('ProxyEvent', 'zoom', obj, this, this.$refs.xGrid)\r\n  } // 当最大化或还原操作被手动点击时会后触发该事件 { type, $event }\r\n  // checkboxChange(obj) {\r\n  //   this.$emit('checkboxChange', obj,  this, this.$refs.xGrid)\r\n  // } // 只对 type=checkbox 有效，当手动勾选并且值发生改变时触发的事件 { records, reserves, indeterminates, checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  //  checkboxAll(obj) {\r\n  //    this.$emit('checkboxAll', obj,  this, this.$refs.xGrid)\r\n  //  }, // 只对 type=checkbox 有效，当手动勾选全选时触发的事件 { records, reserves, indeterminates, checked, $event }\r\n  // 如果与工具栏关联， 在自定义列按钮被手动点击后会触发该事件 { type, $event }\r\n  // pageChange(obj) {\r\n  //      this.$emit('pageChange', obj,  this, this.$refs.xGrid)\r\n  // }, // 只对 pager-config 配置时有效，分页发生改变时会触发该事件 { type, currentPage, pageSize, $event }\r\n  // formSubmit (obj) {\r\n  //   this.$emit('formSubmit', obj,  this, this.$refs.xGrid)\r\n  // }, // 只对 form-config 配置时有效，表单提交时会触发该事件 { data, $event }\r\n}\r\nconst calculateConstraintTool = {\r\n  addMissingFieldsAndCalcColFormula(tableData) {\r\n    // 添加缺失字段并执行全量列计算\r\n    let self = this\r\n    tableData = Array.isArray(tableData) ? tableData : []\r\n    tableData.forEach((row) => {\r\n      Object.keys(row).forEach((item, index) => {\r\n        if (item.indexOf('__') > 0) {\r\n          delete row[item]\r\n        }\r\n      })\r\n      self.tableColumnsFieldArr.forEach((item) => {\r\n        // 遍历配置项生成的前缀数组，并且其前缀在数据包中不存在时，动态给其绑定一个前缀\r\n        row[item] = (typeof (row[item]) !== 'object' && (self.getbasicDataType(row[item]) === 'Null' || row[item] === null)) ? (row[item] + '').replace(/null|NaN|undefined/ig, '') : (row[item] === null ? '' : row[item])\r\n      })\r\n      row = this.reductionColFormula(this.calculateConstraintConfigIn.colFormulaConfig, row)\r\n      if (Array.isArray(row.children) && row.children.length && this.treeConfigIn) {\r\n        row.children = self.addMissingFieldsAndCalcColFormula(row.children)\r\n      }\r\n    })\r\n    self.reductionRowCodeFormula(this.calculateConstraintConfigIn.rowCodeFormulaConfig, tableData, self.id)\r\n    return tableData\r\n  },\r\n  calcRowTableData(data = []) {\r\n    // 计算单行数据\r\n    let self = this\r\n    data.forEach((row) => {\r\n      row = self.reductionColFormula(self.calculateConstraintConfigIn.colFormulaConfig, row)\r\n      if (Array.isArray(row.children) && row.children.length && this.treeConfigIn) {\r\n        row.children = self.calcRowTableData(row.children)\r\n      }\r\n    })\r\n  },\r\n  calcTableData(data = []) {\r\n    // 计算tableData\r\n    let self = this\r\n    self.calcRowTableData(data)\r\n    self.reductionRowFormula(self.calculateConstraintConfigIn.rowformulaConfig, data, self.id)\r\n    self.reductionRowCodeFormula(self.calculateConstraintConfigIn.rowCodeFormulaConfig, data, self.id)\r\n    self.reloadTableRenderData(data)\r\n    return data\r\n  },\r\n  reductionColFormula(colFormulaMap, row) {\r\n    // 单条数据计算\r\n    // rowFormulaMap= { \"colfield\":\"{colfield}[运算符]\" }\r\n    let colFormulaMapCp = this.deepCopy(colFormulaMap)\r\n    let hasCalcColFormulaMap = {}\r\n    let i = 0\r\n    let ifDoWhile = true\r\n    try {\r\n      while (ifDoWhile) {\r\n        let colFormulaMapArr = Object.keys(colFormulaMapCp)\r\n        if (colFormulaMapArr.length) {\r\n          for (let cmai = 0; cmai < colFormulaMapArr.length; cmai++) {\r\n            i++\r\n            let item = colFormulaMapArr[cmai]\r\n            let formula = colFormulaMapCp[item]\r\n            let regR = new RegExp('({[a-zA-Z0-9_]*})', 'ig')\r\n            let rowsKey = formula.match(regR) === null ? [] : formula.match(regR)\r\n            if (rowsKey.length) {\r\n              for (let keyCF in rowsKey) {\r\n                let keyC = rowsKey[keyCF].replace(/\\{|\\}/g, '')\r\n                let reg = new RegExp('({' + keyC + '})', 'ig')\r\n                if (row[keyC] !== undefined && !(hasCalcColFormulaMap[keyC] || colFormulaMapCp[keyC])) {\r\n                  colFormulaMapCp[item] = formula.replace(reg, isNaN(parseFloat(row[keyC])) ? 0 : parseFloat(row[keyC]))\r\n                } else if (hasCalcColFormulaMap[keyC]) {\r\n                  colFormulaMapCp[item] = formula.replace(reg, hasCalcColFormulaMap[keyC])\r\n                } else if (!colFormulaMapCp[keyC]) {\r\n                  colFormulaMapCp[item] = formula.replace(reg, 0)\r\n                }\r\n              }\r\n            } else {\r\n              let calcResult = ''\r\n              try {\r\n                calcResult = eval(formula)\r\n              } catch (e) {\r\n                calcResult = ''\r\n              }\r\n\r\n              hasCalcColFormulaMap[item] = calcResult === Infinity || calcResult === -Infinity || isNaN(calcResult) ? '' : calcResult.toFixed(2)\r\n              delete colFormulaMapCp[item]\r\n            }\r\n          }\r\n        } else {\r\n          ifDoWhile = false\r\n        }\r\n        if (i === 1000) {\r\n          throw (new Error('请检查公式'))\r\n        }\r\n      }\r\n    } catch (e) {\r\n      // console.log(i)\r\n      throw (new Error('请检查公式'))\r\n    }\r\n    // console.log(hasCalcColFormulaMap)\r\n    return Object.assign(row, hasCalcColFormulaMap)\r\n  },\r\n  reductionRowFormula(rowFormulaMap, data, tableId) {\r\n    // 单元格交叉计算\r\n    // rowFormulaMap= { \"colField:rowIndex\":\"{tableId:colField:rowIndex}[运算符]\" }\r\n    let rowFormulaMapCp = this.deepCopy(rowFormulaMap)\r\n    let hasCalcrowFormulaMap = {}\r\n    let i = 0\r\n    let ifDoWhile = true\r\n    try {\r\n      while (ifDoWhile) {\r\n        let rowFormulaMapArr = Object.keys(rowFormulaMapCp)\r\n        if (rowFormulaMapArr.length) {\r\n          for (let cmai = 0; cmai < rowFormulaMapArr.length; cmai++) {\r\n            i++\r\n            let item = rowFormulaMapArr[cmai]\r\n            let formula = rowFormulaMapCp[item]\r\n            let regR = new RegExp('({[a-zA-Z0-9_:]*})', 'ig')\r\n            let rowsKey = formula.match(regR) === null ? [] : formula.match(regR)\r\n            if (rowsKey.length) {\r\n              for (let keyCF in rowsKey) {\r\n                let formulaArr = rowsKey[keyCF].replace(/\\{|\\}/g, '').split(':')\r\n                let reg = new RegExp('({' + formulaArr.join(':') + '})', 'ig')\r\n                if (formulaArr[0] === tableId) {\r\n                  if (data[formulaArr[2]] && data[formulaArr[2]][formulaArr[1]] !== undefined && !(hasCalcrowFormulaMap[formulaArr[1] + ':' + formulaArr[2]] || rowFormulaMapCp[formulaArr[1] + ':' + formulaArr[2]])) {\r\n                    rowFormulaMapCp[item] = formula.replace(reg, isNaN(parseFloat(data[formulaArr[2]][formulaArr[1]])) ? 0 : parseFloat(data[formulaArr[2]][formulaArr[1]]))\r\n                  } else if (hasCalcrowFormulaMap[formulaArr[1] + ':' + formulaArr[2]]) {\r\n                    rowFormulaMapCp[item] = formula.replace(reg, hasCalcrowFormulaMap[formulaArr[1] + ':' + formulaArr[2]])\r\n                  } else if (!rowFormulaMapCp[formulaArr[1] + ':' + formulaArr[2]]) {\r\n                    rowFormulaMapCp[item] = formula.replace(reg, 0)\r\n                  }\r\n                } else {\r\n                  rowFormulaMapCp[item] = formula.replace(reg, 0)\r\n                }\r\n              }\r\n            } else {\r\n              let calcResult = ''\r\n              try {\r\n                calcResult = eval(formula)\r\n              } catch (e) {\r\n                calcResult = ''\r\n              }\r\n              hasCalcrowFormulaMap[item] = calcResult === Infinity || calcResult === -Infinity || isNaN(calcResult) ? '' : calcResult.toFixed(2)\r\n              delete rowFormulaMapCp[item]\r\n            }\r\n          }\r\n        } else {\r\n          ifDoWhile = false\r\n        }\r\n        if (i === 1000000) {\r\n          throw (new Error('请检查公式'))\r\n        }\r\n      }\r\n    } catch (e) {\r\n      throw (new Error('请检查公式'))\r\n    }\r\n    Object.keys(hasCalcrowFormulaMap).forEach((item, index) => {\r\n      let rowCellArr = item.split(':')\r\n      if (data[rowCellArr[1]]) {\r\n        data[rowCellArr[1]][rowCellArr[0]] = hasCalcrowFormulaMap[item] === '0.00' ? '' : hasCalcrowFormulaMap[item]\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  reverDataCodeRowMap(data, codeKey, obj) {\r\n    // 递归生成数据code映射\r\n    let self = this\r\n    obj = obj || {\r\n      dataCodeRowMap: {}\r\n    }\r\n    data.forEach((item, index) => {\r\n      if (Array.isArray(item.children) && item.children.length) {\r\n        self.reverDataCodeRowMap(item.children, codeKey, obj)\r\n      } else {\r\n        obj.dataCodeRowMap[item[codeKey]] = item\r\n      }\r\n    })\r\n    return obj\r\n  },\r\n  reductionRowCodeFormula(rowCodeFormulaMap, data, tableId) {\r\n    // 单元格交叉计算根据行 code\r\n    // rowCodeFormulaMap= { \"colField:rowCode\":\"{tableId:colField:rowCode}[运算符]\" }\r\n    const { dataCodeRowMap } = this.reverDataCodeRowMap(data, 'itemcode')\r\n    let rowCodeFormulaMapCp = this.deepCopy(rowCodeFormulaMap)\r\n    let hasCalcrowCodeFormulaMap = {}\r\n    let i = 0\r\n    let ifDoWhile = true\r\n    try {\r\n      while (ifDoWhile) {\r\n        let rowCodeFormulaMapArr = Object.keys(rowCodeFormulaMapCp)\r\n        if (rowCodeFormulaMapArr.length) {\r\n          for (let cmai = 0; cmai < rowCodeFormulaMapArr.length; cmai++) {\r\n            i++\r\n            let item = rowCodeFormulaMapArr[cmai]\r\n            let formula = rowCodeFormulaMapCp[item]\r\n            let regR = new RegExp('({[a-zA-Z0-9_:]*})', 'ig')\r\n            let rowsKey = formula.match(regR) === null ? [] : formula.match(regR)\r\n            if (rowsKey.length) {\r\n              for (let keyCF in rowsKey) {\r\n                let formulaArr = rowsKey[keyCF].replace(/\\{|\\}/g, '').split(':')\r\n                let reg = new RegExp('({' + formulaArr.join(':') + '})', 'ig')\r\n                if (formulaArr[0] === tableId) {\r\n                  if (dataCodeRowMap[formulaArr[2]] && dataCodeRowMap[formulaArr[2]][formulaArr[1]] !== undefined && !(hasCalcrowCodeFormulaMap[formulaArr[1] + ':' + formulaArr[2]] && rowCodeFormulaMapCp[formulaArr[1] + ':' + formulaArr[2]])) {\r\n                    rowCodeFormulaMapCp[item] = formula.replace(reg, isNaN(parseFloat(dataCodeRowMap[formulaArr[2]][formulaArr[1]])) ? 0 : parseFloat(dataCodeRowMap[formulaArr[2]][formulaArr[1]]))\r\n                  } else if (hasCalcrowCodeFormulaMap[formulaArr[1] + ':' + formulaArr[2]]) {\r\n                    rowCodeFormulaMapCp[item] = formula.replace(reg, hasCalcrowCodeFormulaMap[formulaArr[1] + ':' + formulaArr[2]])\r\n                  } else if (!rowCodeFormulaMapCp[formulaArr[1] + ':' + formulaArr[2]]) {\r\n                    rowCodeFormulaMapCp[item] = formula.replace(reg, 0)\r\n                  }\r\n                } else {\r\n                  rowCodeFormulaMapCp[item] = formula.replace(reg, 0)\r\n                }\r\n              }\r\n            } else {\r\n              let calcResult = ''\r\n              try {\r\n                calcResult = eval(formula)\r\n              } catch (e) {\r\n                calcResult = ''\r\n              }\r\n              hasCalcrowCodeFormulaMap[item] = calcResult === Infinity || calcResult === -Infinity || isNaN(calcResult) ? '' : calcResult.toFixed(2)\r\n              delete rowCodeFormulaMapCp[item]\r\n            }\r\n          }\r\n        } else {\r\n          ifDoWhile = false\r\n        }\r\n        if (i === 1000000) {\r\n          throw (new Error('请检查公式'))\r\n        }\r\n      }\r\n    } catch (e) {\r\n      throw (new Error('请检查公式'))\r\n    }\r\n    Object.keys(hasCalcrowCodeFormulaMap).forEach((item, index) => {\r\n      let rowCellArr = item.split(':')\r\n      if (dataCodeRowMap[rowCellArr[1]]) {\r\n        dataCodeRowMap[rowCellArr[1]][rowCellArr[0]] = hasCalcrowCodeFormulaMap[item] === '0.00' ? '' : hasCalcrowCodeFormulaMap[item]\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  riverColumnsGenerateCalcColFormulaMap(columns, obj) {\r\n    // 递归生成列计算全量映射\r\n    let self = this\r\n    obj = obj || {\r\n      tableColumnsFieldMap: {},\r\n      tableColumnsFieldArr: [],\r\n      tableColumnsSingArr: [],\r\n      tableColumnsTitleFieldMap: {},\r\n      colFormulaConfig: {},\r\n      tableColumnsSingEditFieldArr: []\r\n    }\r\n    columns.forEach((conlum, index) => {\r\n      if (Array.isArray(conlum.children) && conlum.children.length) {\r\n        self.riverColumnsGenerateCalcColFormulaMap(conlum.children, obj)\r\n      } else {\r\n        if (conlum.field) {\r\n          obj.tableColumnsFieldMap[conlum.field] = conlum\r\n          obj.tableColumnsFieldArr.push(conlum.field)\r\n          obj.tableColumnsSingArr.push(conlum)\r\n          obj.tableColumnsTitleFieldMap[conlum.title] = conlum.field\r\n          if (conlum.formula) {\r\n            obj.colFormulaConfig[conlum.field] = conlum.formula\r\n          }\r\n          if (conlum.editRender) {\r\n            obj.tableColumnsSingEditFieldArr.push(conlum.field)\r\n          }\r\n        }\r\n      }\r\n    })\r\n    return obj\r\n  },\r\n  generateCalcColFormulaMap(columns) {\r\n    // 生成列计算公式映射\r\n    let self = this\r\n    let obj = this.riverColumnsGenerateCalcColFormulaMap(columns)\r\n    self.tableColumnsFieldMap = obj.tableColumnsFieldMap\r\n    self.tableColumnsFieldArr = obj.tableColumnsFieldArr\r\n    self.tableColumnsSingArr = obj.tableColumnsSingArr\r\n    self.tableColumnsTitleFieldMap = obj.tableColumnsTitleFieldMap\r\n    self.tableColumnsSingEditFieldArr = obj.tableColumnsSingEditFieldArr\r\n    this.calculateConstraintConfigIn = Object.assign({}, this.calculateConstraintConfigIn, {\r\n      colFormulaConfig: obj.colFormulaConfig\r\n    })\r\n  },\r\n  getFormColCalBack(formulaConditions) {\r\n    // 根据单元格位置查询计算的公式\r\n    // let self = this\r\n    let formColCalList = {}\r\n    let rowFormula = this.calculateConstraintConfigIn.rowFormula\r\n    if (rowFormula) {\r\n      Object.keys(rowFormula).forEach((v, index) => {\r\n        if (v === formulaConditions) {\r\n          rowFormula[v].forEach(j => {\r\n            formColCalList = Object.assign(formColCalList, j)\r\n          })\r\n        }\r\n      })\r\n      return formColCalList\r\n    } else {\r\n      return ''\r\n    }\r\n  },\r\n  performTableDataCalculate({ row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }) {\r\n    // 行改变事件执行单元格计算并刷新视图\r\n    let self = this\r\n    let formColCalList = this.getFormColCalBack(this.id + column.property + row.itemcode)\r\n    return new Promise((resolve, reject) => {\r\n      row = self.reductionColFormula(self.calculateConstraintConfigIn.colFormulaConfig, row)\r\n      // self.$refs.xGrid.reloadRow([row]).then((rownew) => {\r\n      // if (Object.keys(self.calculateConstraintConfigIn.rowformulaConfig).length) {\r\n      self.reductionRowFormula(self.calculateConstraintConfigIn.rowformulaConfig, this.$refs.xGrid.getTableData().fullData, self.id)\r\n      self.reductionRowCodeFormula(formColCalList, this.$refs.xGrid.getTableData().fullData, self.id)\r\n      // self.$refs.xGrid.reloadData(reloadData).then(\r\n      self.updateFooter().then(() => {\r\n        self.$refs.xGrid.setSelectCell(row, column.property).then(() => {\r\n          resolve(row)\r\n        }).catch()\r\n      }).catch(() => {})\r\n      // ).catch().catch(e => {})\r\n      // } else {\r\n      //   self.updateFooter().then(() => {\r\n      //     // self.$refs.xGrid.setSelectCell(row, column.property).then(() => {\r\n      //     resolve(row)\r\n      //     // }).catch()\r\n      //   }).catch(() => {})\r\n      // }\r\n      // }).catch(e => {})\r\n    })\r\n  },\r\n  generateColumnsAllMap(columns, obj) {\r\n    // 生成导入view映射数据\r\n    let self = this\r\n    obj = obj || {\r\n      tableColumnsFieldMap: {},\r\n      tableColumnsTitleFieldMap: {},\r\n      viewToSourceMap: {},\r\n      colFormulaConfig: {},\r\n      rowsObjTemp: {},\r\n      tableColumnsTitleMap: {}\r\n    }\r\n    columns.forEach((conlum, index) => {\r\n      if (Array.isArray(conlum.children) && conlum.children.length) {\r\n        self.riverColumnsGenerateCalcColFormulaMap(conlum.children, obj)\r\n      } else {\r\n        if (conlum.formula) {\r\n          obj.colFormulaConfig[conlum.field] = conlum.formula\r\n          obj.tableColumnsFieldMap[conlum.title] = conlum\r\n        }\r\n        if (conlum.field) {\r\n          obj.rowsObjTemp[conlum.field] = ''\r\n          let map = {\r\n            needMap: true,\r\n            options: [],\r\n            multiple: false,\r\n            formula: conlum.formula\r\n          }\r\n          obj.tableColumnsFieldMap[conlum.field] = conlum\r\n          obj.tableColumnsTitleFieldMap[conlum.title] = conlum.field\r\n          let itemRender = conlum.cellRender || conlum.editRender || conlum.contentRender\r\n          if (itemRender) {\r\n            switch (itemRender.name) {\r\n              case '$vxeSelect':\r\n                if (itemRender.props && itemRender.props.multiple) {\r\n                  map = Object.assign({}, map, {\r\n                    needMap: true,\r\n                    name: itemRender.name,\r\n                    options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                    multiple: true\r\n                  })\r\n                } else {\r\n                  map = Object.assign({}, map, {\r\n                    needMap: true,\r\n                    name: itemRender.name,\r\n                    options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                    multiple: false\r\n                  })\r\n                }\r\n                break\r\n              case '$vxeRadio':\r\n                map = Object.assign({}, map, {\r\n                  needMap: true,\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: false\r\n                })\r\n                break\r\n              case '$vxeCheckbox':\r\n                map = Object.assign({}, map, {\r\n                  needMap: true,\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: true\r\n                })\r\n                break\r\n              case '$vxeSwitch':\r\n                map = Object.assign({}, map, {\r\n                  needMap: true,\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: false\r\n                })\r\n                break\r\n              default:\r\n                map = Object.assign({}, map, {\r\n                  needMap: false,\r\n                  // pattern: ((itemRenderName, itemRenderType) => {\r\n                  //   switch (itemRenderName) {\r\n                  //     case '$vxeInput':\r\n                  //       // text, search, number, integer, float, password, date, time, datetime, week, month, year\r\n                  //       switch (itemRenderType) {\r\n                  //         case 'string':\r\n                  //           return (str) => {\r\n                  //             // 空\r\n                  //             str = str && str.toString()\r\n                  //             return !(str && str.trim() !== '')\r\n                  //           }\r\n                  //         case 'number':\r\n                  //           // 数字\r\n                  //           return (str) => {\r\n                  //             return /^[0-9]*$/.test(str)\r\n                  //           }\r\n                  //         case 'integer':\r\n                  //           // 数字\r\n                  //           return (str) => {\r\n                  //             return /^[1-9]+[0-9]*$/.test(str)\r\n                  //           }\r\n                  //         case 'time':\r\n                  //           // 时间\r\n                  //           return (str) => {\r\n                  //             return /^\\d*(?:\\.\\d{0,2})?$/.test(str)\r\n                  //           }\r\n                  //         case 'year':\r\n                  //           // 年\r\n                  //           return (str) => {\r\n                  //             return /^[1,9]{4}/.test(str)\r\n                  //           }\r\n                  //         case 'float':\r\n                  //           // 2位小叔\r\n                  //           return (str) => {\r\n                  //             return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //           }\r\n                  //       }\r\n                  //       break\r\n                  //     case '$vxeMoney':\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     case '$vxeCalculate':\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     case '$vxeEditDownTextarea':\r\n                  //       return (str) => {\r\n                  //         str = str && str.toString()\r\n                  //         return !(str && str.trim() !== '')\r\n                  //       }\r\n                  //     case '$vxeDays': {\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     }\r\n                  //     case '$vxeTime': {\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     }\r\n                  //     case '$vxeText': {\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     }\r\n\r\n                  //     default:\r\n                  //       break\r\n                  //   }\r\n                  // })(itemRender.name, itemRender.props && itemRender.props.type),\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: false\r\n                })\r\n                break\r\n            }\r\n          } else {\r\n            map = Object.assign({}, map, {\r\n              needMap: false\r\n            })\r\n          }\r\n          obj.viewToSourceMap[conlum.field] = map\r\n        }\r\n      }\r\n    })\r\n    return obj\r\n  },\r\n  isEditForFormula(row, rowIndex, column, columnIndex) {\r\n    let isForFormulaData = column.property + ':' + row.itemcode\r\n    let isForFormula = true\r\n    let self = this\r\n    if (self.calculateConstraintConfigIn.rowCodeFormulaConfig[isForFormulaData] && self.calculateConstraintConfigIn.colFormulaConfig !== '') {\r\n      isForFormula = false\r\n    } else {\r\n      isForFormula = true\r\n    }\r\n    return isForFormula\r\n    // if (this.calculateConstraintConfigIn.constraintConfig === '') {\r\n    //   return true\r\n    // } else {\r\n    //   return false\r\n    // }\r\n  },\r\n  isActiveCellEdit({ row, rowIndex, column, columnIndex }) {\r\n    let isEditForFormula = this.isEditForFormula(row, rowIndex, column, columnIndex)\r\n    return isEditForFormula\r\n  }\r\n}\r\nconst otherFn = {\r\n  getListData() {\r\n    // 获取表单数据\r\n    const { fullData } = this.$refs.xGrid.getTableData()\r\n    const data = fullData || []\r\n    return this.dealData(data)\r\n  },\r\n  dealData(data) {\r\n    let newData = []\r\n    data.forEach((item) => {\r\n      const itemVal = Object.assign({}, item)\r\n      Object.keys(itemVal).map((val) => {\r\n        let value = String(itemVal[val]) || ''\r\n        if (value.includes('initId')) {\r\n          const prefix = val.substr(0, val.indexOf('id'))\r\n          itemVal[val] = ''\r\n          itemVal[prefix + 'code'] = ''\r\n          itemVal[prefix + 'name'] = ''\r\n        }\r\n      })\r\n      newData.push(itemVal)\r\n    })\r\n    return newData\r\n  },\r\n  regTreePrefix(item) {\r\n    const reg = /\\w*_$/g\r\n    return reg.test(item)\r\n  },\r\n  // 遍历正则对象，给树统一自动添加正则\r\n  addTreeReg(formValidationConfig) {\r\n    const reg = /^(?!initId)/g\r\n    Object.keys(formValidationConfig).forEach((item) => {\r\n      if (this.regTreePrefix(item)) {\r\n        formValidationConfig[item][0].pattern = reg\r\n      }\r\n    })\r\n\r\n    return formValidationConfig\r\n  },\r\n  // 遍历，动态给树组件添加双向绑定的前缀\r\n  addTreePrefixKey2(treeData) {\r\n    const reg = /_id$/\r\n    let treeArr = treeData || []\r\n    treeArr.forEach((row) => {\r\n      Object.keys(row).forEach((item) => {\r\n        // 以_id结尾，并且其前缀在数据包中不存在时，动态给其绑定一个前缀\r\n        if (reg.test(item)) {\r\n          const prefix = item.substr(0, item.indexOf('id'))\r\n          if (!row.hasOwnProperty(prefix)) {\r\n            this.$set(row, prefix, '')\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return treeData\r\n  }\r\n}\r\nconst batchModify = { // 批量修改\r\n  omBatchModifySureClick({ modifyItem, formData }) {\r\n    // 批量修改确认\r\n    const selection = this.selection\r\n    selection.forEach((row, index) => {\r\n      row = Object.assign(row, formData)\r\n    })\r\n    this.reCalcAndReLoadTableData(this.getTableData().fullData).then(() => {\r\n\r\n    })\r\n  }\r\n}\r\nconst exportAndImportFn = {\r\n  getPrintOption(exportModalFormData) {\r\n    const checkColumns = []\r\n    this.$XEUtils.eachTree(exportModalFormData.columns, column => {\r\n      const isColGroup = column.children && column.children.length\r\n      if (!isColGroup) {\r\n        checkColumns.push(column)\r\n      }\r\n    })\r\n    return {\r\n      data: exportModalFormData[exportModalFormData.dataType],\r\n      isHeader: true,\r\n      columns: checkColumns\r\n    }\r\n  },\r\n  onPrintClick(obj) {\r\n    this.$refs.xGrid.$refs.xTable.print(Object.assign({}, this.getPrintOption(obj)))\r\n    // this.$VXETable.print()\r\n  },\r\n  triggerExportOption(obj) {\r\n    // 触发导出动作\r\n    let self = this\r\n    const columns = this.deepCopy(this.tableColumnsConfig)\r\n    const { tableData, fullData } = this.getTableData()\r\n    const selection = this.selection\r\n    this.exportModalData = obj || {\r\n      isExportTree: !!self.treeConfigIn,\r\n      saveType: '.xlsx',\r\n      fileName: 'export', // 文件名\r\n      dataType: 'tableData',\r\n      isExportHead: true, // 是否导出表头\r\n      isExportFooter: false, // 是否导出表尾部\r\n      isExportOnlySourceField: false, // 是否只导出数据源表头字段，\r\n      isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n      isExportOriginalData: false, // 是否导出源数据\r\n      isExportData: true, // 是否导出数据\r\n      columns: columns, // 表头配置\r\n      fullData: fullData,\r\n      tableData: tableData,\r\n      datas: [], // 源数据,\r\n      selection: selection, // 选中数据\r\n      index: true, // 是否添加序号,\r\n      ignoreColsTypes: [\r\n        'dragSort',\r\n        'seq',\r\n        'checkbox',\r\n        'radio',\r\n        'optionRow',\r\n        'expand',\r\n        'attach',\r\n        'ach',\r\n        'list',\r\n        'attachlist'\r\n      ], // 忽略导出的列类型\r\n      viewValueFormat(value, row, column) {\r\n        // 视图数据格式化方法\r\n        // return value\r\n      }\r\n    }\r\n    this.exportModalVisible = true\r\n  },\r\n  onExportClick(obj) {\r\n    // 确定导出点击事件\r\n    obj.successCb = () => {\r\n      this.exportModalVisible = false\r\n    }\r\n    this.$Export.exportExcel(obj, this)\r\n  },\r\n  dealExportViewData(obj = {\r\n    conlums: [],\r\n    viewData: []\r\n  }) {\r\n    // 处理 导入数据\r\n    let self = this\r\n    let { viewToSourceMap, tableColumnsTitleFieldMap, rowsObjTemp, colFormulaConfigm, colFormulaConfig } = this.generateColumnsAllMap(obj.conlums)\r\n    return obj.viewData.map((row, rowIndex) => {\r\n      Object.keys(row).map((key, keyIndex) => {\r\n        row[tableColumnsTitleFieldMap[key]] = self.reverseParseViewDataTosource(viewToSourceMap[tableColumnsTitleFieldMap[key]], row[key])\r\n      })\r\n      row = Object.assign({}, rowsObjTemp, row)\r\n      return this.reductionColFormula(colFormulaConfigm, self.reductionColFormula(colFormulaConfig, row))\r\n    })\r\n  },\r\n  deaImportViewData(obj = {\r\n    conlums: [],\r\n    viewData: [],\r\n    valiRules: {}\r\n  }) {\r\n    // 处理 导入数据\r\n    let self = this\r\n    let { viewToSourceMap, tableColumnsTitleFieldMap, tableColumnsFieldMap, rowsObjTemp, colFormulaConfig } = this.generateColumnsAllMap(obj.conlums)\r\n    let validResult = true\r\n    let validResultFieldTitle = []\r\n    // let valiRule = []\r\n    let viewData = obj.viewData.map((row, rowIndex) => {\r\n      Object.keys(row).forEach((key, keyIndex) => {\r\n        let parseViewValue = self.reverseParseViewDataTosource(viewToSourceMap[tableColumnsTitleFieldMap[key]], row[key])\r\n        // const customVal = String(parseViewValue).replace(/null|undefined|\\s+/ig, '') !== ''\r\n        if (tableColumnsFieldMap[tableColumnsTitleFieldMap[key]]) {\r\n          // self.validCellRules({ type: 'all', row, column: tableColumnsFieldMap[tableColumnsTitleFieldMap[key]], val: parseViewValue, valiRules: obj.valiRules })\r\n          //   .then(() => {\r\n          //     if (customVal) {\r\n          row[tableColumnsTitleFieldMap[key]] = parseViewValue\r\n          //   }\r\n          // })\r\n          // .catch(({ rule }) => {\r\n          //   validResult = false\r\n          //   valiRule.push(rule)\r\n          //   if (customVal) {\r\n          //     row[tableColumnsTitleFieldMap[key]] = parseViewValue\r\n          //   }\r\n          // })\r\n        } else {\r\n          validResultFieldTitle.push(key)\r\n        }\r\n      })\r\n      row = Object.assign({}, rowsObjTemp, row)\r\n      return this.reductionColFormula(colFormulaConfig, self.reductionColFormula(colFormulaConfig, row))\r\n    })\r\n    return validResult && !validResultFieldTitle.length && viewData\r\n  },\r\n  reverseParseViewDataTosource(viewToSourceMap, value) {\r\n    // 处理单个 导入数据\r\n    //  needMap: true,\r\n    //  name: itemRender.name,\r\n    //  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n    //  multiple: true,\r\n    //  formula: conlum.formula\r\n    if (viewToSourceMap && viewToSourceMap.needMap) {\r\n      let transValue = ''\r\n      let viewValue = typeof (value) === 'string' ? value : ''\r\n      if (viewToSourceMap.multiple) {\r\n        if (viewValue.length) {\r\n          let viewToSourceValueArr = []\r\n          viewToSourceMap.options.forEach((item, index) => {\r\n            if (viewValue.indexOf(item.label) >= 0) {\r\n              viewToSourceValueArr.push(item.value)\r\n            }\r\n          })\r\n          transValue = viewToSourceValueArr.join(',')\r\n        } else {\r\n          transValue = ''\r\n        }\r\n      } else {\r\n        viewToSourceMap.options.forEach((item, index) => {\r\n          if (viewValue.indexOf(item.label) >= 0) {\r\n            transValue = item.value\r\n          }\r\n        })\r\n      }\r\n      return transValue\r\n    } else {\r\n      return value\r\n    }\r\n  },\r\n  newRule(rule) {\r\n    // 错误规则信息\r\n    return Object.assign({}, {\r\n      $options: rule,\r\n      required: rule.required,\r\n      min: rule.min,\r\n      max: rule.min,\r\n      type: rule.type,\r\n      pattern: rule.pattern,\r\n      validator: rule.validator,\r\n      maxWidth: rule.maxWidth,\r\n      message: rule.message\r\n    })\r\n  },\r\n  validCellRules(argObj) {\r\n    // 校验单元格\r\n    let self = this\r\n    const { type, row, column, val, valiRules } = argObj\r\n    const property = column.field\r\n    const errorRules = []\r\n    const syncVailds = []\r\n    if (property && valiRules) {\r\n      const rules = self.$XEUtils.get(valiRules, property)\r\n      if (rules) {\r\n        const cellValue = val\r\n        // const cellValue = self.$XEUtils.isUndefined(val) ? self.$XEUtils.get(row, property) : val\r\n        rules.forEach(rule => {\r\n          if (type === 'all') {\r\n            if (self.$XEUtils.isFunction(rule.validator)) {\r\n              let customValid\r\n              customValid = rule.validator({\r\n                cellValue,\r\n                rule,\r\n                rules,\r\n                row,\r\n                rowIndex: row.index,\r\n                column,\r\n                $table: this\r\n              })\r\n              if (customValid) {\r\n                if (self.$XEUtils.isError(customValid)) {\r\n                  this.validRuleErr = true\r\n                  errorRules.push(self.newRule({ type: 'custom', message: customValid.message, rule: self.newRule(rule) }))\r\n                } else if (customValid.catch) {\r\n                  // 如果为异步校验（注：异步校验是并发无序的）\r\n                  syncVailds.push(\r\n                    customValid.catch(e => {\r\n                      this.validRuleErr = true\r\n                      errorRules.push(self.newRule({ type: 'custom', message: e ? e.message : rule.message, rule: self.newRule(rule) }))\r\n                    })\r\n                  )\r\n                }\r\n              }\r\n            } else {\r\n              const isNumber = rule.type === 'number'\r\n              const numVal = isNumber ? self.$XEUtils.toNumber(cellValue) : self.$XEUtils.getSize(cellValue)\r\n              if (rule.required && (cellValue === null || cellValue === undefined || cellValue === '')) {\r\n                this.validRuleErr = true\r\n                errorRules.push(self.newRule(rule))\r\n              } else if (\r\n                (isNumber && isNaN(cellValue)) ||\r\n                (!isNaN(rule.min) && numVal < parseFloat(rule.min)) ||\r\n                (!isNaN(rule.max) && numVal > parseFloat(rule.max)) ||\r\n                (rule.pattern && !(rule.pattern.test ? rule.pattern : new RegExp(rule.pattern)).test(cellValue))\r\n              ) {\r\n                this.validRuleErr = true\r\n                errorRules.push(self.newRule(rule))\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return Promise.all(syncVailds).then(() => {\r\n      if (errorRules.length) {\r\n        const rest = { rules: errorRules, rule: errorRules[0] }\r\n        return Promise.reject(rest)\r\n      }\r\n    })\r\n  },\r\n  exportByTempalte(obj = {\r\n    data: [], // 模版数据，只拿第一行导出列配置\r\n    conlums: [] // 所有表头\r\n  }) {\r\n    // 按模版导出\r\n    let exportConlums = []\r\n    let exportConlumsTitle = obj.data[0]\r\n    const { tableColumnsTitleMap } = this.generateColumnsAllMap(obj.conlums)\r\n    exportConlumsTitle.forEach((item, index) => {\r\n      tableColumnsTitleMap[item] && exportConlums.push(tableColumnsTitleMap[item])\r\n    })\r\n    const fullData = this.getTableData().fullData\r\n    const selection = this.selection\r\n    this.$Export.exportExcel({\r\n      isExportTree: true,\r\n      saveType: '.xlsx',\r\n      fileName: 'export', // 文件名\r\n      dataType: 'fullData',\r\n      isExportHead: true, // 是否导出表头\r\n      isExportFooter: false, // 是否导出表尾部\r\n      isExportOnlySourceField: false, // 是否只导出数据源表头字段，\r\n      isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n      isExportOriginalData: false, // 是否导出源数据\r\n      isExportData: true, // 是否导出数据\r\n      columns: exportConlums, // 表头配置\r\n      fullData: fullData,\r\n      datas: [], // 源数据,\r\n      selection: selection, // 选中数据\r\n      index: true // 是否添加序号,\r\n    }, this)\r\n  },\r\n  downLoadImportTemplate(obj, tabPanal) {\r\n    // 下载导入模版\r\n    const tableColumnsConfig = this.tableColumnsConfig\r\n    this.$Export.exportExcel({\r\n      saveType: '.xlsx',\r\n      fileName: '导入模版', // 文件名\r\n      dataType: 'fullData',\r\n      isExportOnlyViewTitle: true, // 是否只导出数据源表头字段，\r\n      columns: tableColumnsConfig, // 表头配置\r\n      index: false // 是否添加序号,\r\n    }, this)\r\n  },\r\n  triggerImportOption(config = {}) {\r\n    // 触发导入\r\n    this.importConfig = config\r\n    this.importModalVisible = true\r\n  },\r\n  onDownloadTemplateClick() {\r\n    // 下载模版\r\n    if (typeof (this.importConfig.downloadTemplateCallback) === 'function') {\r\n      this.importConfig.downloadTemplateCallback(this.importData)\r\n    } else {\r\n      this.importData = []\r\n      const columns = this.tableColumnsConfig\r\n      const selection = this.selection\r\n      this.$Export.exportExcel({\r\n        isExportTree: !!self.treeConfigIn,\r\n        saveType: '.xlsx',\r\n        fileName: 'importTempplate', // 文件名\r\n        dataType: 'fullData',\r\n        isExportOnlySourceField: true, // 是否只导出数据源表头字段，\r\n        isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n        isExportHead: true, // 是否导出表头\r\n        exportViewTitleType: 'nestTitle',\r\n        isExportFooter: false, // 是否导出表尾部\r\n        isExportOriginalData: true, // 是否导出源数据\r\n        isExportData: true, // 是否导出数据\r\n        columns: columns, // 表头配置\r\n        datas: [], // 源数据,\r\n        selection: selection, // 选中数据\r\n        index: true, // 是否添加序号,\r\n        ignoreColsTypes: [\r\n          'dragSort',\r\n          'seq',\r\n          'checkbox',\r\n          'radio',\r\n          'optionRow',\r\n          'expand',\r\n          'attach',\r\n          'ach',\r\n          'list',\r\n          'attachlist'\r\n        ] // 忽略导出的列类型\r\n      }, this)\r\n    }\r\n  },\r\n  async onImportFileClick() {\r\n    // 导入文件\r\n    let self = this\r\n    await this.$Import.importExcel({\r\n\r\n    }, (result) => {\r\n      // this.tableDataIn = result\r\n      self.importData = result\r\n      this.$message.success('选择成功')\r\n    })\r\n  },\r\n  onImportClick() {\r\n    // 导入提交\r\n    if (!this.importData.length) {\r\n      this.$message.error('无数据导入请重新导入数据！')\r\n    } else {\r\n      this.importModalVisible = false\r\n      if (typeof (this.importConfig.importSuccessCallback) === 'function') {\r\n        this.importConfig.importSuccessCallback(this.importData)\r\n      } else {\r\n        this.$emit('importSuccessCallback', this.importData)\r\n      }\r\n    }\r\n  }\r\n}\r\nexport default {\r\n  ...util, // 工具类\r\n  ...sortMethods, // 排序\r\n  ...axiosEvent, // 请求\r\n  ...initMethods, // prop更新方法以及初始化函数\r\n  ...registFn, // 渲染注册函数\r\n  ...tableEventFn, // 表格事件\r\n  ...toolBarEvent, // toolbar事件\r\n  ...pageEvent, // 分页事件\r\n  ...formatters, // 全局formatter函数\r\n  ...tableOptionFn, // 表格操作函数\r\n  ...proxyFn, // 代理函数\r\n  ...tableEvent, // 表格事件\r\n  ...otherFn, // 其他函数\r\n  ...batchModify, // 批量修改\r\n  ...calculateConstraintTool, // 单元格计算\r\n  ...exportAndImportFn// 导入导出工具类\r\n}\r\n"],"mappings":"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"}]}