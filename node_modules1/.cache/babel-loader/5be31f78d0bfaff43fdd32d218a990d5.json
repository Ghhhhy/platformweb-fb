{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableBak\\export\\Export.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableBak\\export\\Export.vue","mtime":1694505521584},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["name","components","props","exportModalVisible","type","Boolean","exportModalData","Object","default","_default","data","exportModalFormData","saveType","fileName","dataType","isExportHead","isExportFooter","isExportOriginalData","isExportData","columns","datas","selection","isExportTree","ignoreColsTypes","viewValueFormat","value","row","column","defaultProps","children","label","defaultCheckedKeys","checkAllColumns","methods","deepCopy","obj","_typeof","newObj","Array","key","hasOwnProperty","generateTree","arr","copy","forEach","item","index","nestedId","res","nestedPid","push","deepEachTraversalArr","cb","deepEachTraversalArrFn","root","isArray","length","sortIndex","undefined","setExportColumns","filter","indexOf","unshift","title","field","filterColums","self","valiAndSet","reg","RegExp","test","init","assign","map","onPrintClick","onExportClick","exportColumns","$refs","exportColumsTree","getCheckedNodes","concat","getHalfCheckedNodes","sort","a","b","$emit","mounted","watch","handler","newVal","immediate","deep","newValue","setCheckedNodes"],"sources":["src/components/TableBak/export/Export.vue"],"sourcesContent":["<template>\r\n  <vxe-modal\r\n    v-model=\"exportModalVisible\"\r\n    title=\"导出参数设置\"\r\n    width=\"660\"\r\n    height=\"auto\"\r\n    remember\r\n    transfer\r\n  >\r\n    <div class=\"export-module\">\r\n      <vxe-form\r\n        :data=\"exportModalFormData\"\r\n        size=\"medium\"\r\n        title-width=\"120\"\r\n        title-align=\"right\"\r\n        align=\"left\"\r\n        title-colon\r\n      >\r\n        <vxe-form-item title=\"名称\" field=\"fileName\" :span=\"24\">\r\n          <template v-slot>\r\n            <vxe-input v-model=\"exportModalFormData.fileName\" placeholder=\"请输入文件名\" clearable />\r\n          </template>\r\n        </vxe-form-item>\r\n        <vxe-form-item title=\"保存类型\" field=\"saveType\" :span=\"24\">\r\n          <template v-slot>\r\n            <vxe-select v-model=\"exportModalFormData.saveType\" placeholder=\"请选择保存类型\" clearable>\r\n              <vxe-option value=\".xlsx\" label=\"Excel 工作簿(*.xlsx)\" />\r\n              <!-- <vxe-option value=\".csv\" label=\"CSV (逗号分隔)(*.csv)\" /> -->\r\n            </vxe-select>\r\n          </template>\r\n        </vxe-form-item>\r\n        <vxe-form-item title=\"要导出的数据\" field=\"saveType\" :span=\"24\">\r\n          <template v-slot>\r\n            <vxe-select v-model=\"exportModalFormData.dataType\" placeholder=\"要导出的数据\" clearable>\r\n              <vxe-option value=\"fullData\" label=\"当前页数据\" />\r\n              <vxe-option value=\"selection\" label=\"选中数据\" />\r\n              <!-- <vxe-option value=\"allData\" label=\"所有数据\" /> -->\r\n            </vxe-select>\r\n          </template>\r\n        </vxe-form-item>\r\n        <vxe-form-item title=\"导出列选项\" field=\"exportOption\" :span=\"24\">\r\n          <template v-slot>\r\n            <div class=\"export-option\">\r\n              <div class=\"export-option-title\">\r\n                <vxe-checkbox\r\n                  v-model=\"checkAllColumns\"\r\n                  label=\"allFields\"\r\n                  content=\"全部列\"\r\n                  size=\"medium\"\r\n                />\r\n              </div>\r\n              <div class=\"export-option-tree\">\r\n                <el-tree\r\n                  ref=\"exportColumsTree\"\r\n                  :data=\"columns\"\r\n                  show-checkbox\r\n                  node-key=\"nestedId\"\r\n                  default-expand-all\r\n                  :default-checked-keys=\"defaultCheckedKeys\"\r\n                  :props=\"defaultProps\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </vxe-form-item>\r\n        <vxe-form-item title=\"导出类型\" field=\"exportOption\" :span=\"24\">\r\n          <template v-slot>\r\n            <div class=\"vxe-checkbox-group fn-inline\">\r\n              <vxe-checkbox\r\n                v-model=\"exportModalFormData.isExportOnlySourceField\"\r\n                label=\"isExportOnlySourceField\"\r\n                content=\"只导出表列字段\"\r\n                size=\"medium\"\r\n              />\r\n              <vxe-checkbox\r\n                v-model=\"exportModalFormData.isExportOnlyViewTitle\"\r\n                label=\"isExportOnlySourceField\"\r\n                content=\"只导出表列名称\"\r\n                size=\"medium\"\r\n              />\r\n            </div>\r\n          </template>\r\n        </vxe-form-item>\r\n        <vxe-form-item v-if=\"!(exportModalFormData.isExportOnlySourceField || exportModalFormData.isExportOnlyViewTitle)\" title=\"导出选项\" field=\"exportOption\" :span=\"24\">\r\n          <template v-slot>\r\n            <div class=\"vxe-checkbox-group\">\r\n              <vxe-checkbox\r\n                v-model=\"exportModalFormData.isExportHead\"\r\n                label=\"isExportHead\"\r\n                content=\"表头\"\r\n                size=\"medium\"\r\n              />\r\n              <vxe-checkbox\r\n                v-model=\"exportModalFormData.isExportFooter\"\r\n                label=\"isExportFooter\"\r\n                content=\"表尾\"\r\n                size=\"medium\"\r\n              />\r\n              <vxe-checkbox\r\n                v-model=\"exportModalFormData.isExportData\"\r\n                label=\"isExportData\"\r\n                content=\"视图数据\"\r\n                size=\"medium\"\r\n              />\r\n              <vxe-checkbox\r\n                v-model=\"exportModalFormData.isExportOriginalData\"\r\n                label=\"isExportOriginalData\"\r\n                content=\"源数据\"\r\n                size=\"medium\"\r\n              />\r\n            </div>\r\n          </template>\r\n        </vxe-form-item>\r\n        <vxe-form-item title=\"其他导出选项\" field=\"exportOption\" :span=\"24\">\r\n          <template v-slot>\r\n            <div class=\"vxe-checkbox-group\">\r\n              <vxe-checkbox\r\n                v-model=\"exportModalFormData.isExportTree\"\r\n                label=\"isExportTree\"\r\n                content=\"导出树形数据\"\r\n                size=\"medium\"\r\n              />\r\n            </div>\r\n          </template>\r\n        </vxe-form-item>\r\n      </vxe-form>\r\n      <div class=\"btn-group\">\r\n        <vxe-button size=\"medium\" content=\"中等尺寸\" @click=\"onPrintClick\">打印</vxe-button>\r\n        <vxe-button type=\"submit\" status=\"primary\" size=\"medium\" @click=\"onExportClick\">导出</vxe-button>\r\n      </div>\r\n    </div>\r\n  </vxe-modal>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'Export',\r\n  components: {},\r\n  props: {\r\n    exportModalVisible: {\r\n      type: Boolean\r\n    },\r\n    exportModalData: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      exportModalFormData: {\r\n        saveType: '.xlsx',\r\n        fileName: 'export.xlsx', // 文件名\r\n        dataType: 'fullData',\r\n        isExportHead: true, // 是否导出表头\r\n        isExportFooter: true, // 是否导出表尾部\r\n        isExportOriginalData: true, // 是否导出源数据\r\n        isExportData: true, // 是否导出数据\r\n        columns: [], // 表头配置\r\n        datas: [], // 源数据,\r\n        selection: [], // 选中数据\r\n        isExportTree: false,\r\n        ignoreColsTypes: [], // 忽略导出的列类型\r\n        viewValueFormat(value, row, column) {\r\n          // 视图数据格式化方法\r\n          // return value\r\n        }\r\n      },\r\n      columns: [\r\n        // {\r\n        //   id: 1,\r\n        //   title: '一级 1',\r\n        //   children: [\r\n        //     {\r\n        //       id: 4,\r\n        //       title: '二级 1-1',\r\n        //       children: [\r\n        //         {\r\n        //           id: 9,\r\n        //           title: '三级 1-1-1'\r\n        //         },\r\n        //         {\r\n        //           id: 10,\r\n        //           title: '三级 1-1-2'\r\n        //         }\r\n        //       ]\r\n        //     }\r\n        //   ]\r\n        // },\r\n        // {\r\n        //   id: 2,\r\n        //   title: '一级 2',\r\n        //   children: [\r\n        //     {\r\n        //       id: 5,\r\n        //       title: '二级 2-1'\r\n        //     },\r\n        //     {\r\n        //       id: 6,\r\n        //       title: '二级 2-2'\r\n        //     }\r\n        //   ]\r\n        // },\r\n        // {\r\n        //   id: 3,\r\n        //   title: '一级 3',\r\n        //   children: [\r\n        //     {\r\n        //       id: 7,\r\n        //       title: '二级 3-1'\r\n        //     },\r\n        //     {\r\n        //       id: 8,\r\n        //       title: '二级 3-2'\r\n        //     }\r\n        //   ]\r\n        // }\r\n      ],\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'title'\r\n      },\r\n      defaultCheckedKeys: [],\r\n      checkAllColumns: false\r\n    }\r\n  },\r\n  methods: {\r\n    deepCopy(obj) {\r\n      // 深拷贝通用方法\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? this.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n    generateTree(arr) {\r\n      // 平行数据转化树形数据\r\n      let copy = this.deepCopy(arr)\r\n      let obj = {}\r\n      copy.forEach((item, index) => {\r\n        delete item.children\r\n        obj[item.nestedId] = item\r\n      })\r\n      let res = []\r\n      copy.forEach((item) => {\r\n        if (item.nestedPid === 0) {\r\n          res.push(item)\r\n        }\r\n        for (let key in obj) {\r\n          if (item.nestedId === obj[key].nestedPid) {\r\n            if (item.children) {\r\n              item.children.push(obj[key])\r\n            } else {\r\n              item.children = [obj[key]]\r\n            }\r\n          }\r\n        }\r\n      })\r\n      return res\r\n    },\r\n    deepEachTraversalArr(data, cb) {\r\n      // 深度递归遍历新增嵌套索引关系\r\n      deepEachTraversalArrFn(data)\r\n      return data\r\n      function deepEachTraversalArrFn(root, nestedId, cb) {\r\n        if (Array.isArray(root) && root.length) {\r\n          root.forEach((item, index) => {\r\n            item.sortIndex = index\r\n            item.nestedPid = nestedId === undefined ? 0 : nestedId\r\n            item.nestedId =\r\n              nestedId !== undefined ? nestedId + '_' + (index + 1) : index + 1\r\n            cb && typeof cb === 'function' && cb(root)\r\n            if (item.children && item.children.length) {\r\n              deepEachTraversalArrFn(item.children, item.nestedId)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    },\r\n    setExportColumns(columns, ignoreColsTypes) {\r\n      // 设置导出列\r\n      columns = columns.filter((item) => {\r\n        return ignoreColsTypes.indexOf(item.type) < 0\r\n      })\r\n      columns.unshift({ title: '序号', field: 'seqIndex', type: 'seqIndex' })\r\n      return this.filterColums(columns, 'visible', false)\r\n    },\r\n    filterColums(columns, key, value) {\r\n      // 过滤,属性key不等于Value过滤\r\n      let self = this\r\n      return columns.filter((item, index) => {\r\n        if (\r\n          item.children &&\r\n          item.children.length &&\r\n          (item[key] !== value || item[key] === undefined)\r\n        ) {\r\n          item.children = self.filterColums(item.children, key, value)\r\n          return true\r\n        } else {\r\n          return item[key] !== value\r\n        }\r\n      })\r\n    },\r\n    valiAndSet(exportModalFormData) {\r\n      //  exportModalFormData: {\r\n      //         saveType: '.xlsx',\r\n      //         fileName: 'export.xlsx', // 文件名\r\n      //         dataType: 'fullData',\r\n      //         isExportHead: true, // 是否导出表头\r\n      //         isExportFooter: true, // 是否导出表尾部\r\n      //         isExportOriginalData: true, // 是否导出源数据\r\n      //         isExportData: true, // 是否导出数据\r\n      //         columns: [], // 表头配置\r\n      //         datas: [], // 源数据,\r\n      //         selection: [], // 选中数据\r\n      //         ignoreColsTypes: [], // 忽略导出的列类型\r\n      //         viewValueFormat(value, row, column) { // 视图数据格式化方法\r\n      //         // return value\r\n      //         }\r\n      //       },\r\n      let { fileName } = exportModalFormData\r\n      let reg = new RegExp('^[a-zA-Z0-9-_\\u4e00-\\u9fa5]{0,2000}$', 'ig')\r\n      if (!reg.test(fileName)) {\r\n        fileName = this.exportModalData.fileName\r\n      }\r\n      exportModalFormData.fileName = fileName\r\n      return exportModalFormData\r\n    },\r\n    init() {\r\n      this.exportModalFormData = Object.assign(\r\n        {},\r\n        this.exportModalFormData,\r\n        this.exportModalData\r\n      )\r\n      this.columns = this.deepEachTraversalArr(\r\n        this.setExportColumns(\r\n          this.exportModalFormData.columns,\r\n          this.exportModalFormData.ignoreColsTypes\r\n        )\r\n      )\r\n      this.checkAllColumns = true\r\n      this.defaultCheckedKeys = this.columns.map((item, index) => {\r\n        return item.nestedId\r\n      })\r\n    },\r\n    onPrintClick() {\r\n      // 打印点击事件\r\n    },\r\n    onExportClick() {\r\n      // 导出点击事件\r\n      let exportColumns = this.generateTree(\r\n        this.$refs.exportColumsTree\r\n          .getCheckedNodes()\r\n          .concat(this.$refs.exportColumsTree.getHalfCheckedNodes())\r\n      ).sort((a, b) => {\r\n        return a.sortIndex - b.sortIndex\r\n      })\r\n      let exportModalFormData = Object.assign({}, this.exportModalFormData, {\r\n        columns: exportColumns\r\n      })\r\n      exportModalFormData = this.valiAndSet(exportModalFormData)\r\n      this.$emit('onExportClick', exportModalFormData)\r\n    }\r\n  },\r\n  mounted() {},\r\n  watch: {\r\n    exportModalVisible: {\r\n      handler(newVal) {\r\n        this.$emit('update:exportModalVisible', newVal)\r\n        if (newVal) {\r\n          this.init()\r\n        }\r\n      },\r\n      immediate: true\r\n    },\r\n    exportModalFormData: {\r\n      handler() {},\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    checkAllColumns: {\r\n      handler(newValue) {\r\n        if (newValue) {\r\n          this.$refs.exportColumsTree &&\r\n            this.$refs.exportColumsTree.setCheckedNodes(this.columns)\r\n        } else {\r\n          this.$refs.exportColumsTree &&\r\n            this.$refs.exportColumsTree.setCheckedNodes([])\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.export-module {\r\n  padding: 0 0 20px 0;\r\n  .vxe-form {\r\n    padding: 0 60px;\r\n    margin: 0 auto;\r\n    .vxe-form--item {\r\n      padding: 3px 0;\r\n    }\r\n    .export-option {\r\n      border: 1px solid #dcdfe6;\r\n      margin: 3px 0;\r\n      border-radius: 4px;\r\n      user-select: none;\r\n      .export-option-title {\r\n        background-color: #f8f8f9;\r\n        font-weight: 700;\r\n        border-bottom: 1px solid #dadce0;\r\n        line-height: 30px;\r\n        padding: 0 23px;\r\n      }\r\n      .export-option-tree {\r\n        max-height: 265px;\r\n        overflow: auto;\r\n      }\r\n\r\n      .vxe-checkbox-group {\r\n        line-height: 24px;\r\n        line-height: normal;\r\n        .vxe-checkbox {\r\n          margin: 0 5px 0 0;\r\n        }\r\n        .vxe-checkbox + .vxe-checkbox {\r\n          margin: 0 5px 0 0;\r\n        }\r\n      }\r\n      .vxe-checkbox-group {\r\n        line-height: 24px;\r\n      }\r\n    }\r\n  }\r\n  .btn-group {\r\n    text-align: right;\r\n    padding: 0 20px;\r\n    .vxe-button {\r\n      border-radius: 6px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"}]}