{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableOld\\export\\export\\export.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableOld\\export\\export\\export.js","mtime":1694505521632},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["defaultViewValueFormat","getCellValueAlign","XlsxTool","FileSaver","Export","gloabelConfig","arguments","length","undefined","_classCallCheck","xlsx","window","aTag","document","createElement","exportHistory","exportDefaultConfig","saveType","fileName","dataType","isExportOnlySourceField","isExportOnlyViewTitle","isExportHead","exportViewTitleType","isExportFooter","isExportOriginalData","isExportData","columns","datas","selection","isExportTree","index","ignoreColsTypes","viewValueFormat","value","row","column","footerMethods","_ref","data","map","columnIndex","columnIndexText","combinedType","Array","isArray","indexOf","result","item","field","parseFloat","toString","split","join","isNaN","reduce","prev","next","toFixed","e","Object","assign","_createClass","key","exportExcel","curUserConfig","context","cb","init","generateExportRowsMap","curExportConfig","generateExportSourceField","generateExportViewDataSource","generateExportOriginalDataSource","exportDownload","Xlsx","downloadCsv","obj","headerRows","dataColMap","headerRowsMap","setExportColumns","File","push","exportConfig","exportDataSource","reverse","slice","self","filter","treeNode","type","curRowIndex","pcCount","forEach","rowConlum","children","generateVisibleHeaderRowsMap","i","sheetVisibleData","addRow","sheetFieldData","addSheet","replace","newrow","cell","addCell","hMerge","vMerge","generateCellVisibletitleStyle","riverGenerateExportNestedHeader","setSheetCol","generateExportViewDataBody","generateExportViewDatafooter","sheet","_this","cols","col","colIndex","width","getColWidth","max","text","parseInt","Math","ceil","getStrByte","str","arr","len","count","s","escape","console","log","sheetOriginalData","generateExportOriginalDataHeader","generateExportOriginalDataBody","pCell","cell0","generateCurNestedHeaderCell","curRows","_this$getFloorData","getFloorData","floorLength","cellSing","supplementHeaderVMergeCells","treeData","floorCols","each","floor","pRowIndex","rowIndex","seqIndex","generateCellViewValue","footData","generateFooterCellViewValue","cells","getViewCellValue","generateCellViewValueStyle","style","align","indent","shrinkToFit","textRotation","wrapText","h","v","border","left","right","top","bottom","leftColor","rightColor","topColor","bottomColor","font","color","bold","family","charset","italic","underline","size","name","fill","bgColor","fgColor","patternType","generateCellOrangeValue","toBuffer","wbout","buf","ArrayBuffer","view","Uint8Array","charCodeAt","exportXlsx","saveAs","then","content","blob","Blob","worksheet","csv","utils","sheet_to_csv","setAttribute","href","URL","createObjectURL","click","revokeObjectURL"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/TableOld/export/export/export.js"],"sourcesContent":["/* eslint-disable no-useless-constructor */\r\n/*\r\n * describe:  基于vxe-table vxe-grid数据格式的导出工具类函数 基础版\r\n * @Date:   2020-09-02\r\n * Author: Titans@2396757591@qq.com\r\n * @Last Modified time: 2020-11-30\r\n */\r\n// import { columns, datas } from './testData.js'\r\n// import xlsx from 'js-xlsx'\r\n// import jszip from './util/jszipU.js'\r\nimport { defaultViewValueFormat, getCellValueAlign } from './exportUtil.js'\r\nimport XlsxTool from 'xlsx'\r\nimport FileSaver from 'file-saver'\r\nexport class Export {\r\n  constructor(gloabelConfig = {}) {\r\n    this.XlsxTool = XlsxTool\r\n    this.xlsx = window.xlsx\r\n    this.aTag = document.createElement('a')\r\n    this.exportHistory = [] // 导出历史记录\r\n    this.exportDefaultConfig = {\r\n      saveType: '.xlsx',\r\n      fileName: 'export', // 文件名\r\n      dataType: 'fullData',\r\n      isExportOnlySourceField: false, // 是否只导出数据源表头字段，\r\n      isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n      isExportHead: true, // 是否导出表头\r\n      exportViewTitleType: 'nestTitle', // nestTitle(嵌套表头)， singTitle(单表头)\r\n      isExportFooter: false, // 是否导出表尾部\r\n      isExportOriginalData: true, // 是否导出源数据\r\n      isExportData: true, // 是否导出数据\r\n      columns: [], // 表头配置\r\n      datas: [], // 源数据,\r\n      selection: [], // 选中数据\r\n      isExportTree: false, // 是否是树形数据\r\n      index: true, // 是否添加序号,\r\n      ignoreColsTypes: ['dragSort', 'seq', 'checkbox', 'radio', 'optionRow', 'expand', 'attach', 'ach', 'list', 'attachlist', 'gloableOptionRow'], // 忽略导出的列类型\r\n      viewValueFormat(value, row, column) { // 视图数据格式化方法\r\n        // return value\r\n      },\r\n      footerMethods({ columns, data }) {\r\n        return columns.map((column, columnIndex) => {\r\n          //  combinedType: ['average', 'total'],\r\n          let columnIndexText = '合计'\r\n          let combinedType = 'total'\r\n          if (columnIndex === 0) {\r\n            return columnIndexText\r\n          } else if (Array.isArray(column.combinedType) && column.combinedType.indexOf(combinedType) >= 0) {\r\n            try {\r\n              let result = data.map((item, index) => {\r\n                let value = (typeof (item[column.field]) === 'number' || typeof (item[column.field]) === 'string') ? parseFloat(item[column.field].toString().split(',').join('')) : 0\r\n                return isNaN(parseFloat(value)) ? 0 : parseFloat(value)\r\n              })\r\n              if (result.length) {\r\n                result = result.reduce((prev, next) => {\r\n                  return prev + next\r\n                })\r\n                result = (result).toFixed(2)\r\n                return result\r\n              } else {\r\n                return 0\r\n              }\r\n            } catch (e) {\r\n              throw (e)\r\n            }\r\n          } else {\r\n            return ''\r\n          }\r\n        })\r\n      }\r\n    }\r\n    this.exportDefaultConfig = Object.assign({}, this.exportDefaultConfig, gloabelConfig)\r\n  }\r\n  exportExcel(curUserConfig = {}, context, cb) {\r\n    this.context = context\r\n    // 导出excel\r\n    this.init(curUserConfig)\r\n    this.generateExportRowsMap(this.curExportConfig.columns)\r\n    this.curExportConfig.datas = this.curExportConfig[this.curExportConfig.dataType]\r\n    if (this.curExportConfig.isExportOnlySourceField || this.curExportConfig.isExportOnlyViewTitle) {\r\n      this.generateExportSourceField(this.curExportConfig.isExportOnlySourceField ? 'field' : 'title')\r\n    } else {\r\n      if (this.curExportConfig.isExportData) {\r\n        this.generateExportViewDataSource()\r\n      }\r\n      if (this.curExportConfig.isExportOriginalData) {\r\n        this.generateExportOriginalDataSource()\r\n      }\r\n    }\r\n    if (this.curExportConfig.saveType === '.xlsx') {\r\n      this.exportDownload(this.Xlsx)\r\n    } else {\r\n      this.downloadCsv()\r\n    }\r\n  }\r\n  init(obj) {\r\n    // 初始化并记录上次导出历史\r\n    this.headerRows = 1\r\n    this.dataColMap = []\r\n    this.headerRowsMap = {}\r\n    this.curExportConfig = Object.assign({}, this.exportDefaultConfig, obj)\r\n    this.curExportConfig.viewValueFormat = defaultViewValueFormat\r\n    this.setExportColumns()\r\n    // let xlsx = window.xlsx\r\n    this.Xlsx = new this.xlsx.File()\r\n    this.exportHistory.push({ exportConfig: this.curExportConfig, exportDataSource: this.Xlsx })\r\n    this.exportHistory = this.exportHistory.reverse().slice(0, 20).reverse()\r\n  }\r\n  setExportColumns() {\r\n    // 设置导出列\r\n    let self = this\r\n    this.curExportConfig.columns = this.curExportConfig.columns.filter((item) => {\r\n      if (item.treeNode) {\r\n        return false\r\n      } else {\r\n        return self.curExportConfig.ignoreColsTypes.indexOf(item.type) < 0\r\n      }\r\n    })\r\n    // if (this.curExportConfig.index) {\r\n    //   this.curExportConfig.columns.unshift({ title: '序号', field: 'seqIndex', type: 'seqIndex' })\r\n    // }\r\n  }\r\n  generateExportRowsMap(columns, curRowIndex = 1, pcCount) {\r\n    // 生成视图数据导出元数据 列映射数据\r\n    let self = this\r\n    columns.forEach((rowConlum, index) => {\r\n      if (curRowIndex > self.headerRows) {\r\n        self.headerRows = curRowIndex\r\n      }\r\n      if (Array.isArray(rowConlum.children) && rowConlum.children.length) {\r\n        self.generateExportRowsMap(rowConlum.children, curRowIndex + 1, rowConlum.children.length)\r\n      } else {\r\n        // if (rowConlum !== undefined) {\r\n        //   rowConlum.pcCount = pcCount\r\n        //   // self.dataColCellsMap[rowConlum.field] = pcCount\r\n        // }\r\n        self.dataColMap.push(rowConlum)\r\n      }\r\n    })\r\n  }\r\n\r\n  generateVisibleHeaderRowsMap() {\r\n    // 生成嵌套表头行映射数据\r\n    for (let i = 1; i <= this.headerRows; i++) {\r\n      this.headerRowsMap['rows' + i] = this.sheetVisibleData.addRow()\r\n    }\r\n  }\r\n  generateExportSourceField(type) {\r\n    let self = this\r\n    this.sheetFieldData = this.Xlsx.addSheet(this.curExportConfig.fileName.replace('.xlsx', ''))\r\n    let newrow = self.sheetFieldData.addRow()\r\n    self.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      cell.value = column[type]\r\n      cell.hMerge = 0\r\n      cell.vMerge = 0\r\n      self.generateCellVisibletitleStyle(cell)\r\n    })\r\n  }\r\n  generateExportViewDataSource() {\r\n    // 生成视图数据导出数据源\r\n    if (this.curExportConfig.isExportOriginalData) {\r\n      this.sheetVisibleData = this.Xlsx.addSheet('视图数据')\r\n    } else {\r\n      this.sheetVisibleData = this.Xlsx.addSheet(this.curExportConfig.fileName.replace('.xlsx', ''))\r\n    }\r\n    this.generateVisibleHeaderRowsMap()\r\n    if (this.curExportConfig.isExportHead) {\r\n      if (this.curExportConfig.isExportHead === 'nestTitle') {\r\n        this.riverGenerateExportNestedHeader(this.curExportConfig.columns)\r\n      } else {\r\n        this.riverGenerateExportNestedHeader(this.dataColMap)\r\n      }\r\n    }\r\n    this.setSheetCol(this.sheetVisibleData)\r\n    this.generateExportViewDataBody(this.curExportConfig.datas)\r\n    if (this.curExportConfig.isExportFooter) {\r\n      this.generateExportViewDatafooter(this.curExportConfig.datas)\r\n    }\r\n  }\r\n  setSheetCol(sheet, type = 'title') {\r\n    // 设置 列信息\r\n    // collapsed: false\r\n    // hidden: false\r\n    // max: 1\r\n    // min: 1\r\n    // numFmt: \"\"\r\n    // outlineLevel: 0\r\n    // style: Style\r\n    // align: (...)\r\n    // applyAlignment: (...)\r\n    // applyBorder: (...)\r\n    // applyFill: (...)\r\n    // applyFont: (...)\r\n    // border: (...)\r\n    // fill: (...)\r\n    // font: (...)\r\n    // width:0\r\n    // namedStyleIndex: (...)\r\n    let self = this\r\n    sheet.cols.forEach((col, colIndex) => {\r\n      col.width = self.getColWidth(colIndex, type)\r\n      col.max = 2000\r\n      col.field = this.dataColMap[colIndex]['field']\r\n    })\r\n  }\r\n  getColWidth(colIndex, type) {\r\n    // 获取colwidth\r\n    let text = this.dataColMap[colIndex][type]\r\n    if (!isNaN(parseInt(this.dataColMap[colIndex].width))) {\r\n      return Math.ceil(this.dataColMap[colIndex].width / 10)\r\n    } else if (text.length < 5) {\r\n      return 15\r\n    }\r\n    return Math.ceil(this.getStrByte(text) * 2)\r\n  }\r\n  getStrByte(str) {\r\n    //  获取字符串字节数\r\n    let arr = str.split('')\r\n    let len = arr.length\r\n    let count = 0\r\n    for (let i = 0; i < len; i++) {\r\n      let s = escape(arr[i])\r\n      // 例如：s = '你'; escape(a); \"%u4F60\"\r\n      if (s.indexOf('%u') >= 0) {\r\n        count = count + 2\r\n      } else {\r\n        count++\r\n      }\r\n    }\r\n    console.log(str, count)\r\n    return count\r\n  }\r\n  generateExportOriginalDataSource() {\r\n    // 生成源数据导出数据源\r\n    this.sheetOriginalData = this.Xlsx.addSheet('源数据')\r\n    if (this.curExportConfig.isExportHead) {\r\n      this.generateExportOriginalDataHeader()\r\n    }\r\n    this.generateExportOriginalDataBody(this.curExportConfig.datas)\r\n    this.setSheetCol(this.sheetOriginalData, 'field')\r\n  }\r\n  riverGenerateExportNestedHeader(columns, curRowIndex = 1, pCell) {\r\n    // 递归生成嵌套表头\r\n    let self = this\r\n    columns.forEach((column, index) => {\r\n      if (Array.isArray(column.children) && column.children.length) {\r\n        let cell0 = self.generateCurNestedHeaderCell(self.headerRowsMap['rows' + curRowIndex], column, curRowIndex, pCell)\r\n        self.riverGenerateExportNestedHeader(column.children, curRowIndex + 1, cell0)\r\n      } else {\r\n        self.generateCurNestedHeaderCell(self.headerRowsMap['rows' + curRowIndex], column, curRowIndex, pCell)\r\n      }\r\n    })\r\n  }\r\n  generateCurNestedHeaderCell(row, column, curRows, pCell) {\r\n    // 生成表头数据并补齐空位\r\n    // cellType: (...)\r\n    // date1904: (...)\r\n    // formula: (...)\r\n    // hMerge: (...)\r\n    // hidden: (...)\r\n    // numFmt: (...)\r\n    // row: (...)\r\n    // vMerge: (...)\r\n    // _style: (...)\r\n    // _value: (...)\r\n    let cell0 = {}\r\n    if (Array.isArray(column.children) && column.children.length) {\r\n      let { floorLength } = this.getFloorData(column.children)\r\n      // for (let i = 0; i < column.children.length; i++) {\r\n      for (let i = 0; i < floorLength; i++) {\r\n        let cell = row.addCell()\r\n        if (i === 0) {\r\n          cell.value = column['title']\r\n          cell.hMerge = floorLength - 1\r\n          cell.vMerge = 0\r\n          cell0 = cell\r\n        } else {\r\n          cell.value = column['title']\r\n          cell.hMerge = 0\r\n          cell.vMerge = 0\r\n        }\r\n        this.generateCellVisibletitleStyle(cell)\r\n      }\r\n    } else {\r\n      let cellSing = row.addCell()\r\n      cellSing.value = column['title']\r\n      cellSing.hMerge = 0\r\n      cellSing.vMerge = this.headerRows - curRows\r\n      cell0 = cellSing\r\n      this.generateCellVisibletitleStyle(cellSing)\r\n      this.supplementHeaderVMergeCells(row, column, curRows, pCell)\r\n      return cell0\r\n    }\r\n  }\r\n  getFloorData(treeData) {\r\n    // 获取当前嵌套子集的单元格个数以及深度\r\n    let max = 0\r\n    let floorCols = []\r\n    function each(data, floor) {\r\n      data.forEach((rowConlum, index) => {\r\n        if (floor > max) {\r\n          max = floor\r\n        }\r\n        if (Array.isArray(rowConlum.children) && rowConlum.children.length) {\r\n          each(rowConlum.children, floor + 1, rowConlum.children.length)\r\n        } else {\r\n          floorCols.push(rowConlum)\r\n        }\r\n      })\r\n    }\r\n    each(treeData, 1)\r\n    return {\r\n      floor: max,\r\n      floorLength: floorCols.length\r\n    }\r\n  }\r\n  generateExportViewDataBody(data, pRowIndex) {\r\n    // 生成视图数据导出主体数据\r\n    let self = this\r\n    data.forEach((row, rowIndex) => {\r\n      let newrow = self.sheetVisibleData.addRow()\r\n      row.seqIndex = pRowIndex === undefined ? rowIndex + 1 : pRowIndex + '.' + (+rowIndex + 1)\r\n      self.dataColMap.forEach((column, columnIndex) => {\r\n        let cell = newrow.addCell()\r\n        self.generateCellViewValue(cell, row, column, rowIndex + 1, pRowIndex)\r\n      })\r\n      if (self.curExportConfig.isExportTree && Array.isArray(row.children) && row.children.length) {\r\n        self.generateExportViewDataBody(row.children, row.seqIndex)\r\n      }\r\n    })\r\n  }\r\n  generateExportViewDatafooter(data) {\r\n    let self = this\r\n    let footData = this.curExportConfig.footerMethods({ columns: self.dataColMap, data: data })\r\n    let newrow = this.sheetVisibleData.addRow()\r\n    this.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      self.generateFooterCellViewValue(cell, footData[columnIndex], column)\r\n    })\r\n  }\r\n  supplementHeaderVMergeCells(row, column, curRows, pCell) {\r\n    // 当表头有合计行时补齐行单元格空位\r\n    for (let i = curRows + 1; i <= this.headerRows; i++) {\r\n      if (pCell) {\r\n        let cells = pCell.vMerge\r\n        for (let i = 0; i < cells; i++) {\r\n          this.headerRowsMap['rows' + i].addCell()\r\n        }\r\n      } else {\r\n        this.headerRowsMap['rows' + i].addCell()\r\n      }\r\n    }\r\n  }\r\n  generateCellViewValue(cell, item, column, rowIndex, pRowIndex) {\r\n    // 生成body单元格数据\r\n    if (column.field === 'seqIndex') {\r\n      cell.value = pRowIndex !== undefined ? pRowIndex + '.' + rowIndex : rowIndex\r\n    } else {\r\n      cell.value = this.getViewCellValue(item, column)\r\n    }\r\n    this.generateCellViewValueStyle(cell, column)\r\n  }\r\n  generateFooterCellViewValue(cell, value, column) {\r\n    // 生成footer单元格数据\r\n    cell.value = value\r\n    this.generateCellViewValueStyle(cell, column)\r\n  }\r\n  getViewCellValue(item, column) {\r\n    // 获取body单元格视图数据\r\n    return this.curExportConfig.viewValueFormat(item[column.field], item, column)\r\n    // item[column.field]\r\n  }\r\n  generateCellVisibletitleStyle(cell) {\r\n    // 生成表头样式\r\n    cell.style.align = {\r\n      indent: 0,\r\n      shrinkToFit: false,\r\n      textRotation: 0,\r\n      wrapText: false,\r\n      h: 'center',\r\n      v: 'center'\r\n    }\r\n    cell.style.border = {\r\n      left: 'thin',\r\n      right: 'thin',\r\n      top: 'thin',\r\n      bottom: 'thin',\r\n      leftColor: 'FF000000',\r\n      rightColor: 'FF000000',\r\n      topColor: 'FF000000',\r\n      bottomColor: 'FF000000'\r\n    }\r\n    cell.style.font = {\r\n      color: '00000000',\r\n      bold: true,\r\n      family: 0,\r\n      charset: 0,\r\n      italic: false,\r\n      underline: false,\r\n      size: 12,\r\n      name: 'Verdana'\r\n    }\r\n    cell.style.fill = {\r\n      bgColor: 'ffffffff',\r\n      fgColor: 'ffD2E9FF',\r\n      patternType: 'solid'\r\n    }\r\n  }\r\n  generateCellViewValueStyle(cell, column) {\r\n    cell.style.border = {\r\n      left: 'thin',\r\n      right: 'thin',\r\n      top: 'thin',\r\n      bottom: 'thin',\r\n      leftColor: 'FF000000',\r\n      rightColor: 'FF000000',\r\n      topColor: 'FF000000',\r\n      bottomColor: 'FF000000'\r\n    }\r\n    cell.style.align = {\r\n      indent: 0,\r\n      shrinkToFit: false,\r\n      textRotation: 0,\r\n      wrapText: false,\r\n      h: getCellValueAlign(column),\r\n      v: 'center'\r\n    }\r\n  }\r\n  generateExportOriginalDataHeader() {\r\n    // 设置表头部样式\r\n    /**\r\n     * Cell intended to provide user access to the contents of Cell within an xlsx.Row.\r\n     *\r\n     * ```js\r\n     * const cell = row.addCell();\r\n     * cell.value = 'I am a cell!';\r\n     * cell.hMerge = 2;\r\n     * cell.vMerge = 1;\r\n     * cell.style.fill.patternType = 'solid';\r\n     * cell.style.fill.fgColor = '00FF0000';\r\n     * cell.style.fill.bgColor = 'FF000000';\r\n     * cell.style.align.h = 'center';\r\n     * cell.style.align.v = 'center';\r\n     * ```\r\n     *\r\n     * Set the cell value\r\n     *\r\n     * ```js\r\n     * const cell = row.addCell();\r\n     * // Date type\r\n     * cell.setDate(new Date());\r\n     * // Number type\r\n     * cell.setNumber(123456);\r\n     * cell.numFmt = '$#,##0.00';\r\n     * ```\r\n     */\r\n    let self = this\r\n    let newrow = self.sheetOriginalData.addRow()\r\n    self.dataColMap.forEach((column, columnIndex) => {\r\n      let cell = newrow.addCell()\r\n      self.generateCellVisibletitleStyle(cell, column)\r\n      cell.value = column.field || ''\r\n    })\r\n  }\r\n  generateExportOriginalDataBody(data, pRowIndex) {\r\n    // 生成body源数据\r\n    let self = this\r\n    data.forEach((row, rowIndex) => {\r\n      let newrow = self.sheetOriginalData.addRow()\r\n      row.seqIndex = pRowIndex === undefined ? rowIndex + 1 : pRowIndex + '.' + (+rowIndex + 1)\r\n      self.dataColMap.forEach((column, columnIndex) => {\r\n        let cell = newrow.addCell()\r\n        self.generateCellOrangeValue(cell, row, column, rowIndex + 1, pRowIndex)\r\n      })\r\n      if (self.curExportConfig.isExportTree && Array.isArray(row.children) && row.children.length) {\r\n        self.generateExportOriginalDataBody(row.children, row.seqIndex)\r\n      }\r\n    })\r\n  }\r\n  generateCellOrangeValue(cell, item, column, rowIndex, pRowIndex) {\r\n    // 生成body单元格数据\r\n    if (column.field === 'seqIndex') {\r\n      cell.value = pRowIndex !== undefined ? pRowIndex + '.' + rowIndex : rowIndex\r\n    } else {\r\n      cell.value = item[column.field] === undefined ? '' : item[column.field]\r\n    }\r\n    this.generateCellViewValueStyle(cell, column)\r\n  }\r\n  toBuffer(wbout) {\r\n    const buf = new ArrayBuffer(wbout.length)\r\n    const view = new Uint8Array(buf)\r\n    for (let index = 0; index !== wbout.length; ++index) view[index] = wbout.charCodeAt(index) & 0xFF\r\n    return buf\r\n  }\r\n  exportDownload(exportXlsx) {\r\n    // 下载\r\n    let self = this\r\n    // const wbout = this.XlsxTool.write(exportXlsx, { bookType: 'xlsx', bookSST: false, type: 'binary' })\r\n    // const blob = new Blob([this.toBuffer(wbout)], { type: 'application/octet-stream' })\r\n    exportXlsx.saveAs('blob').then(function (content) {\r\n      const blob = new Blob([content], {\r\n        type: 'application/octet-stream'\r\n      })\r\n      // var blob = new Blob(['Hello, world!'], { type: 'text/plain;charset=utf-8' })\r\n      FileSaver.saveAs(blob, self.curExportConfig.fileName + self.curExportConfig.saveType)\r\n      // let objectUrl = URL.createObjectURL(blob)\r\n      // if ('download' in document.createElement('a')) {\r\n      //   let aTag = self.aTag\r\n      //   aTag.setAttribute('href', objectUrl)\r\n      //   aTag.setAttribute('download', self.curExportConfig.fileName + self.curExportConfig.saveType)\r\n      //   aTag.click()\r\n      //   self.curExportConfig.successCb(self.curExportConfig)\r\n      // } else {\r\n      //   // IE10+下载\r\n      //   navigator.msSaveBlob(blob, self.curExportConfig.fileName)\r\n      // }\r\n    })\r\n  }\r\n  downloadCsv(exportXlsx) {\r\n    let worksheet = this.sheetVisibleData // 这里我们只读取第一张sheet\r\n    let csv = this.XlsxTool.utils.sheet_to_csv(worksheet)\r\n    let blob = new Blob(['\\uFEFF' + csv], {\r\n      type: 'text/plaincharset=utf-8'\r\n    })\r\n    let aTag = this.aTag\r\n    aTag.setAttribute('download', this.curExportConfig.fileName + this.curExportConfig.saveType)\r\n    aTag.href = URL.createObjectURL(blob)\r\n    aTag.click()\r\n    URL.revokeObjectURL(blob)\r\n  }\r\n}\r\n// 调用\r\n// const $globalExport= new Export()\r\n// $globalExportExcel.exportExcel({\r\n//   fileName: 'export.xlsx', // 文件名\r\n//   isExportHead: true, // 是否导出表头\r\n//   isExportFooter: true, // 是否导出表尾部\r\n//   isExportOriginalData: true, // 是否导出源数据\r\n//   isExportData: true, // 是否导出数据\r\n//   columns: [], // 表头配置\r\n//   datas: [], // 数据源头\r\n//   index: true, // 是否添加序号\r\n//   ignoreColsTypes: ['dragSort', 'seq', 'checkbox', 'radio', 'optionRow', 'expand'],\r\n//   viewValueFormat(value, row, column) {\r\n//     return value\r\n//   }\r\n// })\r\n"],"mappings":"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"}]}