{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\directFund\\report\\accept.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\directFund\\report\\accept.vue","mtime":1694505522417},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["resolveResult","name","props","dialogVisible","type","Boolean","default","_default","acceptType","Number","curReportId","String","data","acceptTreeConfig","showFilter","isInitLoadData","scrollLoad","isleaf","levelno","valueKeys","format","placeholder","multipleValueType","treeProps","labelFormat","nodeKey","label","children","axiosConfig","successCode","statusField","method","url","multiple","isLazeLoad","readonly","clearable","acceptTreeData","acceptTreeFilterText","acceptTreeQueryparams","title","currentCheck","methods","_objectSpread","acceptTreeNodeCheckChange","_ref","checked","childrenChecked","node","acceptTreeNodeCheckClick","_ref2","nodes","checks","forEach","item","push","code","acceptTreeNodeClick","_ref3","showLoading","$loading","lock","text","spinner","background","doAccept","_this","closeDialog","loadingPage","setTimeout","close","$XModal","message","status","$emit","mounted","watch","handler","newval","deep","immediate"],"sources":["src/views/main/directFund/report/accept.vue"],"sourcesContent":["<template>\r\n  <vxe-modal\r\n    ref=\"acceptDialog\"\r\n    v-model=\"dialogVisible\"\r\n    resize\r\n    width=\"40%\"\r\n    height=\"80%\"\r\n    :position=\"{ top: '5%',left: '30%' }\"\r\n    transfer\r\n    :title=\"title + '区划'\"\r\n    @close=\"closeDialog\"\r\n  >\r\n    <div class=\"mmc-left-tree\" style=\"height:calc(100% - 50px)\">\r\n      <div class=\"mmc-left-tree-body\">\r\n        <BsTree\r\n          ref=\"acceptTree\"\r\n          open-loading\r\n          :filter-text=\"acceptTreeFilterText\"\r\n          :config=\"acceptTreeConfig\"\r\n          :tree-data=\"acceptTreeData\"\r\n          :queryparams=\"acceptTreeQueryparams\"\r\n          @onNodeCheckChange=\"acceptTreeNodeCheckChange\"\r\n          @onNodeCheckClick=\"acceptTreeNodeCheckClick\"\r\n          @onNodeClick=\"acceptTreeNodeClick\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"container-project\">\r\n      <div class=\"container-project-bottom\">\r\n        <div class=\"option-line-group\" style=\"text-align:right!important;\">\r\n          <div class=\"fn-inline option-line-group-btn\">\r\n            <vxe-button status=\"primary\" @click=\"doAccept\">{{ title }}</vxe-button></vxe-button>\r\n            <vxe-button @click=\"closeDialog\">取消</vxe-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </vxe-modal>\r\n</template>\r\n\r\n<script>\r\nimport resolveResult from '@/utils/result.js'\r\n\r\nexport default {\r\n  name: 'CheckAuditDialog',\r\n  props: {\r\n    dialogVisible: {\r\n      type: Boolean,\r\n      default() {\r\n        return false\r\n      }\r\n    },\r\n    acceptType: {\r\n      type: Number,\r\n      default() {\r\n        return 1\r\n      }\r\n    },\r\n    curReportId: {\r\n      type: String,\r\n      default() {\r\n        return 1\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      acceptTreeConfig: {\r\n        showFilter: true, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 0, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{code}-{name}', // {code}-{name}\r\n          nodeKey: 'id', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        axiosConfig: {\r\n          successCode: '100000', // 成功code\r\n          statusField: 'code',\r\n          method: 'get', // 请求方式\r\n          url: 'pay-report-service/v1/payreportdata/accept/tree/' + this.acceptType // 'queryTreeAssistData', // 是否调用接口直接获取数据，当此项有值时将会自动家数据\r\n        },\r\n        multiple: true, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true\r\n      },\r\n      acceptTreeData: [],\r\n      acceptTreeFilterText: '',\r\n      acceptTreeQueryparams: {},\r\n      title: '',\r\n      currentCheck: []\r\n    }\r\n  },\r\n  methods: {\r\n    ...resolveResult,\r\n    acceptTreeNodeCheckChange({ checked, childrenChecked, node }) {\r\n    },\r\n    acceptTreeNodeCheckClick({ nodes }) {\r\n      let checks = []\r\n      nodes.forEach(item => {\r\n        if (item.isleaf) {\r\n          checks.push(item.code)\r\n        }\r\n      })\r\n      this.currentCheck = checks\r\n    },\r\n    acceptTreeNodeClick({ node }) {\r\n    },\r\n    showLoading() {\r\n      return this.$loading({\r\n        lock: true,\r\n        text: '正在接收中...请您稍后',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      })\r\n    },\r\n    doAccept() {\r\n      this.closeDialog()\r\n      this.loadingPage = this.showLoading()\r\n      setTimeout(() => {\r\n        this.loadingPage.close()\r\n        this.$XModal.message({ status: 'success', message: '接收成功!' })\r\n      }, 3000)\r\n      // let params = {}\r\n      // params.mofDivCodes = this.currentCheck\r\n      // params.actionType = this.acceptType\r\n      // params.reportId = this.curReportId\r\n      // this.$http.post('pay-report-service/v1/payreportdata/accept/back', params).then(res => {\r\n      //   this.loadingPage.close()\r\n      //   if (res) {\r\n      //     if (res.code === '100000') {\r\n      //       this.$XModal.message({ status: 'success', message: this.title + '成功!' })\r\n      //       this.closeDialog()\r\n      //     } else {\r\n      //       this.$XModal.message({ status: 'error', message: this.title + '失败!' + res.message })\r\n      //     }\r\n      //   }\r\n      // }).catch(e => {\r\n      //   this.$XModal.message({ status: 'error', message: '勾稽审核查询失败' + e })\r\n      //   this.loadingPage.close()\r\n      // })\r\n    },\r\n    closeDialog() {\r\n      this.$emit('update:dialogVisible', false)\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.checkAuditResult()\r\n  },\r\n  watch: {\r\n    dialogVisible: {\r\n      handler(newval) {\r\n        this.$emit('update:dialogVisible', newval)\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    acceptType: {\r\n      handler(newval) {\r\n        switch (newval) {\r\n          case 1:\r\n            this.title = '接收'\r\n            break\r\n          case 2:\r\n            this.title = '退回'\r\n            break\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,OAAAA,aAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,aAAA;MACAC,IAAA,EAAAC,OAAA;MACAC,OAAA,WAAAC,SAAA;QACA;MACA;IACA;IACAC,UAAA;MACAJ,IAAA,EAAAK,MAAA;MACAH,OAAA,WAAAC,SAAA;QACA;MACA;IACA;IACAG,WAAA;MACAN,IAAA,EAAAO,MAAA;MACAL,OAAA,WAAAC,SAAA;QACA;MACA;IACA;EACA;EACAK,IAAA,WAAAA,KAAA;IACA;MACAC,gBAAA;QACAC,UAAA;QAAA;QACAC,cAAA;QACAC,UAAA;QAAA;QACAC,MAAA;QAAA;QACAC,OAAA;QAAA;QACAC,SAAA;QACAC,MAAA;QACAC,WAAA;QACAC,iBAAA;QAAA;QACAC,SAAA;UACA;UACAC,WAAA;UAAA;UACAC,OAAA;UAAA;UACAC,KAAA;UAAA;UACAC,QAAA;QACA;;QACAC,WAAA;UACAC,WAAA;UAAA;UACAC,WAAA;UACAC,MAAA;UAAA;UACAC,GAAA,4DAAAxB,UAAA;QACA;;QACAyB,QAAA;QAAA;QACAC,UAAA;QAAA;QACAC,QAAA;QACAC,SAAA;MACA;MACAC,cAAA;MACAC,oBAAA;MACAC,qBAAA;MACAC,KAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA,EAAAC,aAAA,CAAAA,aAAA,KACA3C,aAAA;IACA4C,yBAAA,WAAAA,0BAAAC,IAAA;MAAA,IAAAC,OAAA,GAAAD,IAAA,CAAAC,OAAA;QAAAC,eAAA,GAAAF,IAAA,CAAAE,eAAA;QAAAC,IAAA,GAAAH,IAAA,CAAAG,IAAA;IACA;IACAC,wBAAA,WAAAA,yBAAAC,KAAA;MAAA,IAAAC,KAAA,GAAAD,KAAA,CAAAC,KAAA;MACA,IAAAC,MAAA;MACAD,KAAA,CAAAE,OAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAArC,MAAA;UACAmC,MAAA,CAAAG,IAAA,CAAAD,IAAA,CAAAE,IAAA;QACA;MACA;MACA,KAAAf,YAAA,GAAAW,MAAA;IACA;IACAK,mBAAA,WAAAA,oBAAAC,KAAA;MAAA,IAAAV,IAAA,GAAAU,KAAA,CAAAV,IAAA;IACA;IACAW,WAAA,WAAAA,YAAA;MACA,YAAAC,QAAA;QACAC,IAAA;QACAC,IAAA;QACAC,OAAA;QACAC,UAAA;MACA;IACA;IACAC,QAAA,WAAAA,SAAA;MAAA,IAAAC,KAAA;MACA,KAAAC,WAAA;MACA,KAAAC,WAAA,QAAAT,WAAA;MACAU,UAAA;QACAH,KAAA,CAAAE,WAAA,CAAAE,KAAA;QACAJ,KAAA,CAAAK,OAAA,CAAAC,OAAA;UAAAC,MAAA;UAAAD,OAAA;QAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;IACAL,WAAA,WAAAA,YAAA;MACA,KAAAO,KAAA;IACA;EAAA,EACA;EACAC,OAAA,WAAAA,QAAA;IACA;EAAA,CACA;EACAC,KAAA;IACAzE,aAAA;MACA0E,OAAA,WAAAA,QAAAC,MAAA;QACA,KAAAJ,KAAA,yBAAAI,MAAA;MACA;MACAC,IAAA;MACAC,SAAA;IACA;IACAxE,UAAA;MACAqE,OAAA,WAAAA,QAAAC,MAAA;QACA,QAAAA,MAAA;UACA;YACA,KAAAtC,KAAA;YACA;UACA;YACA,KAAAA,KAAA;YACA;QACA;MACA;MACAwC,SAAA;IACA;EACA;AAEA"}]}