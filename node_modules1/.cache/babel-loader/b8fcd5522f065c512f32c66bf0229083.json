{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\tool\\big.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\tool\\big.js","mtime":1694505521947},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["GLOBAL","Big","DP","RM","MAX_DP","MAX_POWER","NE","PE","STRICT","NAME","INVALID","INVALID_DP","INVALID_RM","DIV_BY_ZERO","P","UNDEFINED","NUMERIC","_Big_","n","x","s","e","c","slice","strict","TypeError","String","parse","constructor","reduceCalc","arr","type","reduceArr","map","item","index","Number","filter","isNaN","length","indexOf","Error","reduce","a","b","toNumber","plus","arg1","arg2","minus","mul","div","arguments","undefined","prototype","roundDown","roundHalfUp","roundHalfEven","roundUp","i","nl","test","charAt","replace","search","substring","round","sd","rm","more","xc","unshift","pop","stringify","doExponential","isNonzero","join","abs","cmp","y","isneg","yc","j","k","l","dp","bl","bt","ri","bz","ai","al","r","rl","q","qc","qi","p","push","shift","eq","gt","gte","lt","lte","sub","t","xlty","xe","ye","reverse","mod","ygtx","times","add","pow","one","prec","sqrt","half","Math","toExponential","Array","toFixed","toJSON","toString","toPrecision","valueOf","define","amd","module","exports"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/tool/big.js"],"sourcesContent":["/* eslint-disable */\r\n/*\r\n *  big.js v6.1.1\r\n *  A small, fast, easy-to-use library for arbitrary-precision decimal arithmetic.\r\n *  Copyright (c) 2021 Michael Mclaughlin\r\n *  https://github.com/MikeMcl/big.js/LICENCE.md\r\n */\r\n(function (GLOBAL) {\r\n  let Big\r\n  /*\r\n   * The maximum number of decimal places (DP) of the results of operations involving division:\r\n   * div and sqrt, and pow with negative exponents.\r\n   */\r\n  let DP = 20            // 0 to MAX_DP\r\n  /*\r\n   * The rounding mode (RM) used when rounding to the above decimal places.\r\n   *\r\n   *  0  Towards zero (i.e. truncate, no rounding).       (ROUND_DOWN)\r\n   *  1  To nearest neighbour. If equidistant, round up.  (ROUND_HALF_UP)\r\n   *  2  To nearest neighbour. If equidistant, to even.   (ROUND_HALF_EVEN)\r\n   *  3  Away from zero.                                  (ROUND_UP)\r\n   */\r\n  let RM = 1             // 0, 1, 2 or 3\r\n\r\n  // The maximum value of DP and Big.DP.\r\n  let MAX_DP = 1E6      // 0 to 1000000\r\n\r\n  // The maximum magnitude of the exponent argument to the pow method.\r\n  let MAX_POWER = 1E6    // 1 to 1000000\r\n\r\n  /*\r\n   * The negative exponent (NE) at and beneath which toString returns exponential notation.\r\n   * (JavaScript numbers: -7)\r\n   * -1000000 is the minimum recommended exponent value of a Big.\r\n   */\r\n  let NE = -7          // 0 to -1000000\r\n\r\n  /*\r\n   * The positive exponent (PE) at and above which toString returns exponential notation.\r\n   * (JavaScript numbers: 21)\r\n   * 1000000 is the maximum recommended exponent value of a Big, but this limit is not enforced.\r\n   */\r\n  let PE = 21         // 0 to 1000000\r\n\r\n  /*\r\n   * When true, an error will be thrown if a primitive number is passed to the Big constructor,\r\n   * or if valueOf is called, or if toNumber is called on a Big which cannot be converted to a\r\n   * primitive number without a loss of precision.\r\n   */\r\n  let STRICT = false     // true or false\r\n  /**************************************************************************************************/\r\n  // Error messages.\r\n  let NAME = '[big.js] '\r\n  let INVALID = NAME + 'Invalid '\r\n  let INVALID_DP = INVALID + 'decimal places'\r\n  let INVALID_RM = INVALID + 'rounding mode'\r\n  let DIV_BY_ZERO = NAME + 'Division by zero'\r\n\r\n  // The shared prototype object.\r\n  let P = {}\r\n  let UNDEFINED = void 0\r\n  let NUMERIC = /^-?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i;\r\n  /*\r\n   * Create and return a Big constructor.\r\n   */\r\n  function _Big_() {\r\n\r\n    /*\r\n     * The Big constructor and exported function.\r\n     * Create and return a new instance of a Big number object.\r\n     *\r\n     * n {number|string|Big} A numeric value.\r\n     */\r\n    function Big(n) {\r\n      var x = this;\r\n\r\n      // Enable constructor usage without new.\r\n      if (!(x instanceof Big)) return n === UNDEFINED ? _Big_() : new Big(n);\r\n\r\n      // Duplicate.\r\n      if (n instanceof Big) {\r\n        x.s = n.s;\r\n        x.e = n.e;\r\n        x.c = n.c.slice();\r\n      } else {\r\n        if (typeof n !== 'string') {\r\n          if (Big.strict === true) {\r\n            throw TypeError(INVALID + 'number');\r\n          }\r\n\r\n          // Minus zero?\r\n          n = n === 0 && 1 / n < 0 ? '-0' : String(n);\r\n        }\r\n\r\n        parse(x, n);\r\n      }\r\n\r\n      // Retain a reference to this Big constructor.\r\n      // Shadow Big.prototype.constructor which points to Object.\r\n      x.constructor = Big;\r\n    }\r\n    Big.reduceCalc = function (arr, type) {\r\n      let reduceArr = arr.map((item, index) => { return Number(item) }).filter((item, index) => { return !isNaN(item) })\r\n      if (!reduceArr.length) {\r\n        return 0\r\n      } else if (reduceArr.length < 2 && 'div,times,mod,mul'.indexOf(type) >= 0) {\r\n        throw (new Error('参数有误：计算数组' + arr + type + '有误，请核查'))\r\n      } else {\r\n        if (reduceArr.length === 1) {\r\n          return reduceArr[0]\r\n        } else {\r\n          return reduceArr.reduce((a, b) => {\r\n            return new Big(a)[type](new Big(b))\r\n          }).toNumber()\r\n        }\r\n      }\r\n    }\r\n    Big.plus = (arg1, arg2) => { // 精确加法\r\n      arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n      arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n      return new Big(arg1).plus(new Big(arg2)).toNumber()\r\n    }\r\n    Big.minus = (arg1, arg2) => { // 精确减法\r\n      arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n      arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n      return new Big(arg1).minus(new Big(arg2)).toNumber()\r\n    }\r\n    Big.mul = (arg1, arg2) => { // 精确乘法\r\n      arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n      arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n      return new Big(arg1).mul(new Big(arg2)).toNumber()\r\n    }\r\n    Big.div = (arg1 = 0, arg2 = 0) => { // 精确除法\r\n      arg1 = isNaN(Number(arg1)) ? 0 : Number(arg1)\r\n      arg2 = isNaN(Number(arg2)) ? 0 : Number(arg2)\r\n      if (!arg2) {\r\n        return ''\r\n      } else {\r\n        return new Big(arg1).div(new Big(arg2)).toNumber()\r\n      }\r\n    }\r\n    Big.prototype = P;\r\n    Big.DP = DP;\r\n    Big.RM = RM;\r\n    Big.NE = NE;\r\n    Big.PE = PE;\r\n    Big.strict = STRICT;\r\n    Big.roundDown = 0;\r\n    Big.roundHalfUp = 1;\r\n    Big.roundHalfEven = 2;\r\n    Big.roundUp = 3;\r\n\r\n    return Big;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the number or string value passed to a Big constructor.\r\n   *\r\n   * x {Big} A Big number instance.\r\n   * n {number|string} A numeric value.\r\n   */\r\n  function parse(x, n) {\r\n    var e, i, nl;\r\n\r\n    if (!NUMERIC.test(n)) {\r\n      throw Error(INVALID + 'number');\r\n    }\r\n\r\n    // Determine sign.\r\n    x.s = n.charAt(0) == '-' ? (n = n.slice(1), -1) : 1;\r\n\r\n    // Decimal point?\r\n    if ((e = n.indexOf('.')) > -1) n = n.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = n.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +n.slice(i + 1);\r\n      n = n.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = n.length;\r\n    }\r\n\r\n    nl = n.length;\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; i < nl && n.charAt(i) == '0';) ++i;\r\n\r\n    if (i == nl) {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    } else {\r\n\r\n      // Determine trailing zeros.\r\n      for (; nl > 0 && n.charAt(--nl) == '0';);\r\n      x.e = e - i - 1;\r\n      x.c = [];\r\n\r\n      // Convert string to array of digits without leading/trailing zeros.\r\n      for (e = 0; i <= nl;) x.c[e++] = +n.charAt(i++);\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Round Big x to a maximum of sd significant digits using rounding mode rm.\r\n   *\r\n   * x {Big} The Big to round.\r\n   * sd {number} Significant digits: integer, 0 to MAX_DP inclusive.\r\n   * rm {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   * [more] {boolean} Whether the result of division was truncated.\r\n   */\r\n  function round(x, sd, rm, more) {\r\n    var xc = x.c;\r\n\r\n    if (rm === UNDEFINED) rm = x.constructor.RM;\r\n    if (rm !== 0 && rm !== 1 && rm !== 2 && rm !== 3) {\r\n      throw Error(INVALID_RM);\r\n    }\r\n\r\n    if (sd < 1) {\r\n      more =\r\n        rm === 3 && (more || !!xc[0]) || sd === 0 && (\r\n          rm === 1 && xc[0] >= 5 ||\r\n          rm === 2 && (xc[0] > 5 || xc[0] === 5 && (more || xc[1] !== UNDEFINED))\r\n        );\r\n\r\n      xc.length = 1;\r\n\r\n      if (more) {\r\n\r\n        // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n        x.e = x.e - sd + 1;\r\n        xc[0] = 1;\r\n      } else {\r\n\r\n        // Zero.\r\n        xc[0] = x.e = 0;\r\n      }\r\n    } else if (sd < xc.length) {\r\n\r\n      // xc[sd] is the digit after the digit that may be rounded up.\r\n      more =\r\n        rm === 1 && xc[sd] >= 5 ||\r\n        rm === 2 && (xc[sd] > 5 || xc[sd] === 5 &&\r\n          (more || xc[sd + 1] !== UNDEFINED || xc[sd - 1] & 1)) ||\r\n        rm === 3 && (more || !!xc[0]);\r\n\r\n      // Remove any digits after the required precision.\r\n      xc.length = sd--;\r\n\r\n      // Round up?\r\n      if (more) {\r\n\r\n        // Rounding up may mean the previous digit has to be rounded up.\r\n        for (; ++xc[sd] > 9;) {\r\n          xc[sd] = 0;\r\n          if (!sd--) {\r\n            ++x.e;\r\n            xc.unshift(1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (sd = xc.length; !xc[--sd];) xc.pop();\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of Big x in normal or exponential notation.\r\n   * Handles P.toExponential, P.toFixed, P.toJSON, P.toPrecision, P.toString and P.valueOf.\r\n   */\r\n  function stringify(x, doExponential, isNonzero) {\r\n    var e = x.e,\r\n      s = x.c.join(''),\r\n      n = s.length;\r\n\r\n    // Exponential notation?\r\n    if (doExponential) {\r\n      s = s.charAt(0) + (n > 1 ? '.' + s.slice(1) : '') + (e < 0 ? 'e' : 'e+') + e;\r\n\r\n      // Normal notation.\r\n    } else if (e < 0) {\r\n      for (; ++e;) s = '0' + s;\r\n      s = '0.' + s;\r\n    } else if (e > 0) {\r\n      if (++e > n) {\r\n        for (e -= n; e--;) s += '0';\r\n      } else if (e < n) {\r\n        s = s.slice(0, e) + '.' + s.slice(e);\r\n      }\r\n    } else if (n > 1) {\r\n      s = s.charAt(0) + '.' + s.slice(1);\r\n    }\r\n\r\n    return x.s < 0 && isNonzero ? '-' + s : s;\r\n  }\r\n\r\n\r\n  // Prototype/instance methods\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the absolute value of this Big.\r\n   */\r\n  P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return 1 if the value of this Big is greater than the value of Big y,\r\n   *       -1 if the value of this Big is less than the value of Big y, or\r\n   *        0 if they have the same value.\r\n   */\r\n  P.cmp = function (y) {\r\n    var isneg,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new x.constructor(y)).c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) return !xc[0] ? !yc[0] ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    isneg = i < 0;\r\n\r\n    // Compare exponents.\r\n    if (k != l) return k > l ^ isneg ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = -1; ++i < j;) {\r\n      if (xc[i] != yc[i]) return xc[i] > yc[i] ^ isneg ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ isneg ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big divided by the value of Big y, rounded,\r\n   * if necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.div = function (y) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      a = x.c,                  // dividend\r\n      b = (y = new Big(y)).c,   // divisor\r\n      k = x.s == y.s ? 1 : -1,\r\n      dp = Big.DP;\r\n\r\n    if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n\r\n    // Divisor is zero?\r\n    if (!b[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    // Dividend is 0? Return +-0.\r\n    if (!a[0]) {\r\n      y.s = k;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    var bl, bt, n, cmp, ri,\r\n      bz = b.slice(),\r\n      ai = bl = b.length,\r\n      al = a.length,\r\n      r = a.slice(0, bl),   // remainder\r\n      rl = r.length,\r\n      q = y,                // quotient\r\n      qc = q.c = [],\r\n      qi = 0,\r\n      p = dp + (q.e = x.e - y.e) + 1;    // precision of the result\r\n\r\n    q.s = k;\r\n    k = p < 0 ? 0 : p;\r\n\r\n    // Create version of divisor with leading zero.\r\n    bz.unshift(0);\r\n\r\n    // Add zeros to make remainder as long as divisor.\r\n    for (; rl++ < bl;) r.push(0);\r\n\r\n    do {\r\n\r\n      // n is how many times the divisor goes into current remainder.\r\n      for (n = 0; n < 10; n++) {\r\n\r\n        // Compare divisor and remainder.\r\n        if (bl != (rl = r.length)) {\r\n          cmp = bl > rl ? 1 : -1;\r\n        } else {\r\n          for (ri = -1, cmp = 0; ++ri < bl;) {\r\n            if (b[ri] != r[ri]) {\r\n              cmp = b[ri] > r[ri] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        // If divisor < remainder, subtract divisor from remainder.\r\n        if (cmp < 0) {\r\n\r\n          // Remainder can't be more than 1 digit longer than divisor.\r\n          // Equalise lengths using divisor with extra leading zero?\r\n          for (bt = rl == bl ? b : bz; rl;) {\r\n            if (r[--rl] < bt[rl]) {\r\n              ri = rl;\r\n              for (; ri && !r[--ri];) r[ri] = 9;\r\n              --r[ri];\r\n              r[rl] += 10;\r\n            }\r\n            r[rl] -= bt[rl];\r\n          }\r\n\r\n          for (; !r[0];) r.shift();\r\n        } else {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // Add the digit n to the result array.\r\n      qc[qi++] = cmp ? n : ++n;\r\n\r\n      // Update the remainder.\r\n      if (r[0] && cmp) r[rl] = a[ai] || 0;\r\n      else r = [a[ai]];\r\n\r\n    } while ((ai++ < al || r[0] !== UNDEFINED) && k--);\r\n\r\n    // Leading zero? Do not remove if result is simply zero (qi == 1).\r\n    if (!qc[0] && qi != 1) {\r\n\r\n      // There can't be more than one zero.\r\n      qc.shift();\r\n      q.e--;\r\n      p--;\r\n    }\r\n\r\n    // Round?\r\n    if (qi > p) round(q, p, Big.RM, r[0] !== UNDEFINED);\r\n\r\n    return q;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is equal to the value of Big y, otherwise return false.\r\n   */\r\n  P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than the value of Big y, otherwise return\r\n   * false.\r\n   */\r\n  P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is greater than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.gte = function (y) {\r\n    return this.cmp(y) > -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than the value of Big y, otherwise return false.\r\n   */\r\n  P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Big is less than or equal to the value of Big y, otherwise\r\n   * return false.\r\n   */\r\n  P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big minus the value of Big y.\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var i, j, t, xlty,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xc = x.c.slice(),\r\n      xe = x.e,\r\n      yc = y.c,\r\n      ye = y.e;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (yc[0]) {\r\n        y.s = -b;\r\n      } else if (xc[0]) {\r\n        y = new Big(x);\r\n      } else {\r\n        y.s = 1;\r\n      }\r\n      return y;\r\n    }\r\n\r\n    // Determine which is the bigger number. Prepend zeros to equalise exponents.\r\n    if (a = xe - ye) {\r\n\r\n      if (xlty = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (b = a; b--;) t.push(0);\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = ((xlty = xc.length < yc.length) ? xc : yc).length;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n        if (xc[b] != yc[b]) {\r\n          xlty = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xlty) {\r\n      t = xc;\r\n      xc = yc;\r\n      yc = t;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    /*\r\n     * Append zeros to xc if shorter. No need to add zeros to yc if shorter as subtraction only\r\n     * needs to start at yc.length.\r\n     */\r\n    if ((b = (j = yc.length) - (i = xc.length)) > 0) for (; b--;) xc[i++] = 0;\r\n\r\n    // Subtract yc from xc.\r\n    for (b = i; j > a;) {\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i];) xc[i] = 9;\r\n        --xc[i];\r\n        xc[j] += 10;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xc[--b] === 0;) xc.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] === 0;) {\r\n      xc.shift();\r\n      --ye;\r\n    }\r\n\r\n    if (!xc[0]) {\r\n\r\n      // n - n = +0\r\n      y.s = 1;\r\n\r\n      // Result must be zero.\r\n      xc = [ye = 0];\r\n    }\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big modulo the value of Big y.\r\n   */\r\n  P.mod = function (y) {\r\n    var ygtx,\r\n      x = this,\r\n      Big = x.constructor,\r\n      a = x.s,\r\n      b = (y = new Big(y)).s;\r\n\r\n    if (!y.c[0]) {\r\n      throw Error(DIV_BY_ZERO);\r\n    }\r\n\r\n    x.s = y.s = 1;\r\n    ygtx = y.cmp(x) == 1;\r\n    x.s = a;\r\n    y.s = b;\r\n\r\n    if (ygtx) return new Big(x);\r\n\r\n    a = Big.DP;\r\n    b = Big.RM;\r\n    Big.DP = Big.RM = 0;\r\n    x = x.div(y);\r\n    Big.DP = a;\r\n    Big.RM = b;\r\n\r\n    return this.minus(x.times(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big plus the value of Big y.\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var e, k, t,\r\n      x = this,\r\n      Big = x.constructor;\r\n\r\n    y = new Big(y);\r\n\r\n    // Signs differ?\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e,\r\n      xc = x.c,\r\n      ye = y.e,\r\n      yc = y.c;\r\n\r\n    // Either zero?\r\n    if (!xc[0] || !yc[0]) {\r\n      if (!yc[0]) {\r\n        if (xc[0]) {\r\n          y = new Big(x);\r\n        } else {\r\n          y.s = x.s;\r\n        }\r\n      }\r\n      return y;\r\n    }\r\n\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents.\r\n    // Note: reverse faster than unshifts.\r\n    if (e = xe - ye) {\r\n      if (e > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        e = -e;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; e--;) t.push(0);\r\n      t.reverse();\r\n    }\r\n\r\n    // Point xc to the longer array.\r\n    if (xc.length - yc.length < 0) {\r\n      t = yc;\r\n      yc = xc;\r\n      xc = t;\r\n    }\r\n\r\n    e = yc.length;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be left as they are.\r\n    for (k = 0; e; xc[e] %= 10) k = (xc[--e] = xc[e] + yc[e] + k) / 10 | 0;\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n\r\n    if (k) {\r\n      xc.unshift(k);\r\n      ++ye;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (e = xc.length; xc[--e] === 0;) xc.pop();\r\n\r\n    y.c = xc;\r\n    y.e = ye;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a Big whose value is the value of this Big raised to the power n.\r\n   * If n is negative, round to a maximum of Big.DP decimal places using rounding\r\n   * mode Big.RM.\r\n   *\r\n   * n {number} Integer, -MAX_POWER to MAX_POWER inclusive.\r\n   */\r\n  P.pow = function (n) {\r\n    var x = this,\r\n      one = new x.constructor('1'),\r\n      y = one,\r\n      isneg = n < 0;\r\n\r\n    if (n !== ~~n || n < -MAX_POWER || n > MAX_POWER) {\r\n      throw Error(INVALID + 'exponent');\r\n    }\r\n\r\n    if (isneg) n = -n;\r\n\r\n    for (; ;) {\r\n      if (n & 1) y = y.times(x);\r\n      n >>= 1;\r\n      if (!n) break;\r\n      x = x.times(x);\r\n    }\r\n\r\n    return isneg ? one.div(y) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum precision of sd\r\n   * significant digits using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.prec = function (sd, rm) {\r\n    if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n      throw Error(INVALID + 'precision');\r\n    }\r\n    return round(new this.constructor(this), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big rounded to a maximum of dp decimal places\r\n   * using rounding mode rm, or Big.RM if rm is not specified.\r\n   * If dp is negative, round to an integer which is a multiple of 10**-dp.\r\n   * If dp is not specified, round to 0 decimal places.\r\n   *\r\n   * dp? {number} Integer, -MAX_DP to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.round = function (dp, rm) {\r\n    if (dp === UNDEFINED) dp = 0;\r\n    else if (dp !== ~~dp || dp < -MAX_DP || dp > MAX_DP) {\r\n      throw Error(INVALID_DP);\r\n    }\r\n    return round(new this.constructor(this), dp + this.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the square root of the value of this Big, rounded, if\r\n   * necessary, to a maximum of Big.DP decimal places using rounding mode Big.RM.\r\n   */\r\n  P.sqrt = function () {\r\n    var r, c, t,\r\n      x = this,\r\n      Big = x.constructor,\r\n      s = x.s,\r\n      e = x.e,\r\n      half = new Big('0.5');\r\n\r\n    // Zero?\r\n    if (!x.c[0]) return new Big(x);\r\n\r\n    // Negative?\r\n    if (s < 0) {\r\n      throw Error(NAME + 'No square root');\r\n    }\r\n\r\n    // Estimate.\r\n    s = Math.sqrt(x + '');\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Re-estimate: pass x coefficient to Math.sqrt as integer, then adjust the result exponent.\r\n    if (s === 0 || s === 1 / 0) {\r\n      c = x.c.join('');\r\n      if (!(c.length + e & 1)) c += '0';\r\n      s = Math.sqrt(c);\r\n      e = ((e + 1) / 2 | 0) - (e < 0 || e & 1);\r\n      r = new Big((s == 1 / 0 ? '5e' : (s = s.toExponential()).slice(0, s.indexOf('e') + 1)) + e);\r\n    } else {\r\n      r = new Big(s + '');\r\n    }\r\n\r\n    e = r.e + (Big.DP += 4);\r\n\r\n    // Newton-Raphson iteration.\r\n    do {\r\n      t = r;\r\n      r = half.times(t.plus(x.div(t)));\r\n    } while (t.c.slice(0, e).join('') !== r.c.slice(0, e).join(''));\r\n\r\n    return round(r, (Big.DP -= 4) + r.e + 1, Big.RM);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Big whose value is the value of this Big times the value of Big y.\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var c,\r\n      x = this,\r\n      Big = x.constructor,\r\n      xc = x.c,\r\n      yc = (y = new Big(y)).c,\r\n      a = xc.length,\r\n      b = yc.length,\r\n      i = x.e,\r\n      j = y.e;\r\n\r\n    // Determine sign of result.\r\n    y.s = x.s == y.s ? 1 : -1;\r\n\r\n    // Return signed 0 if either 0.\r\n    if (!xc[0] || !yc[0]) {\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // Initialise exponent of result as x.e + y.e.\r\n    y.e = i + j;\r\n\r\n    // If array xc has fewer digits than yc, swap xc and yc, and lengths.\r\n    if (a < b) {\r\n      c = xc;\r\n      xc = yc;\r\n      yc = c;\r\n      j = a;\r\n      a = b;\r\n      b = j;\r\n    }\r\n\r\n    // Initialise coefficient array of result with zeros.\r\n    for (c = new Array(j = a + b); j--;) c[j] = 0;\r\n\r\n    // Multiply.\r\n\r\n    // i is initially xc.length.\r\n    for (i = b; i--;) {\r\n      b = 0;\r\n\r\n      // a is yc.length.\r\n      for (j = a + i; j > i;) {\r\n\r\n        // Current sum of products at this digit position, plus carry.\r\n        b = c[j] + yc[i] * xc[j - i - 1] + b;\r\n        c[j--] = b % 10;\r\n\r\n        // carry\r\n        b = b / 10 | 0;\r\n      }\r\n\r\n      c[j] = b;\r\n    }\r\n\r\n    // Increment result exponent if there is a final carry, otherwise remove leading zero.\r\n    if (b) ++y.e;\r\n    else c.shift();\r\n\r\n    // Remove trailing zeros.\r\n    for (i = c.length; !c[--i];) c.pop();\r\n    y.c = c;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in exponential notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), ++dp, rm);\r\n      for (; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, true, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big in normal notation rounded to dp fixed\r\n   * decimal places using rounding mode rm, or Big.RM if rm is not specified.\r\n   *\r\n   * dp? {number} Decimal places: integer, 0 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var x = this,\r\n      n = x.c[0];\r\n\r\n    if (dp !== UNDEFINED) {\r\n      if (dp !== ~~dp || dp < 0 || dp > MAX_DP) {\r\n        throw Error(INVALID_DP);\r\n      }\r\n      x = round(new x.constructor(x), dp + x.e + 1, rm);\r\n\r\n      // x.e may have changed if the value is rounded up.\r\n      for (dp = dp + x.e + 1; x.c.length < dp;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, false, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Omit the sign for negative zero.\r\n   */\r\n  P.toJSON = P.toString = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, !!x.c[0]);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Big as a primitve number.\r\n   */\r\n  P.toNumber = function () {\r\n    var n = Number(stringify(this, true, true));\r\n    if (this.constructor.strict === true && !this.eq(n.toString())) {\r\n      throw Error(NAME + 'Imprecise conversion');\r\n    }\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big rounded to sd significant digits using\r\n   * rounding mode rm, or Big.RM if rm is not specified.\r\n   * Use exponential notation if sd is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * sd {number} Significant digits: integer, 1 to MAX_DP inclusive.\r\n   * rm? {number} Rounding mode: 0 (down), 1 (half-up), 2 (half-even) or 3 (up).\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var x = this,\r\n      Big = x.constructor,\r\n      n = x.c[0];\r\n\r\n    if (sd !== UNDEFINED) {\r\n      if (sd !== ~~sd || sd < 1 || sd > MAX_DP) {\r\n        throw Error(INVALID + 'precision');\r\n      }\r\n      x = round(new Big(x), sd, rm);\r\n      for (; x.c.length < sd;) x.c.push(0);\r\n    }\r\n\r\n    return stringify(x, sd <= x.e || x.e <= Big.NE || x.e >= Big.PE, !!n);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Big.\r\n   * Return exponential notation if this Big has a positive exponent equal to or greater than\r\n   * Big.PE, or a negative exponent equal to or less than Big.NE.\r\n   * Include the sign for negative zero.\r\n   */\r\n  P.valueOf = function () {\r\n    var x = this,\r\n      Big = x.constructor;\r\n    if (Big.strict === true) {\r\n      throw Error(NAME + 'valueOf disallowed');\r\n    }\r\n    return stringify(x, x.e <= Big.NE || x.e >= Big.PE, true);\r\n  };\r\n\r\n\r\n  // Export\r\n\r\n\r\n  Big = _Big_();\r\n\r\n  Big['default'] = Big.Big = Big;\r\n\r\n  //AMD.\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(function () { return Big; });\r\n\r\n    // Node and other CommonJS-like environments that support module.exports.\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = Big;\r\n\r\n    //Browser.\r\n  } else {\r\n    GLOBAL.Big = Big;\r\n  }\r\n})(this);\r\n"],"mappings":"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"}]}