{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\DeclarationOfMonitoringItemsFlowMonitor\\DeclarationOfMonitoringItemsFlowMonitor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\DeclarationOfMonitoringItemsFlowMonitor\\DeclarationOfMonitoringItemsFlowMonitor.vue","mtime":1694505522244},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["proconf","AddDialog","LookDialog","HttpModule","GlAttachment","components","watch","data","lookdialogVisible","showGlAttachmentDialog","declareCode","radioShow","breakRuleVisible","treeTypeConfig","curRadio","treeGlobalConfig","inputVal","treeQueryparams","elementCode","province","$store","state","userInfo","year","wheresql","treeServerUri","treeAjaxType","treeData","leftTreeVisible","toolBarStatusBtnConfig","changeBtns","buttons","toolBarStatusButtons","curButton","type","iconName","iconNameActive","iconUrl","label","code","curValue","buttonsInfo","statusRightToolBarButton","methods","bsToolbarClickEvent","onStatusTabClick","statusRightToolBarButtonByBusDept","tabStatusNumConfig","isShowQueryConditions","toolBarStatusSelect","tableLoading","tableColumnsConfig","PoliciesTableColumns","tableData","tableToolbarConfig","disabledMoneyConversion","moneyConversion","search","import","export","print","zoom","custom","slots","tools","mainPagerConfig","total","currentPage","pageSize","tableConfig","renderers","$gloableOptionRow","gloableOptionRow","onOptionRowClick","tableFooterConfig","showFooter","logData","showLogView","dialogVisible","dialogTitle","addTableData","modifyData","menuName","params5","menuId","tokenid","roleguid","curNavModule","appId","isHaveZero","showAttachmentDialog","billguid","condition","mofDivCodes","mofDivCode","queryConfig","highQueryConfig","searchDataList","highQueryData","declareName","mounted","obj","console","log","queryTableDatas","getSearchDataList","searchDataObj","forEach","item","itemRender","name","field","getConditionList","getLeftTreeData","_this","that","getLeftTree","then","res","rscode","treeResdata","getChildrenData","$message","error","datas","text","children","operationToolbarButtonClickEvent","refresh","$refs","mainTableRef","xGrid","clearScroll","context","e","onAddToolbarClickAdd","allBack","returnData","revokeData","delPolicies","lookData","_this2","selection","getSelectionData","length","warning","declareCodes","push","param","guid","$confirm","confirmButtonText","cancelButtonText","flowRevoke","success","queryTableDatasCount","message","catch","_this3","changeVisible","val","_ref","row","optionType","clickAddBtn","queryActionLog","showAttachment","onToolbarBtnClick","_ref2","table","changeInput","onClickmethod","node","id","key","treeSet","treeConfigIn","toLowerCase","agency_code","treeSetConfrimData","curTree","leftTree","refreshTree","asideChange","showAttachment1","row1","cellClick","column","property","agencyCodes","manageMofCodes","ajaxTableData","_ref3","params","onQueryConditionsClick","isOpen","_this4","flowBack","_this5","_this6","waitFlowCount","alreadyFlowCount","allFlowCount","_this7","page","flowStatus","results","totalCount","_this8","created","getters","getLoginAuthentication"],"sources":["src/views/main/MointoringMatters/DeclarationOfMonitoringItemsFlowMonitor/DeclarationOfMonitoringItemsFlowMonitor.vue"],"sourcesContent":["<!-- 监控事项审核-监控 -->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout><!-- <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\"> -->\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          show-zero\r\n          :is-open=\"isShowQueryConditions\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <template v-slot:query>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <!-- <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n          @onConfrimData=\"treeSetConfrimData\"\r\n        />\r\n        <BsBossTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :defaultexpandedkeys=\"['000']\"\r\n          style=\"overflow: hidden\"\r\n          :is-server=\"false\"\r\n          :ajax-type=\"treeAjaxType\"\r\n          :server-uri=\"treeServerUri\"\r\n          :datas=\"treeData\"\r\n          :queryparams=\"treeQueryparams\"\r\n          :global-config=\"treeGlobalConfig\"\r\n          :clickmethod=\"onClickmethod\"\r\n        />\r\n      </template> -->\r\n      <template v-slot:mainForm>\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <!-- <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div> -->\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <AddDialog\r\n      v-if=\"dialogVisible\"\r\n      :title=\"dialogTitle\"\r\n      :declare-code=\"declareCode\"\r\n      :mof-div-code=\"mofDivCode\"\r\n    />\r\n    <LookDialog\r\n      v-if=\"lookdialogVisible\"\r\n      title=\"查看\"\r\n      :declare-code=\"declareCode\"\r\n      :mof-div-code=\"mofDivCode\"\r\n    />\r\n    <!-- 附件弹框 -->\r\n    <BsAttachment v-if=\"showAttachmentDialog\" refs=\"attachmentboss\" :user-info=\"userInfo\" :billguid=\"billguid\" />\r\n    <GlAttachment\r\n      v-if=\"showGlAttachmentDialog\"\r\n      :user-info=\"userInfo\"\r\n      :billguid=\"billguid\"\r\n      :mof-div-code=\"mofDivCode\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf } from './DeclarationOfMonitoringItemsFlowMonitor'\r\nimport AddDialog from './children/addDialog'\r\nimport LookDialog from './children/lookDialog'\r\nimport HttpModule from '@/api/frame/main/Monitoring/Declaration.js'\r\nimport GlAttachment from '../common/GlAttachment'\r\nexport default {\r\n  components: {\r\n    AddDialog,\r\n    GlAttachment,\r\n    LookDialog\r\n  },\r\n  watch: {\r\n  },\r\n  data() {\r\n    return {\r\n      lookdialogVisible: false,\r\n      showGlAttachmentDialog: false,\r\n      declareCode: '',\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      treeTypeConfig: {\r\n        curRadio: 'AGENCY'\r\n      },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      },\r\n      treeQueryparams: { elementCode: 'admdiv', province: this.$store.state.userInfo.province, year: this.$store.state.userInfo.year, wheresql: 'and code like \\'' + 61 + '%\\'' },\r\n      treeServerUri: 'http://10.77.18.172:32303/v2/basedata/simpletree/where',\r\n      treeAjaxType: 'get',\r\n      treeData: [],\r\n      leftTreeVisible: true,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        changeBtns: true,\r\n        buttons: proconf.toolBarStatusButtons,\r\n        curButton: {\r\n          type: 'button',\r\n          iconName: 'base-all.png',\r\n          iconNameActive: 'base-all-active.png',\r\n          iconUrl: '',\r\n          label: '待审核',\r\n          code: '1',\r\n          curValue: '1'\r\n        },\r\n        buttonsInfo: proconf.statusRightToolBarButton,\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        }\r\n      },\r\n      buttonsInfo: proconf.statusRightToolBarButtonByBusDept,\r\n      tabStatusNumConfig: {\r\n        '1': 0,\r\n        '2': 0,\r\n        '3': 0\r\n      },\r\n      isShowQueryConditions: true,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        iconName: 'base-all.png',\r\n        iconNameActive: 'base-all-active.png',\r\n        iconUrl: '',\r\n        label: '待审核',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableColumnsConfig: proconf.PoliciesTableColumns,\r\n      tableData: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        search: false, // 是否有search\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 20\r\n      },\r\n      tableConfig: {\r\n        moneyConversion: false,\r\n        renderers: {\r\n          // 编辑 附件 操作日志\r\n          $gloableOptionRow: proconf.gloableOptionRow\r\n        },\r\n        methods: {\r\n          onOptionRowClick: this.onOptionRowClick\r\n        }\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      modifyData: {},\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '监控事项列表',\r\n      params5: '',\r\n      menuId: '监控事项列表',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      // 文件\r\n      showAttachmentDialog: false,\r\n      billguid: '',\r\n      condition: {},\r\n      mofDivCodes: [],\r\n      mofDivCode: '',\r\n      queryConfig: proconf.highQueryConfig,\r\n      searchDataList: proconf.highQueryData,\r\n      declareName: ''\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    search(obj) {\r\n      console.log(obj)\r\n      this.declareName = obj.declareName\r\n      this.queryTableDatas()\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    getLeftTreeData() {\r\n      console.log('getLeftTreeData')\r\n      let that = this\r\n      HttpModule.getLeftTree(that.treeQueryparams).then(res => {\r\n        if (res.rscode === '100000') {\r\n          let treeResdata = that.getChildrenData(res.data)\r\n          // treeResdata.forEach(item => {\r\n          //   item.label = item.id + '-' + item.businessName\r\n          // })\r\n          // const result = [\r\n          //   {\r\n          //     id: 'root',\r\n          //     label: '全部',\r\n          //     code: 'root',\r\n          //     isleaf: '0',\r\n          //     children: treeResdata\r\n          //   }\r\n          // ]\r\n          that.treeData = treeResdata\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    },\r\n    getChildrenData(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.text\r\n        // eslint-disable-next-line no-undef\r\n        if (item.children) {\r\n          that.getChildrenData(item.children)\r\n        }\r\n      })\r\n\r\n      return datas\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.curValue) {\r\n        // 待审核\r\n        case '1':\r\n          this.radioShow = true\r\n          break\r\n        // 已送审\r\n        case '3':\r\n          this.radioShow = true\r\n          break\r\n        // 全部\r\n        case '4':\r\n          this.radioShow = true\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.refresh()\r\n      this.$refs.mainTableRef.$refs.xGrid.clearScroll()\r\n    },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      console.log(obj.code)\r\n      switch (obj.code) {\r\n        // 审核\r\n        case 'audit':\r\n          this.onAddToolbarClickAdd(obj, context, e)\r\n          break\r\n        case 'allBack':\r\n          this.allBack(obj, context, e)\r\n          break\r\n        // 退回\r\n        case 'returnData':\r\n          this.returnData(obj, context, e)\r\n          break\r\n        // 撤销\r\n        case 'revoke':\r\n          this.revokeData(obj, context, e)\r\n          break\r\n        // 删除\r\n        case 'del':\r\n          this.delPolicies(obj, context, e)\r\n          break\r\n        // 查看\r\n        case 'check':\r\n          this.lookData()\r\n          break\r\n        // 刷新\r\n        case 'add-toolbar-refresh':\r\n          this.refresh()\r\n          break\r\n        // 刷新\r\n        case 'operation-toolbar-refresh':\r\n          this.refresh()\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    // 撤销\r\n    revokeData() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length < 1) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      let declareCodes = []\r\n      selection.forEach(item => {\r\n        declareCodes.push(item.declareCode)\r\n      })\r\n      const param = {\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        declareCodes: declareCodes,\r\n        menuName: this.$store.state.curNavModule.name\r\n      }\r\n      this.$confirm('是否确定撤销 ?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.tableLoading = true\r\n        HttpModule.flowRevoke(param).then(res => {\r\n          this.tableLoading = false\r\n          if (res.code === '000000') {\r\n            this.$message.success('撤销成功')\r\n            this.queryTableDatas()\r\n            this.queryTableDatasCount()\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        })\r\n      })\r\n    },\r\n    // 删除\r\n    delPolicies() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length < 1) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      let declareCodes = []\r\n      selection.forEach(item => {\r\n        declareCodes.push(item.declareCode)\r\n      })\r\n      let param = {\r\n        'declareCodes': declareCodes\r\n      }\r\n      this.$confirm('是否确定删除 ?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.tableLoading = true\r\n        HttpModule.delPolicies(param).then(res => {\r\n          this.tableLoading = false\r\n          if (res.code === '000000') {\r\n            this.$message.success('删除成功')\r\n            this.queryTableDatas()\r\n            this.queryTableDatasCount()\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        })\r\n      })\r\n    },\r\n    changeVisible(val) {\r\n      console.log(val, '输出')\r\n      this.breakRuleVisible = val\r\n    },\r\n    // table 右侧操作按钮\r\n    onOptionRowClick({ row, optionType }, context) {\r\n      // console.log(context.$parent.$parent.$parent)\r\n      switch (optionType) {\r\n        // 新增\r\n        case 'add':\r\n          this.clickAddBtn(row)\r\n          break\r\n        // 操作日志\r\n        case 'report':\r\n          this.queryActionLog(row)\r\n          break\r\n        // 附件\r\n        case 'attachment':\r\n          this.showAttachment(row)\r\n          break\r\n        default:\r\n      }\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.treeGlobalConfig.inputVal = val\r\n    },\r\n    onClickmethod(node) {\r\n      if (node.code === 'root') {\r\n        return\r\n      }\r\n      if (node.id !== '0') {\r\n        let key =\r\n          this.$refs.treeSet.treeConfigIn.curRadio.toLowerCase() + '_code'\r\n        this.condition[key] = node.code\r\n      } else {\r\n        this.condition = {}\r\n      }\r\n      console.log(this.condition)\r\n      this.mofDivCodes = []\r\n      this.mofDivCodes.push(this.condition.agency_code)\r\n      this.queryTableDatas()\r\n      this.queryTableDatasCount()\r\n    },\r\n    treeSetConfrimData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 查看附件\r\n    showAttachment(row) {\r\n      console.log('查看附件')\r\n      if (row.declareCode === null || row.declareCode === '') {\r\n        this.$message.warning('该数据无附件')\r\n        return\r\n      }\r\n      this.billguid = row.declareCode\r\n      this.mofDivCode = row.mofDivCode\r\n      // this.showAttachmentDialog = true\r\n      this.showGlAttachmentDialog = true\r\n    },\r\n    // 查看附件\r\n    showAttachment1(row, row1) {\r\n      this.billguid = row\r\n      this.mofDivCode = row1\r\n      this.showGlAttachmentDialog = true\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      console.log(key, obj.row)\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh() {\r\n      this.agencyCodes = []\r\n      this.manageMofCodes = []\r\n      this.mofDivCodes = []\r\n      this.queryTableDatas()\r\n      this.queryTableDatasCount()\r\n    },\r\n    ajaxTableData({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig.currentPage = currentPage\r\n      this.mainPagerConfig.pageSize = pageSize\r\n      this.queryTableDatas()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 新增或修改弹框\r\n    clickAddBtn(row) {\r\n      if (this.addTableData.length > 0) {\r\n        this.addTableData = []\r\n      }\r\n      this.dialogTitle = '新增'\r\n      this.addTableData.push(row)\r\n      this.dialogVisible = true\r\n    },\r\n    // 审核\r\n    onAddToolbarClickAdd(obj, context, e) {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n        return\r\n      }\r\n      this.declareCode = selection[0].declareCode\r\n      this.mofDivCode = selection[0].mofDivCode\r\n      this.dialogVisible = true\r\n      this.dialogTitle = '审核'\r\n    },\r\n    // 查看\r\n    lookData() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n        return\r\n      }\r\n      this.declareCode = selection[0].declareCode\r\n      this.mofDivCode = selection[0].mofDivCode\r\n      this.lookdialogVisible = true\r\n    },\r\n    // 退回\r\n    returnData() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length < 1) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      let declareCodes = []\r\n      selection.forEach(item => {\r\n        declareCodes.push(item.declareCode)\r\n      })\r\n      const params = {\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        declareCodes: declareCodes,\r\n        menuName: this.$store.state.curNavModule.name\r\n      }\r\n      HttpModule.flowBack(params).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('退回成功')\r\n          this.queryTableDatas()\r\n          this.queryTableDatasCount()\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    allBack() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length < 1) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      let declareCodes = []\r\n      selection.forEach(item => {\r\n        declareCodes.push(item.declareCode)\r\n      })\r\n      const params = {\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        declareCodes: declareCodes,\r\n        menuName: this.$store.state.curNavModule.name\r\n      }\r\n      HttpModule.allBack(params).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('退回录入岗成功')\r\n          this.queryTableDatas()\r\n          this.queryTableDatasCount()\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    queryTableDatasCount() {\r\n      const params = {\r\n        menuId: this.$store.state.curNavModule.guid\r\n      }\r\n      HttpModule.queryTableDatasCount(params).then(res => {\r\n        if (res.code === '000000') {\r\n          this.tabStatusNumConfig['1'] = res.data.waitFlowCount\r\n          this.tabStatusNumConfig['2'] = res.data.alreadyFlowCount\r\n          this.tabStatusNumConfig['3'] = res.data.allFlowCount\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    // 查询 table 数据\r\n    queryTableDatas() {\r\n      const param = {\r\n        page: this.mainPagerConfig.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig.pageSize, // 每页条数\r\n        declareName: this.declareName,\r\n        agencyCodes: [],\r\n        manageMofCodes: [],\r\n        mofDivCodes: this.mofDivCodes,\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        flowStatus: this.toolBarStatusSelect.curValue\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.queryTableDatas(param).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.tableData = res.data.results\r\n          this.mainPagerConfig.total = res.data.totalCount\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    // 操作日志\r\n    queryActionLog(row) {\r\n      const param = {\r\n        menuId: this.$store.state.curNavModule.guid,\r\n        menuName: this.$store.state.curNavModule.name,\r\n        declareCode: row.declareCode\r\n      }\r\n      HttpModule.queryActionLog(param).then(res => {\r\n        this.logData = res.data\r\n        console.log(this.logData)\r\n        this.showLogView = true\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    // this.params5 = commonFn.transJson(this.$store.state.curNavModule.param5)\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    // this.getLeftTreeData()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.radio-right{\r\nfloat: right;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}