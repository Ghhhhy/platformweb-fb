{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\bgtDataQuery\\bgtDataQuery.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\bgtDataQuery\\bgtDataQuery.vue","mtime":1695716045272},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["HTTPModule","proconf","loadBsConfig","mixins","data","axiosFeild","codeField","successCode","queryConfigId","isShowDetails","scrollY","mode","gt","isLoadingShow","leftTreeVisible","tabStatusBtnConfig","changeBtns","buttons","tabStatusBtnConfigButtons","curButton","type","iconName","iconUrl","label","code","curValue","buttonsInfo","tabStatusBtnConfigButtonsInfo","methods","bsToolbarClickEvent","onStatusTabClick","tabStatusNumConfig","isShowQueryConditions","queryFormItemConfig","queryFormData","treeConfig","curRadio","radioGroup","treeData","treeQueryparams","elementCode","treeGlobalConfig","treeInputVal","tableLoading","tableFooterConfig","totalObj","amount","pay_amt","clear_amt","plan_amt","combinedType","showFooter","amtDetailTableFooterConfig","tableColumnsConfig","tableData","tableConfig","globalConfig","checkType","seq","renderers","$gloableOptionRow","gloableOptionRow","$editRadio","editRadio","$editLevel","editLevel","$editCodeCheckbox","editCodeCheckbox","$editCheckbox","editCheckbox","$order","order","tablePagerConfig","total","currentPage","pageSize","amtDetailTablePagerConfig","tableToolbarConfig","moneyConversion","search","import","export","print","zoom","custom","slots","tools","treeTableConfig","expandAll","dblExpandAll","dblExpand","accordion","amtDetailQueryParams","ids","pageNum","amtDetailType","amountQueryId","payAmtQueryId","planAmtQueryId","clearAmtQueryId","menuName","tableTreeConfig","transform","expandRowKeys","settingModal","amtDetailModal","amtDetailTableLoading","amtDetailTableColumnsConfig","amtDetailTableColumnsConfigAmount","amtDetailTableColumnsConfigPay","amtDetailTableColumnsConfigPlan","amtDetailTableColumnsConfigClear","amtDetailTableData","toolBarStatusSelect","settingTableData","settingTableLoading","settingTableColumnsConfig","isColumnVisible","settingTableConfig","sortable","rowDrop","settingTableGlobalConfig","dragColumnsConfig","cacheStatus","openDrag","amtDetailTableConfig","isNew","btnLoading","modalName","tempSaveShow","treeTemplate","treeTemplateSel","temOption","temQueryparams","menuId","$store","state","curNavModule","guid","templateModal","templateTableLoading","templateTableConfig","templateTableColumnsConfig","templateTableData","temActionParams","templateName","colFieldList","currentParams","treeKey","currentTreeCode","cellClick","obj","context","e","key","column","property","getAmtDetailData","row","bgtIds","findBgtIds","queryAmtDetailData","_this","newArr","children","length","forEach","item","push","apply","_toConsumableArray","_this2","method","then","res","resData","rows","i","toLowerCase","amtDetailAjaxData","_ref","params","Object","assign","loadConfig","id","_this3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","configData","_configData","_configData2","_configData3","configQueryData","wrap","_callee$","_context","prev","next","abrupt","tableId","fiscalyear","getters","getuserInfo","year","mof_div_code","province","menuguid","sent","console","log","itemsConfig","stop","getFormTable","templateManage","_this4","self","getGrabTemplateList","$message","error","result","catch","handleTemplateUse","selection","$refs","templateTableRef","xGrid","getSelectRecords","warning","setTemplateData","cancelDialogCloseTemplate","setDefalutTemplate","_this5","template_name","setDefaultGrabTemplate","success","deleteTemplate","_this6","removeGrabTemplate","getTemplateData","saveTemplate","handleTrue","handleSave","handleFalse","eventType","_this7","saveParam","condition","fields","sumAmt","field","title","sortValue","checked","settingTableRef","getTableData","fullData","items","map","name","saveGrabTemplate","handleCloseTemplate","reset","_this8","level","totalLevel","showCode","setTimeout","setCheckboxRow","filter","dropdownmethod","value","_this9","JSON","parse","find","object","Array","cellStyle","_ref2","background","border","findObjByKeyValue","arr","recursive","every","undefined","findObj","_this10","dataQueryPageInfo","rscode","reduce","Number","payAmtSum","planAmtSum","clearAmtSum","getSearchDataListFn","searchFormConfig","searchDataObj","isArray","_item$itemRender","_item$itemRender2","itemRender","handleSureSetting","currentTbl","selectionData","canUse","tableName","transJson","param5","mainTblColumns","index","isDataQuery","width","align","treeNode","cellRender","options","defaultValue","props","cancelDialogClose","message","duration","bgtDataQuery","window","localStorage","removeItem","setItem","stringify","getConditionList","_this$queryFormItemCo","trasToTree","pay_app_amt","pid","onToolbarBtnClick","_ref3","_this11","table","onOptionRowClick","_ref4","optionType","handleToTop","rowIndex","handleToBottom","temp","treeClickMethod","treeOnConfirmData","curTree","leftTree","refreshTree","treeOnAsideChange","treeOnChangeInput","val","filterText","onQueryConditionsClick","isOpen","handleSearch","_this$queryFormItemCo2","_loop","trim","split","islike","liketype","handleSettingModal","initSettingTableData","operationToolbarButtonClickEvent","handleExpandTree","handleCloseTree","mainTableRef","setAllTreeExpand","clearTreeExpand","getInitTemplate","_this12","initTemplate","_this13","col","activated","created","mounted","_this14","getItem","formDataBak"],"sources":["src/views/main/bgtDataQuery/bgtDataQuery.vue"],"sourcesContent":["<!-- 预算执行报表-指标数据查询 -->\r\n<template>\r\n  <div v-loading=\"isLoadingShow\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template #topTap></template>\r\n      <template #topTabPane>\r\n        <BsTabPanel\r\n          show-zero\r\n          is-open\r\n          :tab-status-btn-config=\"tabStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <template #query>\r\n        <div v-if=\"isShowQueryConditions\" ref=\"BsQueryRef\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryFormItemConfig\"\r\n            :query-form-data=\"queryFormData\"\r\n            @onSearchClick=\"handleSearch\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <template #mainTree>\r\n        <BsTreeSet\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeConfig\"\r\n          class=\"content\"\r\n          @onChangeInput=\"treeOnChangeInput\"\r\n          @onAsideChange=\"treeOnAsideChange\"\r\n          @onConfrimData=\"treeOnConfirmData\"\r\n        />\r\n        <BsBossTree\r\n          ref=\"leftTree\"\r\n          :key=\"treeKey\"\r\n          open-loading\r\n          :defaultexpandedkeys=\"['0']\"\r\n          :is-server=\"false\"\r\n          :ajax-type=\"'get'\"\r\n          :server-uri=\"'large-monitor-platform/lmp/elementQuery/lefttree'\"\r\n          :datas=\"treeData\"\r\n          :queryparams=\"treeQueryparams\"\r\n          :global-config=\"treeGlobalConfig\"\r\n          :clickmethod=\"treeClickMethod\"\r\n        />\r\n      </template>\r\n      <template #mainForm>\r\n        <!-- :row-config=\"{ keyField: 'id' }\" -->\r\n        <!-- :pager-config=\"tablePagerConfig\" -->\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          v-loading=\"tableLoading\"\r\n          :high-config=\"scrollY\"\r\n          :row-id=\"'id'\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"false\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          :tree-config=\"treeTableConfig\"\r\n          :cell-style=\"cellStyle\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template slot=\"toolbarSlots\">\r\n            <div class=\"table-toolbar-left\">\r\n              <!-- <div\r\n                v-if=\"leftTreeVisible === false\"\r\n                class=\"table-toolbar-contro-leftvisible\"\r\n                @click=\"leftTreeVisible = true\"\r\n              ></div> -->\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <vxe-modal\r\n      v-model=\"settingModal\"\r\n      :title=\"'设置条件'\"\r\n      width=\"1000px\"\r\n      height=\"621px\"\r\n      :show-footer=\"true\"\r\n      transfer\r\n      @close=\"cancelDialogClose\"\r\n    >\r\n      <div style=\"overflow: hidden\">\r\n        <div class=\"tag-button-form\">\r\n          <el-row type=\"flex\" :gutter=\"10\">\r\n            <el-col :span=\"1.5\" style=\"padding: 6px 0 0 5px\">\r\n              <b>选择模板</b>\r\n            </el-col>\r\n            <el-col :span=\"3.5\" style=\"margin-left: 10px\">\r\n              <vxe-select v-model=\"treeTemplateSel\" placeholder=\"请选择模板\" :options=\"temOption\" clearable @change=\"dropdownmethod\" />\r\n            </el-col>\r\n            <el-col :span=\"12\" style=\"padding-top: 3px\">\r\n              <vxe-button\r\n                style=\"margin-left: 12px\"\r\n                size=\"mini\"\r\n                status=\"primary\"\r\n                @click=\"templateManage\"\r\n              >\r\n                模板管理\r\n              </vxe-button>\r\n              <vxe-button\r\n                size=\"mini\"\r\n                status=\"primary\"\r\n                @click=\"reset\"\r\n              >\r\n                恢复默认\r\n              </vxe-button>\r\n              <el-popover\r\n                v-model=\"tempSaveShow\"\r\n                placement=\"bottom\"\r\n                width=\"400\"\r\n                trigger=\"manual\"\r\n              >\r\n                <div v-if=\"tempSaveShow\">\r\n                  <vxe-form v-if=\"isNew\">\r\n                    <vxe-form-item title=\"模板名称：\" field=\"name\">\r\n                      <template v-slot>\r\n                        <vxe-input\r\n                          v-model=\"modalName\"\r\n                          style=\"width: 100%\"\r\n                          placeholder=\"请输入模板名称\"\r\n                          clearable\r\n                        />\r\n                      </template>\r\n                    </vxe-form-item>\r\n                    <vxe-form-item style=\"float: right\">\r\n                      <template v-slot>\r\n                        <vxe-button status=\"primary\" size=\"mini\" :loading=\"btnLoading\" @click=\"handleSave('save')\">确定</vxe-button>\r\n                        <vxe-button size=\"mini\" @click=\"handleCloseTemplate\">取消</vxe-button>\r\n                      </template>\r\n                    </vxe-form-item>\r\n                  </vxe-form>\r\n                  <vxe-form v-else>\r\n                    <vxe-form-item>\r\n                      <template v-slot>\r\n                        <i class=\"el-icon-warning\" style=\"color:red\"></i>\r\n                        <span>是否覆盖当前模板[{{ modalName }}]？</span>\r\n                      </template>\r\n                    </vxe-form-item>\r\n                    <vxe-form-item style=\"float: right\">\r\n                      <template v-slot>\r\n                        <vxe-button size=\"mini\" :loading=\"btnLoading\" @click=\"handleTrue\">是</vxe-button>\r\n                        <vxe-button status=\"primary\" size=\"mini\" @click=\"handleFalse\">否</vxe-button>\r\n                      </template>\r\n                    </vxe-form-item>\r\n                  </vxe-form>\r\n                </div>\r\n                <vxe-button\r\n                  slot=\"reference\"\r\n                  style=\"margin-left: 12px\"\r\n                  size=\"mini\"\r\n                  status=\"primary\"\r\n                  @click=\"saveTemplate\"\r\n                >\r\n                  条件保存为模板\r\n                </vxe-button>\r\n              </el-popover>\r\n              <vxe-checkbox v-model=\"isShowDetails\" style=\"margin-left: 10px;\" content=\"只展示明细\" />\r\n              <!-- <vxe-button\r\n                style=\"margin-left: 12px\"\r\n                round\r\n                size=\"mini\"\r\n                status=\"my-blue\"\r\n                icon=\"el-icon-s-check\"\r\n                @click=\"templateAuthorize\"\r\n              >\r\n                模板授权\r\n              </vxe-button> -->\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n        <div style=\"height: 461px;margin-top: 10px\">\r\n          <BsTable\r\n            ref=\"settingTableRef\"\r\n            v-loading=\"settingTableLoading\"\r\n            class=\"settingtable\"\r\n            height=\"99%\"\r\n            :table-config=\"settingTableConfig\"\r\n            :table-global-config=\"settingTableGlobalConfig\"\r\n            :footer-config=\"{ showFooter: false }\"\r\n            :table-columns-config=\"settingTableColumnsConfig\"\r\n            :table-data=\"settingTableData\"\r\n            :toolbar-config=\"false\"\r\n            :pager-config=\"false\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <template slot=\"footer\">\r\n        <vxe-button size=\"medium\" @click=\"cancelDialogClose\">取消</vxe-button>\r\n        <vxe-button\r\n          size=\"medium\"\r\n          status=\"primary\"\r\n          @click=\"handleSureSetting\"\r\n        >确定</vxe-button>\r\n      </template>\r\n    </vxe-modal>\r\n    <vxe-modal\r\n      v-model=\"amtDetailModal\"\r\n      v-loading=\"amtDetailTableLoading\"\r\n      :title=\"'金额明细'\"\r\n      width=\"80%\"\r\n      height=\"60%\"\r\n      :show-footer=\"false\"\r\n      transfer\r\n      @close=\"cancelDialogClose\"\r\n    >\r\n      <div style=\"height: 99%\">\r\n        <BsTable\r\n          ref=\"amtDetailTableRef\"\r\n          height=\"99%\"\r\n          :table-config=\"amtDetailTableConfig\"\r\n          :footer-config=\"amtDetailTableFooterConfig\"\r\n          :table-columns-config=\"amtDetailTableColumnsConfig\"\r\n          :table-data=\"amtDetailTableData\"\r\n          :toolbar-config=\"false\"\r\n          :pager-config=\"amtDetailTablePagerConfig\"\r\n          @ajaxData=\"amtDetailAjaxData\"\r\n        />\r\n      </div>\r\n    </vxe-modal>\r\n    <vxe-modal\r\n      v-model=\"templateModal\"\r\n      :title=\"'模板列表'\"\r\n      width=\"40%\"\r\n      height=\"70%\"\r\n      :show-footer=\"false\"\r\n      transfer\r\n      @close=\"cancelDialogCloseTemplate\"\r\n    >\r\n      <div class=\"buttons\">\r\n        <el-button type=\"primary\" @click=\"handleTemplateUse\">模板调用</el-button>\r\n        <el-button @click=\"setDefalutTemplate\">设为默认</el-button>\r\n        <el-button @click=\"deleteTemplate\">删除</el-button>\r\n        <el-button @click=\"cancelDialogCloseTemplate\">取消</el-button>\r\n      </div>\r\n      <div style=\"height: 85%\">\r\n        <BsTable\r\n          ref=\"templateTableRef\"\r\n          v-loading=\"templateTableLoading\"\r\n          :table-config=\"templateTableConfig\"\r\n          :footer-config=\"false\"\r\n          :table-columns-config=\"templateTableColumnsConfig\"\r\n          :table-data=\"templateTableData\"\r\n          :toolbar-config=\"false\"\r\n          :pager-config=\"false\"\r\n        />\r\n      </div>\r\n    </vxe-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport HTTPModule from '@/api/frame/main/baseConfigManage/customQueryService.js'\r\nimport { proconf } from './js/bgtDataQuery.js'\r\nimport loadBsConfig from '@/views/main/dynamicTableSetting/config'\r\n// import { mockTableData } from './mockData'\r\nexport default {\r\n  mixins: [loadBsConfig],\r\n  data() {\r\n    return {\r\n      axiosFeild: {\r\n        codeField: 'rscode',\r\n        successCode: 200\r\n      },\r\n      // queryConfigId: '1B7EAFCAC74B49938E59A647BB96A6A5',\r\n      queryConfigId: 'CBEE20182D8F42C184FDB1DB2ADDD21A',\r\n      isShowDetails: false,\r\n      scrollY: {\r\n        scrollY: {\r\n          mode: 'wheel',\r\n          gt: 25\r\n        }\r\n      },\r\n      isLoadingShow: false,\r\n      leftTreeVisible: false,\r\n      tabStatusBtnConfig: {\r\n        changeBtns: true, // tab页右边的按钮是否会根据页签的不同而改变\r\n        buttons: proconf.tabStatusBtnConfigButtons,\r\n        curButton: {\r\n          type: 'button',\r\n          iconName: 'base-daiban.png',\r\n          iconUrl: '',\r\n          label: '',\r\n          code: '0',\r\n          curValue: '0'\r\n        },\r\n        buttonsInfo: proconf.tabStatusBtnConfigButtonsInfo,\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        }\r\n      },\r\n      tabStatusNumConfig: { '-1': 0, 0: 0, 1: 0, 2: 0 },\r\n      isShowQueryConditions: true,\r\n      queryFormItemConfig: [],\r\n      queryFormData: {},\r\n      // queryFormData: proconf.queryFormData,\r\n      treeConfig: {\r\n        // 左侧树类型\r\n        // curRadio: 'AGENCY',\r\n        curRadio: '',\r\n        radioGroup: [\r\n          /* {\r\n            code: 'AGENCY',\r\n            label: '预算单位AT PAGE'\r\n          },\r\n          {\r\n            code: 'EXP_FUNC',\r\n            label: '功能分类AT PAGE'\r\n          },\r\n          {\r\n            code: 'dep_bgt_eco',\r\n            label: '预算支出分类科目AT PAGE'\r\n          } */\r\n        ]\r\n      },\r\n      treeData: [],\r\n      treeQueryparams: { elementCode: 'AGENCY' },\r\n      treeGlobalConfig: {\r\n        treeInputVal: ''\r\n      },\r\n      tableLoading: false,\r\n      tableFooterConfig: {\r\n        totalObj: {\r\n          amount: 0,\r\n          pay_amt: 0,\r\n          clear_amt: 0,\r\n          plan_amt: 0\r\n        },\r\n        combinedType: ['switchTotal'],\r\n        showFooter: true\r\n      },\r\n      amtDetailTableFooterConfig: {\r\n        combinedType: ['switchTotal'],\r\n        showFooter: true\r\n      },\r\n      tableColumnsConfig: [],\r\n      // tableColumnsConfig: proconf.tableColumnsConfig,\r\n      tableData: [],\r\n      tableConfig: {\r\n        globalConfig: {\r\n          checkType: false, // checkbox\r\n          seq: true // 序号列\r\n        },\r\n        renderers: {\r\n          // 编辑 附件 操作日志\r\n          $gloableOptionRow: proconf.gloableOptionRow,\r\n          $editRadio: proconf.editRadio,\r\n          $editLevel: proconf.editLevel,\r\n          $editCodeCheckbox: proconf.editCodeCheckbox,\r\n          $editCheckbox: proconf.editCheckbox,\r\n          $order: proconf.order\r\n        }\r\n        /* methods: {\r\n          onOptionRowClick: this.onOptionRowClick\r\n        } */\r\n      },\r\n      tablePagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 100000000\r\n      },\r\n      amtDetailTablePagerConfig: {\r\n        total: 0,\r\n        pageSize: 20,\r\n        currentPage: 1\r\n      },\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        moneyConversion: true, // 是否有金额转换\r\n        search: false, // 是否有search\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: true, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      treeTableConfig: {\r\n        expandAll: false,\r\n        dblExpandAll: true,\r\n        dblExpand: true,\r\n        accordion: false\r\n      },\r\n      amtDetailQueryParams: {\r\n        ids: [],\r\n        pageNum: 1,\r\n        pageSize: 20\r\n      },\r\n      amtDetailType: '1',\r\n      amountQueryId: 'C9C2B60A6F26475084EB3576435B7A89', // '6ACA4D6BC4264EDC8523044897FAFF31',\r\n      payAmtQueryId: 'F28B5451E7B84E6E87C2DA920FC9F74E', // '686A3B189F5A49028DC9ADF91CC2CC94',\r\n      planAmtQueryId: 'AAA5B9C66A5B478C875E6E900F743AD9', // '742827FA532A4FEBA351A118D8DFAA82',\r\n      clearAmtQueryId: '7B9C09F1DCCD464CB8FDBBDEB413E36C', // '851AED1ED08F47F49040A50BDD7E5934',\r\n      menuName: '指标数据查询',\r\n      tableTreeConfig: {\r\n        transform: true,\r\n        expandRowKeys: [24300]\r\n      },\r\n      settingModal: false,\r\n      amtDetailModal: false,\r\n      amtDetailTableLoading: false,\r\n      amtDetailTableColumnsConfig: [],\r\n      amtDetailTableColumnsConfigAmount: [],\r\n      amtDetailTableColumnsConfigPay: [],\r\n      amtDetailTableColumnsConfigPlan: [],\r\n      amtDetailTableColumnsConfigClear: [],\r\n      amtDetailTableData: [],\r\n      toolBarStatusSelect: {},\r\n      settingTableData: [],\r\n      settingTableLoading: false,\r\n      settingTableColumnsConfig: proconf.settingTableColumnsConfig,\r\n      isColumnVisible: 1,\r\n      settingTableConfig: {\r\n        globalConfig: {\r\n          sortable: false,\r\n          rowDrop: true,\r\n          checkType: 'checkbox'\r\n        }\r\n      },\r\n      settingTableGlobalConfig: {\r\n        rowDrop: true, // 行拖拽\r\n        dragColumnsConfig: {\r\n          cacheStatus: false, // 是否开启缓存\r\n          openDrag: true // 是否开启拖拽排序\r\n        }\r\n      },\r\n      amtDetailTableConfig: {\r\n        globalConfig: {\r\n          checkType: 'checkbox'\r\n        }\r\n      },\r\n      isNew: true,\r\n      btnLoading: false,\r\n      modalName: '',\r\n      tempSaveShow: false,\r\n      treeTemplate: null,\r\n      treeTemplateSel: null,\r\n      temOption: [],\r\n      temQueryparams: {\r\n        menuId: this.$store.state.curNavModule.guid || 'Home'\r\n      },\r\n      templateModal: false,\r\n      templateTableLoading: false,\r\n      templateTableConfig: {\r\n        globalConfig: {\r\n          checkType: 'checkbox'\r\n        }\r\n      },\r\n      templateTableColumnsConfig: proconf.templateTableColumnsConfig,\r\n      templateTableData: [],\r\n      temActionParams: {\r\n        menuId: 'Home',\r\n        templateName: ''\r\n      },\r\n      colFieldList: [],\r\n      currentParams: {},\r\n      treeKey: 1,\r\n      currentTreeCode: 'agency'\r\n    }\r\n  },\r\n  methods: {\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      switch (key) {\r\n        case 'amount':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigAmount\r\n          this.amtDetailType = '1'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n        case 'pay_amt':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigPay\r\n          this.amtDetailType = '2'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n        case 'plan_amt':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigPlan\r\n          this.amtDetailType = '4'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n        case 'clear_amt':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigClear\r\n          this.amtDetailType = '3'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n      }\r\n    },\r\n    getAmtDetailData(row) {\r\n      // 组装请求参数\r\n      var bgtIds = this.findBgtIds(row)\r\n      this.amtDetailQueryParams.ids = bgtIds\r\n      this.queryAmtDetailData()\r\n      this.amtDetailModal = true\r\n    },\r\n    findBgtIds(row) {\r\n      var newArr = []\r\n      if (row.children && row.children.length) {\r\n        row.children.forEach(item => {\r\n          newArr.push(...this.findBgtIds(item))\r\n        })\r\n      } else {\r\n        if (row.bgtIds) {\r\n          newArr.push(...row.bgtIds)\r\n        }\r\n      }\r\n      return newArr\r\n    },\r\n    queryAmtDetailData() {\r\n      this.amtDetailTableLoading = true\r\n      this.amtDetailTableData = []\r\n      let method = ''\r\n      if (this.amtDetailType === '1') {\r\n        method = 'grobBgtAmtDetail'\r\n      } else if (this.amtDetailType === '2') {\r\n        method = 'grobPayAmtDetail'\r\n      } else if (this.amtDetailType === '3') {\r\n        method = 'grobClearAmtDetail'\r\n      } else if (this.amtDetailType === '4') {\r\n        method = 'grobPlanAmtDetail'\r\n      }\r\n      HTTPModule[method](this.amtDetailQueryParams).then(res => {\r\n        this.amtDetailTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          let resData = res.data.rows\r\n          resData.forEach(item => {\r\n            for (let i in item) {\r\n              item[i.toLowerCase()] = item[i]\r\n            }\r\n          })\r\n          this.amtDetailTableData = resData\r\n          this.amtDetailTablePagerConfig.total = res.data.total\r\n        }\r\n      })\r\n    },\r\n    amtDetailAjaxData({ params, currentPage, pageSize }) {\r\n      this.amtDetailQueryParams = Object.assign(this.amtDetailQueryParams, {\r\n        pageNum: currentPage,\r\n        pageSize: pageSize\r\n      })\r\n      this.queryAmtDetailData()\r\n    },\r\n    async loadConfig(id) {\r\n      if (!id) return\r\n      let params = {\r\n        tableId: {\r\n          id: id,\r\n          fiscalyear: this.$store.getters.getuserInfo.year,\r\n          mof_div_code: this.$store.getters.getuserInfo.province,\r\n          menuguid: this.$store.state.curNavModule.guid\r\n        }\r\n      }\r\n      if (id === this.amountQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        console.log('initQuery', configData)\r\n        this.amtDetailTableColumnsConfigAmount = configData.itemsConfig\r\n      }\r\n      if (id === this.payAmtQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        this.amtDetailTableColumnsConfigPay = configData.itemsConfig\r\n      }\r\n      if (id === this.planAmtQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        this.amtDetailTableColumnsConfigPlan = configData.itemsConfig\r\n      }\r\n      if (id === this.clearAmtQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        this.amtDetailTableColumnsConfigClear = configData.itemsConfig\r\n      }\r\n      if (id === this.queryConfigId) {\r\n        params.tableId.id = id\r\n        let configQueryData = await this.loadBsConfig(params)\r\n        this.queryFormItemConfig = configQueryData.itemsConfig\r\n      }\r\n    },\r\n    getFormTable() {\r\n      this.loadConfig(this.queryConfigId)\r\n      this.loadConfig(this.amountQueryId)\r\n      this.loadConfig(this.payAmtQueryId)\r\n      this.loadConfig(this.planAmtQueryId)\r\n      this.loadConfig(this.clearAmtQueryId)\r\n    },\r\n    templateManage() {\r\n      let self = this\r\n      self.templateTableLoading = true\r\n      HTTPModule.getGrabTemplateList(this.temQueryparams).then(res => {\r\n        self.templateTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          self.templateTableData = res.data\r\n        } else {\r\n          self.$message.error(res.result)\r\n        }\r\n      }).catch(() => {\r\n        self.templateTableLoading = false\r\n      })\r\n      this.templateModal = true\r\n    },\r\n    handleTemplateUse() {\r\n      let selection = this.$refs.templateTableRef.$refs.xGrid.getSelectRecords()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择有且仅有一个模版!')\r\n        return\r\n      }\r\n      this.treeTemplate = selection[0]\r\n      this.setTemplateData()\r\n      this.cancelDialogCloseTemplate()\r\n    },\r\n    setDefalutTemplate() {\r\n      let selection = this.$refs.templateTableRef.$refs.xGrid.getSelectRecords()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择有且仅有一个模版!')\r\n        return\r\n      }\r\n      this.temActionParams.menuId = this.$store.state.curNavModule.guid || 'Home'\r\n      this.temActionParams.templateName = selection[0].template_name\r\n      this.templateTableLoading = true\r\n      HTTPModule.setDefaultGrabTemplate(this.temActionParams).then(res => {\r\n        this.templateTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          this.$message.success('设置成功！')\r\n          this.cancelDialogCloseTemplate()\r\n        } else {\r\n          this.$message.error('设置失败！' + res.result)\r\n        }\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    deleteTemplate() {\r\n      let selection = this.$refs.templateTableRef.$refs.xGrid.getSelectRecords()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择有且仅有一个模版!')\r\n        return\r\n      }\r\n      this.temActionParams.menuId = this.$store.state.curNavModule.guid || 'Home'\r\n      this.temActionParams.templateName = selection[0].template_name\r\n      this.templateTableLoading = true\r\n      HTTPModule.removeGrabTemplate(this.temActionParams).then(res => {\r\n        this.templateTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          this.$message.success('删除成功！')\r\n          this.getTemplateData()\r\n          this.cancelDialogCloseTemplate()\r\n        } else {\r\n          this.$message.error('删除失败！' + res.result)\r\n        }\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    saveTemplate() {\r\n      this.isNew = this.treeTemplate === null || !this.treeTemplate.template_name\r\n      this.tempSaveShow = true\r\n    },\r\n    handleTrue() {\r\n      this.handleSave('modify')\r\n    },\r\n    handleFalse() {\r\n      this.isNew = true\r\n      this.modalName = ''\r\n    },\r\n    handleSave(eventType) {\r\n      let self = this\r\n      if (self.modalName === '') {\r\n        self.$message.warning('请填写模板名称！')\r\n        return\r\n      }\r\n      if (self.modalName.length > 20) {\r\n        self.$message.warning('模板名称请小于20字！')\r\n        return\r\n      }\r\n      let saveParam = {\r\n        type: eventType,\r\n        menuId: self.$store.state.curNavModule.guid,\r\n        templateName: self.modalName,\r\n        condition: [],\r\n        fields: [],\r\n        sumAmt: [\r\n          {\r\n            field: 'amount',\r\n            type: '1',\r\n            title: '指标金额',\r\n            sortValue: null,\r\n            checked: false\r\n          },\r\n          {\r\n            field: 'pay_amt',\r\n            type: '2',\r\n            title: '已支付金额',\r\n            sortValue: null,\r\n            checked: false\r\n          },\r\n          {\r\n            field: 'clear_amt',\r\n            type: '3',\r\n            title: '已清算金额',\r\n            sortValue: null,\r\n            checked: false\r\n          },\r\n          {\r\n            field: 'plan_amt',\r\n            type: '4',\r\n            title: '计划金额',\r\n            sortValue: null,\r\n            checked: false\r\n          }\r\n        ]\r\n      }\r\n      let fields = self.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n      this.$refs.settingTableRef.$refs.xGrid.getSelectRecords().forEach(item => {\r\n        fields.forEach(items => {\r\n          if (item.code === items.code) {\r\n            items.checked = true\r\n          }\r\n        })\r\n      })\r\n      saveParam.fields = fields\r\n      saveParam.condition = fields.map(item => {\r\n        return {\r\n          name: item.name,\r\n          title: item.title,\r\n          checked: item.checked\r\n        }\r\n      })\r\n      self.btnLoading = true\r\n      HTTPModule.saveGrabTemplate(saveParam).then((res) => {\r\n        self.btnLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          self.$message.success('保存成功')\r\n          this.handleCloseTemplate()\r\n          this.getTemplateData()\r\n        } else {\r\n          self.$message.error('保存失败：' + res.result)\r\n          self.btnLoading = false\r\n        }\r\n      }).catch(() => {\r\n        self.$message.error('保存失败')\r\n        self.btnLoading = false\r\n      })\r\n    },\r\n    handleCloseTemplate() {\r\n      this.modalName = ''\r\n      this.tempSaveShow = false\r\n    },\r\n    reset() {\r\n      this.settingTableData = this.colFieldList.map((item) => {\r\n        return {\r\n          name: item.name.toLowerCase(),\r\n          code: item.name.toLowerCase(),\r\n          title: item.title,\r\n          type: item.type === null ? '0' : item.type + '',\r\n          level: item.level + '',\r\n          totalLevel: item.level + '',\r\n          checked: item.checked,\r\n          showCode: item.showCode\r\n        }\r\n      })\r\n      setTimeout(() => {\r\n        this.$refs.settingTableRef.$refs.xGrid.setCheckboxRow(this.settingTableData.filter(item => item.checked), true)\r\n      }, 100)\r\n      this.treeTemplate = null\r\n      this.treeTemplateSel = null\r\n      this.modalName = ''\r\n    },\r\n    dropdownmethod(data) {\r\n      this.treeTemplate = data.value\r\n      this.modalName = this.treeTemplate.template_name\r\n      this.setTemplateData()\r\n    },\r\n    setTemplateData() {\r\n      if (this.treeTemplate.fields !== null && this.treeTemplate.fields !== '') {\r\n        let fields = JSON.parse(this.treeTemplate.fields)\r\n        this.settingTableData = fields.map((item) => {\r\n          if (item.level > 3) {\r\n            item.level = 6\r\n          }\r\n          return {\r\n            name: item.name,\r\n            code: item.name,\r\n            title: item.title,\r\n            type: item.type === null ? '0' : item.type + '',\r\n            level: item.level + '',\r\n            totalLevel: this.colFieldList.find(object => object.name === item.name).totalLevel,\r\n            checked: item.checked,\r\n            showCode: item.showCode\r\n          }\r\n        })\r\n        setTimeout(() => {\r\n          this.$refs.settingTableRef.$refs.xGrid.setCheckboxRow(this.settingTableData.filter(item => item.checked), true)\r\n        }, 100)\r\n      }\r\n    },\r\n    getTemplateData() {\r\n      let self = this\r\n      HTTPModule.getGrabTemplateList(this.temQueryparams).then(res => {\r\n        if (res.data instanceof Array) {\r\n          if (res.data.length > 0) {\r\n            self.temOption = res.data.map(item => {\r\n              return {\r\n                label: item.template_name,\r\n                value: item\r\n              }\r\n            })\r\n          }\r\n          if (res.data.length === 0) {\r\n            self.temOption = []\r\n          }\r\n        }\r\n      })\r\n    },\r\n    cellStyle ({ level }) {\r\n      if (level === 0) {\r\n        return {\r\n          background: '#cbe2fe !important',\r\n          border: '1px solid #e8eaec !important'\r\n        }\r\n      } else {\r\n        return {\r\n          background: '#e3f2fe !important',\r\n          border: '1px solid #e8eaec !important'\r\n        }\r\n      }\r\n    },\r\n    findObjByKeyValue(arr) {\r\n      function recursive(data) {\r\n        data.every((item) => {\r\n          if (item.bgtIds !== undefined) {\r\n            findObj = item.bgtIds\r\n            return false\r\n          }\r\n          if (item.children && item.children.length) {\r\n            recursive(item.children)\r\n          }\r\n          return true\r\n        })\r\n      }\r\n      let findObj = null\r\n      recursive(arr)\r\n      return findObj\r\n    },\r\n    getTableData(params) {\r\n      this.isLoadingShow = true\r\n      this.currentParams = params || {}\r\n      params.type = this.isShowDetails ? '1' : '0'\r\n      HTTPModule.dataQueryPageInfo(params).then((res) => {\r\n        // res = mockTableData\r\n        // console.log(333, mockTableData)\r\n        if (res.rscode === 200) {\r\n          this.isLoadingShow = false\r\n          this.tableData = res.data\r\n          this.tablePagerConfig.total = res.data.length\r\n          if (res.data.length > 0) {\r\n            this.tableFooterConfig.totalObj.amount = res.data.reduce((amount, item) => amount + Number(item.amount), 0)\r\n            this.tableFooterConfig.totalObj.pay_amt = res.data.reduce((payAmtSum, item) => payAmtSum + Number(item.pay_amt), 0)\r\n            this.tableFooterConfig.totalObj.plan_amt = res.data.reduce((planAmtSum, item) => planAmtSum + Number(item.plan_amt), 0)\r\n            this.tableFooterConfig.totalObj.clear_amt = res.data.reduce((clearAmtSum, item) => clearAmtSum + Number(item.clear_amt), 0)\r\n          }\r\n        } else {\r\n          this.isLoadingShow = false\r\n          this.$message.error(res.result)\r\n        }\r\n      }).catch(() => {\r\n        this.isLoadingShow = false\r\n      })\r\n    },\r\n    getSearchDataListFn(searchFormConfig) {\r\n      let searchDataObj = {}\r\n      if (Array.isArray(searchFormConfig) && searchFormConfig.length) {\r\n        searchFormConfig.forEach(item => {\r\n          if (item.itemRender?.name === '$formTreeInput' || item.itemRender?.name === '$vxeTree') {\r\n            if (item.field) {\r\n              searchDataObj[item.field + 'code'] = []\r\n            }\r\n          } else {\r\n            if (item.field) {\r\n              searchDataObj[item.field] = []\r\n            }\r\n          }\r\n        })\r\n      }\r\n      return searchDataObj\r\n    },\r\n    handleSureSetting() {\r\n      let currentTbl = this.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n      let selectionData = this.$refs.settingTableRef.$refs.xGrid.getSelectRecords()\r\n      let fields = []\r\n      let canUse = []\r\n      selectionData.forEach((item) => {\r\n        fields.push({\r\n          name: item.name,\r\n          type: item.type,\r\n          level: item.level,\r\n          showCode: item.showCode\r\n        })\r\n      })\r\n      currentTbl.forEach((item) => {\r\n        if (item.type !== '0' && item.checked) {\r\n          canUse.push({\r\n            name: item.title,\r\n            code: item.code\r\n          })\r\n        }\r\n      })\r\n      this.queryFormData = this.getSearchDataListFn(this.queryFormItemConfig)\r\n      this.tableColumnsConfig = []\r\n      this.tableData = []\r\n      if (fields.length > 0) {\r\n        let params = {\r\n          tableName: this.transJson(this.$store.state.curNavModule.param5).tableName || 'vw_data_query_bgt',\r\n          condition: {},\r\n          fields,\r\n          sumAmt: ['amount', 'pay_amt', 'plan_amt', 'clear_amt']\r\n        }\r\n        this.getTableData(params)\r\n        let mainTblColumns = []\r\n        selectionData.forEach((item, index) => {\r\n          if (index === 0) {\r\n            mainTblColumns.push({\r\n              title: item.title,\r\n              isDataQuery: true,\r\n              field: item.code,\r\n              width: 'fix',\r\n              align: 'left',\r\n              type: 'treeNode',\r\n              treeNode: true\r\n            })\r\n          } else {\r\n            mainTblColumns.push({\r\n              title: item.title,\r\n              isDataQuery: true,\r\n              field: item.code,\r\n              width: 'fix',\r\n              align: 'left'\r\n            })\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '指标金额',\r\n          field: 'amount',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '计划金额',\r\n          field: 'plan_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '支付金额',\r\n          field: 'pay_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '清算金额',\r\n          field: 'clear_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        this.tableColumnsConfig = mainTblColumns\r\n      }\r\n      this.cancelDialogClose()\r\n      if (this.tableColumnsConfig.length > 0) {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '设置成功，请稍候！',\r\n          duration: 3000\r\n        })\r\n      } else {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '设置成功！'\r\n        })\r\n        this.tablePagerConfig.total = 0\r\n      }\r\n      let bgtDataQuery = {\r\n        tableData: this.settingTableData\r\n      }\r\n      window.localStorage.removeItem('bgtDataQuery')\r\n      window.localStorage.setItem('bgtDataQuery', JSON.stringify(bgtDataQuery))\r\n    },\r\n    cancelDialogClose() {\r\n      this.settingModal = false\r\n      this.amtDetailModal = false\r\n      this.treeTemplateSel = null\r\n      this.treeTemplate = null\r\n      this.temOption = []\r\n      this.modalName = ''\r\n      this.btnLoading = false\r\n    },\r\n    cancelDialogCloseTemplate() {\r\n      this.templateModal = false\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryFormItemConfig?.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    trasToTree(arr) {\r\n      // TODO 树状表格处理数据的方法\r\n      let result = []\r\n      let map = {}\r\n      for (let i in arr) {\r\n        if (arr[i].children) {\r\n          map[arr[i].id] = arr[i]\r\n        } else {\r\n          map[arr[i].id] = Object.assign(arr[i], { children: [] })\r\n          map[arr[i].id].plan_amt = 0\r\n          map[arr[i].id].pay_app_amt = 0\r\n        }\r\n      }\r\n      for (let i in arr) {\r\n        if (map[arr[i].pid]) {\r\n          map[arr[i].pid].children.push(arr[i])\r\n          map[arr[i].pid].plan_amt = map[arr[i].pid].plan_amt + arr[i].plan_amt\r\n          map[arr[i].pid].pay_app_amt =\r\n            map[arr[i].pid].pay_app_amt + arr[i].pay_app_amt\r\n        } else {\r\n          result.push(arr[i])\r\n        }\r\n      }\r\n      return result\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        case 'refresh':\r\n          if (this.tableColumnsConfig.length > 0) {\r\n            this.getTableData(this.currentParams)\r\n          } else {\r\n            this.isLoadingShow = true\r\n            setTimeout(() => {\r\n              this.isLoadingShow = false\r\n            }, 500)\r\n          }\r\n          break\r\n      }\r\n    },\r\n    onOptionRowClick({ params, optionType }) {\r\n      switch (optionType) {\r\n        case 'top':\r\n          this.handleToTop(params.rowIndex)\r\n          break\r\n        case 'bottom':\r\n          this.handleToBottom(params.rowIndex)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    handleToTop(index) {\r\n      if (index !== 0) {\r\n        let tableData = this.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n        let temp = tableData[index - 1]\r\n        tableData[index - 1] = tableData[index]\r\n        tableData[index] = temp\r\n        this.settingTableData = tableData\r\n        this.$message.success('上移成功')\r\n      }\r\n    },\r\n    handleToBottom(index) {\r\n      let tableData = this.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n      if (index !== tableData.length - 1) {\r\n        let temp = tableData[index + 1]\r\n        tableData[index + 1] = tableData[index]\r\n        tableData[index] = temp\r\n        this.settingTableData = tableData\r\n        this.$message.success('下移成功')\r\n      }\r\n    },\r\n    treeClickMethod(obj) {\r\n      if (this.tableColumnsConfig.length > 0) {\r\n        if (!obj.children.length && this.currentParams.condition !== undefined) {\r\n          let code = this.currentTreeCode + '_code'\r\n          let params = this.currentParams\r\n          params.condition[code] = [obj.code]\r\n          this.getTableData(params)\r\n        } else {\r\n          if (obj.label === '全部') {\r\n            let code = this.currentTreeCode + '_code'\r\n            let params = this.currentParams\r\n            if (params.condition[code] !== undefined) delete params.condition[code]\r\n            this.getTableData(params)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    treeOnConfirmData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    treeOnAsideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    treeOnChangeInput(val) {\r\n      this.treeGlobalConfig.treeInputVal = val\r\n      this.$refs.leftTree.filterText = val\r\n    },\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    handleSearch(val) {\r\n      // debugger\r\n      let condition = this.getConditionList()\r\n      for (let key in condition) {\r\n        if (\r\n          (val[key] !== undefined) &\r\n          (val[key] !== null)\r\n        ) {\r\n          if (Array.isArray(val[key])) {\r\n            condition[key] = val[key]\r\n          } else if (typeof (val[key]) === 'string') {\r\n            if (val[key].trim() !== '') {\r\n              val[key].split(',').forEach(item => {\r\n                condition[key].push(item)\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.queryFormItemConfig?.forEach(item => {\r\n        if (item.islike === true && val[item.field]) {\r\n          condition[item.field] = {}\r\n          condition[item.field][item.liketype] = val[item.field]\r\n        }\r\n      })\r\n      Object.assign(this.currentParams.condition || {}, condition)\r\n      this.getTableData(this.currentParams)\r\n      this.$message.success('查询成功！')\r\n    },\r\n    handleSettingModal() {\r\n      this.temQueryparams = {\r\n        menuId: this.$store.state.curNavModule.guid || 'Home'\r\n      }\r\n      this.getTemplateData()\r\n      this.initSettingTableData()\r\n      this.settingModal = true\r\n    },\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      switch (obj.code) {\r\n        case 'operation-setting':\r\n          // 设置\r\n          this.handleSettingModal()\r\n          break\r\n        case 'operation-expand-tree':\r\n          // 树全部展开\r\n          this.handleExpandTree()\r\n          break\r\n        case 'operation-close-tree':\r\n          // 树全部合并\r\n          this.handleCloseTree()\r\n          break\r\n      }\r\n    },\r\n    handleExpandTree() {\r\n      this.$refs.mainTableRef.$refs.xGrid.setAllTreeExpand(true)\r\n    },\r\n    handleCloseTree() {\r\n      this.$refs.mainTableRef.$refs.xGrid.clearTreeExpand()\r\n    },\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n      }\r\n    },\r\n    getInitTemplate() {\r\n      HTTPModule.initTemplate().then(res => {\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          if (res.data && res.data.fields) {\r\n            this.colFieldList = res.data.fields\r\n          } else {\r\n            this.colFieldList = JSON.parse(JSON.stringify(proconf.colFieldList))\r\n          }\r\n        } else {\r\n          this.colFieldList = JSON.parse(JSON.stringify(proconf.colFieldList))\r\n        }\r\n      }).catch(() => {\r\n        this.colFieldList = JSON.parse(JSON.stringify(proconf.colFieldList))\r\n      })\r\n    },\r\n    initSettingTableData() {\r\n      this.settingTableData = this.colFieldList.map((item) => {\r\n        if (item.level > 3) {\r\n          item.level = 6\r\n        }\r\n        return {\r\n          name: item.name.toLowerCase(),\r\n          code: item.name.toLowerCase(),\r\n          title: item.title,\r\n          type: item.type === null ? '0' : item.type + '',\r\n          level: item.level + '',\r\n          totalLevel: item.level + '',\r\n          checked: item.checked,\r\n          showCode: item.showCode\r\n        }\r\n      })\r\n      setTimeout(() => {\r\n        this.$refs.settingTableRef.$refs.xGrid.setCheckboxRow(this.settingTableData.filter(item => item.checked), true)\r\n      }, 100)\r\n      this.colFieldList.forEach(col => {\r\n        col.totalLevel = col.level + ''\r\n      })\r\n    }\r\n  },\r\n  activated() {\r\n    if (JSON.stringify(this.currentParams) !== '{}') {\r\n      this.tableData = []\r\n      this.getTableData(this.currentParams)\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.getInitTemplate()\r\n    this.getTemplateData()\r\n    if (window.localStorage.getItem('bgtDataQuery') !== null) {\r\n      let bgtDataQuery = JSON.parse(window.localStorage.getItem('bgtDataQuery'))\r\n      this.settingTableData = bgtDataQuery.tableData\r\n      let currentTbl = this.$refs.mainTableRef.$refs.xGrid.getTableData().fullData\r\n      let fields = []\r\n      let canUse = []\r\n      currentTbl.forEach((item) => {\r\n        if (item.type !== '0') {\r\n          fields.push({\r\n            name: item.name,\r\n            type: item.type,\r\n            showCode: item.showCode,\r\n            level: item.level\r\n          })\r\n        }\r\n      })\r\n      currentTbl.forEach((item) => {\r\n        if (item.type !== '0' && item.checked) {\r\n          canUse.push({\r\n            name: item.title,\r\n            code: item.code\r\n          })\r\n        }\r\n      })\r\n      let formDataBak = {}\r\n      canUse.forEach((item) => {\r\n        let code = item.code\r\n        formDataBak[code] = ''\r\n      })\r\n      this.queryFormData = formDataBak\r\n      this.tableColumnsConfig = []\r\n      this.tableData = []\r\n      if (fields.length > 0) {\r\n        let params = {\r\n          tableName: 'vw_data_query_bgt',\r\n          condition: {},\r\n          fields,\r\n          sumAmt: ['amount', 'pay_amt', 'plan_amt', 'clear_amt']\r\n        }\r\n        this.getTableData(params)\r\n        let mainTblColumns = []\r\n        currentTbl.forEach((item, index) => {\r\n          if (item.type !== '0') {\r\n            if (index === 0) {\r\n              mainTblColumns.push({\r\n                title: item.title,\r\n                isDataQuery: true,\r\n                field: item.code,\r\n                width: 'fix',\r\n                align: 'left',\r\n                type: 'treeNode',\r\n                treeNode: true\r\n              })\r\n            } else {\r\n              mainTblColumns.push({\r\n                title: item.title,\r\n                isDataQuery: true,\r\n                field: item.code,\r\n                width: 'fix',\r\n                align: 'left'\r\n              })\r\n            }\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '指标金额',\r\n          field: 'amount',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '支付金额',\r\n          field: 'pay_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '计划金额',\r\n          field: 'plan_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '清算金额',\r\n          field: 'clear_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        this.tableColumnsConfig = mainTblColumns\r\n      } else {\r\n        setTimeout(() => {\r\n          this.settingModal = true\r\n        }, 1000)\r\n      }\r\n    }\r\n    this.getFormTable()\r\n  }\r\n\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.Titans-table ::v-deep .vxe-table{\r\n  .vxe-tree--btn-wrapper {\r\n    top: 44%;\r\n    left: 5px;\r\n  }\r\n  .drag-btn{\r\n    margin-left: 9px;\r\n  }\r\n}\r\n.Titans-table.settingtable ::v-deep .vxe-table{\r\n  .vxe-table--header-wrapper table thead tr th:nth-child(2) .vxe-cell .vxe-cell--sort{\r\n    display: none;\r\n  }\r\n}\r\n.T-mainFormListLayout-modulebox ::v-deep .mmc-formlist .mmc-right {\r\n  display: flex;\r\n  flex-flow: column;\r\n  height: 100%;\r\n  padding: 0 0 0 0;\r\n}\r\n.buttons{\r\n  margin: 10px 0 10px 0;\r\n  height: 10%;\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoQA,OAAAA,UAAA;AACA,SAAAC,OAAA;AACA,OAAAC,YAAA;AACA;AACA;EACAC,MAAA,GAAAD,YAAA;EACAE,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA;QACAC,SAAA;QACAC,WAAA;MACA;MACA;MACAC,aAAA;MACAC,aAAA;MACAC,OAAA;QACAA,OAAA;UACAC,IAAA;UACAC,EAAA;QACA;MACA;MACAC,aAAA;MACAC,eAAA;MACAC,kBAAA;QACAC,UAAA;QAAA;QACAC,OAAA,EAAAhB,OAAA,CAAAiB,yBAAA;QACAC,SAAA;UACAC,IAAA;UACAC,QAAA;UACAC,OAAA;UACAC,KAAA;UACAC,IAAA;UACAC,QAAA;QACA;QACAC,WAAA,EAAAzB,OAAA,CAAA0B,6BAAA;QACAC,OAAA;UACAC,mBAAA,OAAAC;QACA;MACA;MACAC,kBAAA;QAAA;QAAA;QAAA;QAAA;MAAA;MACAC,qBAAA;MACAC,mBAAA;MACAC,aAAA;MACA;MACAC,UAAA;QACA;QACA;QACAC,QAAA;QACAC,UAAA;UACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAXA;MAaA;MACAC,QAAA;MACAC,eAAA;QAAAC,WAAA;MAAA;MACAC,gBAAA;QACAC,YAAA;MACA;MACAC,YAAA;MACAC,iBAAA;QACAC,QAAA;UACAC,MAAA;UACAC,OAAA;UACAC,SAAA;UACAC,QAAA;QACA;QACAC,YAAA;QACAC,UAAA;MACA;MACAC,0BAAA;QACAF,YAAA;QACAC,UAAA;MACA;MACAE,kBAAA;MACA;MACAC,SAAA;MACAC,WAAA;QACAC,YAAA;UACAC,SAAA;UAAA;UACAC,GAAA;QACA;;QACAC,SAAA;UACA;UACAC,iBAAA,EAAA3D,OAAA,CAAA4D,gBAAA;UACAC,UAAA,EAAA7D,OAAA,CAAA8D,SAAA;UACAC,UAAA,EAAA/D,OAAA,CAAAgE,SAAA;UACAC,iBAAA,EAAAjE,OAAA,CAAAkE,gBAAA;UACAC,aAAA,EAAAnE,OAAA,CAAAoE,YAAA;UACAC,MAAA,EAAArE,OAAA,CAAAsE;QACA;QACA;AACA;AACA;MACA;;MACAC,gBAAA;QACAC,KAAA;QACAC,WAAA;QACAC,QAAA;MACA;MACAC,yBAAA;QACAH,KAAA;QACAE,QAAA;QACAD,WAAA;MACA;MACAG,kBAAA;QACA;QACAC,eAAA;QAAA;QACAC,MAAA;QAAA;QACAC,MAAA;QAAA;QACAC,MAAA;QAAA;QACAC,KAAA;QAAA;QACAC,IAAA;QAAA;QACAC,MAAA;QAAA;QACAC,KAAA;UACAC,KAAA;UACArE,OAAA;QACA;MACA;MACAsE,eAAA;QACAC,SAAA;QACAC,YAAA;QACAC,SAAA;QACAC,SAAA;MACA;MACAC,oBAAA;QACAC,GAAA;QACAC,OAAA;QACAnB,QAAA;MACA;MACAoB,aAAA;MACAC,aAAA;MAAA;MACAC,aAAA;MAAA;MACAC,cAAA;MAAA;MACAC,eAAA;MAAA;MACAC,QAAA;MACAC,eAAA;QACAC,SAAA;QACAC,aAAA;MACA;MACAC,YAAA;MACAC,cAAA;MACAC,qBAAA;MACAC,2BAAA;MACAC,iCAAA;MACAC,8BAAA;MACAC,+BAAA;MACAC,gCAAA;MACAC,kBAAA;MACAC,mBAAA;MACAC,gBAAA;MACAC,mBAAA;MACAC,yBAAA,EAAAnH,OAAA,CAAAmH,yBAAA;MACAC,eAAA;MACAC,kBAAA;QACA9D,YAAA;UACA+D,QAAA;UACAC,OAAA;UACA/D,SAAA;QACA;MACA;MACAgE,wBAAA;QACAD,OAAA;QAAA;QACAE,iBAAA;UACAC,WAAA;UAAA;UACAC,QAAA;QACA;MACA;;MACAC,oBAAA;QACArE,YAAA;UACAC,SAAA;QACA;MACA;MACAqE,KAAA;MACAC,UAAA;MACAC,SAAA;MACAC,YAAA;MACAC,YAAA;MACAC,eAAA;MACAC,SAAA;MACAC,cAAA;QACAC,MAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,IAAA;MACA;MACAC,aAAA;MACAC,oBAAA;MACAC,mBAAA;QACArF,YAAA;UACAC,SAAA;QACA;MACA;MACAqF,0BAAA,EAAA7I,OAAA,CAAA6I,0BAAA;MACAC,iBAAA;MACAC,eAAA;QACAV,MAAA;QACAW,YAAA;MACA;MACAC,YAAA;MACAC,aAAA;MACAC,OAAA;MACAC,eAAA;IACA;EACA;EACAzH,OAAA;IACA0H,SAAA,WAAAA,UAAAC,GAAA,EAAAC,OAAA,EAAAC,CAAA;MACA,IAAAC,GAAA,GAAAH,GAAA,CAAAI,MAAA,CAAAC,QAAA;MACA,QAAAF,GAAA;QACA;UACA,KAAA/C,2BAAA,QAAAC,iCAAA;UACA,KAAAb,aAAA;UACA,KAAA8D,gBAAA,CAAAN,GAAA,CAAAO,GAAA;UACA;QACA;UACA,KAAAnD,2BAAA,QAAAE,8BAAA;UACA,KAAAd,aAAA;UACA,KAAA8D,gBAAA,CAAAN,GAAA,CAAAO,GAAA;UACA;QACA;UACA,KAAAnD,2BAAA,QAAAG,+BAAA;UACA,KAAAf,aAAA;UACA,KAAA8D,gBAAA,CAAAN,GAAA,CAAAO,GAAA;UACA;QACA;UACA,KAAAnD,2BAAA,QAAAI,gCAAA;UACA,KAAAhB,aAAA;UACA,KAAA8D,gBAAA,CAAAN,GAAA,CAAAO,GAAA;UACA;MACA;IACA;IACAD,gBAAA,WAAAA,iBAAAC,GAAA;MACA;MACA,IAAAC,MAAA,QAAAC,UAAA,CAAAF,GAAA;MACA,KAAAlE,oBAAA,CAAAC,GAAA,GAAAkE,MAAA;MACA,KAAAE,kBAAA;MACA,KAAAxD,cAAA;IACA;IACAuD,UAAA,WAAAA,WAAAF,GAAA;MAAA,IAAAI,KAAA;MACA,IAAAC,MAAA;MACA,IAAAL,GAAA,CAAAM,QAAA,IAAAN,GAAA,CAAAM,QAAA,CAAAC,MAAA;QACAP,GAAA,CAAAM,QAAA,CAAAE,OAAA,WAAAC,IAAA;UACAJ,MAAA,CAAAK,IAAA,CAAAC,KAAA,CAAAN,MAAA,EAAAO,kBAAA,CAAAR,KAAA,CAAAF,UAAA,CAAAO,IAAA;QACA;MACA;QACA,IAAAT,GAAA,CAAAC,MAAA;UACAI,MAAA,CAAAK,IAAA,CAAAC,KAAA,CAAAN,MAAA,EAAAO,kBAAA,CAAAZ,GAAA,CAAAC,MAAA;QACA;MACA;MACA,OAAAI,MAAA;IACA;IACAF,kBAAA,WAAAA,mBAAA;MAAA,IAAAU,MAAA;MACA,KAAAjE,qBAAA;MACA,KAAAM,kBAAA;MACA,IAAA4D,MAAA;MACA,SAAA7E,aAAA;QACA6E,MAAA;MACA,gBAAA7E,aAAA;QACA6E,MAAA;MACA,gBAAA7E,aAAA;QACA6E,MAAA;MACA,gBAAA7E,aAAA;QACA6E,MAAA;MACA;MACA5K,UAAA,CAAA4K,MAAA,OAAAhF,oBAAA,EAAAiF,IAAA,WAAAC,GAAA;QACAH,MAAA,CAAAjE,qBAAA;QACA,IAAAoE,GAAA,IAAAA,GAAA,CAAAH,MAAA,CAAAtK,UAAA,mBAAAsK,MAAA,CAAAtK,UAAA;UACA,IAAA0K,OAAA,GAAAD,GAAA,CAAA1K,IAAA,CAAA4K,IAAA;UACAD,OAAA,CAAAT,OAAA,WAAAC,IAAA;YACA,SAAAU,CAAA,IAAAV,IAAA;cACAA,IAAA,CAAAU,CAAA,CAAAC,WAAA,MAAAX,IAAA,CAAAU,CAAA;YACA;UACA;UACAN,MAAA,CAAA3D,kBAAA,GAAA+D,OAAA;UACAJ,MAAA,CAAA/F,yBAAA,CAAAH,KAAA,GAAAqG,GAAA,CAAA1K,IAAA,CAAAqE,KAAA;QACA;MACA;IACA;IACA0G,iBAAA,WAAAA,kBAAAC,IAAA;MAAA,IAAAC,MAAA,GAAAD,IAAA,CAAAC,MAAA;QAAA3G,WAAA,GAAA0G,IAAA,CAAA1G,WAAA;QAAAC,QAAA,GAAAyG,IAAA,CAAAzG,QAAA;MACA,KAAAiB,oBAAA,GAAA0F,MAAA,CAAAC,MAAA,MAAA3F,oBAAA;QACAE,OAAA,EAAApB,WAAA;QACAC,QAAA,EAAAA;MACA;MACA,KAAAsF,kBAAA;IACA;IACAuB,UAAA,WAAAA,WAAAC,EAAA;MAAA,IAAAC,MAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAT,MAAA,EAAAU,UAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,YAAA,EAAAC,eAAA;QAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,IACAf,EAAA;gBAAAa,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAG,MAAA;YAAA;cACApB,MAAA;gBACAqB,OAAA;kBACAjB,EAAA,EAAAA,EAAA;kBACAkB,UAAA,EAAAjB,MAAA,CAAAnD,MAAA,CAAAqE,OAAA,CAAAC,WAAA,CAAAC,IAAA;kBACAC,YAAA,EAAArB,MAAA,CAAAnD,MAAA,CAAAqE,OAAA,CAAAC,WAAA,CAAAG,QAAA;kBACAC,QAAA,EAAAvB,MAAA,CAAAnD,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC;gBACA;cACA;cAAA,MACA+C,EAAA,KAAAC,MAAA,CAAA1F,aAAA;gBAAAsG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAnB,MAAA,CAAAqB,OAAA,CAAAjB,EAAA,GAAAA,EAAA;cAAAa,QAAA,CAAAE,IAAA;cAAA,OACAd,MAAA,CAAAxL,YAAA,CAAAmL,MAAA;YAAA;cAAAU,UAAA,GAAAO,QAAA,CAAAY,IAAA;cACAC,OAAA,CAAAC,GAAA,cAAArB,UAAA;cACAL,MAAA,CAAA9E,iCAAA,GAAAmF,UAAA,CAAAsB,WAAA;YAAA;cAAA,MAEA5B,EAAA,KAAAC,MAAA,CAAAzF,aAAA;gBAAAqG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAnB,MAAA,CAAAqB,OAAA,CAAAjB,EAAA,GAAAA,EAAA;cAAAa,QAAA,CAAAE,IAAA;cAAA,OACAd,MAAA,CAAAxL,YAAA,CAAAmL,MAAA;YAAA;cAAAU,WAAA,GAAAO,QAAA,CAAAY,IAAA;cACAxB,MAAA,CAAA7E,8BAAA,GAAAkF,WAAA,CAAAsB,WAAA;YAAA;cAAA,MAEA5B,EAAA,KAAAC,MAAA,CAAAxF,cAAA;gBAAAoG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAnB,MAAA,CAAAqB,OAAA,CAAAjB,EAAA,GAAAA,EAAA;cAAAa,QAAA,CAAAE,IAAA;cAAA,OACAd,MAAA,CAAAxL,YAAA,CAAAmL,MAAA;YAAA;cAAAU,YAAA,GAAAO,QAAA,CAAAY,IAAA;cACAxB,MAAA,CAAA5E,+BAAA,GAAAiF,YAAA,CAAAsB,WAAA;YAAA;cAAA,MAEA5B,EAAA,KAAAC,MAAA,CAAAvF,eAAA;gBAAAmG,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAnB,MAAA,CAAAqB,OAAA,CAAAjB,EAAA,GAAAA,EAAA;cAAAa,QAAA,CAAAE,IAAA;cAAA,OACAd,MAAA,CAAAxL,YAAA,CAAAmL,MAAA;YAAA;cAAAU,YAAA,GAAAO,QAAA,CAAAY,IAAA;cACAxB,MAAA,CAAA3E,gCAAA,GAAAgF,YAAA,CAAAsB,WAAA;YAAA;cAAA,MAEA5B,EAAA,KAAAC,MAAA,CAAAlL,aAAA;gBAAA8L,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAnB,MAAA,CAAAqB,OAAA,CAAAjB,EAAA,GAAAA,EAAA;cAAAa,QAAA,CAAAE,IAAA;cAAA,OACAd,MAAA,CAAAxL,YAAA,CAAAmL,MAAA;YAAA;cAAAc,eAAA,GAAAG,QAAA,CAAAY,IAAA;cACAxB,MAAA,CAAAzJ,mBAAA,GAAAkK,eAAA,CAAAkB,WAAA;YAAA;YAAA;cAAA,OAAAf,QAAA,CAAAgB,IAAA;UAAA;QAAA,GAAAxB,OAAA;MAAA;IAEA;IACAyB,YAAA,WAAAA,aAAA;MACA,KAAA/B,UAAA,MAAAhL,aAAA;MACA,KAAAgL,UAAA,MAAAxF,aAAA;MACA,KAAAwF,UAAA,MAAAvF,aAAA;MACA,KAAAuF,UAAA,MAAAtF,cAAA;MACA,KAAAsF,UAAA,MAAArF,eAAA;IACA;IACAqH,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA,IAAAC,IAAA;MACAA,IAAA,CAAA9E,oBAAA;MACA5I,UAAA,CAAA2N,mBAAA,MAAAtF,cAAA,EAAAwC,IAAA,WAAAC,GAAA;QACA4C,IAAA,CAAA9E,oBAAA;QACA,IAAAkC,GAAA,IAAAA,GAAA,CAAA2C,MAAA,CAAApN,UAAA,mBAAAoN,MAAA,CAAApN,UAAA;UACAqN,IAAA,CAAA3E,iBAAA,GAAA+B,GAAA,CAAA1K,IAAA;QACA;UACAsN,IAAA,CAAAE,QAAA,CAAAC,KAAA,CAAA/C,GAAA,CAAAgD,MAAA;QACA;MACA,GAAAC,KAAA;QACAL,IAAA,CAAA9E,oBAAA;MACA;MACA,KAAAD,aAAA;IACA;IACAqF,iBAAA,WAAAA,kBAAA;MACA,IAAAC,SAAA,QAAAC,KAAA,CAAAC,gBAAA,CAAAD,KAAA,CAAAE,KAAA,CAAAC,gBAAA;MACA,IAAAJ,SAAA,CAAA5D,MAAA;QACA,KAAAuD,QAAA,CAAAU,OAAA;QACA;MACA;MACA,KAAApG,YAAA,GAAA+F,SAAA;MACA,KAAAM,eAAA;MACA,KAAAC,yBAAA;IACA;IACAC,kBAAA,WAAAA,mBAAA;MAAA,IAAAC,MAAA;MACA,IAAAT,SAAA,QAAAC,KAAA,CAAAC,gBAAA,CAAAD,KAAA,CAAAE,KAAA,CAAAC,gBAAA;MACA,IAAAJ,SAAA,CAAA5D,MAAA;QACA,KAAAuD,QAAA,CAAAU,OAAA;QACA;MACA;MACA,KAAAtF,eAAA,CAAAV,MAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,IAAA;MACA,KAAAM,eAAA,CAAAC,YAAA,GAAAgF,SAAA,IAAAU,aAAA;MACA,KAAA/F,oBAAA;MACA5I,UAAA,CAAA4O,sBAAA,MAAA5F,eAAA,EAAA6B,IAAA,WAAAC,GAAA;QACA4D,MAAA,CAAA9F,oBAAA;QACA,IAAAkC,GAAA,IAAAA,GAAA,CAAA4D,MAAA,CAAArO,UAAA,mBAAAqO,MAAA,CAAArO,UAAA;UACAqO,MAAA,CAAAd,QAAA,CAAAiB,OAAA;UACAH,MAAA,CAAAF,yBAAA;QACA;UACAE,MAAA,CAAAd,QAAA,CAAAC,KAAA,WAAA/C,GAAA,CAAAgD,MAAA;QACA;MACA,GAAAC,KAAA,cACA;IACA;IACAe,cAAA,WAAAA,eAAA;MAAA,IAAAC,MAAA;MACA,IAAAd,SAAA,QAAAC,KAAA,CAAAC,gBAAA,CAAAD,KAAA,CAAAE,KAAA,CAAAC,gBAAA;MACA,IAAAJ,SAAA,CAAA5D,MAAA;QACA,KAAAuD,QAAA,CAAAU,OAAA;QACA;MACA;MACA,KAAAtF,eAAA,CAAAV,MAAA,QAAAC,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,IAAA;MACA,KAAAM,eAAA,CAAAC,YAAA,GAAAgF,SAAA,IAAAU,aAAA;MACA,KAAA/F,oBAAA;MACA5I,UAAA,CAAAgP,kBAAA,MAAAhG,eAAA,EAAA6B,IAAA,WAAAC,GAAA;QACAiE,MAAA,CAAAnG,oBAAA;QACA,IAAAkC,GAAA,IAAAA,GAAA,CAAAiE,MAAA,CAAA1O,UAAA,mBAAA0O,MAAA,CAAA1O,UAAA;UACA0O,MAAA,CAAAnB,QAAA,CAAAiB,OAAA;UACAE,MAAA,CAAAE,eAAA;UACAF,MAAA,CAAAP,yBAAA;QACA;UACAO,MAAA,CAAAnB,QAAA,CAAAC,KAAA,WAAA/C,GAAA,CAAAgD,MAAA;QACA;MACA,GAAAC,KAAA,cACA;IACA;IACAmB,YAAA,WAAAA,aAAA;MACA,KAAApH,KAAA,QAAAI,YAAA,mBAAAA,YAAA,CAAAyG,aAAA;MACA,KAAA1G,YAAA;IACA;IACAkH,UAAA,WAAAA,WAAA;MACA,KAAAC,UAAA;IACA;IACAC,WAAA,WAAAA,YAAA;MACA,KAAAvH,KAAA;MACA,KAAAE,SAAA;IACA;IACAoH,UAAA,WAAAA,WAAAE,SAAA;MAAA,IAAAC,MAAA;MACA,IAAA7B,IAAA;MACA,IAAAA,IAAA,CAAA1F,SAAA;QACA0F,IAAA,CAAAE,QAAA,CAAAU,OAAA;QACA;MACA;MACA,IAAAZ,IAAA,CAAA1F,SAAA,CAAAqC,MAAA;QACAqD,IAAA,CAAAE,QAAA,CAAAU,OAAA;QACA;MACA;MACA,IAAAkB,SAAA;QACApO,IAAA,EAAAkO,SAAA;QACAhH,MAAA,EAAAoF,IAAA,CAAAnF,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,IAAA;QACAO,YAAA,EAAAyE,IAAA,CAAA1F,SAAA;QACAyH,SAAA;QACAC,MAAA;QACAC,MAAA,GACA;UACAC,KAAA;UACAxO,IAAA;UACAyO,KAAA;UACAC,SAAA;UACAC,OAAA;QACA,GACA;UACAH,KAAA;UACAxO,IAAA;UACAyO,KAAA;UACAC,SAAA;UACAC,OAAA;QACA,GACA;UACAH,KAAA;UACAxO,IAAA;UACAyO,KAAA;UACAC,SAAA;UACAC,OAAA;QACA,GACA;UACAH,KAAA;UACAxO,IAAA;UACAyO,KAAA;UACAC,SAAA;UACAC,OAAA;QACA;MAEA;MACA,IAAAL,MAAA,GAAAhC,IAAA,CAAAQ,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAA6B,YAAA,GAAAC,QAAA;MACA,KAAAhC,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAAC,gBAAA,GAAA/D,OAAA,WAAAC,IAAA;QACAmF,MAAA,CAAApF,OAAA,WAAA6F,KAAA;UACA,IAAA5F,IAAA,CAAA/I,IAAA,KAAA2O,KAAA,CAAA3O,IAAA;YACA2O,KAAA,CAAAJ,OAAA;UACA;QACA;MACA;MACAP,SAAA,CAAAE,MAAA,GAAAA,MAAA;MACAF,SAAA,CAAAC,SAAA,GAAAC,MAAA,CAAAU,GAAA,WAAA7F,IAAA;QACA;UACA8F,IAAA,EAAA9F,IAAA,CAAA8F,IAAA;UACAR,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;UACAE,OAAA,EAAAxF,IAAA,CAAAwF;QACA;MACA;MACArC,IAAA,CAAA3F,UAAA;MACA/H,UAAA,CAAAsQ,gBAAA,CAAAd,SAAA,EAAA3E,IAAA,WAAAC,GAAA;QACA4C,IAAA,CAAA3F,UAAA;QACA,IAAA+C,GAAA,IAAAA,GAAA,CAAAyE,MAAA,CAAAlP,UAAA,mBAAAkP,MAAA,CAAAlP,UAAA;UACAqN,IAAA,CAAAE,QAAA,CAAAiB,OAAA;UACAU,MAAA,CAAAgB,mBAAA;UACAhB,MAAA,CAAAN,eAAA;QACA;UACAvB,IAAA,CAAAE,QAAA,CAAAC,KAAA,WAAA/C,GAAA,CAAAgD,MAAA;UACAJ,IAAA,CAAA3F,UAAA;QACA;MACA,GAAAgG,KAAA;QACAL,IAAA,CAAAE,QAAA,CAAAC,KAAA;QACAH,IAAA,CAAA3F,UAAA;MACA;IACA;IACAwI,mBAAA,WAAAA,oBAAA;MACA,KAAAvI,SAAA;MACA,KAAAC,YAAA;IACA;IACAuI,KAAA,WAAAA,MAAA;MAAA,IAAAC,MAAA;MACA,KAAAvJ,gBAAA,QAAAgC,YAAA,CAAAkH,GAAA,WAAA7F,IAAA;QACA;UACA8F,IAAA,EAAA9F,IAAA,CAAA8F,IAAA,CAAAnF,WAAA;UACA1J,IAAA,EAAA+I,IAAA,CAAA8F,IAAA,CAAAnF,WAAA;UACA2E,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;UACAzO,IAAA,EAAAmJ,IAAA,CAAAnJ,IAAA,kBAAAmJ,IAAA,CAAAnJ,IAAA;UACAsP,KAAA,EAAAnG,IAAA,CAAAmG,KAAA;UACAC,UAAA,EAAApG,IAAA,CAAAmG,KAAA;UACAX,OAAA,EAAAxF,IAAA,CAAAwF,OAAA;UACAa,QAAA,EAAArG,IAAA,CAAAqG;QACA;MACA;MACAC,UAAA;QACAJ,MAAA,CAAAvC,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAA0C,cAAA,CAAAL,MAAA,CAAAvJ,gBAAA,CAAA6J,MAAA,WAAAxG,IAAA;UAAA,OAAAA,IAAA,CAAAwF,OAAA;QAAA;MACA;MACA,KAAA7H,YAAA;MACA,KAAAC,eAAA;MACA,KAAAH,SAAA;IACA;IACAgJ,cAAA,WAAAA,eAAA5Q,IAAA;MACA,KAAA8H,YAAA,GAAA9H,IAAA,CAAA6Q,KAAA;MACA,KAAAjJ,SAAA,QAAAE,YAAA,CAAAyG,aAAA;MACA,KAAAJ,eAAA;IACA;IACAA,eAAA,WAAAA,gBAAA;MAAA,IAAA2C,MAAA;MACA,SAAAhJ,YAAA,CAAAwH,MAAA,kBAAAxH,YAAA,CAAAwH,MAAA;QACA,IAAAA,MAAA,GAAAyB,IAAA,CAAAC,KAAA,MAAAlJ,YAAA,CAAAwH,MAAA;QACA,KAAAxI,gBAAA,GAAAwI,MAAA,CAAAU,GAAA,WAAA7F,IAAA;UACA,IAAAA,IAAA,CAAAmG,KAAA;YACAnG,IAAA,CAAAmG,KAAA;UACA;UACA;YACAL,IAAA,EAAA9F,IAAA,CAAA8F,IAAA;YACA7O,IAAA,EAAA+I,IAAA,CAAA8F,IAAA;YACAR,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;YACAzO,IAAA,EAAAmJ,IAAA,CAAAnJ,IAAA,kBAAAmJ,IAAA,CAAAnJ,IAAA;YACAsP,KAAA,EAAAnG,IAAA,CAAAmG,KAAA;YACAC,UAAA,EAAAO,MAAA,CAAAhI,YAAA,CAAAmI,IAAA,WAAAC,MAAA;cAAA,OAAAA,MAAA,CAAAjB,IAAA,KAAA9F,IAAA,CAAA8F,IAAA;YAAA,GAAAM,UAAA;YACAZ,OAAA,EAAAxF,IAAA,CAAAwF,OAAA;YACAa,QAAA,EAAArG,IAAA,CAAAqG;UACA;QACA;QACAC,UAAA;UACAK,MAAA,CAAAhD,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAA0C,cAAA,CAAAI,MAAA,CAAAhK,gBAAA,CAAA6J,MAAA,WAAAxG,IAAA;YAAA,OAAAA,IAAA,CAAAwF,OAAA;UAAA;QACA;MACA;IACA;IACAd,eAAA,WAAAA,gBAAA;MACA,IAAAvB,IAAA;MACA1N,UAAA,CAAA2N,mBAAA,MAAAtF,cAAA,EAAAwC,IAAA,WAAAC,GAAA;QACA,IAAAA,GAAA,CAAA1K,IAAA,YAAAmR,KAAA;UACA,IAAAzG,GAAA,CAAA1K,IAAA,CAAAiK,MAAA;YACAqD,IAAA,CAAAtF,SAAA,GAAA0C,GAAA,CAAA1K,IAAA,CAAAgQ,GAAA,WAAA7F,IAAA;cACA;gBACAhJ,KAAA,EAAAgJ,IAAA,CAAAoE,aAAA;gBACAsC,KAAA,EAAA1G;cACA;YACA;UACA;UACA,IAAAO,GAAA,CAAA1K,IAAA,CAAAiK,MAAA;YACAqD,IAAA,CAAAtF,SAAA;UACA;QACA;MACA;IACA;IACAoJ,SAAA,WAAAA,UAAAC,KAAA;MAAA,IAAAf,KAAA,GAAAe,KAAA,CAAAf,KAAA;MACA,IAAAA,KAAA;QACA;UACAgB,UAAA;UACAC,MAAA;QACA;MACA;QACA;UACAD,UAAA;UACAC,MAAA;QACA;MACA;IACA;IACAC,iBAAA,WAAAA,kBAAAC,GAAA;MACA,SAAAC,UAAA1R,IAAA;QACAA,IAAA,CAAA2R,KAAA,WAAAxH,IAAA;UACA,IAAAA,IAAA,CAAAR,MAAA,KAAAiI,SAAA;YACAC,OAAA,GAAA1H,IAAA,CAAAR,MAAA;YACA;UACA;UACA,IAAAQ,IAAA,CAAAH,QAAA,IAAAG,IAAA,CAAAH,QAAA,CAAAC,MAAA;YACAyH,SAAA,CAAAvH,IAAA,CAAAH,QAAA;UACA;UACA;QACA;MACA;MACA,IAAA6H,OAAA;MACAH,SAAA,CAAAD,GAAA;MACA,OAAAI,OAAA;IACA;IACAhC,YAAA,WAAAA,aAAA5E,MAAA;MAAA,IAAA6G,OAAA;MACA,KAAArR,aAAA;MACA,KAAAsI,aAAA,GAAAkC,MAAA;MACAA,MAAA,CAAAjK,IAAA,QAAAX,aAAA;MACAT,UAAA,CAAAmS,iBAAA,CAAA9G,MAAA,EAAAR,IAAA,WAAAC,GAAA;QACA;QACA;QACA,IAAAA,GAAA,CAAAsH,MAAA;UACAF,OAAA,CAAArR,aAAA;UACAqR,OAAA,CAAA5O,SAAA,GAAAwH,GAAA,CAAA1K,IAAA;UACA8R,OAAA,CAAA1N,gBAAA,CAAAC,KAAA,GAAAqG,GAAA,CAAA1K,IAAA,CAAAiK,MAAA;UACA,IAAAS,GAAA,CAAA1K,IAAA,CAAAiK,MAAA;YACA6H,OAAA,CAAAtP,iBAAA,CAAAC,QAAA,CAAAC,MAAA,GAAAgI,GAAA,CAAA1K,IAAA,CAAAiS,MAAA,WAAAvP,MAAA,EAAAyH,IAAA;cAAA,OAAAzH,MAAA,GAAAwP,MAAA,CAAA/H,IAAA,CAAAzH,MAAA;YAAA;YACAoP,OAAA,CAAAtP,iBAAA,CAAAC,QAAA,CAAAE,OAAA,GAAA+H,GAAA,CAAA1K,IAAA,CAAAiS,MAAA,WAAAE,SAAA,EAAAhI,IAAA;cAAA,OAAAgI,SAAA,GAAAD,MAAA,CAAA/H,IAAA,CAAAxH,OAAA;YAAA;YACAmP,OAAA,CAAAtP,iBAAA,CAAAC,QAAA,CAAAI,QAAA,GAAA6H,GAAA,CAAA1K,IAAA,CAAAiS,MAAA,WAAAG,UAAA,EAAAjI,IAAA;cAAA,OAAAiI,UAAA,GAAAF,MAAA,CAAA/H,IAAA,CAAAtH,QAAA;YAAA;YACAiP,OAAA,CAAAtP,iBAAA,CAAAC,QAAA,CAAAG,SAAA,GAAA8H,GAAA,CAAA1K,IAAA,CAAAiS,MAAA,WAAAI,WAAA,EAAAlI,IAAA;cAAA,OAAAkI,WAAA,GAAAH,MAAA,CAAA/H,IAAA,CAAAvH,SAAA;YAAA;UACA;QACA;UACAkP,OAAA,CAAArR,aAAA;UACAqR,OAAA,CAAAtE,QAAA,CAAAC,KAAA,CAAA/C,GAAA,CAAAgD,MAAA;QACA;MACA,GAAAC,KAAA;QACAmE,OAAA,CAAArR,aAAA;MACA;IACA;IACA6R,mBAAA,WAAAA,oBAAAC,gBAAA;MACA,IAAAC,aAAA;MACA,IAAArB,KAAA,CAAAsB,OAAA,CAAAF,gBAAA,KAAAA,gBAAA,CAAAtI,MAAA;QACAsI,gBAAA,CAAArI,OAAA,WAAAC,IAAA;UAAA,IAAAuI,gBAAA,EAAAC,iBAAA;UACA,MAAAD,gBAAA,GAAAvI,IAAA,CAAAyI,UAAA,cAAAF,gBAAA,uBAAAA,gBAAA,CAAAzC,IAAA,4BAAA0C,iBAAA,GAAAxI,IAAA,CAAAyI,UAAA,cAAAD,iBAAA,uBAAAA,iBAAA,CAAA1C,IAAA;YACA,IAAA9F,IAAA,CAAAqF,KAAA;cACAgD,aAAA,CAAArI,IAAA,CAAAqF,KAAA;YACA;UACA;YACA,IAAArF,IAAA,CAAAqF,KAAA;cACAgD,aAAA,CAAArI,IAAA,CAAAqF,KAAA;YACA;UACA;QACA;MACA;MACA,OAAAgD,aAAA;IACA;IACAK,iBAAA,WAAAA,kBAAA;MACA,IAAAC,UAAA,QAAAhF,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAA6B,YAAA,GAAAC,QAAA;MACA,IAAAiD,aAAA,QAAAjF,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAAC,gBAAA;MACA,IAAAqB,MAAA;MACA,IAAA0D,MAAA;MACAD,aAAA,CAAA7I,OAAA,WAAAC,IAAA;QACAmF,MAAA,CAAAlF,IAAA;UACA6F,IAAA,EAAA9F,IAAA,CAAA8F,IAAA;UACAjP,IAAA,EAAAmJ,IAAA,CAAAnJ,IAAA;UACAsP,KAAA,EAAAnG,IAAA,CAAAmG,KAAA;UACAE,QAAA,EAAArG,IAAA,CAAAqG;QACA;MACA;MACAsC,UAAA,CAAA5I,OAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAnJ,IAAA,YAAAmJ,IAAA,CAAAwF,OAAA;UACAqD,MAAA,CAAA5I,IAAA;YACA6F,IAAA,EAAA9F,IAAA,CAAAsF,KAAA;YACArO,IAAA,EAAA+I,IAAA,CAAA/I;UACA;QACA;MACA;MACA,KAAAU,aAAA,QAAAwQ,mBAAA,MAAAzQ,mBAAA;MACA,KAAAoB,kBAAA;MACA,KAAAC,SAAA;MACA,IAAAoM,MAAA,CAAArF,MAAA;QACA,IAAAgB,MAAA;UACAgI,SAAA,OAAAC,SAAA,MAAA/K,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAA8K,MAAA,EAAAF,SAAA;UACA5D,SAAA;UACAC,MAAA,EAAAA,MAAA;UACAC,MAAA;QACA;QACA,KAAAM,YAAA,CAAA5E,MAAA;QACA,IAAAmI,cAAA;QACAL,aAAA,CAAA7I,OAAA,WAAAC,IAAA,EAAAkJ,KAAA;UACA,IAAAA,KAAA;YACAD,cAAA,CAAAhJ,IAAA;cACAqF,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;cACA6D,WAAA;cACA9D,KAAA,EAAArF,IAAA,CAAA/I,IAAA;cACAmS,KAAA;cACAC,KAAA;cACAxS,IAAA;cACAyS,QAAA;YACA;UACA;YACAL,cAAA,CAAAhJ,IAAA;cACAqF,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;cACA6D,WAAA;cACA9D,KAAA,EAAArF,IAAA,CAAA/I,IAAA;cACAmS,KAAA;cACAC,KAAA;YACA;UACA;QACA;QACAJ,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACAT,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACAT,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACAT,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACA,KAAA5Q,kBAAA,GAAAmQ,cAAA;MACA;MACA,KAAAU,iBAAA;MACA,SAAA7Q,kBAAA,CAAAgH,MAAA;QACA,KAAAuD,QAAA;UACAxM,IAAA;UACA+S,OAAA;UACAC,QAAA;QACA;MACA;QACA,KAAAxG,QAAA;UACAxM,IAAA;UACA+S,OAAA;QACA;QACA,KAAA3P,gBAAA,CAAAC,KAAA;MACA;MACA,IAAA4P,YAAA;QACA/Q,SAAA,OAAA4D;MACA;MACAoN,MAAA,CAAAC,YAAA,CAAAC,UAAA;MACAF,MAAA,CAAAC,YAAA,CAAAE,OAAA,iBAAAtD,IAAA,CAAAuD,SAAA,CAAAL,YAAA;IACA;IACAH,iBAAA,WAAAA,kBAAA;MACA,KAAA1N,YAAA;MACA,KAAAC,cAAA;MACA,KAAA0B,eAAA;MACA,KAAAD,YAAA;MACA,KAAAE,SAAA;MACA,KAAAJ,SAAA;MACA,KAAAD,UAAA;IACA;IACAyG,yBAAA,WAAAA,0BAAA;MACA,KAAA7F,aAAA;IACA;IACA;IACAgM,gBAAA,WAAAA,iBAAA;MAAA,IAAAC,qBAAA;MACA,IAAAnF,SAAA;MACA,CAAAmF,qBAAA,QAAA3S,mBAAA,cAAA2S,qBAAA,uBAAAA,qBAAA,CAAAtK,OAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAyI,UAAA,CAAA3C,IAAA,yBAAA9F,IAAA,CAAAyI,UAAA,CAAA3C,IAAA;UACA,IAAA9F,IAAA,CAAAqF,KAAA;YACA,IAAArF,IAAA,CAAAqF,KAAA;cACAH,SAAA,CAAAlF,IAAA,CAAAqF,KAAA;YACA;cACAH,SAAA,CAAAlF,IAAA,CAAAqF,KAAA;YACA;UACA;QACA;UACA,IAAArF,IAAA,CAAAqF,KAAA;YACAH,SAAA,CAAAlF,IAAA,CAAAqF,KAAA;UACA;QACA;MACA;MACA,OAAAH,SAAA;IACA;IACAoF,UAAA,WAAAA,WAAAhD,GAAA;MACA;MACA,IAAA/D,MAAA;MACA,IAAAsC,GAAA;MACA,SAAAnF,CAAA,IAAA4G,GAAA;QACA,IAAAA,GAAA,CAAA5G,CAAA,EAAAb,QAAA;UACAgG,GAAA,CAAAyB,GAAA,CAAA5G,CAAA,EAAAQ,EAAA,IAAAoG,GAAA,CAAA5G,CAAA;QACA;UACAmF,GAAA,CAAAyB,GAAA,CAAA5G,CAAA,EAAAQ,EAAA,IAAAH,MAAA,CAAAC,MAAA,CAAAsG,GAAA,CAAA5G,CAAA;YAAAb,QAAA;UAAA;UACAgG,GAAA,CAAAyB,GAAA,CAAA5G,CAAA,EAAAQ,EAAA,EAAAxI,QAAA;UACAmN,GAAA,CAAAyB,GAAA,CAAA5G,CAAA,EAAAQ,EAAA,EAAAqJ,WAAA;QACA;MACA;MACA,SAAA7J,EAAA,IAAA4G,GAAA;QACA,IAAAzB,GAAA,CAAAyB,GAAA,CAAA5G,EAAA,EAAA8J,GAAA;UACA3E,GAAA,CAAAyB,GAAA,CAAA5G,EAAA,EAAA8J,GAAA,EAAA3K,QAAA,CAAAI,IAAA,CAAAqH,GAAA,CAAA5G,EAAA;UACAmF,GAAA,CAAAyB,GAAA,CAAA5G,EAAA,EAAA8J,GAAA,EAAA9R,QAAA,GAAAmN,GAAA,CAAAyB,GAAA,CAAA5G,EAAA,EAAA8J,GAAA,EAAA9R,QAAA,GAAA4O,GAAA,CAAA5G,EAAA,EAAAhI,QAAA;UACAmN,GAAA,CAAAyB,GAAA,CAAA5G,EAAA,EAAA8J,GAAA,EAAAD,WAAA,GACA1E,GAAA,CAAAyB,GAAA,CAAA5G,EAAA,EAAA8J,GAAA,EAAAD,WAAA,GAAAjD,GAAA,CAAA5G,EAAA,EAAA6J,WAAA;QACA;UACAhH,MAAA,CAAAtD,IAAA,CAAAqH,GAAA,CAAA5G,EAAA;QACA;MACA;MACA,OAAA6C,MAAA;IACA;IACAkH,iBAAA,WAAAA,kBAAAC,KAAA;MAAA,IAAAC,OAAA;MAAA,IAAA1L,OAAA,GAAAyL,KAAA,CAAAzL,OAAA;QAAA2L,KAAA,GAAAF,KAAA,CAAAE,KAAA;QAAA3T,IAAA,GAAAyT,KAAA,CAAAzT,IAAA;MACA,QAAAA,IAAA;QACA;UACA,SAAA6B,kBAAA,CAAAgH,MAAA;YACA,KAAA4F,YAAA,MAAA9G,aAAA;UACA;YACA,KAAAtI,aAAA;YACAgQ,UAAA;cACAqE,OAAA,CAAArU,aAAA;YACA;UACA;UACA;MACA;IACA;IACAuU,gBAAA,WAAAA,iBAAAC,KAAA;MAAA,IAAAhK,MAAA,GAAAgK,KAAA,CAAAhK,MAAA;QAAAiK,UAAA,GAAAD,KAAA,CAAAC,UAAA;MACA,QAAAA,UAAA;QACA;UACA,KAAAC,WAAA,CAAAlK,MAAA,CAAAmK,QAAA;UACA;QACA;UACA,KAAAC,cAAA,CAAApK,MAAA,CAAAmK,QAAA;UACA;QACA;UACA;MACA;IACA;IACAD,WAAA,WAAAA,YAAA9B,KAAA;MACA,IAAAA,KAAA;QACA,IAAAnQ,SAAA,QAAA4K,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAA6B,YAAA,GAAAC,QAAA;QACA,IAAAwF,IAAA,GAAApS,SAAA,CAAAmQ,KAAA;QACAnQ,SAAA,CAAAmQ,KAAA,QAAAnQ,SAAA,CAAAmQ,KAAA;QACAnQ,SAAA,CAAAmQ,KAAA,IAAAiC,IAAA;QACA,KAAAxO,gBAAA,GAAA5D,SAAA;QACA,KAAAsK,QAAA,CAAAiB,OAAA;MACA;IACA;IACA4G,cAAA,WAAAA,eAAAhC,KAAA;MACA,IAAAnQ,SAAA,QAAA4K,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAA6B,YAAA,GAAAC,QAAA;MACA,IAAAuD,KAAA,KAAAnQ,SAAA,CAAA+G,MAAA;QACA,IAAAqL,IAAA,GAAApS,SAAA,CAAAmQ,KAAA;QACAnQ,SAAA,CAAAmQ,KAAA,QAAAnQ,SAAA,CAAAmQ,KAAA;QACAnQ,SAAA,CAAAmQ,KAAA,IAAAiC,IAAA;QACA,KAAAxO,gBAAA,GAAA5D,SAAA;QACA,KAAAsK,QAAA,CAAAiB,OAAA;MACA;IACA;IACA8G,eAAA,WAAAA,gBAAApM,GAAA;MACA,SAAAlG,kBAAA,CAAAgH,MAAA;QACA,KAAAd,GAAA,CAAAa,QAAA,CAAAC,MAAA,SAAAlB,aAAA,CAAAsG,SAAA,KAAAuC,SAAA;UACA,IAAAxQ,IAAA,QAAA6H,eAAA;UACA,IAAAgC,MAAA,QAAAlC,aAAA;UACAkC,MAAA,CAAAoE,SAAA,CAAAjO,IAAA,KAAA+H,GAAA,CAAA/H,IAAA;UACA,KAAAyO,YAAA,CAAA5E,MAAA;QACA;UACA,IAAA9B,GAAA,CAAAhI,KAAA;YACA,IAAAC,KAAA,QAAA6H,eAAA;YACA,IAAAgC,OAAA,QAAAlC,aAAA;YACA,IAAAkC,OAAA,CAAAoE,SAAA,CAAAjO,KAAA,MAAAwQ,SAAA,SAAA3G,OAAA,CAAAoE,SAAA,CAAAjO,KAAA;YACA,KAAAyO,YAAA,CAAA5E,OAAA;UACA;QACA;MACA;IACA;IACAuK,iBAAA,WAAAA,kBAAAC,OAAA;MACA,KAAAtT,eAAA,CAAAC,WAAA,GAAAqT,OAAA,CAAArU,IAAA;MACA,KAAA0M,KAAA,CAAA4H,QAAA,CAAAC,WAAA;IACA;IACAC,iBAAA,WAAAA,kBAAA;MACA,KAAAlV,eAAA;IACA;IACAmV,iBAAA,WAAAA,kBAAAC,GAAA;MACA,KAAAzT,gBAAA,CAAAC,YAAA,GAAAwT,GAAA;MACA,KAAAhI,KAAA,CAAA4H,QAAA,CAAAK,UAAA,GAAAD,GAAA;IACA;IACAE,sBAAA,WAAAA,uBAAAC,MAAA;MACA,KAAArU,qBAAA,GAAAqU,MAAA;IACA;IACAC,YAAA,WAAAA,aAAAJ,GAAA;MAAA,IAAAK,sBAAA;MACA;MACA,IAAA9G,SAAA,QAAAkF,gBAAA;MAAA,IAAA6B,KAAA,YAAAA,MAAA9M,GAAA,EACA;QACA,IACAwM,GAAA,CAAAxM,GAAA,MAAAsI,SAAA,GACAkE,GAAA,CAAAxM,GAAA,YACA;UACA,IAAA6H,KAAA,CAAAsB,OAAA,CAAAqD,GAAA,CAAAxM,GAAA;YACA+F,SAAA,CAAA/F,GAAA,IAAAwM,GAAA,CAAAxM,GAAA;UACA,kBAAAwM,GAAA,CAAAxM,GAAA;YACA,IAAAwM,GAAA,CAAAxM,GAAA,EAAA+M,IAAA;cACAP,GAAA,CAAAxM,GAAA,EAAAgN,KAAA,MAAApM,OAAA,WAAAC,IAAA;gBACAkF,SAAA,CAAA/F,GAAA,EAAAc,IAAA,CAAAD,IAAA;cACA;YACA;UACA;QACA;MACA;MAfA,SAAAb,GAAA,IAAA+F,SAAA;QAAA+G,KAAA,CAAA9M,GAAA;MAAA;MAgBA,CAAA6M,sBAAA,QAAAtU,mBAAA,cAAAsU,sBAAA,uBAAAA,sBAAA,CAAAjM,OAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAoM,MAAA,aAAAT,GAAA,CAAA3L,IAAA,CAAAqF,KAAA;UACAH,SAAA,CAAAlF,IAAA,CAAAqF,KAAA;UACAH,SAAA,CAAAlF,IAAA,CAAAqF,KAAA,EAAArF,IAAA,CAAAqM,QAAA,IAAAV,GAAA,CAAA3L,IAAA,CAAAqF,KAAA;QACA;MACA;MACAtE,MAAA,CAAAC,MAAA,MAAApC,aAAA,CAAAsG,SAAA,QAAAA,SAAA;MACA,KAAAQ,YAAA,MAAA9G,aAAA;MACA,KAAAyE,QAAA,CAAAiB,OAAA;IACA;IACAgI,kBAAA,WAAAA,mBAAA;MACA,KAAAxO,cAAA;QACAC,MAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,IAAA;MACA;MACA,KAAAuG,eAAA;MACA,KAAA6H,oBAAA;MACA,KAAAtQ,YAAA;IACA;IACAuQ,gCAAA,WAAAA,iCAAAxN,GAAA,EAAAC,OAAA,EAAAC,CAAA;MACA,QAAAF,GAAA,CAAA/H,IAAA;QACA;UACA;UACA,KAAAqV,kBAAA;UACA;QACA;UACA;UACA,KAAAG,gBAAA;UACA;QACA;UACA;UACA,KAAAC,eAAA;UACA;MACA;IACA;IACAD,gBAAA,WAAAA,iBAAA;MACA,KAAA9I,KAAA,CAAAgJ,YAAA,CAAAhJ,KAAA,CAAAE,KAAA,CAAA+I,gBAAA;IACA;IACAF,eAAA,WAAAA,gBAAA;MACA,KAAA/I,KAAA,CAAAgJ,YAAA,CAAAhJ,KAAA,CAAAE,KAAA,CAAAgJ,eAAA;IACA;IACAtV,gBAAA,WAAAA,iBAAAyH,GAAA;MACA,KAAAA,GAAA,CAAAnI,IAAA;QACA,KAAA2V,gCAAA,CAAAxN,GAAA;MACA;IACA;IACA8N,eAAA,WAAAA,gBAAA;MAAA,IAAAC,OAAA;MACAtX,UAAA,CAAAuX,YAAA,GAAA1M,IAAA,WAAAC,GAAA;QACA,IAAAA,GAAA,IAAAA,GAAA,CAAAwM,OAAA,CAAAjX,UAAA,mBAAAiX,OAAA,CAAAjX,UAAA;UACA,IAAAyK,GAAA,CAAA1K,IAAA,IAAA0K,GAAA,CAAA1K,IAAA,CAAAsP,MAAA;YACA4H,OAAA,CAAApO,YAAA,GAAA4B,GAAA,CAAA1K,IAAA,CAAAsP,MAAA;UACA;YACA4H,OAAA,CAAApO,YAAA,GAAAiI,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAuD,SAAA,CAAAzU,OAAA,CAAAiJ,YAAA;UACA;QACA;UACAoO,OAAA,CAAApO,YAAA,GAAAiI,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAuD,SAAA,CAAAzU,OAAA,CAAAiJ,YAAA;QACA;MACA,GAAA6E,KAAA;QACAuJ,OAAA,CAAApO,YAAA,GAAAiI,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAuD,SAAA,CAAAzU,OAAA,CAAAiJ,YAAA;MACA;IACA;IACA4N,oBAAA,WAAAA,qBAAA;MAAA,IAAAU,OAAA;MACA,KAAAtQ,gBAAA,QAAAgC,YAAA,CAAAkH,GAAA,WAAA7F,IAAA;QACA,IAAAA,IAAA,CAAAmG,KAAA;UACAnG,IAAA,CAAAmG,KAAA;QACA;QACA;UACAL,IAAA,EAAA9F,IAAA,CAAA8F,IAAA,CAAAnF,WAAA;UACA1J,IAAA,EAAA+I,IAAA,CAAA8F,IAAA,CAAAnF,WAAA;UACA2E,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;UACAzO,IAAA,EAAAmJ,IAAA,CAAAnJ,IAAA,kBAAAmJ,IAAA,CAAAnJ,IAAA;UACAsP,KAAA,EAAAnG,IAAA,CAAAmG,KAAA;UACAC,UAAA,EAAApG,IAAA,CAAAmG,KAAA;UACAX,OAAA,EAAAxF,IAAA,CAAAwF,OAAA;UACAa,QAAA,EAAArG,IAAA,CAAAqG;QACA;MACA;MACAC,UAAA;QACA2G,OAAA,CAAAtJ,KAAA,CAAA8B,eAAA,CAAA9B,KAAA,CAAAE,KAAA,CAAA0C,cAAA,CAAA0G,OAAA,CAAAtQ,gBAAA,CAAA6J,MAAA,WAAAxG,IAAA;UAAA,OAAAA,IAAA,CAAAwF,OAAA;QAAA;MACA;MACA,KAAA7G,YAAA,CAAAoB,OAAA,WAAAmN,GAAA;QACAA,GAAA,CAAA9G,UAAA,GAAA8G,GAAA,CAAA/G,KAAA;MACA;IACA;EACA;EACAgH,SAAA,WAAAA,UAAA;IACA,IAAAvG,IAAA,CAAAuD,SAAA,MAAAvL,aAAA;MACA,KAAA7F,SAAA;MACA,KAAA2M,YAAA,MAAA9G,aAAA;IACA;EACA;EACAwO,OAAA,WAAAA,QAAA,GACA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,OAAA;IACA,KAAAR,eAAA;IACA,KAAApI,eAAA;IACA,IAAAqF,MAAA,CAAAC,YAAA,CAAAuD,OAAA;MACA,IAAAzD,YAAA,GAAAlD,IAAA,CAAAC,KAAA,CAAAkD,MAAA,CAAAC,YAAA,CAAAuD,OAAA;MACA,KAAA5Q,gBAAA,GAAAmN,YAAA,CAAA/Q,SAAA;MACA,IAAA4P,UAAA,QAAAhF,KAAA,CAAAgJ,YAAA,CAAAhJ,KAAA,CAAAE,KAAA,CAAA6B,YAAA,GAAAC,QAAA;MACA,IAAAR,MAAA;MACA,IAAA0D,MAAA;MACAF,UAAA,CAAA5I,OAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAnJ,IAAA;UACAsO,MAAA,CAAAlF,IAAA;YACA6F,IAAA,EAAA9F,IAAA,CAAA8F,IAAA;YACAjP,IAAA,EAAAmJ,IAAA,CAAAnJ,IAAA;YACAwP,QAAA,EAAArG,IAAA,CAAAqG,QAAA;YACAF,KAAA,EAAAnG,IAAA,CAAAmG;UACA;QACA;MACA;MACAwC,UAAA,CAAA5I,OAAA,WAAAC,IAAA;QACA,IAAAA,IAAA,CAAAnJ,IAAA,YAAAmJ,IAAA,CAAAwF,OAAA;UACAqD,MAAA,CAAA5I,IAAA;YACA6F,IAAA,EAAA9F,IAAA,CAAAsF,KAAA;YACArO,IAAA,EAAA+I,IAAA,CAAA/I;UACA;QACA;MACA;MACA,IAAAuW,WAAA;MACA3E,MAAA,CAAA9I,OAAA,WAAAC,IAAA;QACA,IAAA/I,IAAA,GAAA+I,IAAA,CAAA/I,IAAA;QACAuW,WAAA,CAAAvW,IAAA;MACA;MACA,KAAAU,aAAA,GAAA6V,WAAA;MACA,KAAA1U,kBAAA;MACA,KAAAC,SAAA;MACA,IAAAoM,MAAA,CAAArF,MAAA;QACA,IAAAgB,MAAA;UACAgI,SAAA;UACA5D,SAAA;UACAC,MAAA,EAAAA,MAAA;UACAC,MAAA;QACA;QACA,KAAAM,YAAA,CAAA5E,MAAA;QACA,IAAAmI,cAAA;QACAN,UAAA,CAAA5I,OAAA,WAAAC,IAAA,EAAAkJ,KAAA;UACA,IAAAlJ,IAAA,CAAAnJ,IAAA;YACA,IAAAqS,KAAA;cACAD,cAAA,CAAAhJ,IAAA;gBACAqF,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;gBACA6D,WAAA;gBACA9D,KAAA,EAAArF,IAAA,CAAA/I,IAAA;gBACAmS,KAAA;gBACAC,KAAA;gBACAxS,IAAA;gBACAyS,QAAA;cACA;YACA;cACAL,cAAA,CAAAhJ,IAAA;gBACAqF,KAAA,EAAAtF,IAAA,CAAAsF,KAAA;gBACA6D,WAAA;gBACA9D,KAAA,EAAArF,IAAA,CAAA/I,IAAA;gBACAmS,KAAA;gBACAC,KAAA;cACA;YACA;UACA;QACA;QACAJ,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACAT,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACAT,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACAT,cAAA,CAAAhJ,IAAA;UACAqF,KAAA;UACAD,KAAA;UACA+D,KAAA;UACAC,KAAA;UACA1Q,YAAA;UACA4Q,UAAA;YACAzD,IAAA;YACA0D,OAAA;YACAC,YAAA;YACAC,KAAA;UACA;QACA;QACA,KAAA5Q,kBAAA,GAAAmQ,cAAA;MACA;QACA3C,UAAA;UACAgH,OAAA,CAAArR,YAAA;QACA;MACA;IACA;IACA,KAAA+G,YAAA;EACA;AAEA"}]}