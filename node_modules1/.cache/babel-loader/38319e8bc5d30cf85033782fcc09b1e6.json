{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\px-to-vw-page\\threeGuaranteesExpenditure\\components\\RightBottom.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\px-to-vw-page\\threeGuaranteesExpenditure\\components\\RightBottom.vue","mtime":1694576524818},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["defineComponent","ref","computedPx","formatterThousands","commafy","comparison","useTableHeight","setup","_getTableData","columns","field","title","align","children","width","headerAlign","formatter","_ref","cellValue","_ref2","_ref3","_ref4","digits","tableData","cellClassName","_ref5","row","column","property","getTableData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$comparison","data","wrap","_callee$","_context","prev","next","sent","value","stop","apply","arguments","_useTableHeight","tableHeight"],"sources":["src/views/px-to-vw-page/threeGuaranteesExpenditure/components/RightBottom.vue"],"sourcesContent":["<template>\r\n  <div class=\"module-wrapper\">\r\n    <p class=\"module-title\">“三保”季度对比情况</p>\r\n    <vxe-grid\r\n      :columns=\"columns\"\r\n      :data=\"tableData\"\r\n      :height=\"tableHeight\"\r\n      auto-resize\r\n      sync-resize\r\n      :cell-class-name=\"cellClassName\"\r\n      show-overflow=\"tooltip\"\r\n      show-header-overflow=\"tooltip\"\r\n      border=\"full\"\r\n      class=\"chart-table\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref } from '@vue/composition-api'\r\nimport computedPx from '@/utils/computedPx'\r\nimport { formatterThousands } from '@/utils/thousands.js'\r\nimport { commafy } from 'xe-utils'\r\nimport { comparison } from '@/api/frame/main/threeGuaranteesExpenditure/index.js'\r\nimport { useTableHeight } from '../../common/hooks/useTableHeight'\r\n\r\nexport default defineComponent({\r\n  setup() {\r\n    const columns = ref([\r\n      {\r\n        field: 'year',\r\n        title: '',\r\n        align: 'center',\r\n        children: [\r\n          {\r\n            field: 'quarterly',\r\n            title: '季度',\r\n            width: computedPx(134),\r\n            align: 'center'\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        title: '三保',\r\n        align: 'center',\r\n        children: [\r\n          {\r\n            field: 'wages',\r\n            title: '工资',\r\n            width: computedPx(114),\r\n            headerAlign: 'center',\r\n            align: 'right',\r\n            formatter: ({ cellValue }) => {\r\n              return formatterThousands(cellValue)\r\n            }\r\n          },\r\n          {\r\n            field: 'operate',\r\n            title: '运转',\r\n            width: computedPx(122),\r\n            headerAlign: 'center',\r\n            align: 'right',\r\n            formatter: ({ cellValue }) => {\r\n              return formatterThousands(cellValue)\r\n            }\r\n          },\r\n          {\r\n            field: 'livelihood',\r\n            title: '民生',\r\n            width: computedPx(110),\r\n            headerAlign: 'center',\r\n            align: 'right',\r\n            formatter: ({ cellValue }) => {\r\n              return formatterThousands(cellValue)\r\n            }\r\n          },\r\n          {\r\n            field: 'amount',\r\n            title: '合计(万元)',\r\n            width: computedPx(143),\r\n            headerAlign: 'center',\r\n            align: 'right',\r\n            formatter: ({ cellValue }) => {\r\n              return formatterThousands(commafy(cellValue / (10000 || 1), { digits: 2 }))\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ])\r\n\r\n    // 表格数据\r\n    const tableData = ref([])\r\n\r\n    // 额外类名\r\n    function cellClassName({ row, column }) {\r\n      if (column.property === 'surplus' && row[column.property] < 0) {\r\n        return 'td-text-red'\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 获取数据\r\n     * @return {Promise<void>}\r\n     */\r\n    async function getTableData() {\r\n      const { data } = await comparison()\r\n      tableData.value = data\r\n    }\r\n    getTableData()\r\n\r\n    const { tableHeight } = useTableHeight(224)\r\n\r\n    return {\r\n      columns,\r\n      tableData,\r\n      tableHeight,\r\n      cellClassName\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"../../common/style/module-wrapper\";\r\n@import \"../../common/style/vxe-table-style\";\r\n\r\n.tfoot-legend {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n\r\n  &-item {\r\n    display: flex;\r\n    align-items: center;\r\n    &-name {\r\n      margin-left: 8px;\r\n    }\r\n  }\r\n}\r\n\r\n.module-wrapper {\r\n  height: 278px;\r\n}\r\n.chart-table {\r\n  /deep/.vxe-table {\r\n    .vxe-header--row,\r\n    .vxe-header--column {\r\n      height: 32px !important;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAmBA,SAAAA,eAAA,EAAAC,GAAA;AACA,OAAAC,UAAA;AACA,SAAAC,kBAAA;AACA,SAAAC,OAAA;AACA,SAAAC,UAAA;AACA,SAAAC,cAAA;AAEA,eAAAN,eAAA;EACAO,KAAA,WAAAA,MAAA;IAAA,IAAAC,aAAA;IACA,IAAAC,OAAA,GAAAR,GAAA,EACA;MACAS,KAAA;MACAC,KAAA;MACAC,KAAA;MACAC,QAAA,GACA;QACAH,KAAA;QACAC,KAAA;QACAG,KAAA,EAAAZ,UAAA;QACAU,KAAA;MACA;IAEA,GACA;MACAD,KAAA;MACAC,KAAA;MACAC,QAAA,GACA;QACAH,KAAA;QACAC,KAAA;QACAG,KAAA,EAAAZ,UAAA;QACAa,WAAA;QACAH,KAAA;QACAI,SAAA,WAAAA,UAAAC,IAAA;UAAA,IAAAC,SAAA,GAAAD,IAAA,CAAAC,SAAA;UACA,OAAAf,kBAAA,CAAAe,SAAA;QACA;MACA,GACA;QACAR,KAAA;QACAC,KAAA;QACAG,KAAA,EAAAZ,UAAA;QACAa,WAAA;QACAH,KAAA;QACAI,SAAA,WAAAA,UAAAG,KAAA;UAAA,IAAAD,SAAA,GAAAC,KAAA,CAAAD,SAAA;UACA,OAAAf,kBAAA,CAAAe,SAAA;QACA;MACA,GACA;QACAR,KAAA;QACAC,KAAA;QACAG,KAAA,EAAAZ,UAAA;QACAa,WAAA;QACAH,KAAA;QACAI,SAAA,WAAAA,UAAAI,KAAA;UAAA,IAAAF,SAAA,GAAAE,KAAA,CAAAF,SAAA;UACA,OAAAf,kBAAA,CAAAe,SAAA;QACA;MACA,GACA;QACAR,KAAA;QACAC,KAAA;QACAG,KAAA,EAAAZ,UAAA;QACAa,WAAA;QACAH,KAAA;QACAI,SAAA,WAAAA,UAAAK,KAAA;UAAA,IAAAH,SAAA,GAAAG,KAAA,CAAAH,SAAA;UACA,OAAAf,kBAAA,CAAAC,OAAA,CAAAc,SAAA;YAAAI,MAAA;UAAA;QACA;MACA;IAEA,EACA;;IAEA;IACA,IAAAC,SAAA,GAAAtB,GAAA;;IAEA;IACA,SAAAuB,cAAAC,KAAA;MAAA,IAAAC,GAAA,GAAAD,KAAA,CAAAC,GAAA;QAAAC,MAAA,GAAAF,KAAA,CAAAE,MAAA;MACA,IAAAA,MAAA,CAAAC,QAAA,kBAAAF,GAAA,CAAAC,MAAA,CAAAC,QAAA;QACA;MACA;IACA;;IAEA;AACA;AACA;AACA;IAHA,SAIAC,aAAA;MAAA,QAAArB,aAAA,GAAAA,aAAA,IAAAsB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,iBAAA,EAAAC,IAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAE,IAAA;cAAA,OACAnC,UAAA;YAAA;cAAA6B,iBAAA,GAAAI,QAAA,CAAAG,IAAA;cAAAN,IAAA,GAAAD,iBAAA,CAAAC,IAAA;cACAZ,SAAA,CAAAmB,KAAA,GAAAP,IAAA;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAK,IAAA;UAAA;QAAA,GAAAV,OAAA;MAAA,CACA,IAAAW,KAAA,OAAAC,SAAA;IAAA;IACAhB,YAAA;IAEA,IAAAiB,eAAA,GAAAxC,cAAA;MAAAyC,WAAA,GAAAD,eAAA,CAAAC,WAAA;IAEA;MACAtC,OAAA,EAAAA,OAAA;MACAc,SAAA,EAAAA,SAAA;MACAwB,WAAA,EAAAA,WAAA;MACAvB,aAAA,EAAAA;IACA;EACA;AACA"}]}