{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\benefitPeopleConfirm\\benefitPeopleConfirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\benefitPeopleConfirm\\benefitPeopleConfirm.vue","mtime":1695716045308},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZnVuY3Rpb24gX3R5cGVvZihvKSB7ICJAYmFiZWwvaGVscGVycyAtIHR5cGVvZiI7IHJldHVybiBfdHlwZW9mID0gImZ1bmN0aW9uIiA9PSB0eXBlb2YgU3ltYm9sICYmICJzeW1ib2wiID09IHR5cGVvZiBTeW1ib2wuaXRlcmF0b3IgPyBmdW5jdGlvbiAobykgeyByZXR1cm4gdHlwZW9mIG87IH0gOiBmdW5jdGlvbiAobykgeyByZXR1cm4gbyAmJiAiZnVuY3Rpb24iID09IHR5cGVvZiBTeW1ib2wgJiYgby5jb25zdHJ1Y3RvciA9PT0gU3ltYm9sICYmIG8gIT09IFN5bWJvbC5wcm90b3R5cGUgPyAic3ltYm9sIiA6IHR5cGVvZiBvOyB9LCBfdHlwZW9mKG8pOyB9CmZ1bmN0aW9uIF9yZWdlbmVyYXRvclJ1bnRpbWUoKSB7ICJ1c2Ugc3RyaWN0IjsgLyohIHJlZ2VuZXJhdG9yLXJ1bnRpbWUgLS0gQ29weXJpZ2h0IChjKSAyMDE0LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuIC0tIGxpY2Vuc2UgKE1JVCk6IGh0dHBzOi8vZ2l0aHViLmNvbS9mYWNlYm9vay9yZWdlbmVyYXRvci9ibG9iL21haW4vTElDRU5TRSAqLyBfcmVnZW5lcmF0b3JSdW50aW1lID0gZnVuY3Rpb24gX3JlZ2VuZXJhdG9yUnVudGltZSgpIHsgcmV0dXJuIGU7IH07IHZhciB0LCBlID0ge30sIHIgPSBPYmplY3QucHJvdG90eXBlLCBuID0gci5oYXNPd25Qcm9wZXJ0eSwgbyA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSB8fCBmdW5jdGlvbiAodCwgZSwgcikgeyB0W2VdID0gci52YWx1ZTsgfSwgaSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIFN5bWJvbCA/IFN5bWJvbCA6IHt9LCBhID0gaS5pdGVyYXRvciB8fCAiQEBpdGVyYXRvciIsIGMgPSBpLmFzeW5jSXRlcmF0b3IgfHwgIkBAYXN5bmNJdGVyYXRvciIsIHUgPSBpLnRvU3RyaW5nVGFnIHx8ICJAQHRvU3RyaW5nVGFnIjsgZnVuY3Rpb24gZGVmaW5lKHQsIGUsIHIpIHsgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0LCBlLCB7IHZhbHVlOiByLCBlbnVtZXJhYmxlOiAhMCwgY29uZmlndXJhYmxlOiAhMCwgd3JpdGFibGU6ICEwIH0pLCB0W2VdOyB9IHRyeSB7IGRlZmluZSh7fSwgIiIpOyB9IGNhdGNoICh0KSB7IGRlZmluZSA9IGZ1bmN0aW9uIGRlZmluZSh0LCBlLCByKSB7IHJldHVybiB0W2VdID0gcjsgfTsgfSBmdW5jdGlvbiB3cmFwKHQsIGUsIHIsIG4pIHsgdmFyIGkgPSBlICYmIGUucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yID8gZSA6IEdlbmVyYXRvciwgYSA9IE9iamVjdC5jcmVhdGUoaS5wcm90b3R5cGUpLCBjID0gbmV3IENvbnRleHQobiB8fCBbXSk7IHJldHVybiBvKGEsICJfaW52b2tlIiwgeyB2YWx1ZTogbWFrZUludm9rZU1ldGhvZCh0LCByLCBjKSB9KSwgYTsgfSBmdW5jdGlvbiB0cnlDYXRjaCh0LCBlLCByKSB7IHRyeSB7IHJldHVybiB7IHR5cGU6ICJub3JtYWwiLCBhcmc6IHQuY2FsbChlLCByKSB9OyB9IGNhdGNoICh0KSB7IHJldHVybiB7IHR5cGU6ICJ0aHJvdyIsIGFyZzogdCB9OyB9IH0gZS53cmFwID0gd3JhcDsgdmFyIGggPSAic3VzcGVuZGVkU3RhcnQiLCBsID0gInN1c3BlbmRlZFlpZWxkIiwgZiA9ICJleGVjdXRpbmciLCBzID0gImNvbXBsZXRlZCIsIHkgPSB7fTsgZnVuY3Rpb24gR2VuZXJhdG9yKCkge30gZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fSBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9IHZhciBwID0ge307IGRlZmluZShwLCBhLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTsgdmFyIGQgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YsIHYgPSBkICYmIGQoZCh2YWx1ZXMoW10pKSk7IHYgJiYgdiAhPT0gciAmJiBuLmNhbGwodiwgYSkgJiYgKHAgPSB2KTsgdmFyIGcgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPSBHZW5lcmF0b3IucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShwKTsgZnVuY3Rpb24gZGVmaW5lSXRlcmF0b3JNZXRob2RzKHQpIHsgWyJuZXh0IiwgInRocm93IiwgInJldHVybiJdLmZvckVhY2goZnVuY3Rpb24gKGUpIHsgZGVmaW5lKHQsIGUsIGZ1bmN0aW9uICh0KSB7IHJldHVybiB0aGlzLl9pbnZva2UoZSwgdCk7IH0pOyB9KTsgfSBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKHQsIGUpIHsgZnVuY3Rpb24gaW52b2tlKHIsIG8sIGksIGEpIHsgdmFyIGMgPSB0cnlDYXRjaCh0W3JdLCB0LCBvKTsgaWYgKCJ0aHJvdyIgIT09IGMudHlwZSkgeyB2YXIgdSA9IGMuYXJnLCBoID0gdS52YWx1ZTsgcmV0dXJuIGggJiYgIm9iamVjdCIgPT0gX3R5cGVvZihoKSAmJiBuLmNhbGwoaCwgIl9fYXdhaXQiKSA/IGUucmVzb2x2ZShoLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24gKHQpIHsgaW52b2tlKCJuZXh0IiwgdCwgaSwgYSk7IH0sIGZ1bmN0aW9uICh0KSB7IGludm9rZSgidGhyb3ciLCB0LCBpLCBhKTsgfSkgOiBlLnJlc29sdmUoaCkudGhlbihmdW5jdGlvbiAodCkgeyB1LnZhbHVlID0gdCwgaSh1KTsgfSwgZnVuY3Rpb24gKHQpIHsgcmV0dXJuIGludm9rZSgidGhyb3ciLCB0LCBpLCBhKTsgfSk7IH0gYShjLmFyZyk7IH0gdmFyIHI7IG8odGhpcywgIl9pbnZva2UiLCB7IHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh0LCBuKSB7IGZ1bmN0aW9uIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCkgeyByZXR1cm4gbmV3IGUoZnVuY3Rpb24gKGUsIHIpIHsgaW52b2tlKHQsIG4sIGUsIHIpOyB9KTsgfSByZXR1cm4gciA9IHIgPyByLnRoZW4oY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcsIGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKSA6IGNhbGxJbnZva2VXaXRoTWV0aG9kQW5kQXJnKCk7IH0gfSk7IH0gZnVuY3Rpb24gbWFrZUludm9rZU1ldGhvZChlLCByLCBuKSB7IHZhciBvID0gaDsgcmV0dXJuIGZ1bmN0aW9uIChpLCBhKSB7IGlmIChvID09PSBmKSB0aHJvdyBuZXcgRXJyb3IoIkdlbmVyYXRvciBpcyBhbHJlYWR5IHJ1bm5pbmciKTsgaWYgKG8gPT09IHMpIHsgaWYgKCJ0aHJvdyIgPT09IGkpIHRocm93IGE7IHJldHVybiB7IHZhbHVlOiB0LCBkb25lOiAhMCB9OyB9IGZvciAobi5tZXRob2QgPSBpLCBuLmFyZyA9IGE7OykgeyB2YXIgYyA9IG4uZGVsZWdhdGU7IGlmIChjKSB7IHZhciB1ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShjLCBuKTsgaWYgKHUpIHsgaWYgKHUgPT09IHkpIGNvbnRpbnVlOyByZXR1cm4gdTsgfSB9IGlmICgibmV4dCIgPT09IG4ubWV0aG9kKSBuLnNlbnQgPSBuLl9zZW50ID0gbi5hcmc7ZWxzZSBpZiAoInRocm93IiA9PT0gbi5tZXRob2QpIHsgaWYgKG8gPT09IGgpIHRocm93IG8gPSBzLCBuLmFyZzsgbi5kaXNwYXRjaEV4Y2VwdGlvbihuLmFyZyk7IH0gZWxzZSAicmV0dXJuIiA9PT0gbi5tZXRob2QgJiYgbi5hYnJ1cHQoInJldHVybiIsIG4uYXJnKTsgbyA9IGY7IHZhciBwID0gdHJ5Q2F0Y2goZSwgciwgbik7IGlmICgibm9ybWFsIiA9PT0gcC50eXBlKSB7IGlmIChvID0gbi5kb25lID8gcyA6IGwsIHAuYXJnID09PSB5KSBjb250aW51ZTsgcmV0dXJuIHsgdmFsdWU6IHAuYXJnLCBkb25lOiBuLmRvbmUgfTsgfSAidGhyb3ciID09PSBwLnR5cGUgJiYgKG8gPSBzLCBuLm1ldGhvZCA9ICJ0aHJvdyIsIG4uYXJnID0gcC5hcmcpOyB9IH07IH0gZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShlLCByKSB7IHZhciBuID0gci5tZXRob2QsIG8gPSBlLml0ZXJhdG9yW25dOyBpZiAobyA9PT0gdCkgcmV0dXJuIHIuZGVsZWdhdGUgPSBudWxsLCAidGhyb3ciID09PSBuICYmIGUuaXRlcmF0b3IucmV0dXJuICYmIChyLm1ldGhvZCA9ICJyZXR1cm4iLCByLmFyZyA9IHQsIG1heWJlSW52b2tlRGVsZWdhdGUoZSwgciksICJ0aHJvdyIgPT09IHIubWV0aG9kKSB8fCAicmV0dXJuIiAhPT0gbiAmJiAoci5tZXRob2QgPSAidGhyb3ciLCByLmFyZyA9IG5ldyBUeXBlRXJyb3IoIlRoZSBpdGVyYXRvciBkb2VzIG5vdCBwcm92aWRlIGEgJyIgKyBuICsgIicgbWV0aG9kIikpLCB5OyB2YXIgaSA9IHRyeUNhdGNoKG8sIGUuaXRlcmF0b3IsIHIuYXJnKTsgaWYgKCJ0aHJvdyIgPT09IGkudHlwZSkgcmV0dXJuIHIubWV0aG9kID0gInRocm93Iiwgci5hcmcgPSBpLmFyZywgci5kZWxlZ2F0ZSA9IG51bGwsIHk7IHZhciBhID0gaS5hcmc7IHJldHVybiBhID8gYS5kb25lID8gKHJbZS5yZXN1bHROYW1lXSA9IGEudmFsdWUsIHIubmV4dCA9IGUubmV4dExvYywgInJldHVybiIgIT09IHIubWV0aG9kICYmIChyLm1ldGhvZCA9ICJuZXh0Iiwgci5hcmcgPSB0KSwgci5kZWxlZ2F0ZSA9IG51bGwsIHkpIDogYSA6IChyLm1ldGhvZCA9ICJ0aHJvdyIsIHIuYXJnID0gbmV3IFR5cGVFcnJvcigiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3QiKSwgci5kZWxlZ2F0ZSA9IG51bGwsIHkpOyB9IGZ1bmN0aW9uIHB1c2hUcnlFbnRyeSh0KSB7IHZhciBlID0geyB0cnlMb2M6IHRbMF0gfTsgMSBpbiB0ICYmIChlLmNhdGNoTG9jID0gdFsxXSksIDIgaW4gdCAmJiAoZS5maW5hbGx5TG9jID0gdFsyXSwgZS5hZnRlckxvYyA9IHRbM10pLCB0aGlzLnRyeUVudHJpZXMucHVzaChlKTsgfSBmdW5jdGlvbiByZXNldFRyeUVudHJ5KHQpIHsgdmFyIGUgPSB0LmNvbXBsZXRpb24gfHwge307IGUudHlwZSA9ICJub3JtYWwiLCBkZWxldGUgZS5hcmcsIHQuY29tcGxldGlvbiA9IGU7IH0gZnVuY3Rpb24gQ29udGV4dCh0KSB7IHRoaXMudHJ5RW50cmllcyA9IFt7IHRyeUxvYzogInJvb3QiIH1dLCB0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKSwgdGhpcy5yZXNldCghMCk7IH0gZnVuY3Rpb24gdmFsdWVzKGUpIHsgaWYgKGUgfHwgIiIgPT09IGUpIHsgdmFyIHIgPSBlW2FdOyBpZiAocikgcmV0dXJuIHIuY2FsbChlKTsgaWYgKCJmdW5jdGlvbiIgPT0gdHlwZW9mIGUubmV4dCkgcmV0dXJuIGU7IGlmICghaXNOYU4oZS5sZW5ndGgpKSB7IHZhciBvID0gLTEsIGkgPSBmdW5jdGlvbiBuZXh0KCkgeyBmb3IgKDsgKytvIDwgZS5sZW5ndGg7KSBpZiAobi5jYWxsKGUsIG8pKSByZXR1cm4gbmV4dC52YWx1ZSA9IGVbb10sIG5leHQuZG9uZSA9ICExLCBuZXh0OyByZXR1cm4gbmV4dC52YWx1ZSA9IHQsIG5leHQuZG9uZSA9ICEwLCBuZXh0OyB9OyByZXR1cm4gaS5uZXh0ID0gaTsgfSB9IHRocm93IG5ldyBUeXBlRXJyb3IoX3R5cGVvZihlKSArICIgaXMgbm90IGl0ZXJhYmxlIik7IH0gcmV0dXJuIEdlbmVyYXRvckZ1bmN0aW9uLnByb3RvdHlwZSA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBvKGcsICJjb25zdHJ1Y3RvciIsIHsgdmFsdWU6IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCBjb25maWd1cmFibGU6ICEwIH0pLCBvKEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlLCAiY29uc3RydWN0b3IiLCB7IHZhbHVlOiBHZW5lcmF0b3JGdW5jdGlvbiwgY29uZmlndXJhYmxlOiAhMCB9KSwgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkZWZpbmUoR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIHUsICJHZW5lcmF0b3JGdW5jdGlvbiIpLCBlLmlzR2VuZXJhdG9yRnVuY3Rpb24gPSBmdW5jdGlvbiAodCkgeyB2YXIgZSA9ICJmdW5jdGlvbiIgPT0gdHlwZW9mIHQgJiYgdC5jb25zdHJ1Y3RvcjsgcmV0dXJuICEhZSAmJiAoZSA9PT0gR2VuZXJhdG9yRnVuY3Rpb24gfHwgIkdlbmVyYXRvckZ1bmN0aW9uIiA9PT0gKGUuZGlzcGxheU5hbWUgfHwgZS5uYW1lKSk7IH0sIGUubWFyayA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiBPYmplY3Quc2V0UHJvdG90eXBlT2YgPyBPYmplY3Quc2V0UHJvdG90eXBlT2YodCwgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUpIDogKHQuX19wcm90b19fID0gR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsIGRlZmluZSh0LCB1LCAiR2VuZXJhdG9yRnVuY3Rpb24iKSksIHQucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShnKSwgdDsgfSwgZS5hd3JhcCA9IGZ1bmN0aW9uICh0KSB7IHJldHVybiB7IF9fYXdhaXQ6IHQgfTsgfSwgZGVmaW5lSXRlcmF0b3JNZXRob2RzKEFzeW5jSXRlcmF0b3IucHJvdG90eXBlKSwgZGVmaW5lKEFzeW5jSXRlcmF0b3IucHJvdG90eXBlLCBjLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KSwgZS5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvciwgZS5hc3luYyA9IGZ1bmN0aW9uICh0LCByLCBuLCBvLCBpKSB7IHZvaWQgMCA9PT0gaSAmJiAoaSA9IFByb21pc2UpOyB2YXIgYSA9IG5ldyBBc3luY0l0ZXJhdG9yKHdyYXAodCwgciwgbiwgbyksIGkpOyByZXR1cm4gZS5pc0dlbmVyYXRvckZ1bmN0aW9uKHIpID8gYSA6IGEubmV4dCgpLnRoZW4oZnVuY3Rpb24gKHQpIHsgcmV0dXJuIHQuZG9uZSA/IHQudmFsdWUgOiBhLm5leHQoKTsgfSk7IH0sIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhnKSwgZGVmaW5lKGcsIHUsICJHZW5lcmF0b3IiKSwgZGVmaW5lKGcsIGEsIGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH0pLCBkZWZpbmUoZywgInRvU3RyaW5nIiwgZnVuY3Rpb24gKCkgeyByZXR1cm4gIltvYmplY3QgR2VuZXJhdG9yXSI7IH0pLCBlLmtleXMgPSBmdW5jdGlvbiAodCkgeyB2YXIgZSA9IE9iamVjdCh0KSwgciA9IFtdOyBmb3IgKHZhciBuIGluIGUpIHIucHVzaChuKTsgcmV0dXJuIHIucmV2ZXJzZSgpLCBmdW5jdGlvbiBuZXh0KCkgeyBmb3IgKDsgci5sZW5ndGg7KSB7IHZhciB0ID0gci5wb3AoKTsgaWYgKHQgaW4gZSkgcmV0dXJuIG5leHQudmFsdWUgPSB0LCBuZXh0LmRvbmUgPSAhMSwgbmV4dDsgfSByZXR1cm4gbmV4dC5kb25lID0gITAsIG5leHQ7IH07IH0sIGUudmFsdWVzID0gdmFsdWVzLCBDb250ZXh0LnByb3RvdHlwZSA9IHsgY29uc3RydWN0b3I6IENvbnRleHQsIHJlc2V0OiBmdW5jdGlvbiByZXNldChlKSB7IGlmICh0aGlzLnByZXYgPSAwLCB0aGlzLm5leHQgPSAwLCB0aGlzLnNlbnQgPSB0aGlzLl9zZW50ID0gdCwgdGhpcy5kb25lID0gITEsIHRoaXMuZGVsZWdhdGUgPSBudWxsLCB0aGlzLm1ldGhvZCA9ICJuZXh0IiwgdGhpcy5hcmcgPSB0LCB0aGlzLnRyeUVudHJpZXMuZm9yRWFjaChyZXNldFRyeUVudHJ5KSwgIWUpIGZvciAodmFyIHIgaW4gdGhpcykgInQiID09PSByLmNoYXJBdCgwKSAmJiBuLmNhbGwodGhpcywgcikgJiYgIWlzTmFOKCtyLnNsaWNlKDEpKSAmJiAodGhpc1tyXSA9IHQpOyB9LCBzdG9wOiBmdW5jdGlvbiBzdG9wKCkgeyB0aGlzLmRvbmUgPSAhMDsgdmFyIHQgPSB0aGlzLnRyeUVudHJpZXNbMF0uY29tcGxldGlvbjsgaWYgKCJ0aHJvdyIgPT09IHQudHlwZSkgdGhyb3cgdC5hcmc7IHJldHVybiB0aGlzLnJ2YWw7IH0sIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbiBkaXNwYXRjaEV4Y2VwdGlvbihlKSB7IGlmICh0aGlzLmRvbmUpIHRocm93IGU7IHZhciByID0gdGhpczsgZnVuY3Rpb24gaGFuZGxlKG4sIG8pIHsgcmV0dXJuIGEudHlwZSA9ICJ0aHJvdyIsIGEuYXJnID0gZSwgci5uZXh0ID0gbiwgbyAmJiAoci5tZXRob2QgPSAibmV4dCIsIHIuYXJnID0gdCksICEhbzsgfSBmb3IgKHZhciBvID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IG8gPj0gMDsgLS1vKSB7IHZhciBpID0gdGhpcy50cnlFbnRyaWVzW29dLCBhID0gaS5jb21wbGV0aW9uOyBpZiAoInJvb3QiID09PSBpLnRyeUxvYykgcmV0dXJuIGhhbmRsZSgiZW5kIik7IGlmIChpLnRyeUxvYyA8PSB0aGlzLnByZXYpIHsgdmFyIGMgPSBuLmNhbGwoaSwgImNhdGNoTG9jIiksIHUgPSBuLmNhbGwoaSwgImZpbmFsbHlMb2MiKTsgaWYgKGMgJiYgdSkgeyBpZiAodGhpcy5wcmV2IDwgaS5jYXRjaExvYykgcmV0dXJuIGhhbmRsZShpLmNhdGNoTG9jLCAhMCk7IGlmICh0aGlzLnByZXYgPCBpLmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoaS5maW5hbGx5TG9jKTsgfSBlbHNlIGlmIChjKSB7IGlmICh0aGlzLnByZXYgPCBpLmNhdGNoTG9jKSByZXR1cm4gaGFuZGxlKGkuY2F0Y2hMb2MsICEwKTsgfSBlbHNlIHsgaWYgKCF1KSB0aHJvdyBuZXcgRXJyb3IoInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5Iik7IGlmICh0aGlzLnByZXYgPCBpLmZpbmFsbHlMb2MpIHJldHVybiBoYW5kbGUoaS5maW5hbGx5TG9jKTsgfSB9IH0gfSwgYWJydXB0OiBmdW5jdGlvbiBhYnJ1cHQodCwgZSkgeyBmb3IgKHZhciByID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IHIgPj0gMDsgLS1yKSB7IHZhciBvID0gdGhpcy50cnlFbnRyaWVzW3JdOyBpZiAoby50cnlMb2MgPD0gdGhpcy5wcmV2ICYmIG4uY2FsbChvLCAiZmluYWxseUxvYyIpICYmIHRoaXMucHJldiA8IG8uZmluYWxseUxvYykgeyB2YXIgaSA9IG87IGJyZWFrOyB9IH0gaSAmJiAoImJyZWFrIiA9PT0gdCB8fCAiY29udGludWUiID09PSB0KSAmJiBpLnRyeUxvYyA8PSBlICYmIGUgPD0gaS5maW5hbGx5TG9jICYmIChpID0gbnVsbCk7IHZhciBhID0gaSA/IGkuY29tcGxldGlvbiA6IHt9OyByZXR1cm4gYS50eXBlID0gdCwgYS5hcmcgPSBlLCBpID8gKHRoaXMubWV0aG9kID0gIm5leHQiLCB0aGlzLm5leHQgPSBpLmZpbmFsbHlMb2MsIHkpIDogdGhpcy5jb21wbGV0ZShhKTsgfSwgY29tcGxldGU6IGZ1bmN0aW9uIGNvbXBsZXRlKHQsIGUpIHsgaWYgKCJ0aHJvdyIgPT09IHQudHlwZSkgdGhyb3cgdC5hcmc7IHJldHVybiAiYnJlYWsiID09PSB0LnR5cGUgfHwgImNvbnRpbnVlIiA9PT0gdC50eXBlID8gdGhpcy5uZXh0ID0gdC5hcmcgOiAicmV0dXJuIiA9PT0gdC50eXBlID8gKHRoaXMucnZhbCA9IHRoaXMuYXJnID0gdC5hcmcsIHRoaXMubWV0aG9kID0gInJldHVybiIsIHRoaXMubmV4dCA9ICJlbmQiKSA6ICJub3JtYWwiID09PSB0LnR5cGUgJiYgZSAmJiAodGhpcy5uZXh0ID0gZSksIHk7IH0sIGZpbmlzaDogZnVuY3Rpb24gZmluaXNoKHQpIHsgZm9yICh2YXIgZSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBlID49IDA7IC0tZSkgeyB2YXIgciA9IHRoaXMudHJ5RW50cmllc1tlXTsgaWYgKHIuZmluYWxseUxvYyA9PT0gdCkgcmV0dXJuIHRoaXMuY29tcGxldGUoci5jb21wbGV0aW9uLCByLmFmdGVyTG9jKSwgcmVzZXRUcnlFbnRyeShyKSwgeTsgfSB9LCBjYXRjaDogZnVuY3Rpb24gX2NhdGNoKHQpIHsgZm9yICh2YXIgZSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBlID49IDA7IC0tZSkgeyB2YXIgciA9IHRoaXMudHJ5RW50cmllc1tlXTsgaWYgKHIudHJ5TG9jID09PSB0KSB7IHZhciBuID0gci5jb21wbGV0aW9uOyBpZiAoInRocm93IiA9PT0gbi50eXBlKSB7IHZhciBvID0gbi5hcmc7IHJlc2V0VHJ5RW50cnkocik7IH0gcmV0dXJuIG87IH0gfSB0aHJvdyBuZXcgRXJyb3IoImlsbGVnYWwgY2F0Y2ggYXR0ZW1wdCIpOyB9LCBkZWxlZ2F0ZVlpZWxkOiBmdW5jdGlvbiBkZWxlZ2F0ZVlpZWxkKGUsIHIsIG4pIHsgcmV0dXJuIHRoaXMuZGVsZWdhdGUgPSB7IGl0ZXJhdG9yOiB2YWx1ZXMoZSksIHJlc3VsdE5hbWU6IHIsIG5leHRMb2M6IG4gfSwgIm5leHQiID09PSB0aGlzLm1ldGhvZCAmJiAodGhpcy5hcmcgPSB0KSwgeTsgfSB9LCBlOyB9CmZ1bmN0aW9uIGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywga2V5LCBhcmcpIHsgdHJ5IHsgdmFyIGluZm8gPSBnZW5ba2V5XShhcmcpOyB2YXIgdmFsdWUgPSBpbmZvLnZhbHVlOyB9IGNhdGNoIChlcnJvcikgeyByZWplY3QoZXJyb3IpOyByZXR1cm47IH0gaWYgKGluZm8uZG9uZSkgeyByZXNvbHZlKHZhbHVlKTsgfSBlbHNlIHsgUHJvbWlzZS5yZXNvbHZlKHZhbHVlKS50aGVuKF9uZXh0LCBfdGhyb3cpOyB9IH0KZnVuY3Rpb24gX2FzeW5jVG9HZW5lcmF0b3IoZm4pIHsgcmV0dXJuIGZ1bmN0aW9uICgpIHsgdmFyIHNlbGYgPSB0aGlzLCBhcmdzID0gYXJndW1lbnRzOyByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgeyB2YXIgZ2VuID0gZm4uYXBwbHkoc2VsZiwgYXJncyk7IGZ1bmN0aW9uIF9uZXh0KHZhbHVlKSB7IGFzeW5jR2VuZXJhdG9yU3RlcChnZW4sIHJlc29sdmUsIHJlamVjdCwgX25leHQsIF90aHJvdywgIm5leHQiLCB2YWx1ZSk7IH0gZnVuY3Rpb24gX3Rocm93KGVycikgeyBhc3luY0dlbmVyYXRvclN0ZXAoZ2VuLCByZXNvbHZlLCByZWplY3QsIF9uZXh0LCBfdGhyb3csICJ0aHJvdyIsIGVycik7IH0gX25leHQodW5kZWZpbmVkKTsgfSk7IH07IH0KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHByb2NvbmYsIGdldERhdGVTdHJpbmcgfSBmcm9tICcuL2JlbmVmaXRQZW9wbGVDb25maXJtJzsKaW1wb3J0IEltcG9ydE1vZGVsIGZyb20gJy4uLy4uLy4uLy4uL2NvbXBvbmVudHMvVGFibGUvaW1wb3J0L2ltcG9ydC52dWUnOwppbXBvcnQgeyBJbXBvcnQgfSBmcm9tICcuLi8uLi8uLi8uLi9jb21wb25lbnRzL1RhYmxlL2ltcG9ydC9pbXBvcnQvaW1wb3J0LmpzJzsKaW1wb3J0IEh0dHBNb2R1bGUgZnJvbSAnQC9hcGkvZnJhbWUvbWFpbi9mdW5kTW9uaXRvcmluZy9iZW5lZml0UGVvcGxlQ29uZmlybS5qcyc7CmltcG9ydCB7IEV4cG9ydCB9IGZyb20gJy4uLy4uLy4uLy4uL2NvbXBvbmVudHMvVGFibGUvZXhwb3J0L2V4cG9ydC9leHBvcnQnOwppbXBvcnQgeyByZXBhaXJFeGNlbFRpbWVzdGFtcCB9IGZyb20gJ0AvdXRpbHMvZXhjZWwnOwovLyBpbXBvcnQgQWRkRGlhbG9nIGZyb20gJy4vY2hpbGRyZW4vYWRkRGlhbG9nJwovLyBpbXBvcnQgSHR0cE1vZHVsZSBmcm9tICdAL2FwaS9mcmFtZS9tYWluL01vbml0b3JpbmcvV2FybmluZ0RldGFpbHNCeUNvbXBhcnRtZW50LmpzJwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgSW1wb3J0TW9kZWw6IEltcG9ydE1vZGVsCiAgICAvLyBBZGREaWFsb2cKICB9LAoKICBjb21wdXRlZDogewogICAgd2hlcmVzcWw6IGZ1bmN0aW9uIHdoZXJlc3FsKCkgewogICAgICByZXR1cm4gImFuZCBuYW1lIGxpa2UgJyUiLmNvbmNhdCh0aGlzLnRyZWVGaWx0ZXJUZXh0LCAiJSciKTsKICAgIH0sCiAgICB0YWJsZUNvbHVtbnNDb25maWcxOiBmdW5jdGlvbiB0YWJsZUNvbHVtbnNDb25maWcxKCkgewogICAgICByZXR1cm4gcHJvY29uZi5Qb2xpY2llc1RhYmxlQ29sdW1uczEodGhpcyk7CiAgICB9CiAgfSwKICB3YXRjaDogewogICAgcXVlcnlDb25maWc6IGZ1bmN0aW9uIHF1ZXJ5Q29uZmlnKCkgewogICAgICB0aGlzLmdldFNlYXJjaERhdGFMaXN0KCk7CiAgICB9LAogICAgcXVlcnlDb25maWcxOiBmdW5jdGlvbiBxdWVyeUNvbmZpZzEoKSB7CiAgICAgIHRoaXMuZ2V0U2VhcmNoRGF0YUxpc3QxKCk7CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgc2hvd0NvbmZpcm1Nb2RhbDogZmFsc2UsCiAgICAgIGNsaWNrUm93OiB7fSwKICAgICAgZm9ybU1vZGVsRGF0YTogewogICAgICAgIGNhbmNlbERlc2NyaXB0aW9uOiAnJwogICAgICB9LAogICAgICAvLyDlt6bkvqfmoJHov4fmu6TlgLwKICAgICAgdHJlZUZpbHRlclRleHQ6ICcnLAogICAgICBtYXRjaEhvb3Q6IHRydWUsCiAgICAgIGlzUHJvTmFtZTogZmFsc2UsCiAgICAgIGlzQW1vdW50OiBmYWxzZSwKICAgICAgY29kZUxpc3Q6IFtdLAogICAgICBpbXBvcnRNb2RhbFZpc2libGU6IGZhbHNlLAogICAgICAvLyDlr7zlhaXlvLnmoYYKICAgICAgZmlsZUNvbmZpZzogewogICAgICAgIGZpbGVOYW1lOiAnJywKICAgICAgICBtYXhTaXplOiAxMDI0ICogMTAyNCAqIDEwCiAgICAgIH0sCiAgICAgIC8vIOWvvOWFpeaWh+S7tumFjee9rgogICAgICByb3cxOiB7fSwKICAgICAgcHJvVG90YWw6IDAsCiAgICAgIHRyZWVQYWdlU2l6ZTogMjAwLAogICAgICBvZmZzZXQ6IDAsCiAgICAgIHRyZWVDdXJyZW50UGFnZTogMSwKICAgICAgLy8gQnNRdWVyeSDmn6Xor6LmoI8KICAgICAgcXVlcnlDb25maWc6IHByb2NvbmYuaGlnaFF1ZXJ5Q29uZmlnLAogICAgICBxdWVyeUNvbmZpZzE6IHByb2NvbmYuaGlnaFF1ZXJ5Q29uZmlnMSwKICAgICAgc2VhcmNoRGF0YUxpc3Q6IHByb2NvbmYuaGlnaFF1ZXJ5RGF0YSwKICAgICAgc2VhcmNoRGF0YUxpc3QxOiBwcm9jb25mLmhpZ2hRdWVyeURhdGExLAogICAgICByYWRpb1Nob3c6IHRydWUsCiAgICAgIGJyZWFrUnVsZVZpc2libGU6IGZhbHNlLAogICAgICB0cmVlRGF0YTogW3sKICAgICAgICBjaGlsZHJlbjogW10sCiAgICAgICAgY29kZTogMCwKICAgICAgICBpZDogMCwKICAgICAgICBsYWJlbDogJzAt5YWo6YOo5YiG57G7JywKICAgICAgICBuYW1lOiAn5YWo6YOo5YiG57G7JywKICAgICAgICBwYXJlbnRJZDogbnVsbCwKICAgICAgICBwYXJlbnRSdWxlTmFtZTogbnVsbCwKICAgICAgICBydWxlTGV2ZWw6IDAsCiAgICAgICAgcnVsZU5hbWU6ICflhajpg6jliIbnsbsnCiAgICAgIH1dLAogICAgICB0cmVlVHlwZUNvbmZpZzogewogICAgICAgIGN1clJhZGlvOiAnQUdFTkNZJwogICAgICB9LAogICAgICB0cmVlR2xvYmFsQ29uZmlnOiB7CiAgICAgICAgaW5wdXRWYWw6ICcnCiAgICAgIH0sCiAgICAgIGZvcm1Nb2RlbFJ1bGU6IHsKICAgICAgICByZWFzb246IFt7CiAgICAgICAgICByZXF1aXJlZDogdHJ1ZSwKICAgICAgICAgIG1lc3NhZ2U6ICfor7fovpPlhaXlj5bmtojor7TmmI4nLAogICAgICAgICAgdHJpZ2dlcjogJ2JsdXInCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgdHJlZVF1ZXJ5cGFyYW1zOiB7CiAgICAgICAgZWxlbWVudENvZGU6ICdhZG1kaXYnLAogICAgICAgIHByb3ZpbmNlOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mby5wcm92aW5jZSwKICAgICAgICB5ZWFyOiB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mby55ZWFyLAogICAgICAgIHdoZXJlc3FsOiAnYW5kIHByb3ZpbmNlID0nICsgdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8ucHJvdmluY2UKICAgICAgfSwKICAgICAgLy8gdHJlZVNlcnZlclVyaTogJ3BheS1jbGVhci1zZXJ2aWNlL3YyL2xlZnR0cmVlJywKICAgICAgdHJlZVNlcnZlclVyaTogJycsCiAgICAgIHRyZWVBamF4VHlwZTogJ2dldCcsCiAgICAgIGxlZnRUcmVlVmlzaWJsZTogdHJ1ZSwKICAgICAgLy8g5aS06YOo5bel5YW35qCPIEJzVGFiUGFuZWwgY29uZmlnCiAgICAgIHRvb2xCYXJTdGF0dXNCdG5Db25maWc6IHsKICAgICAgICBidXR0b25zOiBwcm9jb25mLnN0YXR1c0J1dHRvbnMsCiAgICAgICAgY3VyQnV0dG9uOiBwcm9jb25mLmN1clN0YXR1c0J1dHRvbiwKICAgICAgICBidXR0b25zSW5mbzogcHJvY29uZi5idXR0b25zLAogICAgICAgIG1ldGhvZHM6IHsKICAgICAgICAgIGJzVG9vbGJhckNsaWNrRXZlbnQ6IHRoaXMuYnNUb29sYmFyQ2xpY2tFdmVudAogICAgICAgIH0KICAgICAgfSwKICAgICAgYnV0dG9uc0luZm86IHByb2NvbmYuc3RhdHVzUmlnaHRUb29sQmFyQnV0dG9uQnlCdXNEZXB0LAogICAgICB0YWJTdGF0dXNOdW1Db25maWc6IHsKICAgICAgICAnMSc6IDAsCiAgICAgICAgJzInOiAwLAogICAgICAgICczJzogMAogICAgICB9LAogICAgICBpc1Nob3dRdWVyeUNvbmRpdGlvbnM6IHRydWUsCiAgICAgIHRvb2xCYXJTdGF0dXNTZWxlY3Q6IHsKICAgICAgICB0eXBlOiAnYnV0dG9uJywKICAgICAgICBpY29uTmFtZTogJ2Jhc2UtYWxsLnBuZycsCiAgICAgICAgaWNvbk5hbWVBY3RpdmU6ICdiYXNlLWFsbC1hY3RpdmUucG5nJywKICAgICAgICBpY29uVXJsOiAnJywKICAgICAgICBsYWJlbDogJ+WFqOmDqCcsCiAgICAgICAgY29kZTogJzEnLAogICAgICAgIGN1clZhbHVlOiAnMScKICAgICAgfSwKICAgICAgLy8gdGFibGUg55u45YWz6YWN572uCiAgICAgIHRhYmxlTG9hZGluZzogZmFsc2UsCiAgICAgIHRhYmxlTG9hZGluZzE6IGZhbHNlLAogICAgICB0YWJsZUxvYWRpbmcyOiBmYWxzZSwKICAgICAgdGFibGVDb2x1bW5zQ29uZmlnOiBwcm9jb25mLlBvbGljaWVzVGFibGVDb2x1bW5zLAogICAgICB0YWJsZURhdGE6IFtdLAogICAgICB0YWJsZURhdGExOiBbXSwKICAgICAgdGFibGVUb29sYmFyQ29uZmlnOiB7CiAgICAgICAgLy8gdGFibGXlt6XlhbfmoI/phY3nva4KICAgICAgICBkaXNhYmxlZE1vbmV5Q29udmVyc2lvbjogZmFsc2UsCiAgICAgICAgbW9uZXlDb252ZXJzaW9uOiBmYWxzZSwKICAgICAgICAvLyDmmK/lkKbmnInph5Hpop3ovazmjaIKICAgICAgICBpbXBvcnQ6IGZhbHNlLAogICAgICAgIC8vIOWvvOWFpQogICAgICAgIGV4cG9ydDogdHJ1ZSwKICAgICAgICAvLyDlr7zlh7oKICAgICAgICBwcmludDogZmFsc2UsCiAgICAgICAgLy8g5omT5Y2wCiAgICAgICAgem9vbTogdHJ1ZSwKICAgICAgICAvLyDnvKnmlL4KICAgICAgICBjdXN0b206IHRydWUsCiAgICAgICAgLy8g6YCJ6YWN5bGV56S65YiXCiAgICAgICAgc2xvdHM6IHsKICAgICAgICAgIHRvb2xzOiAndG9vbGJhclRvb2xzJywKICAgICAgICAgIGJ1dHRvbnM6ICd0b29sYmFyU2xvdHMnCiAgICAgICAgfQogICAgICB9LAogICAgICB0YWJsZVRvb2xiYXJDb25maWcxOiB7CiAgICAgICAgLy8gdGFibGXlt6XlhbfmoI/phY3nva4KICAgICAgICBkaXNhYmxlZE1vbmV5Q29udmVyc2lvbjogZmFsc2UsCiAgICAgICAgbW9uZXlDb252ZXJzaW9uOiBmYWxzZSwKICAgICAgICAvLyDmmK/lkKbmnInph5Hpop3ovazmjaIKICAgICAgICBpbXBvcnQ6IGZhbHNlLAogICAgICAgIC8vIOWvvOWFpQogICAgICAgIGV4cG9ydDogdHJ1ZSwKICAgICAgICAvLyDlr7zlh7oKICAgICAgICBwcmludDogZmFsc2UsCiAgICAgICAgLy8g5omT5Y2wCiAgICAgICAgem9vbTogdHJ1ZSwKICAgICAgICAvLyDnvKnmlL4KICAgICAgICBjdXN0b206IHRydWUsCiAgICAgICAgLy8g6YCJ6YWN5bGV56S65YiXCiAgICAgICAgc2xvdHM6IHsKICAgICAgICAgIHRvb2xzOiAndG9vbGJhclRvb2xzJywKICAgICAgICAgIGJ1dHRvbnM6ICd0b29sYmFyU2xvdHMnCiAgICAgICAgfQogICAgICB9LAogICAgICBsZWZ0Tm9kZToge30sCiAgICAgIHJlZ3VsYXRpb25TdGF0dXM6ICcxJywKICAgICAgbWFpblBhZ2VyQ29uZmlnOiB7CiAgICAgICAgdG90YWw6IDAsCiAgICAgICAgY3VycmVudFBhZ2U6IDEsCiAgICAgICAgcGFnZVNpemU6IDUwCiAgICAgIH0sCiAgICAgIG1haW5QYWdlckNvbmZpZzE6IHsKICAgICAgICB0b3RhbDogMCwKICAgICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgICBwYWdlU2l6ZTogNTAKICAgICAgfSwKICAgICAgdGFibGVDb25maWc6IHt9LAogICAgICB0YWJsZUNvbmZpZzE6IHt9LAogICAgICB0YWJsZUZvb3RlckNvbmZpZzogewogICAgICAgIHNob3dGb290ZXI6IGZhbHNlCiAgICAgIH0sCiAgICAgIHRhYmxlRm9vdGVyQ29uZmlnMTogewogICAgICAgIHNob3dGb290ZXI6IGZhbHNlCiAgICAgIH0sCiAgICAgIGZpc2NhbFllYXI6ICcnLAogICAgICBpc0hvb2s6ICcwJywKICAgICAgcHJvQ29kZTE6ICcnLAogICAgICBwcm9Db2RlOiAnJywKICAgICAgcGF5Q2VydE5vOiAnJywKICAgICAgcHJvTmFtZTogJycsCiAgICAgIHByb05hbWUxOiAnJywKICAgICAgYWdlbmN5TmFtZTogJycsCiAgICAgIGNvckJndERvY05vTmFtZTogJycsCiAgICAgIHVzZURlczogJycsCiAgICAgIGR0b3M6IFtdLAogICAgICBhbW91bnQ6ICcnLAogICAgICBtb2ZkaXZOYW1lOiAnJywKICAgICAgcGF5QWNjdE5hbWVTdHI6ICcnLAogICAgICBwYXlBY2N0Tm9TdHI6ICcnLAogICAgICBwYXllZUFjY3ROYW1lU3RyOiAnJywKICAgICAgcGF5ZWVBY2N0Tm9TdHI6ICcnLAogICAgICBwcm9OYW1lU3RyOiAnJywKICAgICAgcGF5VGltZVN0cjogJycsCiAgICAgIC8vIOaTjeS9nOaXpeW/lwogICAgICBsb2dEYXRhOiBbXSwKICAgICAgc2hvd0xvZ1ZpZXc6IGZhbHNlLAogICAgICAvLyDmlrDlop7lvLnnqpcKICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIGRpYWxvZ1RpdGxlOiAn5paw5aKeJywKICAgICAgYWRkVGFibGVEYXRhOiBbXSwKICAgICAgLy8g6K+35rGCICYg6KeS6Imy5p2D6ZmQ55u45YWz6YWN572uCiAgICAgIG1lbnVOYW1lOiAn57O757uf57qn55uR5o6n6KeE5YiZJywKICAgICAgcm9sZUlkOiAnJywKICAgICAgcGFyYW1zNTogJycsCiAgICAgIG1lbnVJZDogJycsCiAgICAgIHRva2VuaWQ6ICcnLAogICAgICB1c2VySW5mbzoge30sCiAgICAgIHJvbGVndWlkOiB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUucm9sZWd1aWQsCiAgICAgIGFwcElkOiAncGF5X3ZvdWNoZXInLAogICAgICBpc0hhdmVaZXJvOiAnMCcsCiAgICAgIC8vIOaWh+S7tgogICAgICBzaG93QXR0YWNobWVudERpYWxvZzogZmFsc2UsCiAgICAgIGJpbGxndWlkOiAnJywKICAgICAgY29uZGl0aW9uOiB7fSwKICAgICAgaGFuZGxlVHlwZTogJycsCiAgICAgIGlzRW5hYmxlOiAnJywKICAgICAgcmVndWxhdGlvblR5cGU6ICcnLAogICAgICB3YXJuaW5nTGV2ZWw6ICcnLAogICAgICBEZXRhaWxEYXRhOiB7fSwKICAgICAgcmVndWxhdGlvbmNsYXNzOiAnJywKICAgICAgZmlydWxlbmFtZTogJycsCiAgICAgIHBheUFtdDogJycsCiAgICAgIG1vZkRpdkNvZGU6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvLnByb3ZpbmNlLAogICAgICBsZWZ0VHJlZUNvbmZpZzogewogICAgICAgIC8vIOW3puS+p+WNleS9jeagkemFjee9rgogICAgICAgIHNob3dGaWx0ZXI6IGZhbHNlLAogICAgICAgIC8vIOaYr+WQpuaYvuekuui/h+a7pAogICAgICAgIGlzSW5pdExvYWREYXRhOiBmYWxzZSwKICAgICAgICBzY3JvbGxMb2FkOiBmYWxzZSwKICAgICAgICAvLyDmmK/lkKblvIDlkK/mu5rliqjliqDovb0KICAgICAgICBpc2xlYWY6IDAsCiAgICAgICAgLy8g5oyH5a6a6IqC54K55piv5ZCm5Li65Y+25a2Q6IqC54K577yM5LuF5Zyo5oyH5a6a5LqGIGxhenkg5bGe5oCn55qE5oOF5Ya15LiL55Sf5pWICiAgICAgICAgbGV2ZWxubzogLTEsCiAgICAgICAgLy8g5Y+v6YCJ5bGC57qnCiAgICAgICAgdmFsdWVLZXlzOiBbJ2NvZGUnLCAnbmFtZScsICdpZCddLAogICAgICAgIGZvcm1hdDogJ3tjb2RlfS17bmFtZX0nLAogICAgICAgIHBsYWNlaG9sZGVyOiAn6K+36YCJ5oupJywKICAgICAgICBtdWx0aXBsZVZhbHVlVHlwZTogJ1N0cmluZycsCiAgICAgICAgLy8g5aSa6YCJ5YC857G75Z6LIFN0cmluZ1vpgJflj7fliIblibJd77yMQXJyYXkgLy/lup/lvIMKICAgICAgICB0cmVlUHJvcHM6IHsKICAgICAgICAgIC8vIOagkemFjee9rumAiemhuQogICAgICAgICAgbGFiZWxGb3JtYXQ6ICd7Y29kZX0te25hbWV9JywKICAgICAgICAgIC8vIHtjb2RlfS17bmFtZX0KICAgICAgICAgIG5vZGVLZXk6ICdjb2RlJywKICAgICAgICAgIC8vIOagkeeahOS4u+mUrgogICAgICAgICAgbGFiZWw6ICduYW1lJywKICAgICAgICAgIC8vIOagkeeahOaYvuekumxhbGVs5a2X5q61CiAgICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJyAvLyDmoJHnmoTltYzlpZflrZfmrrUKICAgICAgICB9LAoKICAgICAgICBtdWx0aXBsZTogZmFsc2UsCiAgICAgICAgLy8g5piv5ZCm5aSa6YCJLAogICAgICAgIGlzTGF6ZUxvYWQ6IGZhbHNlLAogICAgICAgIC8vIOaYr+WQpuiwg+eUqOaOpeWPo+i/nOeoi+aHkuWKoOi9veaVsOaNrgogICAgICAgIHJlYWRvbmx5OiB0cnVlLAogICAgICAgIGNsZWFyYWJsZTogdHJ1ZSwKICAgICAgICB0YWJTZWxlY3Q6ICcwJwogICAgICB9LAogICAgICBpbXBvcnREYXRhOiBbXSwKICAgICAgLy8g5a+85YWl5pWw5o2uCiAgICAgIHRyZWVMb2FkaW5nU3RhdGU6IGZhbHNlCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIGNsb3NlTW9kYWw6IGZ1bmN0aW9uIGNsb3NlTW9kYWwoKSB7CiAgICAgIHRoaXMuc2hvd0NvbmZpcm1Nb2RhbCA9IGZhbHNlOwogICAgICB0aGlzLmZvcm1Nb2RlbERhdGEuY2FuY2VsRGVzY3JpcHRpb24gPSAnJzsKICAgICAgdGhpcy4kcmVmcy5zaG93Q29uZmlyRm9ybS5jbGVhclZhbGlkYXRlKCk7CiAgICB9LAogICAgb25JbXBvcnRDbGljazogZnVuY3Rpb24gb25JbXBvcnRDbGljaygpIHsKICAgICAgLy8g5a+85YWl5o+Q5LqkCiAgICAgIGlmICghdGhpcy5pbXBvcnREYXRhLmxlbmd0aCkgewogICAgICAgIHRoaXMuJFhNb2RhbC5tZXNzYWdlKHsKICAgICAgICAgIHN0YXR1czogJ2Vycm9yJywKICAgICAgICAgIG1lc3NhZ2U6ICfml6DmlbDmja7lr7zlhaXor7fph43mlrDlr7zlhaXmlbDmja7vvIEnCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pbXBvcnRNb2RhbFZpc2libGUgPSBmYWxzZTsKICAgICAgICBpZiAodHlwZW9mIHRoaXMuaW1wb3J0Q29uZmlnLmltcG9ydFN1Y2Nlc3NDYWxsYmFjayA9PT0gJ2Z1bmN0aW9uJykgewogICAgICAgICAgdGhpcy5pbXBvcnRDb25maWcuaW1wb3J0U3VjY2Vzc0NhbGxiYWNrKHRoaXMuaW1wb3J0RGF0YSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJGVtaXQoJ2ltcG9ydFN1Y2Nlc3NDYWxsYmFjaycsIHRoaXMuaW1wb3J0RGF0YSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgb25JbXBvcnRGaWxlQ2xpY2s6IGZ1bmN0aW9uIG9uSW1wb3J0RmlsZUNsaWNrKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIC8vIOWvvOWFpeaWh+S7tgogICAgICAgICAgICAgIF90aGlzLiRJbXBvcnQgPSBuZXcgSW1wb3J0KCk7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLiRJbXBvcnQuaW1wb3J0RXhjZWwoe30sIGZ1bmN0aW9uIChyZXN1bHQsIGZpbGVuYW1lKSB7CiAgICAgICAgICAgICAgICAvLyB0aGlzLnRhYmxlRGF0YUluID0gcmVzdWx0CiAgICAgICAgICAgICAgICBfdGhpcy5pbXBvcnREYXRhID0gcmVzdWx0OwogICAgICAgICAgICAgICAgX3RoaXMuZmlsZUNvbmZpZy5maWxlTmFtZSA9IGZpbGVuYW1lOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgb25Eb3dubG9hZFRlbXBsYXRlQ2xpY2s6IGZ1bmN0aW9uIG9uRG93bmxvYWRUZW1wbGF0ZUNsaWNrKG9iaikgewogICAgICAvLyDkuIvovb3mqKHniYgKICAgICAgaWYgKHR5cGVvZiB0aGlzLmltcG9ydENvbmZpZy5kb3dubG9hZFRlbXBsYXRlQ2FsbGJhY2sgPT09ICdmdW5jdGlvbicpIHsKICAgICAgICB0aGlzLmltcG9ydENvbmZpZy5kb3dubG9hZFRlbXBsYXRlQ2FsbGJhY2sodGhpcy5pbXBvcnREYXRhKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmltcG9ydERhdGEgPSBbXTsKICAgICAgICB2YXIgY29sdW1ucyA9IHRoaXMudGFibGVDb2x1bW5zQ29uZmlnOwogICAgICAgIHZhciBzZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbjsKICAgICAgICB2YXIgZGVmYXVsdENvbmZpZyA9IHsKICAgICAgICAgIGlzRXhwb3J0VHJlZTogISFzZWxmLnRyZWVDb25maWdJbiwKICAgICAgICAgIHNhdmVUeXBlOiAnLnhsc3gnLAogICAgICAgICAgZmlsZU5hbWU6ICdpbXBvcnRUZW1wcGxhdGUnLAogICAgICAgICAgLy8g5paH5Lu25ZCNCiAgICAgICAgICBkYXRhVHlwZTogJ2Z1bGxEYXRhJywKICAgICAgICAgIGlzRXhwb3J0T25seVNvdXJjZUZpZWxkOiB0cnVlLAogICAgICAgICAgLy8g5piv5ZCm5Y+q5a+85Ye65pWw5o2u5rqQ6KGo5aS05a2X5q6177yMCiAgICAgICAgICBpc0V4cG9ydE9ubHlWaWV3VGl0bGU6IGZhbHNlLAogICAgICAgICAgLy8g5piv5ZCm5Y+q5a+85Ye65pWw5o2u6KGo5aS05ZCN56ew77yMCiAgICAgICAgICBpc0V4cG9ydEhlYWQ6IHRydWUsCiAgICAgICAgICAvLyDmmK/lkKblr7zlh7rooajlpLQKICAgICAgICAgIGV4cG9ydFZpZXdUaXRsZVR5cGU6ICduZXN0VGl0bGUnLAogICAgICAgICAgaXNFeHBvcnRGb290ZXI6IGZhbHNlLAogICAgICAgICAgLy8g5piv5ZCm5a+85Ye66KGo5bC+6YOoCiAgICAgICAgICBpc0V4cG9ydE9yaWdpbmFsRGF0YTogdHJ1ZSwKICAgICAgICAgIC8vIOaYr+WQpuWvvOWHuua6kOaVsOaNrgogICAgICAgICAgaXNFeHBvcnREYXRhOiB0cnVlLAogICAgICAgICAgLy8g5piv5ZCm5a+85Ye65pWw5o2uCiAgICAgICAgICBjb2x1bW5zOiBjb2x1bW5zLAogICAgICAgICAgLy8g6KGo5aS06YWN572uCiAgICAgICAgICBkYXRhczogW10sCiAgICAgICAgICAvLyDmupDmlbDmja4sCiAgICAgICAgICBzZWxlY3Rpb246IHNlbGVjdGlvbiwKICAgICAgICAgIC8vIOmAieS4reaVsOaNrgogICAgICAgICAgaW5kZXg6IHRydWUsCiAgICAgICAgICAvLyDmmK/lkKbmt7vliqDluo/lj7csCiAgICAgICAgICBpZ25vcmVDb2xzVHlwZXM6IFsnZHJhZ1NvcnQnLCAnc2VxJywgJ2NoZWNrYm94JywgJ3JhZGlvJywgJ29wdGlvblJvdycsICdleHBhbmQnLCAnYXR0YWNoJywgJ2FjaCcsICdsaXN0JywgJ2F0dGFjaGxpc3QnXSAvLyDlv73nlaXlr7zlh7rnmoTliJfnsbvlnosKICAgICAgICB9OwoKICAgICAgICB0aGlzLiRFeHBvcnQuZXhwb3J0RXhjZWwob2JqID8gT2JqZWN0LmFzc2lnbihkZWZhdWx0Q29uZmlnLCBvYmopIDogb2JqLCB0aGlzKTsKICAgICAgfQogICAgfSwKICAgIGRvd25Mb2FkSW1wb3J0VGVtcGxhdGVzOiBmdW5jdGlvbiBkb3duTG9hZEltcG9ydFRlbXBsYXRlcygpIHsKICAgICAgLy8g5LiL6L295a+85YWl5qih54mICiAgICAgIHZhciB0YWJsZUNvbHVtbnNDb25maWcgPSB0aGlzLnRhYmxlQ29sdW1uc0NvbmZpZzsKICAgICAgLy8gY29uc3QgdW5pdExhYmVsID0gdGhpcy50b29sYmFyQ29uZmlnSW5Db3B5Lm1vbmV5VW5pdE9wdGlvbnM/LmZpbmQoaXRlbSA9PiBpdGVtLnZhbHVlID09PSB0aGlzLm1vbmV5VW5pdCk/LmxhYmVsCiAgICAgIHRoaXMuJEV4cG9ydCA9IG5ldyBFeHBvcnQoewogICAgICAgIHVuaXQ6ICflhYMnCiAgICAgIH0pOwogICAgICB0aGlzLiRFeHBvcnQuZXhwb3J0RXhjZWwoewogICAgICAgIHNhdmVUeXBlOiAnLnhsc3gnLAogICAgICAgIGZpbGVOYW1lOiAn5a+85YWl5qih54mIJywKICAgICAgICAvLyDmlofku7blkI0KICAgICAgICBkYXRhVHlwZTogJ2Z1bGxEYXRhJywKICAgICAgICBpc0V4cG9ydE9ubHlWaWV3VGl0bGU6IHRydWUsCiAgICAgICAgLy8g5piv5ZCm5Y+q5a+85Ye65pWw5o2u5rqQ6KGo5aS05a2X5q6177yMCiAgICAgICAgY29sdW1uczogdGFibGVDb2x1bW5zQ29uZmlnLAogICAgICAgIC8vIOihqOWktOmFjee9rgogICAgICAgIGluZGV4OiBmYWxzZSAvLyDmmK/lkKbmt7vliqDluo/lj7csCiAgICAgIH0sIHRoaXMpOwogICAgfSwKICAgIHRyaWdnZXJJbXBvcnRPcHRpb246IGZ1bmN0aW9uIHRyaWdnZXJJbXBvcnRPcHRpb24oKSB7CiAgICAgIHZhciBjb25maWcgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9OwogICAgICAvLyDop6blj5Hlr7zlhaUKICAgICAgdGhpcy5pbXBvcnREYXRhID0gW107CiAgICAgIHRoaXMuaW1wb3J0Q29uZmlnID0gY29uZmlnOwogICAgICB0aGlzLmZpbGVDb25maWcuZmlsZU5hbWUgPSAnJzsKICAgICAgdGhpcy5pbXBvcnRNb2RhbFZpc2libGUgPSB0cnVlOwogICAgfSwKICAgIGJzVG9vbGJhckNsaWNrRXZlbnQ6IGZ1bmN0aW9uIGJzVG9vbGJhckNsaWNrRXZlbnQob2JqLCAkdGhpcykgewogICAgICBpZiAoIW9iai50eXBlKSB7CiAgICAgICAgdGhpcy5vcGVyYXRpb25Ub29sYmFyQnV0dG9uQ2xpY2tFdmVudChvYmopOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICB0aGlzLnRvb2xCYXJTdGF0dXNTZWxlY3QgPSBvYmo7CiAgICAgIHN3aXRjaCAob2JqLmNvZGUpIHsKICAgICAgICBjYXNlICcxJzoKICAgICAgICAgIHRoaXMuaXNIb29rID0gJzAnOwogICAgICAgICAgdGhpcy5tYXRjaEhvb3QgPSB0cnVlOwogICAgICAgICAgdGhpcy5wcm9Db2RlID0gJyc7CiAgICAgICAgICB0aGlzLnByb05hbWUgPSAnJzsKICAgICAgICAgIHRoaXMucGF5Q2VydE5vID0gJyc7CiAgICAgICAgICB0aGlzLmFtb3VudCA9ICcnOwogICAgICAgICAgdGhpcy5wYXlBbXQgPSAnJzsKICAgICAgICAgIHRoaXMubW9mZGl2TmFtZSA9ICcnOwogICAgICAgICAgdGhpcy5hZ2VuY3lOYW1lID0gJyc7CiAgICAgICAgICB0aGlzLmNvckJndERvY05vTmFtZSA9ICcnOwogICAgICAgICAgdGhpcy51c2VEZXMgPSAnJzsKICAgICAgICAgIHRoaXMuZHRvcyA9IFtdOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnMic6CiAgICAgICAgICB0aGlzLmlzSG9vayA9ICcxJzsKICAgICAgICAgIHRoaXMucHJvQ29kZSA9ICcnOwogICAgICAgICAgdGhpcy5wcm9OYW1lID0gJyc7CiAgICAgICAgICB0aGlzLnBheUNlcnRObyA9ICcnOwogICAgICAgICAgdGhpcy5hbW91bnQgPSAnJzsKICAgICAgICAgIHRoaXMucGF5QW10ID0gJyc7CiAgICAgICAgICB0aGlzLm1vZmRpdk5hbWUgPSAnJzsKICAgICAgICAgIHRoaXMuYWdlbmN5TmFtZSA9ICcnOwogICAgICAgICAgdGhpcy5jb3JCZ3REb2NOb05hbWUgPSAnJzsKICAgICAgICAgIHRoaXMudXNlRGVzID0gJyc7CiAgICAgICAgICB0aGlzLmR0b3MgPSBbXTsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJzMnOgogICAgICAgICAgdGhpcy5pc0hvb2sgPSAnMic7CiAgICAgICAgICB0aGlzLnByb0NvZGUgPSAnJzsKICAgICAgICAgIHRoaXMucHJvTmFtZSA9ICcnOwogICAgICAgICAgdGhpcy5wYXlDZXJ0Tm8gPSAnJzsKICAgICAgICAgIHRoaXMuYW1vdW50ID0gJyc7CiAgICAgICAgICB0aGlzLnBheUFtdCA9ICcnOwogICAgICAgICAgdGhpcy5tb2ZkaXZOYW1lID0gJyc7CiAgICAgICAgICB0aGlzLmFnZW5jeU5hbWUgPSAnJzsKICAgICAgICAgIHRoaXMuY29yQmd0RG9jTm9OYW1lID0gJyc7CiAgICAgICAgICB0aGlzLnVzZURlcyA9ICcnOwogICAgICAgICAgdGhpcy5kdG9zID0gW107CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgICB0aGlzLmNvbmRpdGlvbiA9IHt9OwogICAgICB0aGlzLm1haW5QYWdlckNvbmZpZy5jdXJyZW50UGFnZSA9IDE7CiAgICAgIHRoaXMubWFpblBhZ2VyQ29uZmlnMS5jdXJyZW50UGFnZSA9IDE7CiAgICAgIHRoaXMucmVmcmVzaDEoKTsKICAgICAgLy8gdGhpcy4kcmVmcy5tYWluVGFibGVSZWYuJHJlZnMueEdyaWQuY2xlYXJTY3JvbGwoKQogICAgfSwKICAgIHNlYXJjaDE6IGZ1bmN0aW9uIHNlYXJjaDEob2JqKSB7CiAgICAgIHRoaXMucGF5Q2VydE5vID0gb2JqLnBheUNlcnRObzsKICAgICAgdGhpcy5wcm9OYW1lID0gb2JqLnByb05hbWU7CiAgICAgIHRoaXMuYWdlbmN5TmFtZSA9IG9iai5hZ2VuY3lOYW1lOwogICAgICB0aGlzLmNvckJndERvY05vTmFtZSA9IG9iai5jb3JCZ3REb2NOb05hbWU7CiAgICAgIHRoaXMudXNlRGVzID0gb2JqLnVzZURlczsKICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMxKCk7CiAgICAgIC8vIHRoaXMucXVlcnlUYWJsZURhdGFzQ291bnQoKQogICAgfSwKICAgIC8vIOWIneWni+WMlumrmOe6p+afpeivomRhdGEKICAgIGdldFNlYXJjaERhdGFMaXN0OiBmdW5jdGlvbiBnZXRTZWFyY2hEYXRhTGlzdCgpIHsKICAgICAgLy8g5LiL5ouJ5qCRCiAgICAgIHZhciBzZWFyY2hEYXRhT2JqID0ge307CiAgICAgIHRoaXMucXVlcnlDb25maWcuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIGlmIChpdGVtLml0ZW1SZW5kZXIubmFtZSA9PT0gJyRmb3JtVHJlZUlucHV0JyB8fCBpdGVtLml0ZW1SZW5kZXIubmFtZSA9PT0gJyR2eGVUcmVlJykgewogICAgICAgICAgaWYgKGl0ZW0uZmllbGQpIHsKICAgICAgICAgICAgc2VhcmNoRGF0YU9ialtpdGVtLmZpZWxkICsgJ2NvZGUnXSA9ICcnOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAoaXRlbS5maWVsZCkgewogICAgICAgICAgICBzZWFyY2hEYXRhT2JqW2l0ZW0uZmllbGRdID0gJyc7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5zZWFyY2hEYXRhTGlzdCA9IHNlYXJjaERhdGFPYmo7CiAgICB9LAogICAgLy8g5Yid5aeL5YyW6auY57qn5p+l6K+iZGF0YQogICAgZ2V0U2VhcmNoRGF0YUxpc3QxOiBmdW5jdGlvbiBnZXRTZWFyY2hEYXRhTGlzdDEoKSB7CiAgICAgIC8vIOS4i+aLieagkQogICAgICB2YXIgc2VhcmNoRGF0YU9iaiA9IHt9OwogICAgICB0aGlzLnF1ZXJ5Q29uZmlnLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoaXRlbS5pdGVtUmVuZGVyLm5hbWUgPT09ICckZm9ybVRyZWVJbnB1dCcgfHwgaXRlbS5pdGVtUmVuZGVyLm5hbWUgPT09ICckdnhlVHJlZScpIHsKICAgICAgICAgIGlmIChpdGVtLmZpZWxkKSB7CiAgICAgICAgICAgIHNlYXJjaERhdGFPYmpbaXRlbS5maWVsZCArICdjb2RlJ10gPSAnJzsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgaWYgKGl0ZW0uZmllbGQpIHsKICAgICAgICAgICAgc2VhcmNoRGF0YU9ialtpdGVtLmZpZWxkXSA9ICcnOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHRoaXMuc2VhcmNoRGF0YUxpc3QxID0gc2VhcmNoRGF0YU9iajsKICAgIH0sCiAgICAvLyDliJ3lp4vljJbpq5jnuqfmn6Xor6Llj4LmlbBjb25kaXRpb24KICAgIGdldENvbmRpdGlvbkxpc3Q6IGZ1bmN0aW9uIGdldENvbmRpdGlvbkxpc3QoKSB7CiAgICAgIHZhciBjb25kaXRpb24gPSB7fTsKICAgICAgdGhpcy5xdWVyeUNvbmZpZy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgaWYgKGl0ZW0uaXRlbVJlbmRlci5uYW1lID09PSAnJGZvcm1UcmVlSW5wdXQnIHx8IGl0ZW0uaXRlbVJlbmRlci5uYW1lID09PSAnJHZ4ZVRyZWUnKSB7CiAgICAgICAgICBpZiAoaXRlbS5maWVsZCkgewogICAgICAgICAgICBpZiAoaXRlbS5maWVsZCA9PT0gJ2Nvcl9iZ3RfZG9jX25vXycpIHsKICAgICAgICAgICAgICBjb25kaXRpb25baXRlbS5maWVsZCArICduYW1lJ10gPSBbXTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBjb25kaXRpb25baXRlbS5maWVsZCArICdjb2RlJ10gPSBbXTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAoaXRlbS5maWVsZCkgewogICAgICAgICAgICBjb25kaXRpb25baXRlbS5maWVsZF0gPSBbXTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gY29uZGl0aW9uOwogICAgfSwKICAgIC8vIOWIh+aNoueKtuaAgeagjwogICAgb25TdGF0dXNUYWJDbGljazogZnVuY3Rpb24gb25TdGF0dXNUYWJDbGljayhvYmopIHsKICAgICAgaWYgKCFvYmoudHlwZSkgewogICAgICAgIHRoaXMub3BlcmF0aW9uVG9vbGJhckJ1dHRvbkNsaWNrRXZlbnQob2JqKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgdGhpcy50b29sQmFyU3RhdHVzU2VsZWN0ID0gb2JqOwogICAgICBzd2l0Y2ggKG9iai5jb2RlKSB7CiAgICAgICAgY2FzZSAnMSc6CiAgICAgICAgICB0aGlzLmlzSG9vayA9ICcwJzsKICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJzInOgogICAgICAgICAgdGhpcy5pc0hvb2sgPSAnMSc7CiAgICAgICAgICBicmVhazsKICAgICAgfQogICAgICAvLyB0aGlzLnF1ZXJ5VGFibGVEYXRhczEoKQogICAgfSwKICAgIGNoZWNrYm94Q2hhbmdlOiBmdW5jdGlvbiBjaGVja2JveENoYW5nZShjaGVja2VkLCByb3cpIHsKICAgICAgc3dpdGNoICh0aGlzLnRvb2xCYXJTdGF0dXNTZWxlY3QuY29kZSkgewogICAgICAgIGNhc2UgJzEnOgogICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnMic6CiAgICAgICAgICB0aGlzLmR0b3MubGVuZ3RoID0gY2hlY2tlZC5zZWxlY3Rpb24ubGVuZ3RoOwogICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmR0b3MubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgdGhpcy4kc2V0KHRoaXMuZHRvcywgaSwgY2hlY2tlZC5zZWxlY3Rpb25baV0ucGF5Q2VydElkKTsKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzMSgpOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICAvLyBjaGVja2JveENoYW5nZTEoY2hlY2tlZCwgcm93KSB7CiAgICAvLyAgIHN3aXRjaCAodGhpcy50b29sQmFyU3RhdHVzU2VsZWN0LmNvZGUpIHsKICAgIC8vICAgICBjYXNlICcxJzoKICAgIC8vICAgICAgIGlmICh0aGlzLmlzUHJvTmFtZSAmJiB0aGlzLmlzQW1vdW50KSB7CiAgICAvLyAgICAgICAgIHRoaXMucHJvTmFtZSA9IGNoZWNrZWQuc2VsZWN0aW9uWzBdLnByb05hbWUKICAgIC8vICAgICAgICAgdGhpcy5hbW91bnQgPSBjaGVja2VkLnNlbGVjdGlvblswXS5hbW91bnQKICAgIC8vICAgICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQogICAgLy8gICAgICAgICBicmVhawogICAgLy8gICAgICAgfQogICAgLy8gICAgICAgaWYgKHRoaXMuaXNQcm9OYW1lKSB7CiAgICAvLyAgICAgICAgIHRoaXMucHJvTmFtZSA9IGNoZWNrZWQuc2VsZWN0aW9uWzBdLnByb05hbWUKICAgIC8vICAgICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQogICAgLy8gICAgICAgICBicmVhawogICAgLy8gICAgICAgfQogICAgLy8gICAgICAgaWYgKHRoaXMuaXNBbW91bnQpIHsKICAgIC8vICAgICAgICAgdGhpcy5hbW91bnQgPSBjaGVja2VkLnNlbGVjdGlvblswXS5hbW91bnQKICAgIC8vICAgICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQogICAgLy8gICAgICAgICBicmVhawogICAgLy8gICAgICAgfQogICAgLy8gICAgICAgYnJlYWsKICAgIC8vICAgICBjYXNlICcyJzoKICAgIC8vICAgICAgIHRoaXMuZHRvcy5sZW5ndGggPSBjaGVja2VkLnNlbGVjdGlvbi5sZW5ndGgKICAgIC8vICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5kdG9zLmxlbmd0aDsgaSsrKSB7CiAgICAvLyAgICAgICAgIHRoaXMuJHNldCh0aGlzLmR0b3MsIGksIGNoZWNrZWQuc2VsZWN0aW9uW2ldLnBheUNlcnRJZCkKICAgIC8vICAgICAgIH0KICAgIC8vICAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzKCkKICAgIC8vICAgICAgIGJyZWFrCiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICAvLyDliIfmjaLmk43kvZzmjInpkq4KICAgIG9wZXJhdGlvblRvb2xiYXJCdXR0b25DbGlja0V2ZW50OiBmdW5jdGlvbiBvcGVyYXRpb25Ub29sYmFyQnV0dG9uQ2xpY2tFdmVudChvYmosIGNvbnRleHQsIGUpIHsKICAgICAgdmFyIHNlbGYgPSB0aGlzOwogICAgICB2YXIgZGF0YXMyID0gdGhpcy4kcmVmcy5tYWluVGFibGVSZWYxLmdldFNlbGVjdGlvbkRhdGEoKTsKICAgICAgc3dpdGNoIChvYmouY29kZSkgewogICAgICAgIC8vIOaMguaOpQogICAgICAgIGNhc2UgJ2hvb2tfc2V0JzoKICAgICAgICAgIGlmIChkYXRhczIubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+36YCJ5oup5pWw5o2uJyk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICAgIHRoaXMuaG9vayhkYXRhczIpOwogICAgICAgICAgYnJlYWs7CiAgICAgICAgLy8g5omL5Yqo6K+75Y+WCiAgICAgICAgY2FzZSAncGVvX3JlYWQnOgogICAgICAgICAgdGhpcy5yZWFkKCk7CiAgICAgICAgICBicmVhazsKICAgICAgICAvLyDlj5bmtojmjILmjqUKICAgICAgICBjYXNlICdob29rX25vdCc6CiAgICAgICAgICBpZiAoZGF0YXMyLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+ivt+mAieaLqeaVsOaNricpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLnNob3dDb25maXJtTW9kYWwgPSB0cnVlOwogICAgICAgICAgdGhpcy5jbGlja1JvdyA9IGRhdGFzMjsKICAgICAgICAgIC8vIHRoaXMubm90SG9vayhkYXRhczIpCiAgICAgICAgICBicmVhazsKICAgICAgICAvLyDlr7zlhaUKICAgICAgICBjYXNlICdpbXBvcnQnOgogICAgICAgICAgdGhpcy50cmlnZ2VySW1wb3J0T3B0aW9uKHsKICAgICAgICAgICAgZG93bmxvYWRUZW1wbGF0ZUNhbGxiYWNrOiBmdW5jdGlvbiBkb3dubG9hZFRlbXBsYXRlQ2FsbGJhY2soQ2IpIHsKICAgICAgICAgICAgICBzZWxmLmRvd25Mb2FkSW1wb3J0VGVtcGxhdGVzKCk7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGltcG9ydFN1Y2Nlc3NDYWxsYmFjazogZnVuY3Rpb24gaW1wb3J0U3VjY2Vzc0NhbGxiYWNrKHJlcykgewogICAgICAgICAgICAgIHNlbGYuJHJlZnMubWFpblRhYmxlUmVmLmRlYUltcG9ydFZpZXdEYXRhKHsKICAgICAgICAgICAgICAgIGNvbmx1bXM6IHByb2NvbmYuUG9saWNpZXNUYWJsZUNvbHVtbnMsCiAgICAgICAgICAgICAgICB2aWV3RGF0YTogcmVzCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgLy8g5bCG5a+85YWl55qE5pSv5LuY5pe26Ze05qC85byP5YyWCiAgICAgICAgICAgICAgcmVzID09PSBudWxsIHx8IHJlcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogcmVzLmZvckVhY2goZnVuY3Rpb24gKHJvdykgewogICAgICAgICAgICAgICAgdmFyIHRpbWVzdGFtcCA9IHJlcGFpckV4Y2VsVGltZXN0YW1wKHJvdy54cGF5RGF0ZSk7CiAgICAgICAgICAgICAgICByb3cueHBheURhdGUgPSB0aW1lc3RhbXAgPyBnZXREYXRlU3RyaW5nKHRpbWVzdGFtcCkgOiByb3cueHBheURhdGU7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgc2VsZi5pbXBvcnRTdWNjZXNzQ2FsbGJhY2socmVzKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICBpbXBvcnRTdWNjZXNzQ2FsbGJhY2s6IGZ1bmN0aW9uIGltcG9ydFN1Y2Nlc3NDYWxsYmFjayhyZXMpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICAgIGNvbnNvbGUubG9nKCdyZXM6JywgcmVzKTsKICAgICAgSHR0cE1vZHVsZS5pbXBvcnRCZW5lZml0KHJlcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAnMDAwMDAwJykgewogICAgICAgICAgX3RoaXMyLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WvvOWFpeaIkOWKnycpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczIuJG1lc3NhZ2UuZXJyb3IocmVzLnJlc3VsdCk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5yZWZyZXNoKCk7CiAgICB9LAogICAgaG9vazogZnVuY3Rpb24gaG9vayhkYXRhczIpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICAgIHZhciBwYXJhbSA9IHsKICAgICAgICBwYXlEZXRhaWxJZHM6IGRhdGFzMi5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHZhciBpdGVtQ29weSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0sIHsKICAgICAgICAgICAgeFBheURhdGU6IGl0ZW0ueHBheURhdGUsCiAgICAgICAgICAgIGlzSG9vazogX3RoaXMzLmlzSG9vawogICAgICAgICAgfSk7CiAgICAgICAgICBkZWxldGUgaXRlbUNvcHkueHBheURhdGU7CiAgICAgICAgICByZXR1cm4gaXRlbUNvcHk7CiAgICAgICAgfSkKICAgICAgfTsKICAgICAgSHR0cE1vZHVsZS5jb25maXJtKHBhcmFtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcwMDAwMDAnKSB7CiAgICAgICAgICBfdGhpczMuJG1lc3NhZ2Uuc3VjY2Vzcygn56Gu6K6k5oiQ5YqfJyk7CiAgICAgICAgICBfdGhpczMucXVlcnlUYWJsZURhdGFzMSgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczMuJG1lc3NhZ2UuZXJyb3IocmVzLnJlc3VsdCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBub3RIb29rOiBmdW5jdGlvbiBub3RIb29rKGRhdGFzMikgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZSgpLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHBhcmFtOwogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBwYXJhbSA9IHsKICAgICAgICAgICAgICAgIHBheURldGFpbElkczogZGF0YXMyLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICB2YXIgaXRlbUNvcHkgPSBPYmplY3QuYXNzaWduKHt9LCBpdGVtLCB7CiAgICAgICAgICAgICAgICAgICAgeFBheURhdGU6IGl0ZW0ueHBheURhdGUsCiAgICAgICAgICAgICAgICAgICAgY2FuY2VsRGVzY3JpcHRpb246IF90aGlzNC5mb3JtTW9kZWxEYXRhLmNhbmNlbERlc2NyaXB0aW9uCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBkZWxldGUgaXRlbUNvcHkueHBheURhdGU7CiAgICAgICAgICAgICAgICAgIHJldHVybiBpdGVtQ29weTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC4kcmVmcy5zaG93Q29uZmlyRm9ybS52YWxpZGF0ZSgpOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgSHR0cE1vZHVsZS5ub3RDb25maXJtKHBhcmFtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAwMDAwMCcpIHsKICAgICAgICAgICAgICAgICAgX3RoaXM0LmNsb3NlTW9kYWwoKTsKICAgICAgICAgICAgICAgICAgX3RoaXM0LiRtZXNzYWdlLnN1Y2Nlc3MoJ+WPlua2iOaIkOWKnycpOwogICAgICAgICAgICAgICAgICBfdGhpczQucHJvQ29kZSA9ICcnOwogICAgICAgICAgICAgICAgICBfdGhpczQucHJvTmFtZSA9ICcnOwogICAgICAgICAgICAgICAgICBfdGhpczQucGF5Q2VydE5vID0gJyc7CiAgICAgICAgICAgICAgICAgIF90aGlzNC5hbW91bnQgPSAnJzsKICAgICAgICAgICAgICAgICAgX3RoaXM0LnBheUFtdCA9ICcnOwogICAgICAgICAgICAgICAgICBfdGhpczQubW9mZGl2TmFtZSA9ICcnOwogICAgICAgICAgICAgICAgICBfdGhpczQuYWdlbmN5TmFtZSA9ICcnOwogICAgICAgICAgICAgICAgICBfdGhpczQuY29yQmd0RG9jTm9OYW1lID0gJyc7CiAgICAgICAgICAgICAgICAgIF90aGlzNC51c2VEZXMgPSAnJzsKICAgICAgICAgICAgICAgICAgX3RoaXM0LmR0b3MgPSBbXTsKICAgICAgICAgICAgICAgICAgX3RoaXM0LnF1ZXJ5VGFibGVEYXRhczEoKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIF90aGlzNC4kbWVzc2FnZS5lcnJvcihyZXMucmVzdWx0KTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgcmVhZDogZnVuY3Rpb24gcmVhZCgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CiAgICAgIHZhciBwYXJhbSA9IHt9OwogICAgICB0aGlzLnRhYmxlTG9hZGluZyA9IHRydWU7CiAgICAgIEh0dHBNb2R1bGUuYWRkQmVuZWZpdFBlb3BsZShwYXJhbSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgX3RoaXM1LnRhYmxlTG9hZGluZyA9IGZhbHNlOwogICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAwMDAwMCcpIHsKICAgICAgICAgIF90aGlzNS4kbWVzc2FnZS5zdWNjZXNzKCfor7vlj5bmiJDlip8nKTsKICAgICAgICAgIF90aGlzNS5xdWVyeVRhYmxlRGF0YXMxKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzNS4kbWVzc2FnZS5lcnJvcihyZXMucmVzdWx0KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGNoYW5nZVZpc2libGU6IGZ1bmN0aW9uIGNoYW5nZVZpc2libGUodmFsKSB7CiAgICAgIHRoaXMuYnJlYWtSdWxlVmlzaWJsZSA9IHZhbDsKICAgIH0sCiAgICBvblRvb2xiYXJCdG5DbGljazogZnVuY3Rpb24gb25Ub29sYmFyQnRuQ2xpY2soX3JlZikgewogICAgICB2YXIgY29udGV4dCA9IF9yZWYuY29udGV4dCwKICAgICAgICB0YWJsZSA9IF9yZWYudGFibGUsCiAgICAgICAgY29kZSA9IF9yZWYuY29kZTsKICAgICAgc3dpdGNoIChjb2RlKSB7CiAgICAgICAgLy8g5Yi35pawCiAgICAgICAgY2FzZSAncmVmcmVzaCc6CiAgICAgICAgICB0aGlzLnJlZnJlc2goKTsKICAgICAgICAgIGJyZWFrOwogICAgICB9CiAgICB9LAogICAgb25Ub29sYmFyQnRuQ2xpY2sxOiBmdW5jdGlvbiBvblRvb2xiYXJCdG5DbGljazEoX3JlZjIpIHsKICAgICAgdmFyIGNvbnRleHQgPSBfcmVmMi5jb250ZXh0LAogICAgICAgIHRhYmxlID0gX3JlZjIudGFibGUsCiAgICAgICAgY29kZSA9IF9yZWYyLmNvZGU7CiAgICAgIHN3aXRjaCAoY29kZSkgewogICAgICAgIC8vIOWIt+aWsAogICAgICAgIGNhc2UgJ3JlZnJlc2gnOgogICAgICAgICAgdGhpcy5yZWZyZXNoMSgpOwogICAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0sCiAgICAvLyDlt6bkvqfmoJEKICAgIGNoYW5nZUlucHV0OiBmdW5jdGlvbiBjaGFuZ2VJbnB1dCh2YWwpIHsKICAgICAgdGhpcy50cmVlR2xvYmFsQ29uZmlnLmlucHV0VmFsID0gdmFsOwogICAgfSwKICAgIG9uQ2xpY2ttZXRob2Q6IGZ1bmN0aW9uIG9uQ2xpY2ttZXRob2Qobm9kZSkgewogICAgICB2YXIgX25vZGUkdHJlZURhdGE7CiAgICAgIHZhciBjb2RlID0gbm9kZS5ub2RlLmNvZGU7CiAgICAgIHRoaXMuY29kZUxpc3QgPSBbXTsKICAgICAgdmFyIHRyZWVEYXRhID0gbm9kZS50cmVlRGF0YTsKICAgICAgLy8g6Z2e6aG257qn5Yy65YiS5YiZ6I635Y+W5Yy65YiSY29kZe+8jOWQpuWImeafpeivouihqOS9k+aVsOaNruaXtmNvZGVMaXN05Li656m66L+b6KGM5p+l6K+iCiAgICAgIGlmIChjb2RlICE9PSAoKF9ub2RlJHRyZWVEYXRhID0gbm9kZS50cmVlRGF0YSkgPT09IG51bGwgfHwgX25vZGUkdHJlZURhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9ub2RlJHRyZWVEYXRhWzBdLmNvZGUpKSB7CiAgICAgICAgdGhpcy5nZXRJdGVtKGNvZGUsIHRyZWVEYXRhKTsKICAgICAgfQogICAgICBpZiAobm9kZS5pZCAhPT0gJzAnKSB7CiAgICAgICAgdGhpcy5tb2ZkaXZjb2RlID0gbm9kZS5ub2RlLmNvZGU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5tb2ZkaXZjb2RlID0ge307CiAgICAgIH0KICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMxKCk7CiAgICB9LAogICAgZ2V0SXRlbTogZnVuY3Rpb24gZ2V0SXRlbShjb2RlLCBkYXRhKSB7CiAgICAgIHZhciBfdGhpczYgPSB0aGlzOwogICAgICBkYXRhLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpZiAoY29kZSA9PT0gaXRlbS5jb2RlKSB7CiAgICAgICAgICB2YXIgX2RhdGEgPSBbXTsKICAgICAgICAgIF9kYXRhLnB1c2goaXRlbSk7CiAgICAgICAgICBfdGhpczYuZ2V0Q29kZUxpc3QoX2RhdGEpOwogICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jaGlsZHJlbikgewogICAgICAgICAgX3RoaXM2LmdldEl0ZW0oY29kZSwgaXRlbS5jaGlsZHJlbik7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBnZXRDb2RlTGlzdDogZnVuY3Rpb24gZ2V0Q29kZUxpc3QoZGF0YSkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKICAgICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgX3RoaXM3LmNvZGVMaXN0LnB1c2goaXRlbS5jb2RlKTsKICAgICAgICBpZiAoaXRlbS5jaGlsZHJlbikgewogICAgICAgICAgX3RoaXM3LmdldENvZGVMaXN0KGl0ZW0uY2hpbGRyZW4pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgdHJlZVNldENvbmZyaW1EYXRhOiBmdW5jdGlvbiB0cmVlU2V0Q29uZnJpbURhdGEoY3VyVHJlZSkgewogICAgICB0aGlzLnRyZWVRdWVyeXBhcmFtcy5lbGVtZW50Q29kZSA9IGN1clRyZWUuY29kZTsKICAgICAgdGhpcy4kcmVmcy5sZWZ0VHJlZS5yZWZyZXNoVHJlZSgpOwogICAgfSwKICAgIGFzaWRlQ2hhbmdlOiBmdW5jdGlvbiBhc2lkZUNoYW5nZSgpIHsKICAgICAgdGhpcy5sZWZ0VHJlZVZpc2libGUgPSBmYWxzZTsKICAgIH0sCiAgICAvLyDmn6XnnIvpmYTku7YKICAgIHNob3dBdHRhY2htZW50OiBmdW5jdGlvbiBzaG93QXR0YWNobWVudChyb3cpIHsKICAgICAgdGhpcy5iaWxsZ3VpZCA9IHJvdy5hdHRhY2htZW50X2lkOwogICAgICB0aGlzLnNob3dBdHRhY2htZW50RGlhbG9nID0gdHJ1ZTsKICAgIH0sCiAgICAvLyDooajmoLzljZXlhYPooYzljZXlh7sKICAgIGNlbGxDbGljazogZnVuY3Rpb24gY2VsbENsaWNrKG9iaiwgY29udGV4dCwgZSkgewogICAgICB2YXIga2V5ID0gb2JqLmNvbHVtbi5wcm9wZXJ0eTsKICAgICAgc3dpdGNoIChrZXkpIHt9CiAgICB9LAogICAgLy8g5Yi35paw5oyJ6ZKuIOWIt+aWsOafpeivouagj++8jOaPkOekuuWIt+aWsCB0YWJsZSDmlbDmja4KICAgIHJlZnJlc2gxOiBmdW5jdGlvbiByZWZyZXNoMSgpIHsKICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMxKCk7CiAgICAgIC8vIHRoaXMucXVlcnlUYWJsZURhdGFzQ291bnQoKQogICAgfSwKICAgIGFqYXhUYWJsZURhdGExOiBmdW5jdGlvbiBhamF4VGFibGVEYXRhMShfcmVmMykgewogICAgICB2YXIgcGFyYW1zID0gX3JlZjMucGFyYW1zLAogICAgICAgIGN1cnJlbnRQYWdlID0gX3JlZjMuY3VycmVudFBhZ2UsCiAgICAgICAgcGFnZVNpemUgPSBfcmVmMy5wYWdlU2l6ZTsKICAgICAgdGhpcy5tYWluUGFnZXJDb25maWcxLmN1cnJlbnRQYWdlID0gY3VycmVudFBhZ2U7CiAgICAgIHRoaXMubWFpblBhZ2VyQ29uZmlnMS5wYWdlU2l6ZSA9IHBhZ2VTaXplOwogICAgICB0aGlzLnF1ZXJ5VGFibGVEYXRhczEoKTsKICAgIH0sCiAgICAvLyDlsZXlvIDmipjlj6Dmn6Xor6LmoYYKICAgIG9uUXVlcnlDb25kaXRpb25zQ2xpY2s6IGZ1bmN0aW9uIG9uUXVlcnlDb25kaXRpb25zQ2xpY2soaXNPcGVuKSB7CiAgICAgIHRoaXMuaXNTaG93UXVlcnlDb25kaXRpb25zID0gaXNPcGVuOwogICAgfSwKICAgIC8vIOaWsOWinuaIluS/ruaUueW8ueahhgogICAgY2xpY2tBZGRCdG46IGZ1bmN0aW9uIGNsaWNrQWRkQnRuKHJvdykgewogICAgICAvLyBpZiAodGhpcy5hZGRUYWJsZURhdGEubGVuZ3RoID4gMCkgewogICAgICAvLyAgIHRoaXMuYWRkVGFibGVEYXRhID0gW10KICAgICAgLy8gfQogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gJ+aWsOWinic7CiAgICAgIC8vIHRoaXMuYWRkVGFibGVEYXRhLnB1c2gocm93KQogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlOwogICAgfSwKICAgIC8vIOeCueWHu+aWsOWingogICAgb25BZGRUb29sYmFyQ2xpY2tBZGQ6IGZ1bmN0aW9uIG9uQWRkVG9vbGJhckNsaWNrQWRkKG9iaiwgY29udGV4dCwgZSkgewogICAgICAvLyBsZXQgcm93ID0gW10KICAgICAgLy8gcm93ID0gdGhpcy4kcmVmcy5tYWluVGFibGVSZWYuZ2V0U2VsZWN0aW9uRGF0YSgpWzBdCiAgICAgIC8vIGlmICh0aGlzLiRyZWZzLm1haW5UYWJsZVJlZi5nZXRTZWxlY3Rpb25EYXRhKCkubGVuZ3RoICE9PSAxKSB7CiAgICAgIC8vICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfor7fpgInmi6nkuIDmnaHmlbDmja4nKQogICAgICAvLyAgIHJldHVybgogICAgICAvLyB9CiAgICAgIC8vIHRoaXMuYWRkVGFibGVEYXRhID0gdGhpcy4kcmVmcy5tYWluVGFibGVSZWYuZ2V0U2VsZWN0aW9uRGF0YSgpCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWU7CiAgICAgIC8vIHRoaXMuc2VsZWN0U3VtSWQgPSB0aGlzLiRyZWZzLm1haW5UYWJsZVJlZi5nZXRTZWxlY3Rpb25EYXRhKClbMF0uc3VtX2lkCiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAn5paw5aKeJzsKICAgIH0sCiAgICAvLyDmn6Xor6IgdGFibGUxIOaVsOaNrgogICAgcXVlcnlUYWJsZURhdGFzMTogZnVuY3Rpb24gcXVlcnlUYWJsZURhdGFzMSgpIHsKICAgICAgdmFyIF90aGlzOCA9IHRoaXM7CiAgICAgIHZhciBwYXJhbSA9IHsKICAgICAgICBwYWdlOiB0aGlzLm1haW5QYWdlckNvbmZpZzEuY3VycmVudFBhZ2UsCiAgICAgICAgLy8g6aG156CBCiAgICAgICAgcGFnZVNpemU6IHRoaXMubWFpblBhZ2VyQ29uZmlnMS5wYWdlU2l6ZSwKICAgICAgICAvLyDmr4/pobXmnaHmlbAKICAgICAgICBwYXlDZXJ0Tm86IHRoaXMucGF5Q2VydE5vLAogICAgICAgIHByb05hbWU6IHRoaXMucHJvTmFtZSwKICAgICAgICBwcm9Db2RlOiB0aGlzLnByb0NvZGUsCiAgICAgICAgYWdlbmN5TmFtZTogdGhpcy5hZ2VuY3lOYW1lLAogICAgICAgIGNvckJndERvY05vTmFtZTogdGhpcy5jb3JCZ3REb2NOb05hbWUsCiAgICAgICAgdXNlRGVzOiB0aGlzLnVzZURlcywKICAgICAgICBhbW91bnQ6IHRoaXMuYW1vdW50LAogICAgICAgIGlzSG9vazogdGhpcy5pc0hvb2ssCiAgICAgICAgcm9sZUlkOiB0aGlzLnJvbGVJZCwKICAgICAgICBtb2ZEaXZDb2RlOiB0aGlzLm1vZkRpdkNvZGUsCiAgICAgICAgLy8g6I635Y+W5bem5L6n5qCRCiAgICAgICAgbW9mRGl2Q29kZXM6IHRoaXMuY29kZUxpc3QsCiAgICAgICAgZHRvczogdGhpcy5kdG9zCiAgICAgIH07CiAgICAgIHRoaXMudGFibGVMb2FkaW5nMiA9IHRydWU7CiAgICAgIEh0dHBNb2R1bGUucGFnZVBheVF1ZXJ5KHBhcmFtKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczgudGFibGVMb2FkaW5nMiA9IGZhbHNlOwogICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAwMDAwMCcpIHsKICAgICAgICAgIF90aGlzOC50YWJsZURhdGExID0gcmVzLmRhdGEucmVzdWx0czsKICAgICAgICAgIF90aGlzOC5tYWluUGFnZXJDb25maWcxLnRvdGFsID0gcmVzLmRhdGEudG90YWxDb3VudDsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM4LiRtZXNzYWdlLmVycm9yKHJlcy5yZXN1bHQpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgLy8g5pON5L2c5pel5b+XCiAgICBxdWVyeUFjdGlvbkxvZzogZnVuY3Rpb24gcXVlcnlBY3Rpb25Mb2cocm93KSB7CiAgICAgIC8vIGxldCBkYXRhID0gewogICAgICAvLyAgIHJvbGVndWlkOiB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUucm9sZWd1aWQsCiAgICAgIC8vICAgZGF0YTogewogICAgICAvLyAgICAgc3RhdHVzQ29kZTogdGhpcy50b29sQmFyU3RhdHVzU2VsZWN0LmNvZGUsCiAgICAgIC8vICAgICBpZDogcm93LmlkLAogICAgICAvLyAgICAgYXBwSWQ6ICdwYXlfdm91Y2hlcicKICAgICAgLy8gICB9CiAgICAgIC8vIH0KICAgICAgLy8gSHR0cE1vZHVsZS5xdWVyeUFjdGlvbkxvZyhkYXRhKS50aGVuKHJlcyA9PiB7CiAgICAgIC8vICAgdGhpcy5sb2dEYXRhID0gcmVzLmRhdGEKICAgICAgLy8gICBjb25zb2xlLmxvZyh0aGlzLmxvZ0RhdGEpCiAgICAgIC8vICAgdGhpcy5zaG93TG9nVmlldyA9IHRydWUKICAgICAgLy8gfSkKICAgIH0sCiAgICAvLyDpgIHlrqEKICAgIGF1ZGllRGF0YTogZnVuY3Rpb24gYXVkaWVEYXRhKHBhcmFtKSB7CiAgICAgIC8vIEh0dHBNb2R1bGUuYXVkaWVEYXRhKHBhcmFtKS50aGVuKHJlcyA9PiB7CiAgICAgIC8vICAgaWYgKHJlcy5jb2RlID09PSAnMDAwMDAwJykgewogICAgICAvLyAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfmk43kvZzmiJDlip8nKQogICAgICAvLyAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQogICAgICAvLyAgIH0KICAgICAgLy8gfSkKICAgIH0sCiAgICAvKioNCiAgICAgKiDlt6bkvqfmoJHov4fmu6TmkJzntKINCiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn0NCiAgICAgKi8KICAgIHNlYXJjaFRyZWVIYW5kbGU6IGZ1bmN0aW9uIHNlYXJjaFRyZWVIYW5kbGUoaW5wdXRWYWwpIHsKICAgICAgdmFyIF90aGlzOSA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lKCkud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBfdGhpczkudHJlZUZpbHRlclRleHQgPSBpbnB1dFZhbDsKICAgICAgICAgICAgICBfdGhpczkudHJlZUN1cnJlbnRQYWdlID0gMTsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzOS5nZXRMZWZ0VHJlZURhdGEoKTsKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZ2V0TGVmdFRyZWVEYXRhOiBmdW5jdGlvbiBnZXRMZWZ0VHJlZURhdGEoKSB7CiAgICAgIHZhciBfdGhpczEwID0gdGhpczsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB2YXIgcGFyYW1zID0ge307CiAgICAgIGlmICh0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwMDAwMDAwJykgewogICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgIGVsZW1lbnRDb2RlOiAnYWRtZGl2JywKICAgICAgICAgIHByb3ZpbmNlOiAnNjEwMDAwMDAwJywKICAgICAgICAgIHllYXI6IHRoaXMudXNlckluZm8ueWVhciwKICAgICAgICAgIHdoZXJlc3FsOiAnYW5kIGNvZGUgbGlrZSBcJycgKyA2MSArICclXCcnCiAgICAgICAgfTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwMTAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwMTAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwMjAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwMzAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwNDAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwNTAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwNjAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwNzAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwODAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwOTAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjExMDAwMDAwJyB8fCB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjExMjAwMDAwJykgewogICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgIGVsZW1lbnRDb2RlOiAnYWRtZGl2JywKICAgICAgICAgIHByb3ZpbmNlOiB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlLAogICAgICAgICAgeWVhcjogdGhpcy51c2VySW5mby55ZWFyLAogICAgICAgICAgd2hlcmVzcWw6ICdhbmQgY29kZSBsaWtlIFwnJyArIHRoaXMudXNlckluZm8ucHJvdmluY2Uuc3Vic3RyaW5nKDAsIDQpICsgJyVcJycKICAgICAgICB9OwogICAgICB9IGVsc2UgewogICAgICAgIHBhcmFtcyA9IHsKICAgICAgICAgIGVsZW1lbnRDb2RlOiAnYWRtZGl2JywKICAgICAgICAgIHByb3ZpbmNlOiB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlLAogICAgICAgICAgeWVhcjogdGhpcy51c2VySW5mby55ZWFyLAogICAgICAgICAgd2hlcmVzcWw6ICdhbmQgY29kZSBsaWtlIFwnJyArIHRoaXMudXNlckluZm8ucHJvdmluY2Uuc3Vic3RyaW5nKDAsIDYpICsgJyVcJycKICAgICAgICB9OwogICAgICB9CiAgICAgIEh0dHBNb2R1bGUuZ2V0VHJlZURhdGExKHBhcmFtcykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgaWYgKHJlcy5kYXRhKSB7CiAgICAgICAgICAvLyBsZXQgdHJlZVJlc2RhdGEgPSB0aGF0LmdldENoaWxkcmVuRGF0YShyZXMuZGF0YSkKICAgICAgICAgIC8vIHRyZWVSZXNkYXRhLmZvckVhY2goaXRlbSA9PiB7CiAgICAgICAgICAvLyAgIGl0ZW0ubGFiZWwgPSBpdGVtLmlkICsgJy0nICsgaXRlbS5idXNpbmVzc05hbWUKICAgICAgICAgIC8vIH0pCiAgICAgICAgICAvLyBjb25zdCByZXN1bHQgPSBbCiAgICAgICAgICAvLyAgIHsKICAgICAgICAgIC8vICAgICBpZDogJ3Jvb3QnLAogICAgICAgICAgLy8gICAgIGxhYmVsOiAn5YWo6YOoJywKICAgICAgICAgIC8vICAgICBjb2RlOiAncm9vdCcsCiAgICAgICAgICAvLyAgICAgaXNsZWFmOiAnMCcsCiAgICAgICAgICAvLyAgICAgY2hpbGRyZW46IHRyZWVSZXNkYXRhCiAgICAgICAgICAvLyAgIH0KICAgICAgICAgIC8vIF0KICAgICAgICAgIHRoYXQudHJlZURhdGEgPSByZXMuZGF0YTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMxMC4kbWVzc2FnZS5lcnJvcign5bem5L6n5qCR5Yqg6L295aSx6LSlJyk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVDdXJyZW50Q2hhbmdlKHZhbCkgewogICAgICB0aGlzLnRyZWVDdXJyZW50UGFnZSA9IHZhbDsKICAgICAgdGhpcy5nZXRMZWZ0VHJlZURhdGEoKTsKICAgIH0sCiAgICBoYW5kbGVTaXplQ2hhbmdlOiBmdW5jdGlvbiBoYW5kbGVTaXplQ2hhbmdlKHZhbCkge30sCiAgICBnZXRDaGlsZHJlbkRhdGE6IGZ1bmN0aW9uIGdldENoaWxkcmVuRGF0YShkYXRhcykgewogICAgICB2YXIgdGhhdCA9IHRoaXM7CiAgICAgIGRhdGFzLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICBpdGVtLmxhYmVsID0gaXRlbS50ZXh0OwogICAgICAgIGlmIChpdGVtLmNoaWxkcmVuKSB7CiAgICAgICAgICB0aGF0LmdldENoaWxkcmVuRGF0YShpdGVtLmNoaWxkcmVuKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICByZXR1cm4gZGF0YXM7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgY29uc29sZS5sb2coJ3RoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZScsIHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZSk7CiAgICB0aGlzLm1lbnVJZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZS5ndWlkOwogICAgdGhpcy5yb2xlZ3VpZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZS5yb2xlZ3VpZDsKICAgIHRoaXMudG9rZW5pZCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TG9naW5BdXRoZW50aWNhdGlvbi50b2tlbmlkOwogICAgdGhpcy51c2VySW5mbyA9IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvOwogICAgdGhpcy5tZW51TmFtZSA9IHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZS5uYW1lOwogICAgdGhpcy5yb2xlSWQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUucm9sZWd1aWQ7CiAgICB0aGlzLmdldExlZnRUcmVlRGF0YSgpOwogICAgLy8gdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQogICAgLy8gdGhpcy5xdWVyeVRhYmxlRGF0YXMxKCkKICB9Cn07"},{"version":3,"names":["proconf","getDateString","ImportModel","Import","HttpModule","Export","repairExcelTimestamp","components","computed","wheresql","concat","treeFilterText","tableColumnsConfig1","PoliciesTableColumns1","watch","queryConfig","getSearchDataList","queryConfig1","getSearchDataList1","data","showConfirmModal","clickRow","formModelData","cancelDescription","matchHoot","isProName","isAmount","codeList","importModalVisible","fileConfig","fileName","maxSize","row1","proTotal","treePageSize","offset","treeCurrentPage","highQueryConfig","highQueryConfig1","searchDataList","highQueryData","searchDataList1","highQueryData1","radioShow","breakRuleVisible","treeData","children","code","id","label","name","parentId","parentRuleName","ruleLevel","ruleName","treeTypeConfig","curRadio","treeGlobalConfig","inputVal","formModelRule","reason","required","message","trigger","treeQueryparams","elementCode","province","$store","state","userInfo","year","treeServerUri","treeAjaxType","leftTreeVisible","toolBarStatusBtnConfig","buttons","statusButtons","curButton","curStatusButton","buttonsInfo","methods","bsToolbarClickEvent","statusRightToolBarButtonByBusDept","tabStatusNumConfig","isShowQueryConditions","toolBarStatusSelect","type","iconName","iconNameActive","iconUrl","curValue","tableLoading","tableLoading1","tableLoading2","tableColumnsConfig","PoliciesTableColumns","tableData","tableData1","tableToolbarConfig","disabledMoneyConversion","moneyConversion","import","export","print","zoom","custom","slots","tools","tableToolbarConfig1","leftNode","regulationStatus","mainPagerConfig","total","currentPage","pageSize","mainPagerConfig1","tableConfig","tableConfig1","tableFooterConfig","showFooter","tableFooterConfig1","fiscalYear","isHook","proCode1","proCode","payCertNo","proName","proName1","agencyName","corBgtDocNoName","useDes","dtos","amount","mofdivName","payAcctNameStr","payAcctNoStr","payeeAcctNameStr","payeeAcctNoStr","proNameStr","payTimeStr","logData","showLogView","dialogVisible","dialogTitle","addTableData","menuName","roleId","params5","menuId","tokenid","roleguid","curNavModule","appId","isHaveZero","showAttachmentDialog","billguid","condition","handleType","isEnable","regulationType","warningLevel","DetailData","regulationclass","firulename","payAmt","mofDivCode","leftTreeConfig","showFilter","isInitLoadData","scrollLoad","isleaf","levelno","valueKeys","format","placeholder","multipleValueType","treeProps","labelFormat","nodeKey","multiple","isLazeLoad","readonly","clearable","tabSelect","importData","treeLoadingState","mounted","closeModal","$refs","showConfirForm","clearValidate","onImportClick","length","$XModal","status","importConfig","importSuccessCallback","$emit","onImportFileClick","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","$Import","importExcel","result","filename","stop","onDownloadTemplateClick","obj","downloadTemplateCallback","columns","selection","defaultConfig","isExportTree","self","treeConfigIn","saveType","dataType","isExportOnlySourceField","isExportOnlyViewTitle","isExportHead","exportViewTitleType","isExportFooter","isExportOriginalData","isExportData","datas","index","ignoreColsTypes","$Export","exportExcel","Object","assign","downLoadImportTemplates","unit","triggerImportOption","config","arguments","undefined","$this","operationToolbarButtonClickEvent","refresh1","search1","queryTableDatas1","searchDataObj","forEach","item","itemRender","field","getConditionList","onStatusTabClick","checkboxChange","checked","row","i","$set","payCertId","context","e","datas2","mainTableRef1","getSelectionData","$message","warning","hook","read","Cb","res","mainTableRef","deaImportViewData","conlums","viewData","timestamp","xpayDate","_this2","console","log","importBenefit","then","success","error","refresh","_this3","param","payDetailIds","map","itemCopy","xPayDate","confirm","notHook","_this4","_callee2","_callee2$","_context2","validate","notConfirm","_this5","addBenefitPeople","changeVisible","val","onToolbarBtnClick","_ref","table","onToolbarBtnClick1","_ref2","changeInput","onClickmethod","node","_node$treeData","getItem","mofdivcode","_this6","push","getCodeList","_this7","treeSetConfrimData","curTree","leftTree","refreshTree","asideChange","showAttachment","attachment_id","cellClick","key","column","property","ajaxTableData1","_ref3","params","onQueryConditionsClick","isOpen","clickAddBtn","onAddToolbarClickAdd","_this8","page","mofDivCodes","pagePayQuery","results","totalCount","queryActionLog","audieData","searchTreeHandle","_this9","_callee3","_callee3$","_context3","getLeftTreeData","_this10","that","substring","getTreeData1","handleCurrentChange","handleSizeChange","getChildrenData","text","created","guid","getters","getLoginAuthentication"],"sources":["src/views/main/fundMonitoring/benefitPeopleConfirm/benefitPeopleConfirm.vue"],"sourcesContent":["<!--支付数据规范性检查-->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n        />\r\n        <BsTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :config=\"leftTreeConfig\"\r\n          :tree-data=\"treeData\"\r\n          @onNodeClick=\"onClickmethod\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <!-- <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          />\r\n        </div> -->\r\n        <!-- <BsTable\r\n          ref=\"mainTableRef\"\r\n          v-loading=\"tableLoading1\"\r\n          style=\"height: 40%\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @checkboxChange=\"checkboxChange\"\r\n          @checkboxAll=\"checkboxChange\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n        </BsTable> -->\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig1\"\r\n            :query-form-data=\"searchDataList1\"\r\n            @onSearchClick=\"search1\"\r\n          />\r\n        </div>\r\n        <BsTable\r\n          ref=\"mainTableRef1\"\r\n          v-loading=\"tableLoading2\"\r\n          style=\"height: 100%\"\r\n          :footer-config=\"tableFooterConfig1\"\r\n          :table-columns-config=\"tableColumnsConfig1\"\r\n          :table-data=\"tableData1\"\r\n          :table-config=\"tableConfig1\"\r\n          :pager-config=\"mainPagerConfig1\"\r\n          :toolbar-config=\"tableToolbarConfig1\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick1\"\r\n          @ajaxData=\"ajaxTableData1\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">支付凭证信息</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <ImportModel\r\n      :file-config=\"fileConfig\"\r\n      :import-modal-visible.sync=\"importModalVisible\"\r\n      @onDownloadTemplateClick=\"onDownloadTemplateClick\"\r\n      @onImportClick=\"onImportClick\"\r\n      @onImportFileClick=\"onImportFileClick\"\r\n    />\r\n    <vxe-modal\r\n      v-model=\"showConfirmModal\"\r\n      width=\"600\"\r\n      height=\"200\"\r\n      :show-footer=\"true\"\r\n      title=\"取消确认\"\r\n      @close=\"closeModal\"\r\n    >\r\n      <el-form ref=\"showConfirForm\" :model=\"formModelData\" :rules=\"formModelRule\" label-width=\"80px\">\r\n        <el-form-item label=\"取消说明\" prop=\"cancelDescription\" class=\"one-row\">\r\n          <el-input\r\n            v-model=\"formModelData.cancelDescription\"\r\n            type=\"textarea\"\r\n            :maxlength=\"100\"\r\n            show-word-limit\r\n            resize=\"none\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n            placeholder=\"请输入取消说明\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- <vxe-form ref=\"showConfirForm\" :data=\"formModelData\" :rules=\"formModelRule\">\r\n        <vxe-form-item title=\"取消说明\" field=\"reason\" required class=\"one-row\">\r\n          <el-input\r\n            v-model=\"formModelData.reason\"\r\n            type=\"textarea\"\r\n            :maxlength=\"100\"\r\n            show-word-limit\r\n            resize=\"none\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n            placeholder=\"请输入取消说明\"\r\n          />\r\n        </vxe-form-item>\r\n      </vxe-form> -->\r\n      <div slot=\"footer\" class=\"vxeModalUnique\">\r\n        <el-button size=\"small\" @click=\"closeModal\">取消</el-button>\r\n        <el-button type=\"primary\" size=\"small\" @click=\"notHook(clickRow)\">确定</el-button>\r\n      </div>\r\n    </vxe-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf, getDateString } from './benefitPeopleConfirm'\r\nimport ImportModel from '../../../../components/Table/import/import.vue'\r\nimport { Import } from '../../../../components/Table/import/import/import.js'\r\nimport HttpModule from '@/api/frame/main/fundMonitoring/benefitPeopleConfirm.js'\r\nimport { Export } from '../../../../components/Table/export/export/export'\r\nimport { repairExcelTimestamp } from '@/utils/excel'\r\n// import AddDialog from './children/addDialog'\r\n// import HttpModule from '@/api/frame/main/Monitoring/WarningDetailsByCompartment.js'\r\nexport default {\r\n  components: {\r\n    ImportModel\r\n    // AddDialog\r\n  },\r\n  computed: {\r\n    wheresql() {\r\n      return `and name like '%${this.treeFilterText}%'`\r\n    },\r\n    tableColumnsConfig1() {\r\n      return proconf.PoliciesTableColumns1(this)\r\n    }\r\n  },\r\n  watch: {\r\n    queryConfig() {\r\n      this.getSearchDataList()\r\n    },\r\n    queryConfig1() {\r\n      this.getSearchDataList1()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      showConfirmModal: false,\r\n      clickRow: {},\r\n      formModelData: {\r\n        cancelDescription: ''\r\n      },\r\n      // 左侧树过滤值\r\n      treeFilterText: '',\r\n      matchHoot: true,\r\n      isProName: false,\r\n      isAmount: false,\r\n      codeList: [],\r\n      importModalVisible: false, // 导入弹框\r\n      fileConfig: {\r\n        fileName: '',\r\n        maxSize: 1024 * 1024 * 10\r\n      }, // 导入文件配置\r\n      row1: {},\r\n      proTotal: 0,\r\n      treePageSize: 200,\r\n      offset: 0,\r\n      treeCurrentPage: 1,\r\n      // BsQuery 查询栏\r\n      queryConfig: proconf.highQueryConfig,\r\n      queryConfig1: proconf.highQueryConfig1,\r\n      searchDataList: proconf.highQueryData,\r\n      searchDataList1: proconf.highQueryData1,\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      treeData: [{\r\n        children: [],\r\n        code: 0,\r\n        id: 0,\r\n        label: '0-全部分类',\r\n        name: '全部分类',\r\n        parentId: null,\r\n        parentRuleName: null,\r\n        ruleLevel: 0,\r\n        ruleName: '全部分类'\r\n      }],\r\n      treeTypeConfig: {\r\n        curRadio: 'AGENCY'\r\n      },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      },\r\n      formModelRule: {\r\n        reason: [\r\n          { required: true, message: '请输入取消说明', trigger: 'blur' }\r\n        ]\r\n      },\r\n      treeQueryparams: { elementCode: 'admdiv', province: this.$store.state.userInfo.province, year: this.$store.state.userInfo.year, wheresql: 'and province =' + this.$store.state.userInfo.province },\r\n      // treeServerUri: 'pay-clear-service/v2/lefttree',\r\n      treeServerUri: '',\r\n      treeAjaxType: 'get',\r\n      leftTreeVisible: true,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        buttons: proconf.statusButtons,\r\n        curButton: proconf.curStatusButton,\r\n        buttonsInfo: proconf.buttons,\r\n        methods: {\r\n          bsToolbarClickEvent: this.bsToolbarClickEvent\r\n        }\r\n      },\r\n      buttonsInfo: proconf.statusRightToolBarButtonByBusDept,\r\n      tabStatusNumConfig: {\r\n        '1': 0,\r\n        '2': 0,\r\n        '3': 0\r\n      },\r\n      isShowQueryConditions: true,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        iconName: 'base-all.png',\r\n        iconNameActive: 'base-all-active.png',\r\n        iconUrl: '',\r\n        label: '全部',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableLoading1: false,\r\n      tableLoading2: false,\r\n      tableColumnsConfig: proconf.PoliciesTableColumns,\r\n      tableData: [],\r\n      tableData1: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      tableToolbarConfig1: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      leftNode: {},\r\n      regulationStatus: '1',\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 50\r\n      },\r\n      mainPagerConfig1: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 50\r\n      },\r\n      tableConfig: {\r\n      },\r\n      tableConfig1: {\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      tableFooterConfig1: {\r\n        showFooter: false\r\n      },\r\n      fiscalYear: '',\r\n      isHook: '0',\r\n      proCode1: '',\r\n      proCode: '',\r\n      payCertNo: '',\r\n      proName: '',\r\n      proName1: '',\r\n      agencyName: '',\r\n      corBgtDocNoName: '',\r\n      useDes: '',\r\n      dtos: [],\r\n      amount: '',\r\n      mofdivName: '',\r\n      payAcctNameStr: '',\r\n      payAcctNoStr: '',\r\n      payeeAcctNameStr: '',\r\n      payeeAcctNoStr: '',\r\n      proNameStr: '',\r\n      payTimeStr: '',\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '系统级监控规则',\r\n      roleId: '',\r\n      params5: '',\r\n      menuId: '',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      // 文件\r\n      showAttachmentDialog: false,\r\n      billguid: '',\r\n      condition: {},\r\n      handleType: '',\r\n      isEnable: '',\r\n      regulationType: '',\r\n      warningLevel: '',\r\n      DetailData: {},\r\n      regulationclass: '',\r\n      firulename: '',\r\n      payAmt: '',\r\n      mofDivCode: this.$store.state.userInfo.province,\r\n      leftTreeConfig: { // 左侧单位树配置\r\n        showFilter: false, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 0, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '请选择',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{code}-{name}', // {code}-{name}\r\n          nodeKey: 'code', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        multiple: false, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true,\r\n        tabSelect: '0'\r\n      },\r\n      importData: [], // 导入数据\r\n      treeLoadingState: false\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    closeModal() {\r\n      this.showConfirmModal = false\r\n      this.formModelData.cancelDescription = ''\r\n      this.$refs.showConfirForm.clearValidate()\r\n    },\r\n    onImportClick() {\r\n      // 导入提交\r\n      if (!this.importData.length) {\r\n        this.$XModal.message({ status: 'error', message: '无数据导入请重新导入数据！' })\r\n      } else {\r\n        this.importModalVisible = false\r\n        if (typeof (this.importConfig.importSuccessCallback) === 'function') {\r\n          this.importConfig.importSuccessCallback(this.importData)\r\n        } else {\r\n          this.$emit('importSuccessCallback', this.importData)\r\n        }\r\n      }\r\n    },\r\n    async onImportFileClick() {\r\n      // 导入文件\r\n      this.$Import = new Import()\r\n      await this.$Import.importExcel({\r\n      }, (result, filename) => {\r\n        // this.tableDataIn = result\r\n        this.importData = result\r\n        this.fileConfig.fileName = filename\r\n      })\r\n    },\r\n    onDownloadTemplateClick(obj) {\r\n      // 下载模版\r\n      if (typeof (this.importConfig.downloadTemplateCallback) === 'function') {\r\n        this.importConfig.downloadTemplateCallback(this.importData)\r\n      } else {\r\n        this.importData = []\r\n        const columns = this.tableColumnsConfig\r\n        const selection = this.selection\r\n        let defaultConfig = {\r\n          isExportTree: !!self.treeConfigIn,\r\n          saveType: '.xlsx',\r\n          fileName: 'importTempplate', // 文件名\r\n          dataType: 'fullData',\r\n          isExportOnlySourceField: true, // 是否只导出数据源表头字段，\r\n          isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n          isExportHead: true, // 是否导出表头\r\n          exportViewTitleType: 'nestTitle',\r\n          isExportFooter: false, // 是否导出表尾部\r\n          isExportOriginalData: true, // 是否导出源数据\r\n          isExportData: true, // 是否导出数据\r\n          columns: columns, // 表头配置\r\n          datas: [], // 源数据,\r\n          selection: selection, // 选中数据\r\n          index: true, // 是否添加序号,\r\n          ignoreColsTypes: [\r\n            'dragSort',\r\n            'seq',\r\n            'checkbox',\r\n            'radio',\r\n            'optionRow',\r\n            'expand',\r\n            'attach',\r\n            'ach',\r\n            'list',\r\n            'attachlist'\r\n          ] // 忽略导出的列类型\r\n        }\r\n        this.$Export.exportExcel(obj ? Object.assign(defaultConfig, obj) : obj, this)\r\n      }\r\n    },\r\n    downLoadImportTemplates() {\r\n      // 下载导入模版\r\n      const tableColumnsConfig = this.tableColumnsConfig\r\n      // const unitLabel = this.toolbarConfigInCopy.moneyUnitOptions?.find(item => item.value === this.moneyUnit)?.label\r\n      this.$Export = new Export({ unit: '元' })\r\n      this.$Export.exportExcel({\r\n        saveType: '.xlsx',\r\n        fileName: '导入模版', // 文件名\r\n        dataType: 'fullData',\r\n        isExportOnlyViewTitle: true, // 是否只导出数据源表头字段，\r\n        columns: tableColumnsConfig, // 表头配置\r\n        index: false // 是否添加序号,\r\n      }, this)\r\n    },\r\n    triggerImportOption(config = {}) {\r\n      // 触发导入\r\n      this.importData = []\r\n      this.importConfig = config\r\n      this.fileConfig.fileName = ''\r\n      this.importModalVisible = true\r\n    },\r\n    bsToolbarClickEvent(obj, $this) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.code) {\r\n        case '1':\r\n          this.isHook = '0'\r\n          this.matchHoot = true\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n        case '2':\r\n          this.isHook = '1'\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n        case '3':\r\n          this.isHook = '2'\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.mainPagerConfig1.currentPage = 1\r\n      this.refresh1()\r\n      // this.$refs.mainTableRef.$refs.xGrid.clearScroll()\r\n    },\r\n    search1(obj) {\r\n      this.payCertNo = obj.payCertNo\r\n      this.proName = obj.proName\r\n      this.agencyName = obj.agencyName\r\n      this.corBgtDocNoName = obj.corBgtDocNoName\r\n      this.useDes = obj.useDes\r\n      this.queryTableDatas1()\r\n      // this.queryTableDatasCount()\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList1() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList1 = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.code) {\r\n        case '1':\r\n          this.isHook = '0'\r\n          break\r\n        case '2':\r\n          this.isHook = '1'\r\n          break\r\n      }\r\n      // this.queryTableDatas1()\r\n    },\r\n    checkboxChange(checked, row) {\r\n      switch (this.toolBarStatusSelect.code) {\r\n        case '1':\r\n          break\r\n        case '2':\r\n          this.dtos.length = checked.selection.length\r\n          for (let i = 0; i < this.dtos.length; i++) {\r\n            this.$set(this.dtos, i, checked.selection[i].payCertId)\r\n          }\r\n          this.queryTableDatas1()\r\n          break\r\n      }\r\n    },\r\n    // checkboxChange1(checked, row) {\r\n    //   switch (this.toolBarStatusSelect.code) {\r\n    //     case '1':\r\n    //       if (this.isProName && this.isAmount) {\r\n    //         this.proName = checked.selection[0].proName\r\n    //         this.amount = checked.selection[0].amount\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       if (this.isProName) {\r\n    //         this.proName = checked.selection[0].proName\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       if (this.isAmount) {\r\n    //         this.amount = checked.selection[0].amount\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       break\r\n    //     case '2':\r\n    //       this.dtos.length = checked.selection.length\r\n    //       for (let i = 0; i < this.dtos.length; i++) {\r\n    //         this.$set(this.dtos, i, checked.selection[i].payCertId)\r\n    //       }\r\n    //       this.queryTableDatas()\r\n    //       break\r\n    //   }\r\n    // },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      let self = this\r\n      let datas2 = this.$refs.mainTableRef1.getSelectionData()\r\n      switch (obj.code) {\r\n        // 挂接\r\n        case 'hook_set':\r\n          if (datas2.length === 0) {\r\n            this.$message.warning('请选择数据')\r\n            return\r\n          }\r\n          this.hook(datas2)\r\n          break\r\n        // 手动读取\r\n        case 'peo_read':\r\n          this.read()\r\n          break\r\n        // 取消挂接\r\n        case 'hook_not':\r\n          if (datas2.length === 0) {\r\n            this.$message.warning('请选择数据')\r\n            return\r\n          }\r\n          this.showConfirmModal = true\r\n          this.clickRow = datas2\r\n          // this.notHook(datas2)\r\n          break\r\n        // 导入\r\n        case 'import':\r\n          this.triggerImportOption(\r\n            {\r\n              downloadTemplateCallback(Cb) {\r\n                self.downLoadImportTemplates()\r\n              },\r\n              importSuccessCallback(res) {\r\n                self.$refs.mainTableRef.deaImportViewData(\r\n                  {\r\n                    conlums: proconf.PoliciesTableColumns,\r\n                    viewData: res\r\n                  }\r\n                )\r\n                // 将导入的支付时间格式化\r\n                res?.forEach(row => {\r\n                  const timestamp = repairExcelTimestamp(row.xpayDate)\r\n                  row.xpayDate = timestamp ? getDateString(timestamp) : row.xpayDate\r\n                })\r\n                self.importSuccessCallback(res)\r\n              }\r\n            }\r\n          )\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    importSuccessCallback(res) {\r\n      console.log('res:', res)\r\n      HttpModule.importBenefit(res).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('导入成功')\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n      this.refresh()\r\n    },\r\n    hook(datas2) {\r\n      const param = {\r\n        payDetailIds: datas2.map(item => {\r\n          let itemCopy = Object.assign({}, item, { xPayDate: item.xpayDate, isHook: this.isHook })\r\n          delete itemCopy.xpayDate\r\n          return itemCopy\r\n        })\r\n      }\r\n      HttpModule.confirm(param).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('确认成功')\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    async notHook(datas2) {\r\n      const param = {\r\n        payDetailIds: datas2.map(item => {\r\n          let itemCopy = Object.assign({}, item, { xPayDate: item.xpayDate, cancelDescription: this.formModelData.cancelDescription })\r\n          delete itemCopy.xpayDate\r\n          return itemCopy\r\n        })\r\n      }\r\n      await this.$refs.showConfirForm.validate()\r\n      HttpModule.notConfirm(param).then(res => {\r\n        if (res.code === '000000') {\r\n          this.closeModal()\r\n          this.$message.success('取消成功')\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    read() {\r\n      const param = {\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.addBenefitPeople(param).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.$message.success('读取成功')\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    changeVisible(val) {\r\n      this.breakRuleVisible = val\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    onToolbarBtnClick1({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh1()\r\n          break\r\n      }\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.treeGlobalConfig.inputVal = val\r\n    },\r\n    onClickmethod(node) {\r\n      let code = node.node.code\r\n      this.codeList = []\r\n      let treeData = node.treeData\r\n      // 非顶级区划则获取区划code，否则查询表体数据时codeList为空进行查询\r\n      if (code !== node.treeData?.[0].code) {\r\n        this.getItem(code, treeData)\r\n      }\r\n      if (node.id !== '0') {\r\n        this.mofdivcode = node.node.code\r\n      } else {\r\n        this.mofdivcode = {}\r\n      }\r\n      this.queryTableDatas1()\r\n    },\r\n    getItem(code, data) {\r\n      data.forEach(item => {\r\n        if (code === item.code) {\r\n          let data = []\r\n          data.push(item)\r\n          this.getCodeList(data)\r\n        } else if (item.children) {\r\n          this.getItem(code, item.children)\r\n        }\r\n      })\r\n    },\r\n    getCodeList(data) {\r\n      data.forEach(item => {\r\n        this.codeList.push(item.code)\r\n        if (item.children) {\r\n          this.getCodeList(item.children)\r\n        }\r\n      })\r\n    },\r\n    treeSetConfrimData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 查看附件\r\n    showAttachment(row) {\r\n      this.billguid = row.attachment_id\r\n      this.showAttachmentDialog = true\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh1() {\r\n      this.queryTableDatas1()\r\n      // this.queryTableDatasCount()\r\n    },\r\n    ajaxTableData1({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig1.currentPage = currentPage\r\n      this.mainPagerConfig1.pageSize = pageSize\r\n      this.queryTableDatas1()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 新增或修改弹框\r\n    clickAddBtn(row) {\r\n      // if (this.addTableData.length > 0) {\r\n      //   this.addTableData = []\r\n      // }\r\n      this.dialogTitle = '新增'\r\n      // this.addTableData.push(row)\r\n      this.dialogVisible = true\r\n    },\r\n    // 点击新增\r\n    onAddToolbarClickAdd(obj, context, e) {\r\n      // let row = []\r\n      // row = this.$refs.mainTableRef.getSelectionData()[0]\r\n      // if (this.$refs.mainTableRef.getSelectionData().length !== 1) {\r\n      //   this.$message.warning('请选择一条数据')\r\n      //   return\r\n      // }\r\n      // this.addTableData = this.$refs.mainTableRef.getSelectionData()\r\n      this.dialogVisible = true\r\n      // this.selectSumId = this.$refs.mainTableRef.getSelectionData()[0].sum_id\r\n      this.dialogTitle = '新增'\r\n    },\r\n    // 查询 table1 数据\r\n    queryTableDatas1() {\r\n      const param = {\r\n        page: this.mainPagerConfig1.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig1.pageSize, // 每页条数\r\n        payCertNo: this.payCertNo,\r\n        proName: this.proName,\r\n        proCode: this.proCode,\r\n        agencyName: this.agencyName,\r\n        corBgtDocNoName: this.corBgtDocNoName,\r\n        useDes: this.useDes,\r\n        amount: this.amount,\r\n        isHook: this.isHook,\r\n        roleId: this.roleId,\r\n        mofDivCode: this.mofDivCode, // 获取左侧树\r\n        mofDivCodes: this.codeList,\r\n        dtos: this.dtos\r\n      }\r\n      this.tableLoading2 = true\r\n      HttpModule.pagePayQuery(param).then(res => {\r\n        this.tableLoading2 = false\r\n        if (res.code === '000000') {\r\n          this.tableData1 = res.data.results\r\n          this.mainPagerConfig1.total = res.data.totalCount\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    // 操作日志\r\n    queryActionLog(row) {\r\n      // let data = {\r\n      //   roleguid: this.$store.state.curNavModule.roleguid,\r\n      //   data: {\r\n      //     statusCode: this.toolBarStatusSelect.code,\r\n      //     id: row.id,\r\n      //     appId: 'pay_voucher'\r\n      //   }\r\n      // }\r\n      // HttpModule.queryActionLog(data).then(res => {\r\n      //   this.logData = res.data\r\n      //   console.log(this.logData)\r\n      //   this.showLogView = true\r\n      // })\r\n    },\r\n    // 送审\r\n    audieData(param) {\r\n      // HttpModule.audieData(param).then(res => {\r\n      //   if (res.code === '000000') {\r\n      //     this.$message.warning('操作成功')\r\n      //     this.queryTableDatas()\r\n      //   }\r\n      // })\r\n    },\r\n    /**\r\n     * 左侧树过滤搜索\r\n     * @returns {Promise<void>}\r\n     */\r\n    async searchTreeHandle(inputVal) {\r\n      this.treeFilterText = inputVal\r\n      this.treeCurrentPage = 1\r\n      await this.getLeftTreeData()\r\n    },\r\n    getLeftTreeData() {\r\n      let that = this\r\n      let params = {}\r\n      if (this.userInfo.province === '610000000') {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: '610000000',\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + 61 + '%\\''\r\n        }\r\n      } else if (\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610200000' ||\r\n        this.userInfo.province === '610300000' ||\r\n        this.userInfo.province === '610400000' ||\r\n        this.userInfo.province === '610500000' ||\r\n        this.userInfo.province === '610600000' ||\r\n        this.userInfo.province === '610700000' ||\r\n        this.userInfo.province === '610800000' ||\r\n        this.userInfo.province === '610900000' ||\r\n        this.userInfo.province === '611000000' ||\r\n        this.userInfo.province === '611200000'\r\n      ) {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 4) + '%\\''\r\n        }\r\n      } else {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 6) + '%\\''\r\n        }\r\n      }\r\n      HttpModule.getTreeData1(params).then(res => {\r\n        if (res.data) {\r\n          // let treeResdata = that.getChildrenData(res.data)\r\n          // treeResdata.forEach(item => {\r\n          //   item.label = item.id + '-' + item.businessName\r\n          // })\r\n          // const result = [\r\n          //   {\r\n          //     id: 'root',\r\n          //     label: '全部',\r\n          //     code: 'root',\r\n          //     isleaf: '0',\r\n          //     children: treeResdata\r\n          //   }\r\n          // ]\r\n          that.treeData = res.data\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.treeCurrentPage = val\r\n      this.getLeftTreeData()\r\n    },\r\n    handleSizeChange(val) {\r\n    },\r\n    getChildrenData(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.text\r\n        if (item.children) {\r\n          that.getChildrenData(item.children)\r\n        }\r\n      })\r\n\r\n      return datas\r\n    }\r\n  },\r\n  created() {\r\n    console.log('this.$store.state.curNavModule', this.$store.state.curNavModule)\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.menuName = this.$store.state.curNavModule.name\r\n    this.roleId = this.$store.state.curNavModule.roleguid\r\n    this.getLeftTreeData()\r\n    // this.queryTableDatas()\r\n    // this.queryTableDatas1()\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.T-mainFormListLayout-modulebox .table-toolbar-left {\r\n  font-size: 14px;\r\n}\r\n.Titans-table .table-toolbar-left .table-toolbar-left-title.left-title-clear-float {\r\n  float: none;\r\n  margin-bottom: 4px;\r\n}\r\n</style>\r\n<style scoped>\r\n.radio-right{\r\n  float: right;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n.one-row{\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}