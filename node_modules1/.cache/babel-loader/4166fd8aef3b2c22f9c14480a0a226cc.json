{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableBak\\util\\methods.js","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableBak\\util\\methods.js","mtime":1694505521616},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","_toPropertyKey","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","toString","Array","from","test","iter","isArray","len","arr2","tableColumns","defaultRenderers","defaultFormatters","FindText","formatters","util","getbasicDataType","hyphenate","str","replace","toLowerCase","smallHump","$1","$2","$3","toUpperCase","deepCopy","me","newObj","isObj","x","toObject","val","assignKey","to","assign","propIsEnumerable","propertyIsEnumerable","symbols","deepAssign","target","setMoneyUnitCp","Unitlevel","oldUnitlevel","xGrid","$refs","fullData","getTableData","fullDataCp","freeze","JSON","parse","stringify","conlums","getTableColumn","fullColumn","row","rowIndex","column","conlumIndex","own","fieldType","field","parseFloat","split","join","console","log","toFixed","toLocaleString","reloadData","transformMoneyByUnit","data","unit","rendererList","dataCp","transformRowMoneyByUnit","conlum","itemRender","cellRender","editRender","contentRender","indexOf","children","sortMethos","arrSortString","_ref","$table","property","order","sort","b","localeCompare","arrSortNumber","_ref2","arrSortGloabal","_ref3","arrSortTreeString","_ref4","valueA","valueB","shift","arrSortNumberOption","_ref5","render","options","item","index","label","arrSortNumberCheckbox","_ref6","rTypeSuffix","arrSort","_ref7","props","multiple","initMethods","initCreated","registTableRender","registGlobleFormatters","initMounted","moneyUnit","defaultMoneyUnit","initFirst","_this","initTableGlobalConfig","initContextMenuConfig","initSeqConfig","initExpandConfig","initToolbar","initEditConfig","initTableFormConfig","initTable","initTableData","$nextTick","xTable","initTableConfig","tableConfigCp","renderers","initEditRules","initTableConlums","setPagerConfig","tableGlobalConfigIn","tableGlobalConfig","tableConfig","calculateConstraintConfig","rowformulaConfig","colFormulaConfig","constraintConfig","generateCalcColFormulaMap","tableColumnsConfig","tableColumnsConfigIn","generateTableConlums","globalConfig","checkType","seq","concat","optionSort","registGloableConlumsConfig","generateOptionRow","hasOptionRow","optionRow","cellRenderConfig","toolbarConfig","toolbarConfigIn","toolbarConfigInCopy","toolbarConfigInCp","yearlist","formSearchData","year","tableDataIn","reductionRowFormula","addMissingFieldsAndCalcColFormula","tableData","id","selection","removeCheckboxRow","tableFormConfig","tableFormConfigIn","startIndex","seqConfig","seqMethod","_ref8","$rowIndex","columnIndex","$seq","pagerConfigIn","treeConfig","pageSize","currentPage","editConfig","editConfigIn","trigger","mode","expandConfig","expandConfigIn","expandAll","contextMenuConfig","contextMenuConfigIn","initTreeConfig","treeConfigIn","initFooterConfig","footerConfigIn","footerConfig","editRulesIn","addTreeReg","editRules","registFn","$VXETable","formats","add","bind","reverRegistGloableConlumsConfig","arrc","registSingelRowFormater","registSingelRowSorts","registSingelRowFilter","registSingelRowConfig","registSingRowCalcRenderer","formula","filters","filterRender","filterMethod","_ref9","option","filterMultiple","isCase","vals","sVal","formatter","registSingelRowRenderer","registRenderers","reverRegistRenderers","registFilters","registFormatters","renderer","tableOptionFn","updateFooter","exportData","openExport","original","importDataEvent","importData","setAllCheckboxRow","clearCheckboxRow","$XModal","confirm","revertEvent","_this2","revertData","deleteRowData","rows","copySelectionRowData","_arguments","_this3","_callee","rowIndexTo","rowTo","newRowSelectionsData","_callee$","_context","getCheckboxRecords","insertMark","date","Date","format","isNew","insert","setActiveCell","message","copyRowData","_arguments2","_this4","_callee2","rowSource","rowSourceData","newRowDataObj","_yield$self$$refs$xGr","_callee2$","_context2","getData","_XID","setCurrentRow","validate","errMap","insertRowData","_arguments3","_this5","_callee3","dataObj","_yield$self$$refs$xGr2","_callee3$","_context3","insertAt","refreshTable","reloadTableConlums","reloadColumn","listData","getListData","insertRecords","getInsertRecords","updateRecords","getUpdateRecords","removeRecords","getRemoveRecords","_this$$refs$xGrid$$re","keepSource","tableSourceData","_this$$refs$xGrid$get","visibleData","footerData","getOptionData","getRecordset","getInsertRowData","getSelectionData","validEvent","_arguments4","_this6","_callee4","_callee4$","_context4","status","fullValidEvent","_arguments5","_this7","_callee5","msgList","_callee5$","_context5","$createElement","fullValidate","errList","params","rules","rule","title","map","msg","selectValidEvent","_this8","_callee6","selectRecords","_callee6$","_context6","insertEvent","_ref10","tableEventFn","setColumnDrop","_this9","Sortable","$Sortable","sortable","$el","querySelector","onEnd","_ref11","newIndex","oldIndex","tableColumn","getColumns","currRow","splice","loadColumn","onContextMenuClick","_ref12","event","menu","window","code","hideColumn","resetColumn","visible","resizable","toggleAllCheckboxRow","remove","clearData","maximize","zoom","$Export","triggerExportOption","print","filename","isHeader","isFooter","clearSort","handleCheckboxChange","records","$emit","handleCheckboxAllChange","onOptionRowClick","methods","onOptionSortRowClick","_ref13","items","optionType","temp","unshift","toolBarEvent","toolbarButtonClickEvent","button","callback","onToolbarOperrateClick","context","triggerImportOption","setMoneyUnit","$forceUpdate","pageEvent","pagerConfig","total","pagerConfigInCp","handlePageChange","_ref14","loadData","handleRefresh","formSearchSubmit","getColumnsList","newColumnsList","delSearchfromMain","filterValue","_ref15","_this10","$event","newTbleDatas","search","dataNews","includes","searchParams","onAdvancedSearchBtnClick","proxyFn","handleSearch","_this11","filterName","$XEUtils","trim","filterRE","RegExp","searchProps","rest","searchTree","some","eachTree","match","apiList","setAllTreeExpand","setTreeExpand","defaultExpandRows","searchEvent","debounce","leading","trailing","axiosEvent","$asyncGet","url","cb","_this12","_callee7","_callee7$","_context7","$http","get","origin","$asyncPost","_this13","_callee8","_callee8$","_context8","post","$post","response","$get","tableEvent","keydown","radioChange","cellClick","cellDblclick","cellContextMenu","cellMouseenter","cellMouseleave","headerCellClick","headerCellDblclick","footerCellClick","footerCellDblclick","footerCellContextMenu","sortChange","filterChange","resizableChange","toggleRowExpand","toggleTreeExpand","contextMenuClick","currentChange","_this14","editClosed","_this15","performColCalculate","editActived","editDisabled","validError","scroll","custom","formSubmitInvalid","formReset","formToggleCollapse","calculateConstraintTool","_this16","tableColumnsFieldArr","reductionColFormula","colFormulaMap","colFormulaMapCp","hasCalcColFormulaMap","ifWhilekey","colFormulaMapArr","cmai","regR","rowsKey","keyCF","keyC","reg","calcResult","eval","Infinity","rowFormulaMap","tableId","rowFormulaMapCp","hasCalcrowFormulaMap","rowFormulaMapArr","formulaArr","rowCellArr","riverColumnsGenerateCalcColFormulaMap","columns","tableColumnsFieldMap","tableColumnsSingArr","tableColumnsTitleFieldMap","_ref16","_this17","$columnIndex","reloadRow","generateColumnsAllMap","viewToSourceMap","rowsObjTemp","tableColumnsTitleMap","needMap","deaImportViewData","_this18","viewData","_this$generateColumns","validResult","validResultFieldTitle","keyIndex","parseViewValue","reverseParseViewDataTosource","dealExportViewData","_this19","_this$generateColumns2","colFormulaConfigm","transValue","viewValue","viewToSourceValueArr","newRule","$options","required","min","max","pattern","validator","maxWidth","validCellRules","argObj","_this20","errorRules","syncVailds","cellValue","isUndefined","isFunction","customValid","isError","validRuleErr","isNumber","numVal","toNumber","getSize","all","exportByTempalte","exportConlums","exportConlumsTitle","_this$generateColumns3","exportExcel","isExportTree","saveType","fileName","dataType","isExportHead","isExportFooter","isExportOnlySourceField","isExportOnlyViewTitle","isExportOriginalData","isExportData","datas","otherFn","_this$$refs$xGrid$get2","dealData","newData","itemVal","prefix","substr","regTreePrefix","formValidationConfig","_this21","addTreePrefixKey2","treeData","_this22","treeArr","$set"],"sources":["C:/Users/何小龙/Desktop/platformweb-fb/src/components/TableBak/util/methods.js"],"sourcesContent":["// methods   Author:Titans@2396757591@qq.com\r\n/* eslint-disable no-eval */\r\nimport { tableColumns, defaultRenderers, defaultFormatters } from '../config/tableDefaultConfig'\r\nimport FindText from '../tool/find'\r\nimport formatters from './formatter'\r\nconst util = {\r\n  getbasicDataType(obj) {\r\n    // 获取数据类型\r\n    return Object.prototype.toString.call(obj).slice(8, -1)\r\n  },\r\n  hyphenate(str) {\r\n    // 小驼峰转成连字符\r\n    return str.replace(/\\B([A-Z])/g, '-$1').toLowerCase()\r\n  },\r\n  smallHump(str) {\r\n    // 连字符转成小驼峰\r\n    return str.replace(/(\\w*)-(\\w*)/g, function($1, $2, $3) {\r\n      return $2 + $3[0].toUpperCase() + $3.slice(1)\r\n    })\r\n  },\r\n  deepCopy(obj) {\r\n    // 深拷贝通用方法\r\n    let me = this\r\n    if (typeof obj !== 'object' || obj === null) return obj\r\n    let newObj = obj instanceof Array ? [] : {}\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        newObj[key] = typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n      }\r\n    }\r\n    return newObj\r\n  },\r\n  isObj(x) {\r\n    let type = typeof x\r\n    return x !== null && (type === 'object' || type === 'function')\r\n  },\r\n  toObject(val) {\r\n    if (val === null || val === undefined) {\r\n      throw new TypeError('Cannot convert undefined or null to object')\r\n    }\r\n\r\n    return Object(val)\r\n  },\r\n  assignKey(to, from, key) {\r\n    let self = this\r\n    let hasOwnProperty = Object.prototype.hasOwnProperty\r\n    let val = from[key]\r\n    if (val === undefined || val === null) {\r\n      return\r\n    }\r\n    if (hasOwnProperty.call(to, key)) {\r\n      if (to[key] === undefined || to[key] === null) {\r\n        throw new TypeError('Cannot convert undefined or null to object (' + key + ')')\r\n      }\r\n    }\r\n    if (!hasOwnProperty.call(to, key) || !self.isObj(val)) {\r\n      to[key] = val\r\n    } else {\r\n      to[key] = self.assign(Object(to[key]), from[key])\r\n    }\r\n  },\r\n  assign(to, from) {\r\n    let self = this\r\n    let propIsEnumerable = Object.prototype.propertyIsEnumerable\r\n    if (to === from) {\r\n      return to\r\n    }\r\n    from = Object(from)\r\n    for (let key in from) {\r\n      if (hasOwnProperty.call(from, key)) {\r\n        self.assignKey(to, from, key)\r\n      }\r\n    }\r\n    if (Object.getOwnPropertySymbols) {\r\n      let symbols = Object.getOwnPropertySymbols(from)\r\n      for (let i = 0; i < symbols.length; i++) {\r\n        if (propIsEnumerable.call(from, symbols[i])) {\r\n          self.assignKey(to, from, symbols[i])\r\n        }\r\n      }\r\n    }\r\n    return to\r\n  },\r\n  deepAssign(target) {\r\n    // 深度合并\r\n    // deepAssign({ a: { b: 0 } }, { a: { b: 1, c: 2 } }, { a: { c: 3 } })\r\n    let self = this\r\n    target = self.toObject(target)\r\n    for (let s = 1; s < arguments.length; s++) {\r\n      self.assign(target, arguments[s])\r\n    }\r\n    return target\r\n  },\r\n  setMoneyUnitCp(Unitlevel, oldUnitlevel) {\r\n    // 设置金额单位 废弃\r\n    if (Unitlevel === '') {\r\n      return\r\n    }\r\n    let xGrid = this.$refs.xGrid\r\n    if (!xGrid) {\r\n      return\r\n    }\r\n    // let fullData = this.getData()\r\n    let fullData = xGrid.getTableData().fullData\r\n    let fullDataCp = Object.freeze(JSON.parse(JSON.stringify(fullData)))\r\n    let conlums = xGrid.getTableColumn().fullColumn\r\n    fullData.forEach((row, rowIndex) => {\r\n      conlums.forEach((column, conlumIndex) => {\r\n        if (column.own.fieldType) {\r\n          let value = (typeof (row[column.own.field]) === 'number' || typeof (row[column.own.field]) === 'string') ? parseFloat(row[column.own.field].toString().split(',').join('')) : 0\r\n          console.log('处理前', value)\r\n          value = isNaN(value) ? 0 : value\r\n          value = value * oldUnitlevel / Unitlevel\r\n          console.log('处理前', value)\r\n          // eslint-disable-next-line no-useless-escape\r\n          row[column.own.field] = parseFloat(value.toFixed(2))\r\n          row[column.own.field] = Number(row[column.own.field].toFixed(2)).toLocaleString()\r\n        }\r\n      })\r\n    })\r\n    console.log(fullData, conlums, fullDataCp)\r\n    xGrid.reloadData(fullData).then().catch()\r\n  },\r\n  transformMoneyByUnit(data, conlums, type = 'big', unit, rendererList = ['$moneyRender']) {\r\n    // 循环转化金额数据\r\n    let self = this\r\n    let dataCp = [...data]\r\n    console.log(dataCp)\r\n    dataCp.forEach((row, rowIndex) => {\r\n      self.transformRowMoneyByUnit(row, conlums, type, unit, rendererList)\r\n    })\r\n    return dataCp\r\n  },\r\n  transformRowMoneyByUnit(row, conlums, type, unit, rendererList) {\r\n    // 递归转化单条数据\r\n    let self = this\r\n    conlums.forEach((conlum, conlumIndex) => {\r\n      let itemRender = conlum.cellRender || conlum.editRender || conlum.contentRender\r\n      if (itemRender && rendererList.indexOf(itemRender.name) >= 0 && !conlum.children) {\r\n        if (type === 'big') {\r\n          row[conlum.field] = (parseFloat(row[conlum.field]) / unit).toFixed(2)\r\n        } else {\r\n          row[conlum.field] = (parseFloat(row[conlum.field]) * unit).toFixed(2)\r\n        }\r\n      }\r\n      if (Array.isArray(conlum.children) && conlum.children.length) {\r\n        self.transformRowMoneyByUnit(row, conlum.children, type, unit, rendererList)\r\n      }\r\n    })\r\n  }\r\n}\r\nconst sortMethos = {\r\n  arrSortString({ $table, data, column, property, order }) {\r\n    // 字符 排序\r\n    data.sort(function (a, b) {\r\n      if (!(a[property] !== undefined && b[property] !== undefined)) {\r\n        if (order === 'asc') {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n      if (order === 'asc') {\r\n        return (a[property].toString()).localeCompare(b[property].toString())\r\n      } else {\r\n        return (b[property].toString()).localeCompare(a[property].toString())\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortNumber({ $table, data, column, property, order }) {\r\n    // 数字 排序\r\n    data.sort(function (a, b) {\r\n      if (!(a[property] !== undefined && b[property] !== undefined)) {\r\n        if (order === 'asc') {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n      if (order === 'asc') {\r\n        return a[property] - b[property]\r\n      } else {\r\n        return b[property] - a[property]\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortGloabal({ $table, data, column, property, order }) {\r\n    // 通用 排序\r\n    data.sort(function (a, b) {\r\n      if (!(a[property] !== undefined && b[property] !== undefined)) {\r\n        if (order === 'asc') {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n      if (order === 'asc') {\r\n        if (isNaN(Number(a[property]))) {\r\n          return (a[property].toString()).localeCompare(b[property].toString())\r\n        }\r\n        return a[property] - b[property]\r\n      } else {\r\n        if (isNaN(Number(a[property]))) {\r\n          return (b[property].toString()).localeCompare(a[property].toString())\r\n        }\r\n        return b[property] - a[property]\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortTreeString({ $table, data, column, property, order }) {\r\n    // tree 排序\r\n    data.sort(function (a, b) {\r\n      if (!(a[property] !== undefined && b[property] !== undefined)) {\r\n        if (order === 'asc') {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n      let valueA = a[property].split('##')\r\n      let valueB = b[property].split('##')\r\n      valueA.shift()\r\n      valueA = valueA.join('-')\r\n      valueB.shift()\r\n      valueB = valueB.join('-')\r\n      if (order === 'asc') {\r\n        return (valueA.toString()).localeCompare(valueB.toString())\r\n      } else {\r\n        return (valueB.toString()).localeCompare(valueA.toString())\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSortNumberOption({ $table, data, column, property, order }) {\r\n    // options 排序\r\n    let render = column.own && (column.own.editRender || column.own.cellRender || column.own.contentRender)\r\n    if (render && render.name) {\r\n      let options = render.options || []\r\n      data.sort(function (a, b) {\r\n        if (!(a[property] !== undefined && b[property] !== undefined)) {\r\n          if (order === 'asc') {\r\n            return true\r\n          } else {\r\n            return false\r\n          }\r\n        }\r\n        let valueA = ''\r\n        let valueB = ''\r\n        options.forEach((item, index) => {\r\n          if (item.value === a[property]) {\r\n            valueA = item.label\r\n          }\r\n          if (item.value === b[property]) {\r\n            valueB = item.label\r\n          }\r\n        })\r\n        if (order === 'asc') {\r\n          return (valueA).localeCompare(valueB)\r\n        } else {\r\n          return (valueB).localeCompare(valueA)\r\n        }\r\n      })\r\n      return data\r\n    } else {\r\n      return this.arrSortGloabal({ $table, data, column, property, order })\r\n    }\r\n  },\r\n  arrSortNumberCheckbox({ $table, data, column, property, order, rTypeSuffix }) {\r\n    // checkbox 排序\r\n    // let render = column.own && (column.own.editRender || column.own.cellRender || column.own.contentRender)\r\n    // if (render && render.name) {\r\n    //   let options = render.options || []\r\n    //   data.sort(function (a, b) {\r\n    //     a[property] = Array.isArray(a[property]) ? a[property] : []\r\n    //     b[property] = Array.isArray(b[property]) ? b[property] : []\r\n    //     let valueA = []\r\n    //     let valueB = []\r\n    //     options.forEach((item, index) => {\r\n    //       let indexOfA = a[property].indexOf(item.value)\r\n    //       let indexOfB = b[property].indexOf(item.value)\r\n    //       if (indexOfA >= 0) {\r\n    //         valueA[indexOfA] = item.label\r\n    //       }\r\n    //       if (indexOfB >= 0) {\r\n    //         valueA[indexOfB] = item.label\r\n    //       }\r\n    //     })\r\n    //     if (order === 'asc') {\r\n    //       return (valueA.join('')).localeCompare(valueB.join(''))\r\n    //     } else {\r\n    //       return (valueB.join('')).localeCompare(valueA.join(''))\r\n    //     }\r\n    //   })\r\n    //   return data\r\n    // } else {\r\n    //   return this.arrSortGloabal({ $table, data, column, property, order })\r\n    // }\r\n    data.sort(function (a, b) {\r\n      if (!(a[property] === undefined && b[property] === undefined)) {\r\n        if (order === 'asc') {\r\n          return true\r\n        } else {\r\n          return false\r\n        }\r\n      }\r\n      if (order === 'asc') {\r\n        return (a[property + rTypeSuffix]).localeCompare(b[property + rTypeSuffix])\r\n      } else {\r\n        return (b[property + rTypeSuffix]).localeCompare(a[property + rTypeSuffix])\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  arrSort({ $table, data, column, property, order }) {\r\n    // 排序\r\n    let self = this\r\n    let render = column.own && (column.own.editRender || column.own.cellRender || column.own.contentRender)\r\n    if (render && render.name) {\r\n      switch (render.name) {\r\n        case '$treeinput':\r\n          return self.arrSortTreeString({ $table, data, column, property, order })\r\n        case '$treeText':\r\n          return self.arrSortTreeString({ $table, data, column, property, order })\r\n        case '$span':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$href':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$EditDownTextarea':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$EditDownConditions':\r\n          return self.arrSortString({ $table, data, column, property, order })\r\n        case '$moneyRender':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$calculateRender':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$vxeDays':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$vxeRadio':\r\n          return self.arrSortNumberOption({ $table, data, column, property, order })\r\n        case '$vxeTime':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$vxeMoney':\r\n          return self.arrSortNumber({ $table, data, column, property, order })\r\n        case '$select':\r\n          return self.arrSortNumberOption({ $table, data, column, property, order })\r\n        case '$vxeSelect':\r\n          if (render.props.multiple) {\r\n            return self.arrSortNumberCheckbox({ $table, data, column, property, order, rTypeSuffix: '_select_sort' })\r\n          } else {\r\n            return self.arrSortNumberOption({ $table, data, column, property, order, rTypeSuffix: '_select_sort' })\r\n          }\r\n        case '$vxeCheckbox':\r\n          return self.arrSortNumberCheckbox({ $table, data, column, property, order, rTypeSuffix: '_checkbox_sort' })\r\n        default:\r\n          return self.arrSortGloabal({ $table, data, column, property, order })\r\n      }\r\n    } else {\r\n      data.sort(function(a, b) {\r\n        if (order === 'asc') {\r\n          if (isNaN(Number(a[property]))) {\r\n            return (a[property].toString()).localeCompare(b[property].toString())\r\n          }\r\n          return a[property] - b[property]\r\n        } else {\r\n          if (isNaN(Number(a[property]))) {\r\n            return (b[property].toString()).localeCompare(a[property].toString())\r\n          }\r\n          return b[property] - a[property]\r\n        }\r\n      })\r\n    }\r\n    return data\r\n  }\r\n}\r\nconst initMethods = {\r\n  initCreated() {\r\n    // 初始化Created\r\n    this.registTableRender(defaultRenderers)\r\n    this.registGlobleFormatters(defaultFormatters)\r\n  },\r\n  initMounted() {\r\n    // this.tableOptionFn()\r\n    // 初始化Mounted\r\n    this.moneyUnit = this.defaultMoneyUnit\r\n    this.initFirst()\r\n    // this.setColumnDrop()\r\n  },\r\n  initFirst() {\r\n    // 组件初始化\r\n    this.initTableGlobalConfig()\r\n    this.initContextMenuConfig()\r\n    this.initSeqConfig()\r\n    this.initExpandConfig()\r\n    this.initToolbar()\r\n    this.initEditConfig()\r\n    this.initTableFormConfig()\r\n    this.initTable()\r\n    // this.handleRefresh()\r\n    this.initTableData()\r\n    this.$nextTick(() => {\r\n      this.$nextTick(() => {\r\n        this.FindText = new FindText(this.$refs.xGrid.$refs.xTable)\r\n      })\r\n    })\r\n  },\r\n  initTable() {\r\n    // this.$refs.xGrid.clearAll()\r\n    // this.$refs.xGrid && this.$refs.xGrid.handleReserveStatus()\r\n    this.initTableConfig()\r\n    this.registTableRender(this.tableConfigCp.renderers)\r\n    this.initEditRules()\r\n    this.initTableConlums()\r\n    this.setPagerConfig()\r\n  },\r\n  initTableGlobalConfig() {\r\n    // 初始化全局配置\r\n    this.tableGlobalConfigIn = Object.assign({}, this.tableGlobalConfigIn, this.tableGlobalConfig)\r\n  },\r\n  initTableConfig() {\r\n    // 初始化表格列和渲染器配置\r\n    // this.tableConfigCp = this.deepAssign(this.tableConfigCp, this.tableConfig)\r\n    this.tableConfigCp = Object.assign({}, this.tableConfigCp, this.tableConfig)\r\n  },\r\n  initTableConlums() {\r\n    // 初始化列配置\r\n    // let globalConfig = this.tableConfigCp.globalConfig\r\n    // this.tableColumnsConfigIn = []\r\n    // if (globalConfig.checkType) {\r\n    //   this.tableColumnsConfigIn.push(tableColumns[globalConfig.checkType])\r\n    // }\r\n    // if (globalConfig.seq) {\r\n    //   this.tableColumnsConfigIn.push(tableColumns['seq'])\r\n    // }\r\n    // this.tableColumnsConfigIn = [...this.tableColumnsConfigIn, ...this.tableColumnsConfig]\r\n    // this.tableColumnsConfigIn = this.generateOptionRow(this.tableColumnsConfigIn, globalConfig)\r\n    // if (globalConfig.optionSort) {\r\n    //   this.tableColumnsConfigIn.push(tableColumns['optionSort'])\r\n    // }\r\n    // this.registGloableConlumsConfig(this.tableColumnsConfigIn)\r\n    // this.tableColumnsFieldMap = {}\r\n    // this.tableColumnsFieldArr = []\r\n    // this.tableColumnsSingArr = []\r\n    // this.tableColumnsTitleFieldMap = {}\r\n    this.calculateConstraintConfig = {\r\n      rowformulaConfig: { // 行公式配置\r\n      },\r\n      colFormulaConfig: { // 列公式配置\r\n      },\r\n      constraintConfig: { // 表间约束配置\r\n      }\r\n    }\r\n    this.generateCalcColFormulaMap(this.tableColumnsConfig)\r\n    this.tableColumnsConfigIn = this.deepCopy(this.generateTableConlums(this.tableColumnsConfig, this.tableConfigCp.globalConfig))\r\n  },\r\n  generateTableConlums(conlums, globalConfig) {\r\n    // 生成表头\r\n    let tableColumnsConfigIn = []\r\n    if (globalConfig.checkType) {\r\n      tableColumnsConfigIn.push(tableColumns[globalConfig.checkType])\r\n    }\r\n    if (globalConfig.seq) {\r\n      tableColumnsConfigIn.push(tableColumns['seq'])\r\n    }\r\n    tableColumnsConfigIn = [...tableColumnsConfigIn, ...conlums]\r\n    if (globalConfig.optionSort) {\r\n      tableColumnsConfigIn.push(tableColumns['optionSort'])\r\n    }\r\n    // tableColumnsConfigIn = this.generateOptionRow(tableColumnsConfigIn, globalConfig)\r\n    this.registGloableConlumsConfig(tableColumnsConfigIn)\r\n    return tableColumnsConfigIn\r\n  },\r\n  generateOptionRow(tableColumnsConfigIn, globalConfig) {\r\n    // 初始化操作列 废弃\r\n    if (globalConfig.hasOptionRow) {\r\n      let optionRow = tableColumns['optionRow']\r\n      if (this.getbasicDataType(this.tableConfigCp.cellRenderConfig.optionRow) === 'Object') {\r\n        let cellRender = optionRow.cellRender\r\n        cellRender = Object.assign({}, this.tableConfigCp.cellRenderConfig.optionRow)\r\n        optionRow[this.tableConfigCp.cellRenderConfig.optionRow.type] = cellRender\r\n      }\r\n      tableColumnsConfigIn.push(optionRow)\r\n    }\r\n    return tableColumnsConfigIn\r\n    // optionRow.slots = this.tableConfigCp.slots.optionRow\r\n  },\r\n  initToolbar() {\r\n    // 初始化工具栏\r\n    if (this.getbasicDataType(this.toolbarConfig) === 'Boolean') {\r\n      this.toolbarConfigIn = undefined\r\n      this.toolbarConfigInCopy = {}\r\n    } else {\r\n      this.toolbarConfigIn = Object.assign({}, this.toolbarConfigInCp, this.toolbarConfig)\r\n      this.toolbarConfigInCopy = this.toolbarConfigIn\r\n      if (this.toolbarConfigInCopy.yearlist.length) {\r\n        this.formSearchData.year = this.toolbarConfigInCopy.yearlist[0]\r\n      }\r\n    }\r\n  },\r\n  initTableData() {\r\n    // 初始化表格数据\r\n    // this.tableDataIn = this.tableData\r\n    this.tableDataIn = this.reductionRowFormula(this.calculateConstraintConfig.rowformulaConfig, this.addMissingFieldsAndCalcColFormula([...this.tableData]), this.id)\r\n    // this.tableDataIn.forEach(v => {\r\n    //   this.deepTableData.push(v)\r\n    // })\r\n    this.selection = []\r\n    if (this.$refs.xGrid) {\r\n      this.$refs.xGrid.removeCheckboxRow()\r\n    }\r\n    // this.tableDataIn = JSON.parse(JSON.stringify(this.tableData))\r\n  },\r\n  initTableFormConfig() {\r\n    if (this.getbasicDataType(this.tableFormConfig) === 'Boolean') {\r\n      this.tableFormConfigIn = undefined\r\n    } else {\r\n      this.tableFormConfigIn = Object.assign({}, this.tableFormConfig)\r\n    }\r\n  },\r\n  initSeqConfig(startIndex = 0) {\r\n    // 初始化序号配置项\r\n    let self = this\r\n    this.seqConfig = {\r\n      startIndex: 1, // 设置序号的起始值 number0\r\n      seqMethod({ row, $rowIndex, rowIndex, column, columnIndex, seq, $seq }) {\r\n        if (self.pagerConfigIn && !self.treeConfig) {\r\n          return self.pagerConfigIn.pageSize * (self.pagerConfigIn.currentPage - 1) + seq\r\n        } else {\r\n          return $seq === '' || $seq === undefined ? seq : $seq + '.' + seq\r\n        }\r\n      }\r\n    }\r\n  },\r\n  initEditConfig() { // 编辑配置\r\n    if (this.getbasicDataType(this.editConfig) === 'Boolean') {\r\n      this.editConfigIn = undefined\r\n    } else {\r\n      this.editConfigIn = Object.assign({\r\n        trigger: 'dblclick',\r\n        mode: 'cell'\r\n      }, this.editConfig)\r\n    }\r\n  },\r\n  initExpandConfig() {\r\n    // 编辑展开配置\r\n    if (this.getbasicDataType(this.expandConfig) === 'Undefined' || this.getbasicDataType(this.expandConfig) === 'Boolean') {\r\n      this.expandConfigIn = {\r\n        expandAll: false\r\n      }\r\n    } else {\r\n      this.expandConfigIn = Object.assign({}, this.expandConfig)\r\n    }\r\n  },\r\n  initContextMenuConfig() {\r\n    // 更新右键配置\r\n    if (this.getbasicDataType(this.contextMenuConfig) === 'Undefined' || this.getbasicDataType(this.contextMenuConfig) === 'Boolean') {\r\n      this.contextMenuConfigIn = {}\r\n    } else {\r\n      this.contextMenuConfigIn = Object.assign({}, this.contextMenuConfigIn, this.contextMenuConfig)\r\n    }\r\n  },\r\n  initTreeConfig() {\r\n    // 表格树配置\r\n    if (this.getbasicDataType(this.treeConfig) === 'Boolean') {\r\n      this.treeConfigIn = this.treeConfig\r\n    } else {\r\n      this.treeConfigIn = Object.assign({}, this.treeConfig)\r\n    }\r\n  },\r\n  initFooterConfig() {\r\n    // 更新footer配置\r\n    this.footerConfigIn = Object.assign({}, this.footerConfigIn, this.footerConfig)\r\n  },\r\n  initEditRules() {\r\n    // 编辑校验规则\r\n    this.editRulesIn = Object.assign({}, this.editRulesIn, this.addTreeReg({ ...this.editRules }))\r\n  }\r\n  // initTableEvent() {\r\n  //   this.tableEventIn = Object.assign(this.tableEventIn, this.tableEvent)\r\n  //   this.resgistEventProxy()\r\n  // }\r\n}\r\nconst registFn = {\r\n  registGlobleFormatters(obj) {\r\n    let self = this\r\n    Object.keys(obj).forEach((item, index) => {\r\n      self.$VXETable.formats.add(item, obj[item].bind(self))\r\n    })\r\n  },\r\n  registGloableConlumsConfig(arr = []) {\r\n    // 注册列格式化，渲染器，过滤项目等全局函数\r\n    let self = this\r\n    function reverRegistGloableConlumsConfig(arrc) {\r\n      arrc.forEach((item, index) => {\r\n        self.registSingelRowFormater(item)\r\n        // self.registSingelRowRenderer(item)\r\n        // self.registSingRowCalcRenderer(item)\r\n        self.registSingelRowSorts(item)\r\n        // self.registSingelRowConfig(item)\r\n        self.registSingelRowFilter(item)\r\n        if (Array.isArray(item.children) && item.children.length) {\r\n          self.registGloableConlumsConfig(item.children)\r\n        }\r\n      })\r\n    }\r\n    reverRegistGloableConlumsConfig(arr)\r\n  },\r\n  registSingelRowConfig(item) {\r\n    // 注册\r\n  },\r\n  registSingRowCalcRenderer(item) {\r\n    // 注册单条数据计算渲染器\r\n    if (item.formula && !item.editRender) {\r\n      item.editRender = {\r\n        name: '$calculateRender'\r\n      }\r\n    }\r\n  },\r\n  registSingelRowFilter(item) {\r\n    // 绑定单条列过滤器配置\r\n    if (Array.isArray(item.children)) {\r\n      return\r\n    }\r\n    if (item.filters !== undefined || item.filters || item.filterRender !== undefined || item.filterRender) {\r\n      // if (item.filters === false) {\r\n      //   delete item.filters\r\n      //   delete item.filterRender\r\n      //   delete item.filterMethod\r\n      // }\r\n\r\n      // type+editable\r\n      // { value: '$vxeInput', label: '输入框' },\r\n      // { value: '$vxeSelect', label: '下拉选择' },\r\n      // { value: '$vxeCalculate', label: '计算' },\r\n      // { value: '$vxeMoney', label: '金额' },\r\n      // { value: '$vxeEditDownTextarea', label: '文本输入框' },\r\n      // { value: '$vxeDays', label: '天数' },\r\n      // { value: '$vxeTime', label: '时间' },\r\n      // { value: '$vxeRadio', label: '单选' },\r\n      // { value: '$vxeCheckbox', label: '复选' },\r\n      // { value: '$treeinput', label: '下拉树' },\r\n      // { value: '$EditDownJson', label: 'JSON' },\r\n      // { value: '$href', label: '链接' }\r\n      return\r\n    }\r\n    let self = this\r\n    let itemRender = item.cellRender || item.editRender || item.contentRender\r\n    if (item.filters === undefined || item.filters === true) {\r\n      if (item.field && self.tableConfigCp.filters[item.field]) {\r\n        item.filters = self.tableConfigCp.filters[item.field].filters ? self.tableConfigCp.filters[item.field].filters : [{ data: '' }]\r\n        if (typeof (self.tableConfigCp.filters[item.field].filterMethod) === 'function') {\r\n          item.filterMethod = self.tableConfigCp.filters[item.field].filterMethod ? self.tableConfigCp.filters[item.field].filterMethod : ({ option, row, column }) => {\r\n            return row[column.property] === Number(option.data)\r\n          }\r\n        }\r\n      } else if (item.field && itemRender) {\r\n        switch (itemRender.name) {\r\n          case '$select':\r\n            item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n            item.filterMultiple = true\r\n            break\r\n          case '$vxeSelect':\r\n            item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n            item.filterMultiple = true\r\n            break\r\n          case '$calculateRender':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$vxeCalculate':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$moneyRender':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$vxeMoney':\r\n            item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n            item.filterRender = { name: 'FilterComplex' }\r\n            break\r\n          case '$href':\r\n            item.filters = [{ data: '' }]\r\n            item.filterRender = { name: 'FilterInput' }\r\n            break\r\n          case '$vxeRadio':\r\n            item.filters = Array.isArray(itemRender.options) ? itemRender.options : []\r\n            item.filterMultiple = true\r\n            break\r\n          case '$vxeCheckbox':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterChoose' }\r\n            break\r\n          case '$vxeInput':\r\n            // text, search, number, integer, float, password, date, datetime, week, month, year\r\n            if (this.getbasicDataType(itemRender.props) === 'Object' && itemRender.props.type) {\r\n              switch (itemRender.props.type) {\r\n                case 'text':\r\n                  item.filters = [{ data: { vals: [], sVal: '' } }]\r\n                  item.filterRender = { name: 'FilterContent' }\r\n                  break\r\n                case 'float':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                case 'number':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                case 'year':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                case 'date':\r\n                  item.filters = [{ data: { type: 'has', isCase: false, value: '' } }]\r\n                  item.filterRender = { name: 'FilterComplex' }\r\n                  break\r\n                default:\r\n                  if (itemRender.name === '$optionSort' || itemRender.name === 'optionRow') {\r\n                    delete item.filters\r\n                    delete item.filterRender\r\n                    delete item.filterMethod\r\n                  } else {\r\n                    item.filters = [{ data: '' }]\r\n                    item.filterRender = { name: 'FilterInput' }\r\n                  }\r\n                  break\r\n              }\r\n            } else {\r\n              item.filters = [{ data: '' }]\r\n              item.filterRender = { name: 'FilterInput' }\r\n            }\r\n            break\r\n          case '$EditDownTextarea':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterContent' }\r\n            break\r\n          case '$vxeEditDownTextarea':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterContent' }\r\n            break\r\n          case '$treeinput':\r\n            item.filters = [{ data: { vals: [], sVal: '' } }]\r\n            item.filterRender = { name: 'FilterContent' }\r\n            break\r\n          default:\r\n            if (['seq', 'checkbox', 'dragSort', 'radio', 'optionRow'].indexOf(item.type)) {\r\n              delete item.filters\r\n              delete item.filterRender\r\n              delete item.filterMethod\r\n            } else {\r\n              item.filters = [{ data: '' }]\r\n              item.filterRender = { name: 'FilterInput' }\r\n            }\r\n            break\r\n        }\r\n      } else {\r\n        item.filters = [{ data: '' }]\r\n        item.filterRender = { name: 'FilterInput' }\r\n      }\r\n    }\r\n  },\r\n  registSingelRowFormater(item) {\r\n    // 绑定单条列格式化配置\r\n    let self = this\r\n    if (item.field && self.tableConfigCp.formatters[item.field]) {\r\n      item.formatter = self.tableConfigCp.formatters[item.field]\r\n    }\r\n  },\r\n  registSingelRowRenderer(item) {\r\n    // 绑定单条列渲染器配置\r\n    let self = this\r\n    let itemRender = item.cellRender || item.editRender || item.contentRender\r\n    if (item.field && self.tableConfigCp.cellRenderConfig[item.field] && !itemRender) {\r\n      item[self.tableConfigCp.cellRenderConfig[item.field].type] = self.tableConfigCp.cellRenderConfig[item.field]\r\n    }\r\n  },\r\n  registSingelRowSorts(item) {\r\n    // 绑定单条列排序配置\r\n    // let self = this\r\n    if (!item.children && item['sortable'] === undefined) {\r\n      item['sortable'] = item['sortable'] || true\r\n      // let itemRender = item.cellRender || item.editRender || item.contentRender\r\n      // if (itemRender && (itemRender.name === '$treeinput' || itemRender.name === '$treeText')) {\r\n      //   item['sortable'] = false\r\n      //   item['sortMethod'] = function (prevRow, nexRow) {\r\n      //     let prevRowCp = prevRow.split('##').shift()\r\n      //     let nexRowCp = nexRow.split('##').shift()\r\n      //     console.log(prevRow, nexRow, prevRowCp.join('-') - nexRowCp.join('-'))\r\n      //     return prevRowCp.join('-') - nexRowCp.join('-')\r\n      //   }\r\n      // }\r\n    }\r\n  },\r\n  registRenderers(arr = []) {\r\n    // 初始化绑定列渲染器\r\n    let self = this\r\n    function reverRegistRenderers(arrc) {\r\n      arrc.forEach((item, index) => {\r\n        reverRegistRenderers(item)\r\n        if (Array.isArray(item.children) && item.children.length) {\r\n          self.s(item.children)\r\n        }\r\n      })\r\n    }\r\n    reverRegistRenderers(arr)\r\n  },\r\n  registFilters(arr = []) {\r\n    // 初始化绑定列过滤器函数\r\n    let self = this\r\n    arr.forEach((item, index) => {\r\n      self.registSingelRowFilter(item)\r\n      if (Array.isArray(item.children) && item.children.length) {\r\n        self.registFormatters(item.children)\r\n      }\r\n    })\r\n  },\r\n  registFormatters(arr = []) {\r\n    // 初始化绑定列格式化函数\r\n    let self = this\r\n    arr.forEach((item, index) => {\r\n      self.registSingelRowFormater(item)\r\n      if (Array.isArray(item.children) && item.children.length) {\r\n        self.registFormatters(item.children)\r\n      }\r\n    })\r\n  },\r\n  registTableRender(renderers) {\r\n    // 注册渲染器\r\n    for (let i in renderers) {\r\n      this.$VXETable.renderer.add(i, renderers[i])\r\n    }\r\n  }\r\n}\r\nconst tableOptionFn = {\r\n  tableOptionFn() {\r\n    // 全局表格组件xgrid调用实例\r\n    return this.$refs.xGrid\r\n  },\r\n  updateFooter() {\r\n    // 更新表尾\r\n    return this.$refs.xGrid.updateFooter()\r\n  },\r\n  exportData(obj) {\r\n    // 导出数据\r\n    this.$refs.xGrid.openExport({\r\n      // 默认勾选源\r\n      original: true\r\n    })\r\n  },\r\n  importDataEvent() {\r\n    // 导入数据\r\n    this.$refs.xGrid.importData()\r\n  },\r\n  setAllCheckboxRow() {\r\n    // 设置所有选中\r\n    this.$refs.xGrid.setAllCheckboxRow(true)\r\n    this.updateFooter().then(() => { }).catch(() => { })\r\n  },\r\n  clearCheckboxRow() {\r\n    // 清除所有选中\r\n    this.$refs.xGrid.clearCheckboxRow()\r\n    this.updateFooter().then(() => {}).catch(() => {})\r\n  },\r\n  removeCheckboxRow() {\r\n    // 删除选中行操作\r\n    let self = this\r\n    this.$XModal.confirm('您确定要删除所选中数据吗?').then(type => {\r\n      if (type === 'confirm') {\r\n        self.$refs.xGrid.removeCheckboxRow()\r\n      }\r\n    })\r\n  },\r\n  revertEvent() {\r\n    // 撤销操作\r\n    this.$XModal.confirm('您确定要还原数据吗?').then(type => {\r\n      if (type === 'confirm') {\r\n        this.$refs.xGrid.revertData()\r\n      }\r\n    })\r\n  },\r\n  deleteRowData(rows) {\r\n    // 删除选中行操作\r\n    let self = this\r\n    this.$XModal.confirm('您确定要删除所选中数据吗?').then(type => {\r\n      if (type === 'confirm') {\r\n        self.$refs.xGrid.removeCheckboxRow(rows)\r\n      }\r\n    })\r\n  },\r\n  async copySelectionRowData(obj = {}) {\r\n    // 复制选中行数据\r\n    let self = this\r\n    const { rowIndexTo, data } = obj\r\n    let rowTo = rowIndexTo === undefined ? -1 : rowIndexTo\r\n    let newRowSelectionsData = data || self.$refs.xGrid.getCheckboxRecords()\r\n    if (newRowSelectionsData.length) {\r\n      newRowSelectionsData.forEach((item, index) => {\r\n        Object.assign({}, item, {\r\n          insertMark: '新数据',\r\n          date: new Date().format('YYYY-MM-DD hh:mm:ss:c'),\r\n          isNew: true\r\n        })\r\n      })\r\n      await self.$refs.xGrid.insert(newRowSelectionsData)\r\n      await self.$refs.xGrid.setActiveCell(rowTo)\r\n    } else {\r\n      self.$XModal.message({ message: '请先选择新增数据的模版!' })\r\n    }\r\n  },\r\n  async copyRowData(obj = {}) {\r\n    // 复制行\r\n    let self = this\r\n    const { rowSource, rowIndexTo } = obj\r\n    let rowSourceData = rowSource === undefined ? 0 : rowSource\r\n    let rowTo = rowIndexTo === undefined ? -1 : rowIndexTo\r\n    // 复制行\r\n    let newRowDataObj = { ...self.$refs.xGrid.getData(rowSourceData) }\r\n    newRowDataObj = Object.assign({}, newRowDataObj, {\r\n      insertMark: '新数据',\r\n      date: new Date().format('YYYY-MM-DD hh:mm:ss:c'),\r\n      isNew: true,\r\n      _XID: ''\r\n    })\r\n    let { row } = await self.$refs.xGrid.insert(newRowDataObj, rowTo)\r\n    await self.$refs.xGrid.setCurrentRow(row)\r\n    await self.$refs.xGrid.setActiveCell(row)\r\n    await self.$refs.xGrid.validate(row).catch(errMap => errMap)\r\n    // this.$XModal.message({ message: `复制单条数据完成，行号为 ${rowTo + 1}` })\r\n  },\r\n  async insertRowData(obj = {}) {\r\n    // 新增行\r\n    let self = this\r\n    const { data, rowIndexTo } = obj\r\n    let rowTo = rowIndexTo === undefined ? -1 : rowIndexTo\r\n    let dataObj = Object.assign({}, data === undefined ? {} : data, {\r\n      insertMark: '新数据',\r\n      date: new Date().format('YYYY-MM-DD hh:mm:ss:c'),\r\n      isNew: true,\r\n      _XID: ''\r\n    })\r\n    let { row } = await self.$refs.xGrid.insertAt(dataObj, rowTo)\r\n    await self.$refs.xGrid.setCurrentRow(row)\r\n    await self.$refs.xGrid.setActiveCell(row)\r\n    await self.$refs.xGrid.validate(row).catch(errMap => {\r\n      console.log('validate', errMap)\r\n      return errMap\r\n    })\r\n\r\n    // await this.$refs.xGrid.fullValidate(row).catch(errMap => {\r\n    //   console.log('fullValidate', errMap)\r\n    //   return errMap\r\n    // })\r\n    // this.$XModal.message({ message: `复制单条数据完成，行号为 ${rowTo + 1}` })\r\n  },\r\n  refreshTable(data) {\r\n    // 重新加载数据刷新视图\r\n    let xGrid = this.$refs.xGrid\r\n    // xGrid.reloadData(xGrid.getTableData().fullData)\r\n    xGrid.reloadData(data || this.tableDataIn).then().catch()\r\n  },\r\n  reloadTableConlums(conlums) {\r\n    // 重加载表头\r\n    this.$refs.xGrid.reloadColumn(this.generateTableConlums(conlums, this.tableConfigCp.globalConfig))\r\n  },\r\n  getTableData() {\r\n    const listData = this.getListData()\r\n    const insertRecords = this.$refs.xGrid.getInsertRecords()\r\n    const updateRecords = this.$refs.xGrid.getUpdateRecords()\r\n    const removeRecords = this.$refs.xGrid.getRemoveRecords()\r\n    const { keepSource, tableSourceData } = this.$refs.xGrid.$refs.xTable\r\n    const { fullData, visibleData, tableData, footerData } = this.$refs.xGrid.getTableData()\r\n    const { tableColumnsConfig, selection, editRules } = this\r\n    return { keepSource, tableSourceData, fullData, visibleData, tableData, footerData, tableColumnsConfig, selection, editRules, listData, insertRecords, updateRecords, removeRecords }\r\n  },\r\n  getOptionData() {\r\n    // 获取当前操作数据\r\n    return this.$refs.xGrid.getRecordset()\r\n  },\r\n  getInsertRowData() {\r\n    // 获取新增行\r\n    return this.$refs.xGrid.getInsertRecords()\r\n    // this.$XModal.alert(insertRecords.length)\r\n  },\r\n  getSelectionData() {\r\n    // 获取选中\r\n    return this.$refs.xGrid.getCheckboxRecords()\r\n    // this.$XModal.alert(selectRecords.length)\r\n  },\r\n  getData(rowIndex = []) {\r\n    return this.$refs.xGrid.getData(rowIndex)\r\n  },\r\n  validate(row = true) {\r\n    return this.$refs.xGrid.validate(row)\r\n  },\r\n  async validEvent(row = true) {\r\n    // 校验\r\n    const errMap = await this.$refs.xGrid.validate(row).catch(errMap => errMap)\r\n    if (errMap) {\r\n      this.$XModal.message({ status: 'error', message: '校验不通过！' })\r\n    } else {\r\n      this.$XModal.message({ status: 'success', message: '校验成功！' })\r\n    }\r\n  },\r\n  async fullValidEvent(row = true) {\r\n    // 所有校验\r\n    const errMap = await this.$refs.xGrid.fullValidate(row).catch(errMap => errMap)\r\n    if (errMap) {\r\n      let msgList = []\r\n      Object.values(errMap).forEach(errList => {\r\n        errList.forEach(params => {\r\n          let { rowIndex, column, rules } = params\r\n          rules.forEach(rule => {\r\n            msgList.push(`第 ${rowIndex} 行 ${column.title} 校验错误：${rule.message}`)\r\n          })\r\n        })\r\n      })\r\n      this.$XModal.message({\r\n        status: 'error',\r\n        message: () => {\r\n          return [\r\n            <div class=\"red\" style=\"max-height: 400px;overflow: auto;\">\r\n              {\r\n                msgList.map(msg => <div>{ msg }</div>)\r\n              }\r\n            </div>\r\n          ]\r\n        }\r\n      })\r\n    } else {\r\n      this.$XModal.message({ status: 'success', message: '校验成功！' })\r\n    }\r\n  },\r\n  async selectValidEvent() {\r\n    // 选中校验\r\n    let selectRecords = this.$refs.xGrid.getCheckboxRecords()\r\n    if (selectRecords.length > 0) {\r\n      const errMap = await this.$refs.xGrid.validate(selectRecords).catch(errMap => errMap)\r\n      if (errMap) {\r\n        this.$XModal.message({ status: 'error', message: '校验不通过！' })\r\n        return false\r\n      } else {\r\n        this.$XModal.message({ status: 'success', message: '校验成功！' })\r\n        return true\r\n      }\r\n    } else {\r\n      this.$XModal.message({ status: 'warning', message: '未选中数据！' })\r\n    }\r\n  },\r\n  insertEvent(row, column) {\r\n    // 插入数据\r\n    let xTable = this.$refs.xTable\r\n    xTable.insertAt(null, row)\r\n      .then(({ row }) => xTable.setActiveCell(row, column.property))\r\n  }\r\n}\r\nconst tableEventFn = {\r\n  setColumnDrop() {\r\n    let Sortable = this.$Sortable\r\n    this.$nextTick(() => {\r\n      let xTable = this.$refs.xGrid\r\n      this.sortable = Sortable.create(xTable.$el.querySelector('.body--wrapper>.vxe-table--header .vxe-header--row'), {\r\n        handle: '.vxe-header--column:not(.col--expand)',\r\n        onEnd: ({ newIndex, oldIndex }) => {\r\n          let tableColumn = xTable.getColumns()\r\n          let currRow = tableColumn.splice(oldIndex, 1)[0]\r\n          tableColumn.splice(newIndex, 0, currRow)\r\n          xTable.loadColumn(tableColumn)\r\n        }\r\n      })\r\n    })\r\n  },\r\n  onContextMenuClick({ menu, row, column, columnIndex, rowIndex }, event) { // 右键菜单\r\n    event = event || window.event\r\n    let self = this\r\n    let xGrid = this.$refs.xGrid\r\n    switch (menu.code) {\r\n      case 'hideColumn':// 隐藏当前列\r\n        xGrid.hideColumn(column)\r\n        break\r\n      case 'showAllColumn': // 显示所有列\r\n        xGrid.resetColumn()\r\n        break\r\n      case 'recover_all': // 显示所有列\r\n        self.reloadTableConlums(self.tableColumnsConfig)\r\n        break\r\n      case 'resetColumn': // 重新加载\r\n        xGrid.resetColumn({ visible: true, resizable: true })\r\n        break\r\n      case 'toggleAllCheckboxRow': // 重新加载\r\n        xGrid.toggleAllCheckboxRow()\r\n        break\r\n      case 'reload': // 重新加载\r\n        break\r\n      case 'insertAt': // 插入数据\r\n        self.insertRowData({ data: row, rowIndexTo: -1 })\r\n        break\r\n      case 'remove': // 移除数据\r\n        xGrid.remove(row)\r\n        break\r\n      case 'clear': // 清除单元格数据\r\n        xGrid.clearData(row, column.property)\r\n        break\r\n      case 'verify': // 校验并定位到第一个错误\r\n        // this.validate().catch(errMap => console.log(errMap))\r\n        this.validEvent()\r\n        break\r\n      case 'maximize': // 表格最大化\r\n        xGrid.maximize()\r\n        break\r\n      case 'revert': // 表格还原\r\n        self.revertEvent()\r\n        break\r\n      case 'zoom': // 切换表格最大化\r\n        xGrid.zoom()\r\n        break\r\n      // case 'copy': // 复制文本\r\n      //   if (self.$XEClipboard.copy(row[column.property])) {\r\n      //     self.$XModal.message({ message: '已复制到剪贴板！', status: 'success' })\r\n      //   }\r\n      //   break\r\n      // case 'paste': // 复制文本\r\n      //   let clipboardData = (event.clipboardData || event.originalEvent.clipboardData)\r\n      //   row[column.property] = clipboardData\r\n      //   break\r\n      //  case 'save':\r\n      //  self.$XModal.message({ message: '保存成功', status: 'success' })\r\n      //  break\r\n      case 'exportDataXlsx':\r\n        console.log('this.$Export', this, this.$Export)\r\n        this.triggerExportOption()\r\n        // this.$Export.exportExcel({\r\n        //   columns: this.tableColumnsConfig,\r\n        //   datas: this.getTableData().fullData\r\n        // })\r\n        // xGrid.openExport({\r\n        //   filename: 'export',\r\n        //   sheetName: 'Sheet1',\r\n        //   type: 'xlsx',\r\n        //   isPrint: true\r\n        // })\r\n        break\r\n      case 'print':\r\n        xGrid.print({\r\n          filename: 'printData',\r\n          mode: 'current',\r\n          isHeader: true,\r\n          isFooter: true\r\n        })\r\n        break\r\n      case 'logCurrentData':\r\n        console.log(this.getTableData())\r\n        //  console.log(this.transformMoneyByUnit(this.getTableData().tableData, this.tableColumnsConfig, 'big', 10000))\r\n        break\r\n      case 'exportDataPdf':\r\n        xGrid.exportData({\r\n          filename: '导出',\r\n          type: 'pdf'\r\n        })\r\n        break\r\n      case 'clearSort':\r\n        xGrid.clearSort()\r\n        break\r\n      case 'sortAsc':\r\n        xGrid.sort(column.property, 'asc')\r\n        break\r\n      case 'sortDesc':\r\n        xGrid.sort(column.property, 'desc')\r\n        break\r\n    }\r\n    return false\r\n  },\r\n  handleCheckboxChange(obj, e) {\r\n    // 多选选中或去选某一条事件\r\n    this.selection = obj.records\r\n    this.$emit('checkboxChange', obj, e)\r\n    this.updateFooter().then(() => {}).catch(() => {})\r\n  },\r\n  handleCheckboxAllChange(obj, e) {\r\n    // 全选选中或去选某一条事件\r\n    this.selection = obj.records\r\n    this.$emit('checkboxAll', obj, e)\r\n    this.updateFooter().then(() => {}).catch(() => {})\r\n  },\r\n  onOptionRowClick(obj) {\r\n    // 操作列点击事件\r\n    let methods = this.tableConfigCp.methods\r\n    typeof (methods.onOptionRowClick) === 'function' && methods.onOptionRowClick(obj, this)\r\n  },\r\n  onOptionSortRowClick({ row, column, $rowIndex, data, items, optionType }) {\r\n    switch (optionType) {\r\n      case 'upSort':\r\n        if ($rowIndex > 0) {\r\n          let temp = data[$rowIndex - 1]\r\n          data[$rowIndex - 1] = data[$rowIndex]\r\n          data[$rowIndex] = temp\r\n          // [data[$rowIndex - 1]], data[$rowIndex]] = [data[$rowIndex], data[$rowIndex-1]] ts\r\n        }\r\n        break\r\n      case 'downSort':\r\n        if ($rowIndex < data.length - 1) {\r\n          let temp = data[$rowIndex + 1]\r\n          data[$rowIndex + 1] = data[$rowIndex]\r\n          data[$rowIndex] = temp\r\n          // [data[$rowIndex + 1]], data[$rowIndex]] = [data[$rowIndex], data[$rowIndex + 1]] ts\r\n        }\r\n        break\r\n      case 'topSort':\r\n        if ($rowIndex > 0) {\r\n          data.unshift(data.splice($rowIndex, 1)[0])\r\n        }\r\n        break\r\n      case 'bottomSort':\r\n        if ($rowIndex < data.length - 1) {\r\n          data.push(data.splice($rowIndex, 1)[0])\r\n        }\r\n        break\r\n      default:\r\n        break\r\n    }\r\n    this.$refs.xGrid.reloadData(data).then().catch()\r\n  }\r\n}\r\nconst toolBarEvent = {\r\n  toolbarButtonClickEvent(obj, e) { // toolbar事件代理\r\n    // 工具栏左侧按钮点击事件\r\n    let self = this\r\n    let methods = this.tableConfigCp.methods\r\n    if (typeof (obj.button.callback) === 'function') {\r\n      obj.button.callback(obj, self, e)\r\n    } else {\r\n      typeof (methods.toolbarButtonClickEvent) === 'function' && methods.toolbarButtonClickEvent(obj, self, e)\r\n    }\r\n  },\r\n  onToolbarOperrateClick(code) {\r\n    switch (code) {\r\n      case 'refresh':\r\n        this.$emit('onToolbarBtnClick', { context: this, xGrid: this.$refs.xGrid, code: 'refresh' })\r\n        // this.reloadTableConlums(this.tableColumnsConfig)\r\n        // this.refreshTable()\r\n        break\r\n      case 'calculator':\r\n        this.$XModal.message({ status: 'info', message: '此功能正在开发中' })\r\n        break\r\n      case 'zoom':\r\n        this.$refs.xGrid.zoom().then(() => { }).catch(() => {})\r\n        break\r\n      case 'export':\r\n        this.triggerExportOption()\r\n        break\r\n      case 'custom':\r\n        break\r\n      case 'import':\r\n        this.triggerImportOption()\r\n        break\r\n    }\r\n  },\r\n  setMoneyUnit(Unitlevel, oldUnitlevel) {\r\n    // 设置金额单位\r\n    let xGrid = this.$refs.xGrid\r\n    if (!xGrid) {\r\n      return\r\n    }\r\n    // let fullData = this.getData()\r\n    // let fullData = xGrid.getTableData().tableData\r\n    // xGrid.reloadData(fullData)\r\n    xGrid.$forceUpdate()\r\n    xGrid.updateFooter().then(() => {}).catch(() => {})\r\n  }\r\n}\r\nconst pageEvent = { // 分页事件\r\n  setPagerConfig() {\r\n    // 处理异常情况，total为function\r\n    if (this.getbasicDataType(this.pagerConfig.total) === 'Function') {\r\n      this.pagerConfig.total = 0\r\n    }\r\n    // 更新分页配置\r\n    if (this.getbasicDataType(this.pagerConfig) === 'Boolean') {\r\n      this.pagerConfigIn = undefined\r\n    } else {\r\n      this.pagerConfigIn = Object.assign({}, this.pagerConfigIn ? this.pagerConfigIn : this.pagerConfigInCp, this.pagerConfig)\r\n    }\r\n  },\r\n  handlePageChange({ currentPage, pageSize }) {\r\n    // 分页改变事件\r\n    this.pagerConfigIn.currentPage = currentPage\r\n    this.pagerConfigIn.pageSize = pageSize\r\n    this.loadData()\r\n  },\r\n  handleRefresh() {\r\n    // 刷新\r\n    this.formSearchSubmit({ data: {} })\r\n  },\r\n  getColumnsList() {\r\n    let newColumnsList = []\r\n    this.tableColumnsConfig.forEach(v => {\r\n      newColumnsList.push(v.field)\r\n    })\r\n    return newColumnsList\r\n  },\r\n  delSearchfromMain() {\r\n    // 父组件调用此方法清空查询数据\r\n    this.formSearchData.filterValue = ''\r\n  },\r\n  formSearchSubmit({ data, $event }) {\r\n    let newTbleDatas = []\r\n    // this.formSearchData.filterValue\r\n    let search = this.formSearchData.filterValue\r\n    if (search !== '') {\r\n      console.log('this.tableDataIn', this.tableData)\r\n      this.tableDataIn.forEach(dataNews => {\r\n        let newColumnsList = this.getColumnsList()\r\n        console.log(newColumnsList)\r\n        for (let i = 0; i < Object.keys(dataNews).length; i++) {\r\n          if (newColumnsList.includes(Object.keys(dataNews)[i]) && String(dataNews[Object.keys(dataNews)[i]]).indexOf(search) > -1) {\r\n            newTbleDatas.push(dataNews)\r\n            break\r\n          }\r\n        }\r\n      })\r\n      this.refreshTable(newTbleDatas)\r\n    } else {\r\n      this.refreshTable(this.tableDataIn)\r\n    }\r\n  },\r\n  loadData() {\r\n    // 加载数据\r\n    let self = this\r\n    let searchParams = {\r\n      params: this.formSearchData,\r\n      currentPage: this.pagerConfigIn.currentPage,\r\n      pageSize: this.pagerConfigIn.pageSize\r\n    }\r\n    self.$emit('ajaxData', searchParams, this)\r\n  },\r\n  onAdvancedSearchBtnClick() {\r\n    this.$emit('onAdvancedSearchBtnClick', {\r\n      params: this.formSearchData,\r\n      currentPage: this.pagerConfigIn.currentPage,\r\n      pageSize: this.pagerConfigIn.pageSize\r\n    }, this)\r\n  }\r\n  // filterData(data) {\r\n  //   if (this.tableOptionFn()) {\r\n  //     this.tableOptionFn().getTableData().tableData.filter((item, index) => {\r\n  //       return Object.keys(item).reduce((prev, next) => {\r\n  //         return '' + (self.getbasicDataType(item[prev]) === 'String' || self.getbasicDataType(item[prev]) === 'Number' ? item[prev] : '') +\r\n  //           (self.getbasicDataType(item[next]) === 'String' || self.getbasicDataType(item[next]) === 'Number' ? item[next] : '')\r\n  //       }).indexOf(data.keyword)\r\n  //     })\r\n  //   }\r\n  // }\r\n}\r\nconst proxyFn = {\r\n  // resgistEventProxy() {\r\n  // let arg=[...arguments]\r\n  //   // 注册事件代理\r\n  //   let self = this\r\n  //   Object.keys(self.tableEventIn).forEach((item, index) => {\r\n  //     self.$on(self.hyphenate(item), self.tableEventIn[item].bind(self))\r\n  //   })\r\n  // }\r\n  handleSearch() {\r\n    const filterName = this.$XEUtils.toString(this.filterName).trim().toLowerCase()\r\n    if (filterName) {\r\n      const filterRE = new RegExp(filterName, 'gi')\r\n      const options = { children: 'list' }\r\n      const searchProps = ['name', 'desc', 'type', 'enum', 'defVal']\r\n      const rest = this.$XEUtils.searchTree(this.tableData, item => searchProps.some(key => item[key].toLowerCase().indexOf(filterName) > -1), options)\r\n      this.$XEUtils.eachTree(rest, item => {\r\n        searchProps.forEach(key => {\r\n          item[key] = item[key].replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\r\n        })\r\n      }, options)\r\n      this.apiList = rest\r\n      this.$nextTick(() => {\r\n        if (this.$refs.xTable) {\r\n          this.$refs.xTable.setAllTreeExpand(true)\r\n        }\r\n      })\r\n    } else {\r\n      this.apiList = this.tableData\r\n      this.$nextTick(() => {\r\n        if (this.$refs.xTable) {\r\n          this.$refs.xTable.setTreeExpand(this.defaultExpandRows, true)\r\n        }\r\n      })\r\n    }\r\n  },\r\n  // 调用频率间隔 500 毫秒\r\n  searchEvent() {\r\n    this.$XEUtils.debounce(function () {\r\n      this.handleSearch()\r\n    }, 500, { leading: false, trailing: true })\r\n  }\r\n}\r\nconst axiosEvent = {\r\n  async $asyncGet(url, params, cb) { // 使用异步调用，返回结果后再执行\r\n    await this.$http.get(url, params, origin)\r\n  },\r\n  async $asyncPost(url, params, cb) { // 使用异步调用，返回结果后再执行\r\n    await this.$http.post(url, params, origin)\r\n  },\r\n  $post(url, params, origin) {\r\n    let self = this\r\n    return new Promise((resolve, reject) => {\r\n      self.$http.post(url, {\r\n        params: params\r\n      })\r\n        .then(response => {\r\n          if (response.code === 200) {\r\n            resolve(response.data)\r\n          } else {\r\n            resolve([])\r\n          }\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  },\r\n  $get(url, params, origin) {\r\n    let self = this\r\n    return new Promise((resolve, reject) => {\r\n      self.$http.get(url, {\r\n        params: params\r\n      })\r\n        .then(response => {\r\n          if (response.code === 200) {\r\n            resolve(response.data)\r\n          } else {\r\n            resolve([])\r\n          }\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  }\r\n}\r\nconst tableEvent = {\r\n  keydown(obj) {\r\n    this.$emit('keydown', obj, this, this.$refs.xGrid)\r\n  }, // 当表格被激活且键盘被按下时会触发的事件  { $event }\r\n  radioChange(obj) {\r\n    this.$emit('radioChange', obj, this, this.$refs.xGrid)\r\n  }, // 只对 type = radio 有效， 当手动勾选并且值发生改变时触发的事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellClick(obj) {\r\n    this.$emit('cellClick', obj, this, this.$refs.xGrid)\r\n  }, // 单元格被点击时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellDblclick(obj) {\r\n    this.$emit('cellDblclick', obj, this, this.$refs.xGrid)\r\n  }, // 单元格被双击时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellContextMenu(obj) {\r\n    this.$emit('cellContextMenu', obj, this, this.$refs.xGrid)\r\n  }, // 只对 context - menu 配置时有效， 单元格被鼠标右键时触发该事件 { type, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellMouseenter(obj) {\r\n    this.$emit('cellMouseenter', obj, this, this.$refs.xGrid)\r\n  }, // 当单元格 hover 进入时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  cellMouseleave(obj) {\r\n    this.$emit('cellMouseleave', obj, this, this.$refs.xGrid)\r\n  }, // 当单元格 hover 退出时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  headerCellClick(obj) {\r\n    this.$emit('headerCellClick', obj, this, this.$refs.xGrid)\r\n  }, // 表头单元格被点击时会触发该事件 { $rowIndex, column, columnIndex, $columnIndex, triggerResizable, triggerSort, triggerFilter, $event }\r\n  headerCellDblclick(obj) {\r\n    this.$emit('headerCellDblclick', obj, this, this.$refs.xGrid)\r\n  }, // 表头单元格被双击时会触发该事件 { $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  // headerCellContextMenu(obj) {\r\n  //   this.$emit('headerCellContextMenu', obj, this, this.$refs.xGrid)\r\n  // }, // 只对 context-menu 配置时有效，表头单元格被鼠标右键时触发该事件 { type, column, columnIndex, $event }\r\n  footerCellClick(obj) {\r\n    this.$emit('footerCellClick', obj, this, this.$refs.xGrid)\r\n  }, // 表尾单元格被点击时会触发该事件 // { items, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  footerCellDblclick(obj) {\r\n    this.$emit('footerCellDblclick', obj, this, this.$refs.xGrid)\r\n  }, // 表尾单元格被双击时会触发该事件 { items, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  footerCellContextMenu(obj) {\r\n    this.$emit('footerCellContextMenu', obj, this, this.$refs.xGrid)\r\n  }, // 只对 context - menu 配置时有效， 表尾单元格被鼠标右键时触发该事件 { type, column, columnIndex, $event }\r\n  sortChange(obj) {\r\n    this.$emit('sortChange', obj, this, this.$refs.xGrid)\r\n  }, // 当排序条件发生变化时会触发该事件 { column, column.property, order, $event }\r\n  filterChange(obj) {\r\n    this.$emit('filterChange', obj, this, this.$refs.xGrid)\r\n  }, // 当筛选条件发生变化时会触发该事件 { column, property, values, datas, filters, $event }{ column, property, values, datas, filters, $event }\r\n  resizableChange(obj) {\r\n    this.$emit('resizableChange', obj, this, this.$refs.xGrid)\r\n  }, // 当列宽拖动发生变化时会触发该事件 { $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  toggleRowExpand(obj) {\r\n    this.$emit('toggleRowExpand', obj, this, this.$refs.xGrid)\r\n  }, // 当行展开或收起时会触发该事件 { expanded, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  toggleTreeExpand(obj) {\r\n    this.$emit('toggleTreeExpand', obj, this, this.$refs.xGrid)\r\n  }, // 当树节点展开或收起时会触发该事件 { expanded, row, column, columnIndex, $columnIndex, $event }\r\n  contextMenuClick(obj) {\r\n    this.$emit('contextMenuClick', obj, this, this.$refs.xGrid)\r\n  }, // 只对 context-menu 配置时有效，当点击快捷菜单时会触发该事件 { menu, type, row, rowIndex, column, columnIndex, $event }\r\n  currentChange(obj) {\r\n    // this.performColCalculate(obj)\r\n    this.$nextTick(() => {\r\n      this.$emit('currentChange', obj, this, this.$refs.xGrid)\r\n    })\r\n  }, // 只对 highlightCurrentRow 有效，当手动选中行并且值发生改变时触发的事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  editClosed(obj) {\r\n    this.performColCalculate(obj)\r\n    this.$nextTick(() => {\r\n      this.$emit('editClosed', obj, this, this.$refs.xGrid)\r\n    })\r\n  }, // 只对 edit-config 配置时有效，单元格编辑状态下被关闭时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  editActived(obj) {\r\n    this.$emit('editActived', obj, this, this.$refs.xGrid)\r\n  }, // 只对 edit-config 配置时有效，单元格被激活编辑时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  editDisabled(obj) {\r\n    this.$emit('editDisabled', obj, this, this.$refs.xGrid)\r\n  }, // 只对 edit-config 配置时有效，当单元格激活时如果是禁用状态时会触发该事件 { row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  validError(obj) {\r\n    this.$emit('validError', obj, this, this.$refs.xGrid)\r\n  }, // 只对 edit-rules 配置时有效，当数据校验不通过时会触发该事件 { rule, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }\r\n  scroll(obj) {\r\n    this.$emit('scroll', obj, this, this.$refs.xGrid)\r\n  }, // 表格滚动时会触发该事件 { type, scrollTop, scrollLeft, isX, isY, $event }\r\n  custom(obj) {\r\n    this.$emit('custom', obj, this, this.$refs.xGrid)\r\n  },\r\n  formSubmitInvalid(obj) {\r\n    this.$emit('formSubmitInvalid', obj, this, this.$refs.xGrid)\r\n  }, // 只对 form-config 配置时有效，表单提交时如果校验不通过会触发该事件 { data, errMap, $event }\r\n  formReset(obj) {\r\n    this.$emit('formReset', obj, this, this.$refs.xGrid)\r\n  }, // 只对 form-config 配置时有效，表单重置时会触发该事件 { data, $event }\r\n  formToggleCollapse(obj) {\r\n    this.$emit('formToggleCollapse', obj, this, this.$refs.xGrid)\r\n  }, // 只对 form-config 配置时有效，当折叠按钮被手动点击时会触发该事件 { collapse, data, $event }\r\n  zoom(obj) {\r\n    this.$emit('zoom', obj, this, this.$refs.xGrid)\r\n  } // 当最大化或还原操作被手动点击时会后触发该事件 { type, $event }\r\n  // checkboxChange(obj) {\r\n  //   this.$emit('checkboxChange', obj,  this, this.$refs.xGrid)\r\n  // } // 只对 type=checkbox 有效，当手动勾选并且值发生改变时触发的事件 { records, reserves, indeterminates, checked, row, rowIndex, $rowIndex, column, columnIndex, $columnIndex, $event }\r\n  //  checkboxAll(obj) {\r\n  //    this.$emit('checkboxAll', obj,  this, this.$refs.xGrid)\r\n  //  }, // 只对 type=checkbox 有效，当手动勾选全选时触发的事件 { records, reserves, indeterminates, checked, $event }\r\n  // 如果与工具栏关联， 在自定义列按钮被手动点击后会触发该事件 { type, $event }\r\n  // pageChange(obj) {\r\n  //      this.$emit('pageChange', obj,  this, this.$refs.xGrid)\r\n  // }, // 只对 pager-config 配置时有效，分页发生改变时会触发该事件 { type, currentPage, pageSize, $event }\r\n  // formSubmit (obj) {\r\n  //   this.$emit('formSubmit', obj,  this, this.$refs.xGrid)\r\n  // }, // 只对 form-config 配置时有效，表单提交时会触发该事件 { data, $event }\r\n}\r\nconst calculateConstraintTool = {\r\n  addMissingFieldsAndCalcColFormula(tableData) {\r\n    // 添加缺失字段并执行全量列计算\r\n    let self = this\r\n    tableData = Array.isArray(tableData) ? tableData : []\r\n    tableData.forEach((row) => {\r\n      // self.tableColumnsFieldArr.forEach((item) => {\r\n      //   // 遍历配置项生成的前缀数组，并且其前缀在数据包中不存在时，动态给其绑定一个前缀\r\n      //   if (row[item] === undefined) {\r\n      //     row[item] = ''\r\n      //   }\r\n      // })\r\n      self.tableColumnsFieldArr.forEach((item) => {\r\n        // 遍历配置项生成的前缀数组，并且其前缀在数据包中不存在时，动态给其绑定一个前缀\r\n        row[item] = (typeof (row[item]) !== 'object' && self.getbasicDataType(row[item]) !== 'Null') ? (row[item] + '').replace(/null|NaN|undefined/ig, '') : row[item]\r\n      })\r\n      row = this.reductionColFormula(this.calculateConstraintConfig.colFormulaConfig, row)\r\n      if (Array.isArray(row.children) && row.children.length && this.treeConfigIn) {\r\n        row.children = self.addMissingFieldsAndCalcColFormula(row.children)\r\n      }\r\n    })\r\n    return tableData\r\n  },\r\n  reductionColFormula(colFormulaMap, row) {\r\n    // 单条数据计算\r\n    // rowFormulaMap= { \"colfield\":\"{colfield}[运算符]\" }\r\n    let colFormulaMapCp = this.deepCopy(colFormulaMap)\r\n    let hasCalcColFormulaMap = {}\r\n    let i = 0\r\n    let ifWhilekey = true\r\n    try {\r\n      while (ifWhilekey) {\r\n        let colFormulaMapArr = Object.keys(colFormulaMapCp)\r\n        if (colFormulaMapArr.length) {\r\n          for (let cmai = 0; cmai < colFormulaMapArr.length; cmai++) {\r\n            i++\r\n            let item = colFormulaMapArr[cmai]\r\n            let formula = colFormulaMapCp[item]\r\n            let regR = new RegExp('({[a-zA-Z0-9_]*})', 'ig')\r\n            let rowsKey = formula.match(regR) === null ? [] : formula.match(regR)\r\n            if (rowsKey.length) {\r\n              for (let keyCF in rowsKey) {\r\n                let keyC = rowsKey[keyCF].replace(/\\{|\\}/g, '')\r\n                let reg = new RegExp('({' + keyC + '})', 'ig')\r\n                if (row[keyC] !== undefined && !(hasCalcColFormulaMap[keyC] && colFormulaMapCp[keyC])) {\r\n                  colFormulaMapCp[item] = formula.replace(reg, isNaN(parseFloat(row[keyC])) ? 0 : parseFloat(row[keyC]))\r\n                } else if (hasCalcColFormulaMap[keyC]) {\r\n                  colFormulaMapCp[item] = formula.replace(reg, hasCalcColFormulaMap[keyC])\r\n                } else if (!colFormulaMapCp[keyC]) {\r\n                  colFormulaMapCp[item] = formula.replace(reg, 0)\r\n                }\r\n              }\r\n            } else {\r\n              let calcResult = eval(formula)\r\n              hasCalcColFormulaMap[item] = calcResult === Infinity || calcResult === -Infinity || isNaN(calcResult) ? '' : calcResult.toFixed(2)\r\n              delete colFormulaMapCp[item]\r\n            }\r\n          }\r\n        } else {\r\n          ifWhilekey = false\r\n        }\r\n        if (i === 1000) {\r\n          throw (new Error('请检查公式'))\r\n        }\r\n      }\r\n    } catch (e) {\r\n      // console.log(i)\r\n      console.log(e, '当前公式为', colFormulaMapCp)\r\n    }\r\n    // console.log(hasCalcColFormulaMap)\r\n    return Object.assign(row, hasCalcColFormulaMap)\r\n  },\r\n  reductionRowFormula(rowFormulaMap, data, tableId) {\r\n    // 单元格交叉计算\r\n    // rowFormulaMap= { \"colField:rowIndex\":\"{tableId:colField:rowIndex}[运算符]\" }\r\n    let rowFormulaMapCp = this.deepCopy(rowFormulaMap)\r\n    let hasCalcrowFormulaMap = {}\r\n    let i = 0\r\n    let ifWhilekey = true\r\n    try {\r\n      while (ifWhilekey) {\r\n        let rowFormulaMapArr = Object.keys(rowFormulaMapCp)\r\n        if (rowFormulaMapArr.length) {\r\n          for (let cmai = 0; cmai < rowFormulaMapArr.length; cmai++) {\r\n            i++\r\n            let item = rowFormulaMapArr[cmai]\r\n            let formula = rowFormulaMapCp[item]\r\n            let regR = new RegExp('({[a-zA-Z0-9_:]*})', 'ig')\r\n            let rowsKey = formula.match(regR) === null ? [] : formula.match(regR)\r\n            if (rowsKey.length) {\r\n              for (let keyCF in rowsKey) {\r\n                let formulaArr = rowsKey[keyCF].replace(/\\{|\\}/g, '').split(':')\r\n                let reg = new RegExp('({' + formulaArr.join(':') + '})', 'ig')\r\n                if (formulaArr[0] === tableId) {\r\n                  if (data[formulaArr[2]] && data[formulaArr[2]][formulaArr[1]] !== undefined && !(hasCalcrowFormulaMap[formulaArr[1] + ':' + formulaArr[2]] && rowFormulaMapCp[formulaArr[1] + ':' + formulaArr[2]])) {\r\n                    rowFormulaMapCp[item] = formula.replace(reg, isNaN(parseFloat(data[formulaArr[2]][formulaArr[1]])) ? 0 : parseFloat(data[formulaArr[2]][formulaArr[1]]))\r\n                  } else if (hasCalcrowFormulaMap[formulaArr[1] + ':' + formulaArr[2]]) {\r\n                    rowFormulaMapCp[item] = formula.replace(reg, hasCalcrowFormulaMap[formulaArr[1] + ':' + formulaArr[2]])\r\n                  } else if (!rowFormulaMapCp[formulaArr[1] + ':' + formulaArr[2]]) {\r\n                    rowFormulaMapCp[item] = formula.replace(reg, 0)\r\n                  }\r\n                } else {\r\n                  rowFormulaMapCp[item] = formula.replace(reg, 0)\r\n                }\r\n              }\r\n            } else {\r\n              let calcResult = eval(formula)\r\n              hasCalcrowFormulaMap[item] = calcResult === Infinity || calcResult === -Infinity || isNaN(calcResult) ? '' : calcResult.toFixed(2)\r\n              delete rowFormulaMapCp[item]\r\n            }\r\n          }\r\n        } else {\r\n          ifWhilekey = false\r\n        }\r\n        if (i === 100000) {\r\n          throw (new Error('请检查公式'))\r\n        }\r\n      }\r\n    } catch (e) {\r\n      // console.log(i)\r\n      console.log(e, '当前公式为', hasCalcrowFormulaMap)\r\n    }\r\n    Object.keys(hasCalcrowFormulaMap).forEach((item, index) => {\r\n      let rowCellArr = item.split(':')\r\n      if (data[rowCellArr[1]]) {\r\n        data[rowCellArr[1]][rowCellArr[0]] = hasCalcrowFormulaMap[item]\r\n      }\r\n    })\r\n    return data\r\n  },\r\n  // calculateRowData({ row }) {\r\n  //   // 计算\r\n  //   row = this.calculate(row, this.tableColumnsConfigIn)\r\n  //   this.$refs.xGrid.reloadRow([row]).then(() => {}).catch(e => {})\r\n  //   return row\r\n  // },\r\n  riverColumnsGenerateCalcColFormulaMap(columns, obj) {\r\n    // 递归生成列计算全量映射\r\n    let self = this\r\n    obj = obj || {\r\n      tableColumnsFieldMap: {},\r\n      tableColumnsFieldArr: [],\r\n      tableColumnsSingArr: [],\r\n      tableColumnsTitleFieldMap: {},\r\n      colFormulaConfig: {}\r\n    }\r\n    columns.forEach((conlum, index) => {\r\n      if (Array.isArray(conlum.children) && conlum.children.length) {\r\n        self.riverColumnsGenerateCalcColFormulaMap(conlum.children, obj)\r\n      } else {\r\n        if (conlum.field) {\r\n          obj.tableColumnsFieldMap[conlum.field] = conlum\r\n          obj.tableColumnsFieldArr.push(conlum.field)\r\n          obj.tableColumnsSingArr.push(conlum)\r\n          obj.tableColumnsTitleFieldMap[conlum.title] = conlum.field\r\n          if (conlum.formula) {\r\n            obj.colFormulaConfig[conlum.field] = conlum.formula\r\n          }\r\n        }\r\n      }\r\n    })\r\n    return obj\r\n  },\r\n  generateCalcColFormulaMap(columns) {\r\n    // 生成列计算公式映射\r\n    let self = this\r\n    let obj = this.riverColumnsGenerateCalcColFormulaMap(columns)\r\n    self.tableColumnsFieldMap = obj.tableColumnsFieldMap\r\n    self.tableColumnsFieldArr = obj.tableColumnsFieldArr\r\n    self.tableColumnsSingArr = obj.tableColumnsSingArr\r\n    self.tableColumnsTitleFieldMap = obj.tableColumnsTitleFieldMap\r\n    this.calculateConstraintConfig = Object.assign({}, this.calculateConstraintConfig, {\r\n      colFormulaConfig: obj.colFormulaConfig\r\n    })\r\n  },\r\n  performColCalculate({ row, rowIndex, $rowIndex, column, columnIndex, $columnIndex }) {\r\n    // 行改变事件执行列计算并刷新视图\r\n    row = this.reductionColFormula(this.calculateConstraintConfig.colFormulaConfig, row)\r\n    this.$refs.xGrid.reloadRow([row]).then(() => { }).catch(e => { })\r\n    if (Object.keys(this.calculateConstraintConfig.rowformulaConfig).length) {\r\n      this.$nextTick(() => {\r\n        // xGrid.reloadData(xGrid.getTableData().fullData)\r\n        this.$refs.xGrid.reloadData(this.reductionRowFormula(this.calculateConstraintConfig.rowformulaConfig, this.getListData(), this.id)).then().catch()\r\n      })\r\n    }\r\n  },\r\n  generateColumnsAllMap(columns, obj) {\r\n    // 生成导入view映射数据\r\n    let self = this\r\n    obj = obj || {\r\n      tableColumnsFieldMap: {},\r\n      tableColumnsTitleFieldMap: {},\r\n      viewToSourceMap: {},\r\n      colFormulaConfig: {},\r\n      rowsObjTemp: {},\r\n      tableColumnsTitleMap: {}\r\n    }\r\n    columns.forEach((conlum, index) => {\r\n      if (Array.isArray(conlum.children) && conlum.children.length) {\r\n        self.riverColumnsGenerateCalcColFormulaMap(conlum.children, obj)\r\n      } else {\r\n        if (conlum.formula) {\r\n          obj.colFormulaConfig[conlum.field] = conlum.formula\r\n          obj.tableColumnsFieldMap[conlum.title] = conlum\r\n        }\r\n        if (conlum.field) {\r\n          obj.rowsObjTemp[conlum.field] = ''\r\n          let map = {\r\n            needMap: true,\r\n            options: [],\r\n            multiple: false,\r\n            formula: conlum.formula\r\n          }\r\n          obj.tableColumnsFieldMap[conlum.field] = conlum\r\n          obj.tableColumnsTitleFieldMap[conlum.title] = conlum.field\r\n          let itemRender = conlum.cellRender || conlum.editRender || conlum.contentRender\r\n          if (itemRender) {\r\n            switch (itemRender.name) {\r\n              case '$vxeSelect':\r\n                if (itemRender.props && itemRender.props.multiple) {\r\n                  map = Object.assign({}, map, {\r\n                    needMap: true,\r\n                    name: itemRender.name,\r\n                    options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                    multiple: true\r\n                  })\r\n                } else {\r\n                  map = Object.assign({}, map, {\r\n                    needMap: true,\r\n                    name: itemRender.name,\r\n                    options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                    multiple: false\r\n                  })\r\n                }\r\n                break\r\n              case '$vxeRadio':\r\n                map = Object.assign({}, map, {\r\n                  needMap: true,\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: false\r\n                })\r\n                break\r\n              case '$vxeCheckbox':\r\n                map = Object.assign({}, map, {\r\n                  needMap: true,\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: true\r\n                })\r\n                break\r\n              case '$vxeSwitch':\r\n                map = Object.assign({}, map, {\r\n                  needMap: true,\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: false\r\n                })\r\n                break\r\n              default:\r\n                map = Object.assign({}, map, {\r\n                  needMap: false,\r\n                  // pattern: ((itemRenderName, itemRenderType) => {\r\n                  //   switch (itemRenderName) {\r\n                  //     case '$vxeInput':\r\n                  //       // text, search, number, integer, float, password, date, time, datetime, week, month, year\r\n                  //       switch (itemRenderType) {\r\n                  //         case 'string':\r\n                  //           return (str) => {\r\n                  //             // 空\r\n                  //             str = str && str.toString()\r\n                  //             return !(str && str.trim() !== '')\r\n                  //           }\r\n                  //         case 'number':\r\n                  //           // 数字\r\n                  //           return (str) => {\r\n                  //             return /^[0-9]*$/.test(str)\r\n                  //           }\r\n                  //         case 'integer':\r\n                  //           // 数字\r\n                  //           return (str) => {\r\n                  //             return /^[1-9]+[0-9]*$/.test(str)\r\n                  //           }\r\n                  //         case 'time':\r\n                  //           // 时间\r\n                  //           return (str) => {\r\n                  //             return /^\\d*(?:\\.\\d{0,2})?$/.test(str)\r\n                  //           }\r\n                  //         case 'year':\r\n                  //           // 年\r\n                  //           return (str) => {\r\n                  //             return /^[1,9]{4}/.test(str)\r\n                  //           }\r\n                  //         case 'float':\r\n                  //           // 2位小叔\r\n                  //           return (str) => {\r\n                  //             return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //           }\r\n                  //       }\r\n                  //       break\r\n                  //     case '$vxeMoney':\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     case '$vxeCalculate':\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     case '$vxeEditDownTextarea':\r\n                  //       return (str) => {\r\n                  //         str = str && str.toString()\r\n                  //         return !(str && str.trim() !== '')\r\n                  //       }\r\n                  //     case '$vxeDays': {\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     }\r\n                  //     case '$vxeTime': {\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     }\r\n                  //     case '$vxeText': {\r\n                  //       return (str) => {\r\n                  //         return /^-?\\d+\\.?\\d{0,2}$/.test(str)\r\n                  //       }\r\n                  //     }\r\n\r\n                  //     default:\r\n                  //       break\r\n                  //   }\r\n                  // })(itemRender.name, itemRender.props && itemRender.props.type),\r\n                  name: itemRender.name,\r\n                  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n                  multiple: false\r\n                })\r\n                break\r\n            }\r\n          } else {\r\n            map = Object.assign({}, map, {\r\n              needMap: false\r\n            })\r\n          }\r\n          obj.viewToSourceMap[conlum.field] = map\r\n        }\r\n      }\r\n    })\r\n    return obj\r\n  },\r\n  deaImportViewData(obj = {\r\n    conlums: [],\r\n    viewData: [],\r\n    editRules: {}\r\n  }) {\r\n    // 处理 导入数据\r\n    let self = this\r\n    let { viewToSourceMap, tableColumnsTitleFieldMap, tableColumnsFieldMap, rowsObjTemp, colFormulaConfig } = this.generateColumnsAllMap(obj.conlums)\r\n    let validResult = true\r\n    let validResultFieldTitle = []\r\n    // let valiRule = []\r\n    let viewData = obj.viewData.map((row, rowIndex) => {\r\n      Object.keys(row).forEach((key, keyIndex) => {\r\n        let parseViewValue = self.reverseParseViewDataTosource(viewToSourceMap[tableColumnsTitleFieldMap[key]], row[key])\r\n        // const customVal = String(parseViewValue).replace(/null|undefined|\\s+/ig, '') !== ''\r\n        if (tableColumnsFieldMap[tableColumnsTitleFieldMap[key]]) {\r\n          // self.validCellRules({ type: 'all', row, column: tableColumnsFieldMap[tableColumnsTitleFieldMap[key]], val: parseViewValue, editRules: obj.editRules })\r\n          //   .then(() => {\r\n          //     if (customVal) {\r\n          row[tableColumnsTitleFieldMap[key]] = parseViewValue\r\n          //   }\r\n          // })\r\n          // .catch(({ rule }) => {\r\n          //   validResult = false\r\n          //   valiRule.push(rule)\r\n          //   if (customVal) {\r\n          //     row[tableColumnsTitleFieldMap[key]] = parseViewValue\r\n          //   }\r\n          // })\r\n        } else {\r\n          validResultFieldTitle.push(key)\r\n        }\r\n      })\r\n      row = Object.assign({}, rowsObjTemp, row)\r\n      return this.reductionColFormula(colFormulaConfig, self.reductionColFormula(colFormulaConfig, row))\r\n    })\r\n    return validResult && !validResultFieldTitle.length && viewData\r\n  },\r\n  dealExportViewData(obj = {\r\n    conlums: [],\r\n    viewData: []\r\n  }) {\r\n    // 处理 导入数据\r\n    let self = this\r\n    let { viewToSourceMap, tableColumnsTitleFieldMap, rowsObjTemp, colFormulaConfigm, colFormulaConfig } = this.generateColumnsAllMap(obj.conlums)\r\n    return obj.viewData.map((row, rowIndex) => {\r\n      Object.keys(row).map((key, keyIndex) => {\r\n        row[tableColumnsTitleFieldMap[key]] = self.reverseParseViewDataTosource(viewToSourceMap[tableColumnsTitleFieldMap[key]], row[key])\r\n      })\r\n      row = Object.assign({}, rowsObjTemp, row)\r\n      return this.reductionColFormula(colFormulaConfigm, self.reductionColFormula(colFormulaConfig, row))\r\n    })\r\n  },\r\n  reverseParseViewDataTosource(viewToSourceMap, value) {\r\n    // 处理单个 导入数据\r\n    //  needMap: true,\r\n    //  name: itemRender.name,\r\n    //  options: Array.isArray(itemRender.options) ? itemRender.options : [],\r\n    //  multiple: true,\r\n    //  formula: conlum.formula\r\n    if (viewToSourceMap && viewToSourceMap.needMap) {\r\n      let transValue = ''\r\n      let viewValue = typeof (value) === 'string' ? value : ''\r\n      if (viewToSourceMap.multiple) {\r\n        if (viewValue.length) {\r\n          let viewToSourceValueArr = []\r\n          viewToSourceMap.options.forEach((item, index) => {\r\n            if (viewValue.indexOf(item.label) >= 0) {\r\n              viewToSourceValueArr.push(item.value)\r\n            }\r\n          })\r\n          transValue = viewToSourceValueArr.join(',')\r\n        } else {\r\n          transValue = ''\r\n        }\r\n      } else {\r\n        viewToSourceMap.options.forEach((item, index) => {\r\n          if (viewValue.indexOf(item.label) >= 0) {\r\n            transValue = item.value\r\n          }\r\n        })\r\n      }\r\n      return transValue\r\n    } else {\r\n      return value\r\n    }\r\n  },\r\n  newRule(rule) {\r\n    // 错误规则信息\r\n    return Object.assign({}, {\r\n      $options: rule,\r\n      required: rule.required,\r\n      min: rule.min,\r\n      max: rule.min,\r\n      type: rule.type,\r\n      pattern: rule.pattern,\r\n      validator: rule.validator,\r\n      trigger: rule.trigger,\r\n      maxWidth: rule.maxWidth,\r\n      message: rule.message\r\n    })\r\n  },\r\n  validCellRules(argObj) {\r\n    // 校验单元格\r\n    let self = this\r\n    const { type, row, column, val, editRules } = argObj\r\n    const property = column.field\r\n    const errorRules = []\r\n    const syncVailds = []\r\n    if (property && editRules) {\r\n      const rules = self.$XEUtils.get(editRules, property)\r\n      if (rules) {\r\n        const cellValue = self.$XEUtils.isUndefined(val) ? self.$XEUtils.get(row, property) : val\r\n        rules.forEach(rule => {\r\n          if (type === 'all' || !rule.trigger || type === rule.trigger) {\r\n            if (self.$XEUtils.isFunction(rule.validator)) {\r\n              let customValid\r\n              customValid = rule.validator({\r\n                cellValue,\r\n                rule,\r\n                rules,\r\n                row,\r\n                rowIndex: row.index,\r\n                column,\r\n                $table: this\r\n              })\r\n              if (customValid) {\r\n                if (self.$XEUtils.isError(customValid)) {\r\n                  this.validRuleErr = true\r\n                  errorRules.push(self.newRule({ type: 'custom', trigger: rule.trigger, message: customValid.message, rule: self.newRule(rule) }))\r\n                } else if (customValid.catch) {\r\n                  // 如果为异步校验（注：异步校验是并发无序的）\r\n                  syncVailds.push(\r\n                    customValid.catch(e => {\r\n                      this.validRuleErr = true\r\n                      errorRules.push(self.newRule({ type: 'custom', trigger: rule.trigger, message: e ? e.message : rule.message, rule: self.newRule(rule) }))\r\n                    })\r\n                  )\r\n                }\r\n              }\r\n            } else {\r\n              const isNumber = rule.type === 'number'\r\n              const numVal = isNumber ? self.$XEUtils.toNumber(cellValue) : self.$XEUtils.getSize(cellValue)\r\n              if (rule.required && (cellValue === null || cellValue === undefined || cellValue === '')) {\r\n                this.validRuleErr = true\r\n                errorRules.push(self.newRule(rule))\r\n              } else if (\r\n                (isNumber && isNaN(cellValue)) ||\r\n                (!isNaN(rule.min) && numVal < parseFloat(rule.min)) ||\r\n                (!isNaN(rule.max) && numVal > parseFloat(rule.max)) ||\r\n                (rule.pattern && !(rule.pattern.test ? rule.pattern : new RegExp(rule.pattern)).test(cellValue))\r\n              ) {\r\n                this.validRuleErr = true\r\n                errorRules.push(self.newRule(rule))\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n    return Promise.all(syncVailds).then(() => {\r\n      if (errorRules.length) {\r\n        const rest = { rules: errorRules, rule: errorRules[0] }\r\n        return Promise.reject(rest)\r\n      }\r\n    })\r\n  },\r\n  exportByTempalte(obj = {\r\n    data: [], // 模版数据，只拿第一行导出列配置\r\n    conlums: [] // 所有表头\r\n  }) {\r\n    // 按模版导出\r\n    let exportConlums = []\r\n    let exportConlumsTitle = obj.data[0]\r\n    const { tableColumnsTitleMap } = this.generateColumnsAllMap(obj.conlums)\r\n    exportConlumsTitle.forEach((item, index) => {\r\n      tableColumnsTitleMap[item] && exportConlums.push(tableColumnsTitleMap[item])\r\n    })\r\n    const fullData = this.getTableData().fullData\r\n    const selection = this.selection\r\n    this.$Export.exportExcel({\r\n      isExportTree: true,\r\n      saveType: '.xlsx',\r\n      fileName: 'export', // 文件名\r\n      dataType: 'fullData',\r\n      isExportHead: true, // 是否导出表头\r\n      isExportFooter: false, // 是否导出表尾部\r\n      isExportOnlySourceField: false, // 是否只导出数据源表头字段，\r\n      isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n      isExportOriginalData: false, // 是否导出源数据\r\n      isExportData: true, // 是否导出数据\r\n      columns: exportConlums, // 表头配置\r\n      fullData: fullData,\r\n      datas: [], // 源数据,\r\n      selection: selection, // 选中数据\r\n      index: true // 是否添加序号,\r\n    }, this)\r\n  }\r\n}\r\nconst otherFn = {\r\n  getListData() {\r\n    // 获取表单数据\r\n    const { fullData } = this.$refs.xGrid.getTableData()\r\n    const data = fullData || []\r\n    return this.deepCopy(this.dealData(data))\r\n  },\r\n  dealData(data) {\r\n    let newData = []\r\n    data.forEach((item) => {\r\n      const itemVal = Object.assign({}, item)\r\n      Object.keys(itemVal).map((val) => {\r\n        let value = String(itemVal[val]) || ''\r\n        if (value.includes('initId')) {\r\n          const prefix = val.substr(0, val.indexOf('id'))\r\n          itemVal[val] = ''\r\n          itemVal[prefix + 'code'] = ''\r\n          itemVal[prefix + 'name'] = ''\r\n        }\r\n      })\r\n      newData.push(itemVal)\r\n    })\r\n    return newData\r\n  },\r\n  regTreePrefix(item) {\r\n    const reg = /\\w*_$/g\r\n    return reg.test(item)\r\n  },\r\n  // 遍历正则对象，给树统一自动添加正则\r\n  addTreeReg(formValidationConfig) {\r\n    const reg = /^(?!initId)/g\r\n    Object.keys(formValidationConfig).forEach((item) => {\r\n      if (this.regTreePrefix(item)) {\r\n        formValidationConfig[item][0].pattern = reg\r\n      }\r\n    })\r\n\r\n    return formValidationConfig\r\n  },\r\n  // 遍历，动态给树组件添加双向绑定的前缀\r\n  addTreePrefixKey2(treeData) {\r\n    const reg = /_id$/\r\n    let treeArr = treeData || []\r\n    treeArr.forEach((row) => {\r\n      Object.keys(row).forEach((item) => {\r\n        // 以_id结尾，并且其前缀在数据包中不存在时，动态给其绑定一个前缀\r\n        if (reg.test(item)) {\r\n          const prefix = item.substr(0, item.indexOf('id'))\r\n          if (!row.hasOwnProperty(prefix)) {\r\n            this.$set(row, prefix, '')\r\n          }\r\n        }\r\n      })\r\n    })\r\n    return treeData\r\n  }\r\n}\r\nexport default {\r\n  ...util, // 工具类\r\n  ...sortMethos,\r\n  ...axiosEvent,\r\n  ...initMethods, // prop更新方法以及初始化函数\r\n  ...registFn, // 渲染注册函数\r\n  ...tableEventFn, // 表格事件\r\n  ...toolBarEvent, // toolbar事件\r\n  ...pageEvent, // 分页事件\r\n  ...formatters, // 全局formatter函数\r\n  ...tableOptionFn, // 表格操作函数\r\n  ...proxyFn, // 代理函数\r\n  ...tableEvent, // 表格事件\r\n  ...otherFn, // 其他函数\r\n  ...calculateConstraintTool\r\n}\r\n"],"mappings":"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"}]}