{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\capitalAccount\\budgetPayRegion\\budgetPayRegion.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\capitalAccount\\budgetPayRegion\\budgetPayRegion.vue","mtime":1695716045479},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\babel.config.js","mtime":1694505520209},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["getFormData","DetailDialog","SDetailDialog","HttpModule","regionMixin","mixins","components","computed","isSx","$store","getters","tableGlobalConfigCop","dataType","transJson","state","curNavModule","param5","exportModalDefaultSelect","customExportConfig","_objectSpread","tableGlobalConfig","fileName","menuName","watch","$refs","handler","newval","deep","immediate","queryConfig","getSearchDataList","data","_this$transJson","_this$$store","_this$$store$state","_this$$store$state$cu","isFlush","caliberDeclareContent","reportTime","leftTreeVisible","sDetailVisible","sDetailTitle","sDetailData","isShowQueryConditions","radioShow","breakRuleVisible","buttonsInfo","tabStatusNumConfig","tableLoading","tableConfig","tableColumnsConfig","concat","isCity","tableData","addUnitColumn","addReportTitleColumn","unit","obj","calculateConstraintConfig","enabled","extendMapInfoField","calcAndConstraintItemCodeField","cellDataConfig","getDataAxiosConfig","dataField","successCode","statusField","method","url","getDataParams","colConstraintConfig","rowCodeConstraintConfig","toolbarConfig","disabledMoneyConversion","ifRenderExpandContentTable","pagerConfig","autoHidden","total","currentPage","pageSize","tableToolbarConfig","moneyConversion","search","import","export","expandAll","print","zoom","custom","slots","tools","buttons","tableFooterConfig","showFooter","logData","showLogView","dialogVisible","dialogTitle","addTableData","modifyData","params5","menuId","tokenid","userInfo","roleguid","appId","isHaveZero","billguid","condition","selectData","searchDataList","detailVisible","detailType","detailTitle","detailData","detailQueryParam","sDetailQueryParam","mounted","methods","switchMoneyUnit","level","onQueryConditionsClick","isOpen","searchDataObj","forEach","item","itemRender","name","field","getConditionList","onStatusTabClick","type","operationToolbarButtonClickEvent","toolBarStatusSelect","curValue","mainPagerConfig","refresh","queryTableDatas","mainTableRef","xGrid","clearScroll","val","_this","multipleValue","arguments","length","undefined","console","log","_loop","key","Array","isArray","trim","split","push","onToolbarBtnClick","_ref","_this2","context","table","code","refreshTips","$confirm","then","changeVisible","onClickmethod","node","id","treeSet","treeConfigIn","curRadio","toLowerCase","guid","handleDetail","recDivCode","column","isBj","params","reportCode","mofDivCode","speTypeCode","fiscalYear","endTime","proCodes","getTrees","_this$transJson2","_this$$store2","_this$$store2$state","_this$$store2$state$c","_this$$store$state$us","_this$transJson3","_this$transJson4","province","slice","isCz","includes","cellClick","e","property","row","rowIndex","isInvalidCellValue","queryFrom","getPro","_this3","getProTreeData","res","treeResdata","getChildrenNewData1","options","$message","error","message","datas","that","label","children","_this4","param","finally","_this$transJson5","description","queryCaliberDeclareContent","_this5","initTableData","tableDataTest","_this6","arr","JSON","parse","stringify","map","v","parseFloat","toString","substring","a","getNewData","_this7","setTimeout","cellDblclick","onEditClosed","bsTable","performTableDataCalculate","cellStyle","_ref2","color","textDecoration","validCellValue","created","$XEUtils","toDateString","getWhatDay","Date","getLoginAuthentication"],"sources":["src/views/main/fundMonitoring/capitalAccount/budgetPayRegion/budgetPayRegion.vue"],"sourcesContent":["<!-- 中央和地方预算支出分地区 -->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <!-- <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref='tabPanel'\r\n          :is-open='isShowQueryConditions'\r\n          :tab-status-btn-config='toolBarStatusBtnConfig'\r\n          :tab-status-num-config='tabStatusNumConfig'\r\n          @onQueryConditionsClick='onQueryConditionsClick'\r\n        />\r\n      </template> -->\r\n      <template v-slot:query>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n            @itemChange=\"itemChange\"\r\n          >\r\n            <template v-if=\"isSx\" v-slot:action-button-before>\r\n              <vxe-button\r\n                content=\"人工读取\"\r\n                status=\"primary\"\r\n                size=\"medium\"\r\n                @click=\"onToolbarBtnClick({ code: 'refresh' })\"\r\n              />\r\n            </template>\r\n          </BsQuery>\r\n        </div>\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <BsTable\r\n          id=\"1001\"\r\n          ref=\"bsTableRef\"\r\n          row-id=\"id\"\r\n          :table-config=\"tableConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-global-config=\"!isSx ? tableGlobalConfigCop : {}\"\r\n          :table-data=\"tableData\"\r\n          :calculate-constraint-config=\"calculateConstraintConfig\"\r\n          :tree-config=\"{ dblExpandAll: true, dblExpand: true, accordion: false, iconClose: 'el-icon-circle-plus', iconOpen: 'el-icon-remove' }\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          :pager-config=\"pagerConfig\"\r\n          :default-money-unit=\"10000\"\r\n          :title=\"menuName\"\r\n          :cell-style=\"cellStyle\"\r\n          :export-modal-config=\"{ fileName: menuName }\"\r\n          :formula-digits=\"1\"\r\n          :show-zero=\"false\"\r\n          @editClosed=\"onEditClosed\"\r\n          @cellDblclick=\"cellDblclick\"\r\n          @cellClick=\"cellClick\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @switchMoneyUnit=\"switchMoneyUnit\"\r\n        >\r\n          <!--口径说明插槽-->\r\n          <template v-if=\"caliberDeclareContent\" v-slot:caliberDeclare>\r\n            <p v-html=\"caliberDeclareContent\"></p>\r\n          </template>\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n            <div v-if=\"isSx\" class=\"timeRefreshTip\">\r\n              <div>系统自动更新时间点：1.早上8：00前更新完成。</div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:toolbar-custom-slot>\r\n            <div class=\"dfr-report-time-wrapper\">\r\n              <el-tooltip effect=\"light\" :content=\"`报表最近取数时间：${reportTime}`\" placement=\"top\">\r\n                <div class=\"dfr-report-time-content\">\r\n                  <i class=\"ri-history-fill\"></i>\r\n                  <span class=\"dfr-report-time\">{{ reportTime }}</span>\r\n                </div>\r\n              </el-tooltip>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <DetailDialog\r\n      v-if=\"detailVisible\"\r\n      :title=\"detailTitle\"\r\n      :detail-type=\"detailType\"\r\n      :detail-data=\"detailData\"\r\n      :detail-query-param=\"detailQueryParam\"\r\n    />\r\n    <SDetailDialog\r\n      v-if=\"sDetailVisible\"\r\n      :title=\"sDetailTitle\"\r\n      :s-detail-data=\"sDetailData\"\r\n      :s-detail-query-param=\"sDetailQueryParam\"\r\n      :s-detail-type=\"sDetailType\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getFormData from './budgetPayRegion.js'\r\nimport DetailDialog from '../children/detailDialog.vue'\r\nimport SDetailDialog from '../children/sDetailDialog.vue'\r\nimport HttpModule from '@/api/frame/main/fundMonitoring/budgetImplementationRegion.js'\r\nimport regionMixin from '../mixins/regionMixin'\r\nexport default {\r\n  mixins: [regionMixin],\r\n  components: {\r\n    DetailDialog,\r\n    SDetailDialog\r\n  },\r\n  computed: {\r\n    isSx() {\r\n      return this.$store.getters.isSx\r\n    },\r\n    tableGlobalConfigCop() {\r\n      let dataType = this.transJson(this.$store.state.curNavModule.param5 || '').exportModalDefaultSelect || 'fullData'\r\n      return {\r\n        customExportConfig: {\r\n          ...this.tableGlobalConfig.customExportConfig,\r\n          dataType,\r\n          fileName: this.menuName\r\n        }\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    $refs: {\r\n      handler(newval) {\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    queryConfig() {\r\n      this.getSearchDataList()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isFlush: false,\r\n      caliberDeclareContent: '', // 口径说明\r\n      reportTime: '', // 上次取数时间\r\n      leftTreeVisible: false,\r\n      sDetailVisible: false,\r\n      sDetailTitle: '',\r\n      sDetailData: [],\r\n      isShowQueryConditions: true,\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      // // 头部工具栏 BsTabPanel config\r\n      // toolBarStatusBtnConfig: {\r\n      //   changeBtns: true,\r\n      //   // buttons: getFormData('toolBarStatusButtons'),\r\n      //   curButton: {\r\n      //     type: 'button',\r\n      //     iconName: 'base-all.png',\r\n      //     iconNameActive: 'base-all-active.png',\r\n      //     iconUrl: '',\r\n      //     label: '全部',\r\n      //     code: '1',\r\n      //     curValue: '1'\r\n      //   },\r\n      //   buttonsInfo: getFormData('statusRightToolBarButton'),\r\n      //   methods: {\r\n      //     bsToolbarClickEvent: this.onStatusTabClick\r\n      //   }\r\n      // },\r\n      buttonsInfo: getFormData('statusRightToolBarButtonByBusDept'),\r\n      tabStatusNumConfig: {\r\n        1: 0\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableConfig: getFormData('basicInfo', 'tableConfig'),\r\n      tableColumnsConfig: this.isSx ? getFormData('basicInfo', 'tableColumnsConfig') : getFormData('basicInfo', `tableColumnsConfig${this.transJson(this.$store?.state?.curNavModule?.param5)?.isCity ? 'City' : ''}`),\r\n      tableData: [],\r\n      tableGlobalConfig: {\r\n        customExportConfig: {\r\n          addUnitColumn: true,\r\n          addReportTitleColumn: true,\r\n          unit: '万元'\r\n        }\r\n      },\r\n      obj: {},\r\n      calculateConstraintConfig: {\r\n        enabled: true,\r\n        extendMapInfoField: true, // 是否扩展mapInfo字段\r\n        // gradedSummaryFields: ['bonus', 'income'],\r\n        calcAndConstraintItemCodeField: 'itemCode',\r\n        // 示例中1001为tableId\r\n        // rowCodeFormulaConfig: {\r\n        //   // 单元格交叉计算\r\n        //   // rowFormulaMap= { 'colField:itemcode':'{tableId:colField:itemcode}[运算符]' }\r\n        //   '00:jOut': '{00:sbpayAppAmt}+{00:spayAppAmt}+{00:xpayAppAmt}'\r\n        //   // '10:bonus': '{1001:income:10}+{1001:bonus:10}',\r\n        //   // '20:bonus': '{1001:income:30}*{1001:age:30}+{1001:bonus:40}'\r\n        // },\r\n        cellDataConfig: [// 提取和计算\r\n\r\n        ],\r\n        // colFormulaConfig: {\r\n        //   jOut: '{sbpayAppAmt}+{spayAppAmt}+{xpayAppAmt}',\r\n        //   jLoad: '{jOut}/{jAmount}*100',\r\n        //   sUnassigned: '{jAmount}-{sbbjfpAmount}-{sbxjfpAmount}',\r\n        //   sLoad: '({sbbjfpAmount}+{sbxjfpAmount})/{jAmount}*100',\r\n        //   aUnassigned: '{jAmount}-{sbbjfpAmount}-{sbjfpAmount}-{sxjfpAmount}',\r\n        //   aLoad: '({sbjfpAmount}+{sxjfpAmount})/{jAmount}*100',\r\n        //   xUnassigned: '{jAmount}-{sbbjfpAmount}-{sbjfpAmount}-{xbjfpAmount}',\r\n        //   xLoad: '{xbjfpAmount}/{jAmount}*100'\r\n        // },\r\n        getDataAxiosConfig: { // 跨表提取请求配置\r\n          dataField: 'data', // 数据字段\r\n          successCode: '100000', // 成功code\r\n          statusField: 'rscode',\r\n          method: 'get', // 请求方式\r\n          url: '' // 'queryTreeAssistData', //\r\n        //  [{ itemCode: '002', colField: 'f005', value: '1500.0' }, { itemCode: '002001', colField: 'f005', value: '500.0' }]\r\n        },\r\n        getDataParams: { // 提取公共参数\r\n\r\n        },\r\n        colConstraintConfig: {\r\n          // 'age': 'income::value::{age}>=18?Math.pow({age},4)/2:0--&&--name::style::{age}>18&&{age}<=60--??--color=#F00&fontSize=20px--+--{age}>60--??--color=#ff0&fontSize=20px'\r\n        },\r\n        rowCodeConstraintConfig: { // 表间约束配置\r\n          // '20:age': '10:income::value::{1001:age:20}>=18?Math.pow({1001:age:20},4)/2:0--&&--10:bonus::editable::{1001:age:20}>=18?true:false--&&--30:bonus::clear::{1001:age:20}<=18?true:false--&&--10:name::style::{1001:age:20}>18&&{1001:age:20}<=60--??--color=#F00&fontSize=20px--+--{1001:age:1001}>60--??--color=#ff0&fontSize=20px'\r\n        }\r\n      },\r\n      toolbarConfig: {\r\n        disabledMoneyConversion: false,\r\n        ...getFormData('basicInfo', 'toolbarConfig')\r\n      },\r\n      // editRules: getFormData('basicInfo', 'editRules'),\r\n      ifRenderExpandContentTable: true,\r\n      pagerConfig: {\r\n        autoHidden: true,\r\n        total: 1,\r\n        currentPage: 1,\r\n        pageSize: 999999\r\n      },\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: true, // 是否有金额转换\r\n        search: false, // 是否有search\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        expandAll: this.isSx, // 展开所有\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      // mainPagerConfig: {\r\n      //   total: 0,\r\n      //   currentPage: 1,\r\n      //   pageSize: 20\r\n      // },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      modifyData: {},\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '',\r\n      params5: '',\r\n      menuId: '',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      billguid: '',\r\n      condition: {},\r\n      selectData: '',\r\n      queryConfig: getFormData('highQueryConfig'),\r\n      searchDataList: getFormData('highQueryData'),\r\n      detailVisible: false,\r\n      detailType: '',\r\n      detailTitle: '',\r\n      detailData: [],\r\n      detailQueryParam: {},\r\n      sDetailQueryParam: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.getNewData()\r\n  },\r\n  methods: {\r\n    switchMoneyUnit(level) {\r\n      this.tableGlobalConfig.customExportConfig.unit = level === 1 ? '元' : '万元'\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach((item) => {\r\n        if (\r\n          item.itemRender.name === '$formTreeInput' ||\r\n          item.itemRender.name === '$vxeTree'\r\n        ) {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach((item) => {\r\n        if (\r\n          item.itemRender.name === '$formTreeInput' ||\r\n          item.itemRender.name === '$vxeTree'\r\n        ) {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.curValue) {\r\n        // 全部\r\n        case '1':\r\n          this.menuName = '直达资金预算下达_分地区(单位:万元)'\r\n          this.radioShow = true\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      if (this.isSx) {\r\n        this.refresh()\r\n      } else {\r\n        this.queryTableDatas()\r\n      }\r\n      this.$refs.mainTableRef.$refs.xGrid.clearScroll()\r\n    },\r\n    // 搜索\r\n    search(val, multipleValue = {}, isFlush = false) {\r\n      this.searchDataList = val\r\n      console.log(val)\r\n      let condition = this.getConditionList()\r\n      for (let key in condition) {\r\n        if (\r\n          (this.searchDataList[key] !== undefined) &\r\n          (this.searchDataList[key] !== null)\r\n        ) {\r\n          if (Array.isArray(this.searchDataList[key])) {\r\n            condition[key] = this.searchDataList[key]\r\n          } else if (typeof this.searchDataList[key] === 'string') {\r\n            if (this.searchDataList[key].trim() !== '') {\r\n              this.searchDataList[key].split(',').forEach((item) => {\r\n                condition[key].push(item)\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.condition = condition\r\n      if (this.isSx) {\r\n        this.queryTableDatas()\r\n      } else {\r\n        this.queryTableDatas(isFlush)\r\n      }\r\n    },\r\n    // 切换操作按钮\r\n    // operationToolbarButtonClickEvent(obj, context, e) {\r\n    //   switch (obj.code) {\r\n    //     // 导出\r\n    //     case 'export':\r\n    //       this.exportPolicies(obj, context, e)\r\n    //       break\r\n    //     default:\r\n    //       break\r\n    //   }\r\n    // },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      let refreshTips = '重新加载数据可能需要等待较长时间，确认继续？'\r\n      if (this.isSx) refreshTips = '此操作会读取最新业务数据情况，报表分析最新业务数据进行展示，等待时间较长，请确认读取'\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.$confirm(refreshTips, '操作确认提示', {\r\n            type: 'warning'\r\n          }).then(() => {\r\n            this.refresh(true)\r\n          })\r\n          break\r\n      }\r\n    },\r\n    changeVisible(val) {\r\n      this.breakRuleVisible = val\r\n    },\r\n    onClickmethod(node) {\r\n      if (node.id !== '0') {\r\n        let key =\r\n          this.$refs.treeSet.treeConfigIn.curRadio.toLowerCase() + '_code'\r\n        this.condition[key] = node.id\r\n      } else {\r\n        this.condition = {}\r\n      }\r\n\r\n      this.queryTableDatas(node.guid)\r\n    },\r\n    handleDetail(type, recDivCode, column) {\r\n      if (this.isSx) {\r\n        let condition = ''\r\n        switch (column) {\r\n          case 'amountSnjxd':\r\n          case 'saaAmount':\r\n          case 'amountSnjpay':\r\n          case 'sapAmount':\r\n            condition = 'substr(mof_div_code,3,7) = \\'0000000\\'  '\r\n            break\r\n          case 'amountSjxd':\r\n          case 'shaaAmount':\r\n          case 'amountSjpay':\r\n          case 'shapAmount':\r\n            condition = ' substr(mof_div_code,3,7) <> \\'0000000\\' and substr(mof_div_code,5,5)=\\'00000\\' '\r\n            break\r\n          case 'amountXjxd':\r\n          case 'xaaAmount':\r\n          case 'amountXjpay':\r\n          case 'xapAmount':\r\n            condition = ' substr(mof_div_code,5,5) <> \\'00000\\' and substr(mof_div_code,7,3)=\\'000\\' '\r\n            break\r\n          case 'amountZjxd':\r\n          case 'zaaAmount':\r\n          case 'amountZjpay':\r\n          case 'zapAmount':\r\n            condition = ' substr(mof_div_code,7,3) <> \\'000\\' '\r\n            break\r\n        }\r\n        let isBj = ''\r\n        let params = {\r\n          reportCode: type,\r\n          mofDivCode: recDivCode,\r\n          speTypeCode: '',\r\n          isBj: isBj,\r\n          fiscalYear: this.searchDataList.fiscalYear,\r\n          condition: condition,\r\n          endTime: this.condition.endTime ? this.condition.endTime[0] : '',\r\n          proCodes: this.searchDataList.proCodes === '' ? [] : this.getTrees(this.searchDataList.proCodes)\r\n        }\r\n        this.detailQueryParam = params\r\n        this.detailType = type\r\n        this.detailVisible = true\r\n      } else {\r\n        let condition = ''\r\n        if (this.transJson(this.$store?.state?.curNavModule?.param5)?.isCity) {\r\n          switch (column) {\r\n            case 'sapAmount':\r\n              condition = 'substr(mof_div_code,3,7) = \\'0000000\\'  '\r\n              break\r\n            case 'shapAmount':\r\n              condition = ' substr(mof_div_code,5,5) <> \\'00000\\' and substr(mof_div_code,7,3)=\\'000\\' '\r\n              break\r\n            case 'xapAmount':\r\n              condition = ' substr(mof_div_code,7,3) <> \\'000\\' '\r\n              break\r\n          }\r\n        } else if (this.$store.state.userInfo.province?.slice(0, 4) === '3502') {\r\n          switch (column) {\r\n            case 'sapAmount':\r\n              condition = ' substr(mof_div_code,5,5) = \\'00000\\' and mof_div_code not like \\'%35\\''\r\n              break\r\n            case 'shapAmount':\r\n              condition = ' substr(mof_div_code,5,5) = \\'00000\\' and mof_div_code  like \\'%35\\' '\r\n              break\r\n            case 'xapAmount':\r\n              condition = ' substr(mof_div_code,5,5) <> \\'00000\\' and substr(mof_div_code,7,3)=\\'000\\' '\r\n              break\r\n          }\r\n        } else {\r\n          switch (column) {\r\n            case 'sapAmount':\r\n              condition = 'substr(mof_div_code,3,7) = \\'0000000\\'  '\r\n              break\r\n            case 'shapAmount':\r\n              condition = ' substr(mof_div_code,3,7) <> \\'0000000\\' and substr(mof_div_code,5,5)=\\'00000\\' '\r\n              break\r\n            case 'xapAmount':\r\n              condition = ' substr(mof_div_code,5,5) <> \\'00000\\' and substr(mof_div_code,7,3)=\\'000\\' '\r\n              break\r\n          }\r\n        }\r\n        let isCz = ''\r\n        if (this.transJson(this.params5 || '')?.reportCode !== '' && this.transJson(this.params5 || '')?.reportCode.includes('cz')) {\r\n          isCz = '2'\r\n        } else {\r\n          isCz = '1'\r\n        }\r\n        let params = {\r\n          condition: condition,\r\n          reportCode: type,\r\n          isCz: isCz,\r\n          mofDivCode: recDivCode,\r\n          fiscalYear: this.searchDataList.fiscalYear,\r\n          proCodes: this.searchDataList.proCodes === '' ? [] : this.getTrees(this.searchDataList.proCodes)\r\n        }\r\n        this.detailType = type\r\n        this.detailQueryParam = params\r\n        this.detailVisible = true\r\n      // HttpModule.queryTableDatas(params).then((res) => {\r\n      //   this.tableLoading = false\r\n      //   if (res.code === '000000') {\r\n      //     this.detailData = res.data\r\n      //     this.detailVisible = true\r\n      //     this.detailType = type\r\n      //   } else {\r\n      //     this.$message.error(res.message)\r\n      //   }\r\n      // })\r\n      }\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      if (this.isSx) {\r\n        let key = obj.column.property\r\n        switch (key) {\r\n          case 'amountSnjxd':\r\n          case 'saaAmount':\r\n          case 'amountSjxd':\r\n          case 'shaaAmount':\r\n          case 'amountXjxd':\r\n          case 'xaaAmount':\r\n            this.handleDetail('zdzjxmmx_fzj_zyxd', obj.row.code, key)\r\n            this.detailTitle = '直达资金项目明细'\r\n            break\r\n          case 'amountZjxd':\r\n          case 'zaaAmount':\r\n            this.handleDetail('zdzjxmmx_fzj_zyxdx', obj.row.code, key)\r\n            this.detailTitle = '直达资金项目明细'\r\n            break\r\n          case 'pAmount':\r\n          case 'zzyapAmount':\r\n          case 'zaAmount':\r\n          case 'amountSnjpay':\r\n          case 'sapAmount':\r\n          case 'amountSjpay':\r\n          case 'shapAmount':\r\n          case 'amountXjpay':\r\n          case 'xapAmount':\r\n          case 'amountZjpay':\r\n          case 'zapAmount':\r\n            this.handleDetail('zdzjzcmx_fdq', obj.row.code, key)\r\n            this.detailTitle = '直达资金支出明细'\r\n            break\r\n          case 'amountZyxd1':\r\n            this.handleDetail('qszjzl', obj.row.code, key)\r\n            this.detailTitle = '直达资金项目明细'\r\n            break\r\n        }\r\n      } else {\r\n        if (!obj.rowIndex) return\r\n        let key = obj.column.property\r\n\r\n        // 无效的cellValue\r\n        const isInvalidCellValue = !(obj.row[obj.column.property] * 1)\r\n        if (isInvalidCellValue) return\r\n\r\n        switch (key) {\r\n          case 'sapAmount':\r\n          case 'shapAmount':\r\n          case 'xapAmount':\r\n            this.handleDetail('zdzjzcmx_fdq', obj.row.code, key)\r\n            this.detailTitle = '支出明细'\r\n        }\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh(isFlush = true) {\r\n      this.isFlush = true\r\n      if (this.isSx) {\r\n        this.queryTableDatas()\r\n      } else {\r\n        this.search(this.$refs.queryFrom.getFormData(), null, isFlush)\r\n      }\r\n      // this.queryTableDatasCount()\r\n    },\r\n    getTrees(val) {\r\n      let proCodes = []\r\n      if (val.trim() !== '') {\r\n        val.split(',').forEach((item) => {\r\n          proCodes.push(item.split('##')[0])\r\n        })\r\n      }\r\n      return proCodes\r\n    },\r\n    getPro() {\r\n      HttpModule.getProTreeData().then(res => {\r\n        if (res.code === '000000') {\r\n          console.log('data', res.data)\r\n          let treeResdata = this.getChildrenNewData1(res.data)\r\n          this.queryConfig[1].itemRender.options = treeResdata\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    getChildrenNewData1(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.name\r\n        if (item.children) {\r\n          that.getChildrenNewData1(item.children)\r\n        }\r\n      })\r\n      return datas\r\n    },\r\n    // 查询 table 数据\r\n    queryTableDatas(isFlush = false) {\r\n      if (this.isSx) {\r\n        const param = {\r\n          reportCode: 'zyhdfzjzc_fdqzd',\r\n          fiscalYear: this.searchDataList.fiscalYear ? this.searchDataList.fiscalYear : '',\r\n          endTime: this.condition.endTime ? this.condition.endTime[0] : '',\r\n          proCodes: this.searchDataList.proCodes === '' ? [] : this.getTrees(this.searchDataList.proCodes)\r\n        }\r\n        this.isFlush && (param.isFlush = true)\r\n        this.tableLoading = true\r\n        HttpModule.queryTableDatas(param).then((res) => {\r\n          if (res.code === '000000') {\r\n            this.tableData = res.data.data\r\n            this.tableLoading = false\r\n            this.reportTime = res.data.reportTime || ''\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.isFlush = true\r\n          this.tableLoading = false\r\n        })\r\n      } else {\r\n        const param = {\r\n          // isFlush,\r\n          // reportCode: 'zyhdfzjzc_fdqzd',\r\n          reportCode: this.transJson(this.params5 || '')?.reportCode,\r\n          fiscalYear: this.searchDataList.fiscalYear,\r\n          endTime: this.condition.endTime ? this.condition.endTime[0] : '',\r\n          proCodes: this.searchDataList.proCodes === '' ? [] : this.getTrees(this.searchDataList.proCodes)\r\n        }\r\n        this.isFlush && (param.isFlush = true)\r\n        this.tableLoading = true\r\n        HttpModule.queryTableDatas(param).then((res) => {\r\n          if (res.code === '000000') {\r\n            if (res.data) {\r\n              this.tableData = res.data.data\r\n              this.reportTime = res.data.reportTime || ''\r\n              this.caliberDeclareContent = res.data.description || ''\r\n            }\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        }).finally(() => {\r\n          this.isFlush = true\r\n          this.tableLoading = false\r\n        })\r\n      }\r\n    },\r\n    queryCaliberDeclareContent(val) {\r\n      const param = {\r\n        reportCode: 'zyhdfzjzc_fdqzd'\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.queryCaliberDeclareContent(param).then((res) => {\r\n        if (res.code === '000000') {\r\n          this.caliberDeclareContent = res.data || ''\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    initTableData(tableDataTest) {\r\n      let arr = JSON.parse(JSON.stringify(tableDataTest))\r\n      arr.map(v => {\r\n        if ((parseFloat(v.recDivCode) / 10000000).toString().length === 2) {\r\n          v.type = 1\r\n        } else if ((parseFloat(v.recDivCode) / 10000000).toString().length === 5) {\r\n          v.type = 2\r\n        } else if ((parseFloat(v.recDivCode) / 10000000).toString().length === 7) {\r\n          v.type = 3\r\n        }\r\n      })\r\n      this.obj = {}\r\n      arr.forEach(item => {\r\n        if (item.type === 1) {\r\n          this.obj[item.recDivCode.substring(0, 2)] = item\r\n          item.children = []\r\n          this.tableData.push(item)\r\n        } else if (item.type === 2) {\r\n          this.obj[item.recDivCode.substring(0, 5)] = item\r\n          item.children = []\r\n          this.tableData[0].children.push(item)\r\n        } else if (item.type === 3) {\r\n          this.obj[item.recDivCode.substring(0, 7)] = item\r\n        }\r\n      })\r\n      for (const key in this.obj) {\r\n        // const i = key.length - 2\r\n        // const pkey = key.substring(0, i)\r\n        for (var a = 0; a < this.tableData[0].children.length; a++) {\r\n          if (this.tableData[0].children[a] !== this.obj[key] && this.tableData[0].children[a].recDivCode.substring(0, 4) === this.obj[key].recDivCode.substring(0, 4) && this.tableData[0].children[a].type < this.obj[key].type) {\r\n            this.tableData[0].children[a].children.push(this.obj[key])\r\n          }\r\n        }\r\n      }\r\n      return this.tableData\r\n    },\r\n    getNewData() {\r\n      this.tableLoading = true\r\n      setTimeout(() => {\r\n        this.tableLoading = false\r\n        this.tableData = getFormData('basicInfo', 'tableData')\r\n        // this.initTableData(getFormData('basicInfo', 'tableData'))\r\n      }, 2000)\r\n      // this.initTableData(getFormData('basicInfo', 'tableData'))\r\n    },\r\n    cellDblclick(obj) {\r\n      // console.log('双击', obj)\r\n    },\r\n    onEditClosed(obj, bsTable, xGrid) {\r\n      bsTable.performTableDataCalculate(obj)\r\n    },\r\n    cellStyle({ row, rowIndex, column }) {\r\n      if (this.isSx) {\r\n        if (['amountSnjxd', 'saaAmount', 'amountSjxd', 'shaaAmount', 'amountXjxd', 'xaaAmount', 'amountZjxd', 'zaaAmount', 'amountSnjpay', 'sapAmount', 'amountSjpay', 'shapAmount', 'amountXjpay', 'xapAmount', 'amountZjpay', 'zapAmount', 'pAmount', 'zzyapAmount', 'zaAmount', 'amountZyxd1'].includes(column.property)) {\r\n          return {\r\n            color: '#4293F4',\r\n            textDecoration: 'underline'\r\n          }\r\n        }\r\n      } else {\r\n        if (!rowIndex) return\r\n        // 有效的cellValue\r\n        const validCellValue = (row[column.property] * 1)\r\n        if (validCellValue && ['sapAmount', 'shapAmount', 'xapAmount'].includes(column.property)) {\r\n          return {\r\n            color: '#4293F4',\r\n            textDecoration: 'underline'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    if (this.isSx) {\r\n      this.searchDataList.endTime = this.$XEUtils.toDateString(\r\n        this.$XEUtils.getWhatDay(new Date(), -1),\r\n        'yyyy-MM-dd'\r\n      )\r\n    }\r\n    this.params5 = this.$store.state.curNavModule.param5\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    this.menuName = this.$store.state.curNavModule.name\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.getPro()\r\n    this.queryTableDatas()\r\n    if (this.isSx) {\r\n      this.queryCaliberDeclareContent()\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.radio-right {\r\n  float: right;\r\n}\r\n.Titans-table ::v-deep .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n</style>\r\n"],"mappings":"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"}]}