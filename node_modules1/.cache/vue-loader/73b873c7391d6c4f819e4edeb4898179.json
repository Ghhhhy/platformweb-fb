{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\benefitPeopleConfirm\\benefitPeopleConfirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\benefitPeopleConfirm\\benefitPeopleConfirm.vue","mtime":1695716045308},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBwcm9jb25mLCBnZXREYXRlU3RyaW5nIH0gZnJvbSAnLi9iZW5lZml0UGVvcGxlQ29uZmlybScNCmltcG9ydCBJbXBvcnRNb2RlbCBmcm9tICcuLi8uLi8uLi8uLi9jb21wb25lbnRzL1RhYmxlL2ltcG9ydC9pbXBvcnQudnVlJw0KaW1wb3J0IHsgSW1wb3J0IH0gZnJvbSAnLi4vLi4vLi4vLi4vY29tcG9uZW50cy9UYWJsZS9pbXBvcnQvaW1wb3J0L2ltcG9ydC5qcycNCmltcG9ydCBIdHRwTW9kdWxlIGZyb20gJ0AvYXBpL2ZyYW1lL21haW4vZnVuZE1vbml0b3JpbmcvYmVuZWZpdFBlb3BsZUNvbmZpcm0uanMnDQppbXBvcnQgeyBFeHBvcnQgfSBmcm9tICcuLi8uLi8uLi8uLi9jb21wb25lbnRzL1RhYmxlL2V4cG9ydC9leHBvcnQvZXhwb3J0Jw0KaW1wb3J0IHsgcmVwYWlyRXhjZWxUaW1lc3RhbXAgfSBmcm9tICdAL3V0aWxzL2V4Y2VsJw0KLy8gaW1wb3J0IEFkZERpYWxvZyBmcm9tICcuL2NoaWxkcmVuL2FkZERpYWxvZycNCi8vIGltcG9ydCBIdHRwTW9kdWxlIGZyb20gJ0AvYXBpL2ZyYW1lL21haW4vTW9uaXRvcmluZy9XYXJuaW5nRGV0YWlsc0J5Q29tcGFydG1lbnQuanMnDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBJbXBvcnRNb2RlbA0KICAgIC8vIEFkZERpYWxvZw0KICB9LA0KICBjb21wdXRlZDogew0KICAgIHdoZXJlc3FsKCkgew0KICAgICAgcmV0dXJuIGBhbmQgbmFtZSBsaWtlICclJHt0aGlzLnRyZWVGaWx0ZXJUZXh0fSUnYA0KICAgIH0sDQogICAgdGFibGVDb2x1bW5zQ29uZmlnMSgpIHsNCiAgICAgIHJldHVybiBwcm9jb25mLlBvbGljaWVzVGFibGVDb2x1bW5zMSh0aGlzKQ0KICAgIH0NCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICBxdWVyeUNvbmZpZygpIHsNCiAgICAgIHRoaXMuZ2V0U2VhcmNoRGF0YUxpc3QoKQ0KICAgIH0sDQogICAgcXVlcnlDb25maWcxKCkgew0KICAgICAgdGhpcy5nZXRTZWFyY2hEYXRhTGlzdDEoKQ0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgc2hvd0NvbmZpcm1Nb2RhbDogZmFsc2UsDQogICAgICBjbGlja1Jvdzoge30sDQogICAgICBmb3JtTW9kZWxEYXRhOiB7DQogICAgICAgIGNhbmNlbERlc2NyaXB0aW9uOiAnJw0KICAgICAgfSwNCiAgICAgIC8vIOW3puS+p+agkei/h+a7pOWAvA0KICAgICAgdHJlZUZpbHRlclRleHQ6ICcnLA0KICAgICAgbWF0Y2hIb290OiB0cnVlLA0KICAgICAgaXNQcm9OYW1lOiBmYWxzZSwNCiAgICAgIGlzQW1vdW50OiBmYWxzZSwNCiAgICAgIGNvZGVMaXN0OiBbXSwNCiAgICAgIGltcG9ydE1vZGFsVmlzaWJsZTogZmFsc2UsIC8vIOWvvOWFpeW8ueahhg0KICAgICAgZmlsZUNvbmZpZzogew0KICAgICAgICBmaWxlTmFtZTogJycsDQogICAgICAgIG1heFNpemU6IDEwMjQgKiAxMDI0ICogMTANCiAgICAgIH0sIC8vIOWvvOWFpeaWh+S7tumFjee9rg0KICAgICAgcm93MToge30sDQogICAgICBwcm9Ub3RhbDogMCwNCiAgICAgIHRyZWVQYWdlU2l6ZTogMjAwLA0KICAgICAgb2Zmc2V0OiAwLA0KICAgICAgdHJlZUN1cnJlbnRQYWdlOiAxLA0KICAgICAgLy8gQnNRdWVyeSDmn6Xor6LmoI8NCiAgICAgIHF1ZXJ5Q29uZmlnOiBwcm9jb25mLmhpZ2hRdWVyeUNvbmZpZywNCiAgICAgIHF1ZXJ5Q29uZmlnMTogcHJvY29uZi5oaWdoUXVlcnlDb25maWcxLA0KICAgICAgc2VhcmNoRGF0YUxpc3Q6IHByb2NvbmYuaGlnaFF1ZXJ5RGF0YSwNCiAgICAgIHNlYXJjaERhdGFMaXN0MTogcHJvY29uZi5oaWdoUXVlcnlEYXRhMSwNCiAgICAgIHJhZGlvU2hvdzogdHJ1ZSwNCiAgICAgIGJyZWFrUnVsZVZpc2libGU6IGZhbHNlLA0KICAgICAgdHJlZURhdGE6IFt7DQogICAgICAgIGNoaWxkcmVuOiBbXSwNCiAgICAgICAgY29kZTogMCwNCiAgICAgICAgaWQ6IDAsDQogICAgICAgIGxhYmVsOiAnMC3lhajpg6jliIbnsbsnLA0KICAgICAgICBuYW1lOiAn5YWo6YOo5YiG57G7JywNCiAgICAgICAgcGFyZW50SWQ6IG51bGwsDQogICAgICAgIHBhcmVudFJ1bGVOYW1lOiBudWxsLA0KICAgICAgICBydWxlTGV2ZWw6IDAsDQogICAgICAgIHJ1bGVOYW1lOiAn5YWo6YOo5YiG57G7Jw0KICAgICAgfV0sDQogICAgICB0cmVlVHlwZUNvbmZpZzogew0KICAgICAgICBjdXJSYWRpbzogJ0FHRU5DWScNCiAgICAgIH0sDQogICAgICB0cmVlR2xvYmFsQ29uZmlnOiB7DQogICAgICAgIGlucHV0VmFsOiAnJw0KICAgICAgfSwNCiAgICAgIGZvcm1Nb2RlbFJ1bGU6IHsNCiAgICAgICAgcmVhc29uOiBbDQogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeWPlua2iOivtOaYjicsIHRyaWdnZXI6ICdibHVyJyB9DQogICAgICAgIF0NCiAgICAgIH0sDQogICAgICB0cmVlUXVlcnlwYXJhbXM6IHsgZWxlbWVudENvZGU6ICdhZG1kaXYnLCBwcm92aW5jZTogdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8ucHJvdmluY2UsIHllYXI6IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvLnllYXIsIHdoZXJlc3FsOiAnYW5kIHByb3ZpbmNlID0nICsgdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8ucHJvdmluY2UgfSwNCiAgICAgIC8vIHRyZWVTZXJ2ZXJVcmk6ICdwYXktY2xlYXItc2VydmljZS92Mi9sZWZ0dHJlZScsDQogICAgICB0cmVlU2VydmVyVXJpOiAnJywNCiAgICAgIHRyZWVBamF4VHlwZTogJ2dldCcsDQogICAgICBsZWZ0VHJlZVZpc2libGU6IHRydWUsDQogICAgICAvLyDlpLTpg6jlt6XlhbfmoI8gQnNUYWJQYW5lbCBjb25maWcNCiAgICAgIHRvb2xCYXJTdGF0dXNCdG5Db25maWc6IHsNCiAgICAgICAgYnV0dG9uczogcHJvY29uZi5zdGF0dXNCdXR0b25zLA0KICAgICAgICBjdXJCdXR0b246IHByb2NvbmYuY3VyU3RhdHVzQnV0dG9uLA0KICAgICAgICBidXR0b25zSW5mbzogcHJvY29uZi5idXR0b25zLA0KICAgICAgICBtZXRob2RzOiB7DQogICAgICAgICAgYnNUb29sYmFyQ2xpY2tFdmVudDogdGhpcy5ic1Rvb2xiYXJDbGlja0V2ZW50DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICBidXR0b25zSW5mbzogcHJvY29uZi5zdGF0dXNSaWdodFRvb2xCYXJCdXR0b25CeUJ1c0RlcHQsDQogICAgICB0YWJTdGF0dXNOdW1Db25maWc6IHsNCiAgICAgICAgJzEnOiAwLA0KICAgICAgICAnMic6IDAsDQogICAgICAgICczJzogMA0KICAgICAgfSwNCiAgICAgIGlzU2hvd1F1ZXJ5Q29uZGl0aW9uczogdHJ1ZSwNCiAgICAgIHRvb2xCYXJTdGF0dXNTZWxlY3Q6IHsNCiAgICAgICAgdHlwZTogJ2J1dHRvbicsDQogICAgICAgIGljb25OYW1lOiAnYmFzZS1hbGwucG5nJywNCiAgICAgICAgaWNvbk5hbWVBY3RpdmU6ICdiYXNlLWFsbC1hY3RpdmUucG5nJywNCiAgICAgICAgaWNvblVybDogJycsDQogICAgICAgIGxhYmVsOiAn5YWo6YOoJywNCiAgICAgICAgY29kZTogJzEnLA0KICAgICAgICBjdXJWYWx1ZTogJzEnDQogICAgICB9LA0KICAgICAgLy8gdGFibGUg55u45YWz6YWN572uDQogICAgICB0YWJsZUxvYWRpbmc6IGZhbHNlLA0KICAgICAgdGFibGVMb2FkaW5nMTogZmFsc2UsDQogICAgICB0YWJsZUxvYWRpbmcyOiBmYWxzZSwNCiAgICAgIHRhYmxlQ29sdW1uc0NvbmZpZzogcHJvY29uZi5Qb2xpY2llc1RhYmxlQ29sdW1ucywNCiAgICAgIHRhYmxlRGF0YTogW10sDQogICAgICB0YWJsZURhdGExOiBbXSwNCiAgICAgIHRhYmxlVG9vbGJhckNvbmZpZzogew0KICAgICAgICAvLyB0YWJsZeW3peWFt+agj+mFjee9rg0KICAgICAgICBkaXNhYmxlZE1vbmV5Q29udmVyc2lvbjogZmFsc2UsDQogICAgICAgIG1vbmV5Q29udmVyc2lvbjogZmFsc2UsIC8vIOaYr+WQpuaciemHkeminei9rOaNog0KICAgICAgICBpbXBvcnQ6IGZhbHNlLCAvLyDlr7zlhaUNCiAgICAgICAgZXhwb3J0OiB0cnVlLCAvLyDlr7zlh7oNCiAgICAgICAgcHJpbnQ6IGZhbHNlLCAvLyDmiZPljbANCiAgICAgICAgem9vbTogdHJ1ZSwgLy8g57yp5pS+DQogICAgICAgIGN1c3RvbTogdHJ1ZSwgLy8g6YCJ6YWN5bGV56S65YiXDQogICAgICAgIHNsb3RzOiB7DQogICAgICAgICAgdG9vbHM6ICd0b29sYmFyVG9vbHMnLA0KICAgICAgICAgIGJ1dHRvbnM6ICd0b29sYmFyU2xvdHMnDQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICB0YWJsZVRvb2xiYXJDb25maWcxOiB7DQogICAgICAgIC8vIHRhYmxl5bel5YW35qCP6YWN572uDQogICAgICAgIGRpc2FibGVkTW9uZXlDb252ZXJzaW9uOiBmYWxzZSwNCiAgICAgICAgbW9uZXlDb252ZXJzaW9uOiBmYWxzZSwgLy8g5piv5ZCm5pyJ6YeR6aKd6L2s5o2iDQogICAgICAgIGltcG9ydDogZmFsc2UsIC8vIOWvvOWFpQ0KICAgICAgICBleHBvcnQ6IHRydWUsIC8vIOWvvOWHug0KICAgICAgICBwcmludDogZmFsc2UsIC8vIOaJk+WNsA0KICAgICAgICB6b29tOiB0cnVlLCAvLyDnvKnmlL4NCiAgICAgICAgY3VzdG9tOiB0cnVlLCAvLyDpgInphY3lsZXnpLrliJcNCiAgICAgICAgc2xvdHM6IHsNCiAgICAgICAgICB0b29sczogJ3Rvb2xiYXJUb29scycsDQogICAgICAgICAgYnV0dG9uczogJ3Rvb2xiYXJTbG90cycNCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgIGxlZnROb2RlOiB7fSwNCiAgICAgIHJlZ3VsYXRpb25TdGF0dXM6ICcxJywNCiAgICAgIG1haW5QYWdlckNvbmZpZzogew0KICAgICAgICB0b3RhbDogMCwNCiAgICAgICAgY3VycmVudFBhZ2U6IDEsDQogICAgICAgIHBhZ2VTaXplOiA1MA0KICAgICAgfSwNCiAgICAgIG1haW5QYWdlckNvbmZpZzE6IHsNCiAgICAgICAgdG90YWw6IDAsDQogICAgICAgIGN1cnJlbnRQYWdlOiAxLA0KICAgICAgICBwYWdlU2l6ZTogNTANCiAgICAgIH0sDQogICAgICB0YWJsZUNvbmZpZzogew0KICAgICAgfSwNCiAgICAgIHRhYmxlQ29uZmlnMTogew0KICAgICAgfSwNCiAgICAgIHRhYmxlRm9vdGVyQ29uZmlnOiB7DQogICAgICAgIHNob3dGb290ZXI6IGZhbHNlDQogICAgICB9LA0KICAgICAgdGFibGVGb290ZXJDb25maWcxOiB7DQogICAgICAgIHNob3dGb290ZXI6IGZhbHNlDQogICAgICB9LA0KICAgICAgZmlzY2FsWWVhcjogJycsDQogICAgICBpc0hvb2s6ICcwJywNCiAgICAgIHByb0NvZGUxOiAnJywNCiAgICAgIHByb0NvZGU6ICcnLA0KICAgICAgcGF5Q2VydE5vOiAnJywNCiAgICAgIHByb05hbWU6ICcnLA0KICAgICAgcHJvTmFtZTE6ICcnLA0KICAgICAgYWdlbmN5TmFtZTogJycsDQogICAgICBjb3JCZ3REb2NOb05hbWU6ICcnLA0KICAgICAgdXNlRGVzOiAnJywNCiAgICAgIGR0b3M6IFtdLA0KICAgICAgYW1vdW50OiAnJywNCiAgICAgIG1vZmRpdk5hbWU6ICcnLA0KICAgICAgcGF5QWNjdE5hbWVTdHI6ICcnLA0KICAgICAgcGF5QWNjdE5vU3RyOiAnJywNCiAgICAgIHBheWVlQWNjdE5hbWVTdHI6ICcnLA0KICAgICAgcGF5ZWVBY2N0Tm9TdHI6ICcnLA0KICAgICAgcHJvTmFtZVN0cjogJycsDQogICAgICBwYXlUaW1lU3RyOiAnJywNCiAgICAgIC8vIOaTjeS9nOaXpeW/lw0KICAgICAgbG9nRGF0YTogW10sDQogICAgICBzaG93TG9nVmlldzogZmFsc2UsDQogICAgICAvLyDmlrDlop7lvLnnqpcNCiAgICAgIGRpYWxvZ1Zpc2libGU6IGZhbHNlLA0KICAgICAgZGlhbG9nVGl0bGU6ICfmlrDlop4nLA0KICAgICAgYWRkVGFibGVEYXRhOiBbXSwNCiAgICAgIC8vIOivt+axgiAmIOinkuiJsuadg+mZkOebuOWFs+mFjee9rg0KICAgICAgbWVudU5hbWU6ICfns7vnu5/nuqfnm5Hmjqfop4TliJknLA0KICAgICAgcm9sZUlkOiAnJywNCiAgICAgIHBhcmFtczU6ICcnLA0KICAgICAgbWVudUlkOiAnJywNCiAgICAgIHRva2VuaWQ6ICcnLA0KICAgICAgdXNlckluZm86IHt9LA0KICAgICAgcm9sZWd1aWQ6IHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZS5yb2xlZ3VpZCwNCiAgICAgIGFwcElkOiAncGF5X3ZvdWNoZXInLA0KICAgICAgaXNIYXZlWmVybzogJzAnLA0KICAgICAgLy8g5paH5Lu2DQogICAgICBzaG93QXR0YWNobWVudERpYWxvZzogZmFsc2UsDQogICAgICBiaWxsZ3VpZDogJycsDQogICAgICBjb25kaXRpb246IHt9LA0KICAgICAgaGFuZGxlVHlwZTogJycsDQogICAgICBpc0VuYWJsZTogJycsDQogICAgICByZWd1bGF0aW9uVHlwZTogJycsDQogICAgICB3YXJuaW5nTGV2ZWw6ICcnLA0KICAgICAgRGV0YWlsRGF0YToge30sDQogICAgICByZWd1bGF0aW9uY2xhc3M6ICcnLA0KICAgICAgZmlydWxlbmFtZTogJycsDQogICAgICBwYXlBbXQ6ICcnLA0KICAgICAgbW9mRGl2Q29kZTogdGhpcy4kc3RvcmUuc3RhdGUudXNlckluZm8ucHJvdmluY2UsDQogICAgICBsZWZ0VHJlZUNvbmZpZzogeyAvLyDlt6bkvqfljZXkvY3moJHphY3nva4NCiAgICAgICAgc2hvd0ZpbHRlcjogZmFsc2UsIC8vIOaYr+WQpuaYvuekuui/h+a7pA0KICAgICAgICBpc0luaXRMb2FkRGF0YTogZmFsc2UsDQogICAgICAgIHNjcm9sbExvYWQ6IGZhbHNlLCAvLyDmmK/lkKblvIDlkK/mu5rliqjliqDovb0NCiAgICAgICAgaXNsZWFmOiAwLCAvLyDmjIflrproioLngrnmmK/lkKbkuLrlj7blrZDoioLngrnvvIzku4XlnKjmjIflrprkuoYgbGF6eSDlsZ7mgKfnmoTmg4XlhrXkuIvnlJ/mlYgNCiAgICAgICAgbGV2ZWxubzogLTEsIC8vIOWPr+mAieWxgue6pw0KICAgICAgICB2YWx1ZUtleXM6IFsnY29kZScsICduYW1lJywgJ2lkJ10sDQogICAgICAgIGZvcm1hdDogJ3tjb2RlfS17bmFtZX0nLA0KICAgICAgICBwbGFjZWhvbGRlcjogJ+ivt+mAieaLqScsDQogICAgICAgIG11bHRpcGxlVmFsdWVUeXBlOiAnU3RyaW5nJywgLy8g5aSa6YCJ5YC857G75Z6LIFN0cmluZ1vpgJflj7fliIblibJd77yMQXJyYXkgLy/lup/lvIMNCiAgICAgICAgdHJlZVByb3BzOiB7DQogICAgICAgICAgLy8g5qCR6YWN572u6YCJ6aG5DQogICAgICAgICAgbGFiZWxGb3JtYXQ6ICd7Y29kZX0te25hbWV9JywgLy8ge2NvZGV9LXtuYW1lfQ0KICAgICAgICAgIG5vZGVLZXk6ICdjb2RlJywgLy8g5qCR55qE5Li76ZSuDQogICAgICAgICAgbGFiZWw6ICduYW1lJywgLy8g5qCR55qE5pi+56S6bGFsZWzlrZfmrrUNCiAgICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJyAvLyDmoJHnmoTltYzlpZflrZfmrrUNCiAgICAgICAgfSwNCiAgICAgICAgbXVsdGlwbGU6IGZhbHNlLCAvLyDmmK/lkKblpJrpgIksDQogICAgICAgIGlzTGF6ZUxvYWQ6IGZhbHNlLCAvLyDmmK/lkKbosIPnlKjmjqXlj6Pov5znqIvmh5LliqDovb3mlbDmja4NCiAgICAgICAgcmVhZG9ubHk6IHRydWUsDQogICAgICAgIGNsZWFyYWJsZTogdHJ1ZSwNCiAgICAgICAgdGFiU2VsZWN0OiAnMCcNCiAgICAgIH0sDQogICAgICBpbXBvcnREYXRhOiBbXSwgLy8g5a+85YWl5pWw5o2uDQogICAgICB0cmVlTG9hZGluZ1N0YXRlOiBmYWxzZQ0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNsb3NlTW9kYWwoKSB7DQogICAgICB0aGlzLnNob3dDb25maXJtTW9kYWwgPSBmYWxzZQ0KICAgICAgdGhpcy5mb3JtTW9kZWxEYXRhLmNhbmNlbERlc2NyaXB0aW9uID0gJycNCiAgICAgIHRoaXMuJHJlZnMuc2hvd0NvbmZpckZvcm0uY2xlYXJWYWxpZGF0ZSgpDQogICAgfSwNCiAgICBvbkltcG9ydENsaWNrKCkgew0KICAgICAgLy8g5a+85YWl5o+Q5LqkDQogICAgICBpZiAoIXRoaXMuaW1wb3J0RGF0YS5sZW5ndGgpIHsNCiAgICAgICAgdGhpcy4kWE1vZGFsLm1lc3NhZ2UoeyBzdGF0dXM6ICdlcnJvcicsIG1lc3NhZ2U6ICfml6DmlbDmja7lr7zlhaXor7fph43mlrDlr7zlhaXmlbDmja7vvIEnIH0pDQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLmltcG9ydE1vZGFsVmlzaWJsZSA9IGZhbHNlDQogICAgICAgIGlmICh0eXBlb2YgKHRoaXMuaW1wb3J0Q29uZmlnLmltcG9ydFN1Y2Nlc3NDYWxsYmFjaykgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgICB0aGlzLmltcG9ydENvbmZpZy5pbXBvcnRTdWNjZXNzQ2FsbGJhY2sodGhpcy5pbXBvcnREYXRhKQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHRoaXMuJGVtaXQoJ2ltcG9ydFN1Y2Nlc3NDYWxsYmFjaycsIHRoaXMuaW1wb3J0RGF0YSkNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0sDQogICAgYXN5bmMgb25JbXBvcnRGaWxlQ2xpY2soKSB7DQogICAgICAvLyDlr7zlhaXmlofku7YNCiAgICAgIHRoaXMuJEltcG9ydCA9IG5ldyBJbXBvcnQoKQ0KICAgICAgYXdhaXQgdGhpcy4kSW1wb3J0LmltcG9ydEV4Y2VsKHsNCiAgICAgIH0sIChyZXN1bHQsIGZpbGVuYW1lKSA9PiB7DQogICAgICAgIC8vIHRoaXMudGFibGVEYXRhSW4gPSByZXN1bHQNCiAgICAgICAgdGhpcy5pbXBvcnREYXRhID0gcmVzdWx0DQogICAgICAgIHRoaXMuZmlsZUNvbmZpZy5maWxlTmFtZSA9IGZpbGVuYW1lDQogICAgICB9KQ0KICAgIH0sDQogICAgb25Eb3dubG9hZFRlbXBsYXRlQ2xpY2sob2JqKSB7DQogICAgICAvLyDkuIvovb3mqKHniYgNCiAgICAgIGlmICh0eXBlb2YgKHRoaXMuaW1wb3J0Q29uZmlnLmRvd25sb2FkVGVtcGxhdGVDYWxsYmFjaykgPT09ICdmdW5jdGlvbicpIHsNCiAgICAgICAgdGhpcy5pbXBvcnRDb25maWcuZG93bmxvYWRUZW1wbGF0ZUNhbGxiYWNrKHRoaXMuaW1wb3J0RGF0YSkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuaW1wb3J0RGF0YSA9IFtdDQogICAgICAgIGNvbnN0IGNvbHVtbnMgPSB0aGlzLnRhYmxlQ29sdW1uc0NvbmZpZw0KICAgICAgICBjb25zdCBzZWxlY3Rpb24gPSB0aGlzLnNlbGVjdGlvbg0KICAgICAgICBsZXQgZGVmYXVsdENvbmZpZyA9IHsNCiAgICAgICAgICBpc0V4cG9ydFRyZWU6ICEhc2VsZi50cmVlQ29uZmlnSW4sDQogICAgICAgICAgc2F2ZVR5cGU6ICcueGxzeCcsDQogICAgICAgICAgZmlsZU5hbWU6ICdpbXBvcnRUZW1wcGxhdGUnLCAvLyDmlofku7blkI0NCiAgICAgICAgICBkYXRhVHlwZTogJ2Z1bGxEYXRhJywNCiAgICAgICAgICBpc0V4cG9ydE9ubHlTb3VyY2VGaWVsZDogdHJ1ZSwgLy8g5piv5ZCm5Y+q5a+85Ye65pWw5o2u5rqQ6KGo5aS05a2X5q6177yMDQogICAgICAgICAgaXNFeHBvcnRPbmx5Vmlld1RpdGxlOiBmYWxzZSwgLy8g5piv5ZCm5Y+q5a+85Ye65pWw5o2u6KGo5aS05ZCN56ew77yMDQogICAgICAgICAgaXNFeHBvcnRIZWFkOiB0cnVlLCAvLyDmmK/lkKblr7zlh7rooajlpLQNCiAgICAgICAgICBleHBvcnRWaWV3VGl0bGVUeXBlOiAnbmVzdFRpdGxlJywNCiAgICAgICAgICBpc0V4cG9ydEZvb3RlcjogZmFsc2UsIC8vIOaYr+WQpuWvvOWHuuihqOWwvumDqA0KICAgICAgICAgIGlzRXhwb3J0T3JpZ2luYWxEYXRhOiB0cnVlLCAvLyDmmK/lkKblr7zlh7rmupDmlbDmja4NCiAgICAgICAgICBpc0V4cG9ydERhdGE6IHRydWUsIC8vIOaYr+WQpuWvvOWHuuaVsOaNrg0KICAgICAgICAgIGNvbHVtbnM6IGNvbHVtbnMsIC8vIOihqOWktOmFjee9rg0KICAgICAgICAgIGRhdGFzOiBbXSwgLy8g5rqQ5pWw5o2uLA0KICAgICAgICAgIHNlbGVjdGlvbjogc2VsZWN0aW9uLCAvLyDpgInkuK3mlbDmja4NCiAgICAgICAgICBpbmRleDogdHJ1ZSwgLy8g5piv5ZCm5re75Yqg5bqP5Y+3LA0KICAgICAgICAgIGlnbm9yZUNvbHNUeXBlczogWw0KICAgICAgICAgICAgJ2RyYWdTb3J0JywNCiAgICAgICAgICAgICdzZXEnLA0KICAgICAgICAgICAgJ2NoZWNrYm94JywNCiAgICAgICAgICAgICdyYWRpbycsDQogICAgICAgICAgICAnb3B0aW9uUm93JywNCiAgICAgICAgICAgICdleHBhbmQnLA0KICAgICAgICAgICAgJ2F0dGFjaCcsDQogICAgICAgICAgICAnYWNoJywNCiAgICAgICAgICAgICdsaXN0JywNCiAgICAgICAgICAgICdhdHRhY2hsaXN0Jw0KICAgICAgICAgIF0gLy8g5b+955Wl5a+85Ye655qE5YiX57G75Z6LDQogICAgICAgIH0NCiAgICAgICAgdGhpcy4kRXhwb3J0LmV4cG9ydEV4Y2VsKG9iaiA/IE9iamVjdC5hc3NpZ24oZGVmYXVsdENvbmZpZywgb2JqKSA6IG9iaiwgdGhpcykNCiAgICAgIH0NCiAgICB9LA0KICAgIGRvd25Mb2FkSW1wb3J0VGVtcGxhdGVzKCkgew0KICAgICAgLy8g5LiL6L295a+85YWl5qih54mIDQogICAgICBjb25zdCB0YWJsZUNvbHVtbnNDb25maWcgPSB0aGlzLnRhYmxlQ29sdW1uc0NvbmZpZw0KICAgICAgLy8gY29uc3QgdW5pdExhYmVsID0gdGhpcy50b29sYmFyQ29uZmlnSW5Db3B5Lm1vbmV5VW5pdE9wdGlvbnM/LmZpbmQoaXRlbSA9PiBpdGVtLnZhbHVlID09PSB0aGlzLm1vbmV5VW5pdCk/LmxhYmVsDQogICAgICB0aGlzLiRFeHBvcnQgPSBuZXcgRXhwb3J0KHsgdW5pdDogJ+WFgycgfSkNCiAgICAgIHRoaXMuJEV4cG9ydC5leHBvcnRFeGNlbCh7DQogICAgICAgIHNhdmVUeXBlOiAnLnhsc3gnLA0KICAgICAgICBmaWxlTmFtZTogJ+WvvOWFpeaooeeJiCcsIC8vIOaWh+S7tuWQjQ0KICAgICAgICBkYXRhVHlwZTogJ2Z1bGxEYXRhJywNCiAgICAgICAgaXNFeHBvcnRPbmx5Vmlld1RpdGxlOiB0cnVlLCAvLyDmmK/lkKblj6rlr7zlh7rmlbDmja7mupDooajlpLTlrZfmrrXvvIwNCiAgICAgICAgY29sdW1uczogdGFibGVDb2x1bW5zQ29uZmlnLCAvLyDooajlpLTphY3nva4NCiAgICAgICAgaW5kZXg6IGZhbHNlIC8vIOaYr+WQpua3u+WKoOW6j+WPtywNCiAgICAgIH0sIHRoaXMpDQogICAgfSwNCiAgICB0cmlnZ2VySW1wb3J0T3B0aW9uKGNvbmZpZyA9IHt9KSB7DQogICAgICAvLyDop6blj5Hlr7zlhaUNCiAgICAgIHRoaXMuaW1wb3J0RGF0YSA9IFtdDQogICAgICB0aGlzLmltcG9ydENvbmZpZyA9IGNvbmZpZw0KICAgICAgdGhpcy5maWxlQ29uZmlnLmZpbGVOYW1lID0gJycNCiAgICAgIHRoaXMuaW1wb3J0TW9kYWxWaXNpYmxlID0gdHJ1ZQ0KICAgIH0sDQogICAgYnNUb29sYmFyQ2xpY2tFdmVudChvYmosICR0aGlzKSB7DQogICAgICBpZiAoIW9iai50eXBlKSB7DQogICAgICAgIHRoaXMub3BlcmF0aW9uVG9vbGJhckJ1dHRvbkNsaWNrRXZlbnQob2JqKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIHRoaXMudG9vbEJhclN0YXR1c1NlbGVjdCA9IG9iag0KICAgICAgc3dpdGNoIChvYmouY29kZSkgew0KICAgICAgICBjYXNlICcxJzoNCiAgICAgICAgICB0aGlzLmlzSG9vayA9ICcwJw0KICAgICAgICAgIHRoaXMubWF0Y2hIb290ID0gdHJ1ZQ0KICAgICAgICAgIHRoaXMucHJvQ29kZSA9ICcnDQogICAgICAgICAgdGhpcy5wcm9OYW1lID0gJycNCiAgICAgICAgICB0aGlzLnBheUNlcnRObyA9ICcnDQogICAgICAgICAgdGhpcy5hbW91bnQgPSAnJw0KICAgICAgICAgIHRoaXMucGF5QW10ID0gJycNCiAgICAgICAgICB0aGlzLm1vZmRpdk5hbWUgPSAnJw0KICAgICAgICAgIHRoaXMuYWdlbmN5TmFtZSA9ICcnDQogICAgICAgICAgdGhpcy5jb3JCZ3REb2NOb05hbWUgPSAnJw0KICAgICAgICAgIHRoaXMudXNlRGVzID0gJycNCiAgICAgICAgICB0aGlzLmR0b3MgPSBbXQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIGNhc2UgJzInOg0KICAgICAgICAgIHRoaXMuaXNIb29rID0gJzEnDQogICAgICAgICAgdGhpcy5wcm9Db2RlID0gJycNCiAgICAgICAgICB0aGlzLnByb05hbWUgPSAnJw0KICAgICAgICAgIHRoaXMucGF5Q2VydE5vID0gJycNCiAgICAgICAgICB0aGlzLmFtb3VudCA9ICcnDQogICAgICAgICAgdGhpcy5wYXlBbXQgPSAnJw0KICAgICAgICAgIHRoaXMubW9mZGl2TmFtZSA9ICcnDQogICAgICAgICAgdGhpcy5hZ2VuY3lOYW1lID0gJycNCiAgICAgICAgICB0aGlzLmNvckJndERvY05vTmFtZSA9ICcnDQogICAgICAgICAgdGhpcy51c2VEZXMgPSAnJw0KICAgICAgICAgIHRoaXMuZHRvcyA9IFtdDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgY2FzZSAnMyc6DQogICAgICAgICAgdGhpcy5pc0hvb2sgPSAnMicNCiAgICAgICAgICB0aGlzLnByb0NvZGUgPSAnJw0KICAgICAgICAgIHRoaXMucHJvTmFtZSA9ICcnDQogICAgICAgICAgdGhpcy5wYXlDZXJ0Tm8gPSAnJw0KICAgICAgICAgIHRoaXMuYW1vdW50ID0gJycNCiAgICAgICAgICB0aGlzLnBheUFtdCA9ICcnDQogICAgICAgICAgdGhpcy5tb2ZkaXZOYW1lID0gJycNCiAgICAgICAgICB0aGlzLmFnZW5jeU5hbWUgPSAnJw0KICAgICAgICAgIHRoaXMuY29yQmd0RG9jTm9OYW1lID0gJycNCiAgICAgICAgICB0aGlzLnVzZURlcyA9ICcnDQogICAgICAgICAgdGhpcy5kdG9zID0gW10NCiAgICAgICAgICBicmVhaw0KICAgICAgfQ0KICAgICAgdGhpcy5jb25kaXRpb24gPSB7fQ0KICAgICAgdGhpcy5tYWluUGFnZXJDb25maWcuY3VycmVudFBhZ2UgPSAxDQogICAgICB0aGlzLm1haW5QYWdlckNvbmZpZzEuY3VycmVudFBhZ2UgPSAxDQogICAgICB0aGlzLnJlZnJlc2gxKCkNCiAgICAgIC8vIHRoaXMuJHJlZnMubWFpblRhYmxlUmVmLiRyZWZzLnhHcmlkLmNsZWFyU2Nyb2xsKCkNCiAgICB9LA0KICAgIHNlYXJjaDEob2JqKSB7DQogICAgICB0aGlzLnBheUNlcnRObyA9IG9iai5wYXlDZXJ0Tm8NCiAgICAgIHRoaXMucHJvTmFtZSA9IG9iai5wcm9OYW1lDQogICAgICB0aGlzLmFnZW5jeU5hbWUgPSBvYmouYWdlbmN5TmFtZQ0KICAgICAgdGhpcy5jb3JCZ3REb2NOb05hbWUgPSBvYmouY29yQmd0RG9jTm9OYW1lDQogICAgICB0aGlzLnVzZURlcyA9IG9iai51c2VEZXMNCiAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzMSgpDQogICAgICAvLyB0aGlzLnF1ZXJ5VGFibGVEYXRhc0NvdW50KCkNCiAgICB9LA0KICAgIC8vIOWIneWni+WMlumrmOe6p+afpeivomRhdGENCiAgICBnZXRTZWFyY2hEYXRhTGlzdCgpIHsNCiAgICAgIC8vIOS4i+aLieagkQ0KICAgICAgbGV0IHNlYXJjaERhdGFPYmogPSB7fQ0KICAgICAgdGhpcy5xdWVyeUNvbmZpZy5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICBpZiAoaXRlbS5pdGVtUmVuZGVyLm5hbWUgPT09ICckZm9ybVRyZWVJbnB1dCcgfHwgaXRlbS5pdGVtUmVuZGVyLm5hbWUgPT09ICckdnhlVHJlZScpIHsNCiAgICAgICAgICBpZiAoaXRlbS5maWVsZCkgew0KICAgICAgICAgICAgc2VhcmNoRGF0YU9ialtpdGVtLmZpZWxkICsgJ2NvZGUnXSA9ICcnDQogICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGlmIChpdGVtLmZpZWxkKSB7DQogICAgICAgICAgICBzZWFyY2hEYXRhT2JqW2l0ZW0uZmllbGRdID0gJycNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0pDQogICAgICB0aGlzLnNlYXJjaERhdGFMaXN0ID0gc2VhcmNoRGF0YU9iag0KICAgIH0sDQogICAgLy8g5Yid5aeL5YyW6auY57qn5p+l6K+iZGF0YQ0KICAgIGdldFNlYXJjaERhdGFMaXN0MSgpIHsNCiAgICAgIC8vIOS4i+aLieagkQ0KICAgICAgbGV0IHNlYXJjaERhdGFPYmogPSB7fQ0KICAgICAgdGhpcy5xdWVyeUNvbmZpZy5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICBpZiAoaXRlbS5pdGVtUmVuZGVyLm5hbWUgPT09ICckZm9ybVRyZWVJbnB1dCcgfHwgaXRlbS5pdGVtUmVuZGVyLm5hbWUgPT09ICckdnhlVHJlZScpIHsNCiAgICAgICAgICBpZiAoaXRlbS5maWVsZCkgew0KICAgICAgICAgICAgc2VhcmNoRGF0YU9ialtpdGVtLmZpZWxkICsgJ2NvZGUnXSA9ICcnDQogICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGlmIChpdGVtLmZpZWxkKSB7DQogICAgICAgICAgICBzZWFyY2hEYXRhT2JqW2l0ZW0uZmllbGRdID0gJycNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0pDQogICAgICB0aGlzLnNlYXJjaERhdGFMaXN0MSA9IHNlYXJjaERhdGFPYmoNCiAgICB9LA0KICAgIC8vIOWIneWni+WMlumrmOe6p+afpeivouWPguaVsGNvbmRpdGlvbg0KICAgIGdldENvbmRpdGlvbkxpc3QoKSB7DQogICAgICBsZXQgY29uZGl0aW9uID0ge30NCiAgICAgIHRoaXMucXVlcnlDb25maWcuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgaWYgKGl0ZW0uaXRlbVJlbmRlci5uYW1lID09PSAnJGZvcm1UcmVlSW5wdXQnIHx8IGl0ZW0uaXRlbVJlbmRlci5uYW1lID09PSAnJHZ4ZVRyZWUnKSB7DQogICAgICAgICAgaWYgKGl0ZW0uZmllbGQpIHsNCiAgICAgICAgICAgIGlmIChpdGVtLmZpZWxkID09PSAnY29yX2JndF9kb2Nfbm9fJykgew0KICAgICAgICAgICAgICBjb25kaXRpb25baXRlbS5maWVsZCArICduYW1lJ10gPSBbXQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgY29uZGl0aW9uW2l0ZW0uZmllbGQgKyAnY29kZSddID0gW10NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgaWYgKGl0ZW0uZmllbGQpIHsNCiAgICAgICAgICAgIGNvbmRpdGlvbltpdGVtLmZpZWxkXSA9IFtdDQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgcmV0dXJuIGNvbmRpdGlvbg0KICAgIH0sDQogICAgLy8g5YiH5o2i54q25oCB5qCPDQogICAgb25TdGF0dXNUYWJDbGljayhvYmopIHsNCiAgICAgIGlmICghb2JqLnR5cGUpIHsNCiAgICAgICAgdGhpcy5vcGVyYXRpb25Ub29sYmFyQnV0dG9uQ2xpY2tFdmVudChvYmopDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgdGhpcy50b29sQmFyU3RhdHVzU2VsZWN0ID0gb2JqDQogICAgICBzd2l0Y2ggKG9iai5jb2RlKSB7DQogICAgICAgIGNhc2UgJzEnOg0KICAgICAgICAgIHRoaXMuaXNIb29rID0gJzAnDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgY2FzZSAnMic6DQogICAgICAgICAgdGhpcy5pc0hvb2sgPSAnMScNCiAgICAgICAgICBicmVhaw0KICAgICAgfQ0KICAgICAgLy8gdGhpcy5xdWVyeVRhYmxlRGF0YXMxKCkNCiAgICB9LA0KICAgIGNoZWNrYm94Q2hhbmdlKGNoZWNrZWQsIHJvdykgew0KICAgICAgc3dpdGNoICh0aGlzLnRvb2xCYXJTdGF0dXNTZWxlY3QuY29kZSkgew0KICAgICAgICBjYXNlICcxJzoNCiAgICAgICAgICBicmVhaw0KICAgICAgICBjYXNlICcyJzoNCiAgICAgICAgICB0aGlzLmR0b3MubGVuZ3RoID0gY2hlY2tlZC5zZWxlY3Rpb24ubGVuZ3RoDQogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmR0b3MubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIHRoaXMuJHNldCh0aGlzLmR0b3MsIGksIGNoZWNrZWQuc2VsZWN0aW9uW2ldLnBheUNlcnRJZCkNCiAgICAgICAgICB9DQogICAgICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMxKCkNCiAgICAgICAgICBicmVhaw0KICAgICAgfQ0KICAgIH0sDQogICAgLy8gY2hlY2tib3hDaGFuZ2UxKGNoZWNrZWQsIHJvdykgew0KICAgIC8vICAgc3dpdGNoICh0aGlzLnRvb2xCYXJTdGF0dXNTZWxlY3QuY29kZSkgew0KICAgIC8vICAgICBjYXNlICcxJzoNCiAgICAvLyAgICAgICBpZiAodGhpcy5pc1Byb05hbWUgJiYgdGhpcy5pc0Ftb3VudCkgew0KICAgIC8vICAgICAgICAgdGhpcy5wcm9OYW1lID0gY2hlY2tlZC5zZWxlY3Rpb25bMF0ucHJvTmFtZQ0KICAgIC8vICAgICAgICAgdGhpcy5hbW91bnQgPSBjaGVja2VkLnNlbGVjdGlvblswXS5hbW91bnQNCiAgICAvLyAgICAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzKCkNCiAgICAvLyAgICAgICAgIGJyZWFrDQogICAgLy8gICAgICAgfQ0KICAgIC8vICAgICAgIGlmICh0aGlzLmlzUHJvTmFtZSkgew0KICAgIC8vICAgICAgICAgdGhpcy5wcm9OYW1lID0gY2hlY2tlZC5zZWxlY3Rpb25bMF0ucHJvTmFtZQ0KICAgIC8vICAgICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQ0KICAgIC8vICAgICAgICAgYnJlYWsNCiAgICAvLyAgICAgICB9DQogICAgLy8gICAgICAgaWYgKHRoaXMuaXNBbW91bnQpIHsNCiAgICAvLyAgICAgICAgIHRoaXMuYW1vdW50ID0gY2hlY2tlZC5zZWxlY3Rpb25bMF0uYW1vdW50DQogICAgLy8gICAgICAgICB0aGlzLnF1ZXJ5VGFibGVEYXRhcygpDQogICAgLy8gICAgICAgICBicmVhaw0KICAgIC8vICAgICAgIH0NCiAgICAvLyAgICAgICBicmVhaw0KICAgIC8vICAgICBjYXNlICcyJzoNCiAgICAvLyAgICAgICB0aGlzLmR0b3MubGVuZ3RoID0gY2hlY2tlZC5zZWxlY3Rpb24ubGVuZ3RoDQogICAgLy8gICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmR0b3MubGVuZ3RoOyBpKyspIHsNCiAgICAvLyAgICAgICAgIHRoaXMuJHNldCh0aGlzLmR0b3MsIGksIGNoZWNrZWQuc2VsZWN0aW9uW2ldLnBheUNlcnRJZCkNCiAgICAvLyAgICAgICB9DQogICAgLy8gICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQ0KICAgIC8vICAgICAgIGJyZWFrDQogICAgLy8gICB9DQogICAgLy8gfSwNCiAgICAvLyDliIfmjaLmk43kvZzmjInpkq4NCiAgICBvcGVyYXRpb25Ub29sYmFyQnV0dG9uQ2xpY2tFdmVudChvYmosIGNvbnRleHQsIGUpIHsNCiAgICAgIGxldCBzZWxmID0gdGhpcw0KICAgICAgbGV0IGRhdGFzMiA9IHRoaXMuJHJlZnMubWFpblRhYmxlUmVmMS5nZXRTZWxlY3Rpb25EYXRhKCkNCiAgICAgIHN3aXRjaCAob2JqLmNvZGUpIHsNCiAgICAgICAgLy8g5oyC5o6lDQogICAgICAgIGNhc2UgJ2hvb2tfc2V0JzoNCiAgICAgICAgICBpZiAoZGF0YXMyLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCfor7fpgInmi6nmlbDmja4nKQ0KICAgICAgICAgICAgcmV0dXJuDQogICAgICAgICAgfQ0KICAgICAgICAgIHRoaXMuaG9vayhkYXRhczIpDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgLy8g5omL5Yqo6K+75Y+WDQogICAgICAgIGNhc2UgJ3Blb19yZWFkJzoNCiAgICAgICAgICB0aGlzLnJlYWQoKQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIC8vIOWPlua2iOaMguaOpQ0KICAgICAgICBjYXNlICdob29rX25vdCc6DQogICAgICAgICAgaWYgKGRhdGFzMi5sZW5ndGggPT09IDApIHsNCiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+36YCJ5oup5pWw5o2uJykNCiAgICAgICAgICAgIHJldHVybg0KICAgICAgICAgIH0NCiAgICAgICAgICB0aGlzLnNob3dDb25maXJtTW9kYWwgPSB0cnVlDQogICAgICAgICAgdGhpcy5jbGlja1JvdyA9IGRhdGFzMg0KICAgICAgICAgIC8vIHRoaXMubm90SG9vayhkYXRhczIpDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgLy8g5a+85YWlDQogICAgICAgIGNhc2UgJ2ltcG9ydCc6DQogICAgICAgICAgdGhpcy50cmlnZ2VySW1wb3J0T3B0aW9uKA0KICAgICAgICAgICAgew0KICAgICAgICAgICAgICBkb3dubG9hZFRlbXBsYXRlQ2FsbGJhY2soQ2IpIHsNCiAgICAgICAgICAgICAgICBzZWxmLmRvd25Mb2FkSW1wb3J0VGVtcGxhdGVzKCkNCiAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgaW1wb3J0U3VjY2Vzc0NhbGxiYWNrKHJlcykgew0KICAgICAgICAgICAgICAgIHNlbGYuJHJlZnMubWFpblRhYmxlUmVmLmRlYUltcG9ydFZpZXdEYXRhKA0KICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBjb25sdW1zOiBwcm9jb25mLlBvbGljaWVzVGFibGVDb2x1bW5zLA0KICAgICAgICAgICAgICAgICAgICB2aWV3RGF0YTogcmVzDQogICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgKQ0KICAgICAgICAgICAgICAgIC8vIOWwhuWvvOWFpeeahOaUr+S7mOaXtumXtOagvOW8j+WMlg0KICAgICAgICAgICAgICAgIHJlcz8uZm9yRWFjaChyb3cgPT4gew0KICAgICAgICAgICAgICAgICAgY29uc3QgdGltZXN0YW1wID0gcmVwYWlyRXhjZWxUaW1lc3RhbXAocm93LnhwYXlEYXRlKQ0KICAgICAgICAgICAgICAgICAgcm93LnhwYXlEYXRlID0gdGltZXN0YW1wID8gZ2V0RGF0ZVN0cmluZyh0aW1lc3RhbXApIDogcm93LnhwYXlEYXRlDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICBzZWxmLmltcG9ydFN1Y2Nlc3NDYWxsYmFjayhyZXMpDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICApDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICBicmVhaw0KICAgICAgfQ0KICAgIH0sDQogICAgaW1wb3J0U3VjY2Vzc0NhbGxiYWNrKHJlcykgew0KICAgICAgY29uc29sZS5sb2coJ3JlczonLCByZXMpDQogICAgICBIdHRwTW9kdWxlLmltcG9ydEJlbmVmaXQocmVzKS50aGVuKHJlcyA9PiB7DQogICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAwMDAwMCcpIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WvvOWFpeaIkOWKnycpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMucmVzdWx0KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgICAgdGhpcy5yZWZyZXNoKCkNCiAgICB9LA0KICAgIGhvb2soZGF0YXMyKSB7DQogICAgICBjb25zdCBwYXJhbSA9IHsNCiAgICAgICAgcGF5RGV0YWlsSWRzOiBkYXRhczIubWFwKGl0ZW0gPT4gew0KICAgICAgICAgIGxldCBpdGVtQ29weSA9IE9iamVjdC5hc3NpZ24oe30sIGl0ZW0sIHsgeFBheURhdGU6IGl0ZW0ueHBheURhdGUsIGlzSG9vazogdGhpcy5pc0hvb2sgfSkNCiAgICAgICAgICBkZWxldGUgaXRlbUNvcHkueHBheURhdGUNCiAgICAgICAgICByZXR1cm4gaXRlbUNvcHkNCiAgICAgICAgfSkNCiAgICAgIH0NCiAgICAgIEh0dHBNb2R1bGUuY29uZmlybShwYXJhbSkudGhlbihyZXMgPT4gew0KICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcwMDAwMDAnKSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfnoa7orqTmiJDlip8nKQ0KICAgICAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzMSgpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMucmVzdWx0KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgYXN5bmMgbm90SG9vayhkYXRhczIpIHsNCiAgICAgIGNvbnN0IHBhcmFtID0gew0KICAgICAgICBwYXlEZXRhaWxJZHM6IGRhdGFzMi5tYXAoaXRlbSA9PiB7DQogICAgICAgICAgbGV0IGl0ZW1Db3B5ID0gT2JqZWN0LmFzc2lnbih7fSwgaXRlbSwgeyB4UGF5RGF0ZTogaXRlbS54cGF5RGF0ZSwgY2FuY2VsRGVzY3JpcHRpb246IHRoaXMuZm9ybU1vZGVsRGF0YS5jYW5jZWxEZXNjcmlwdGlvbiB9KQ0KICAgICAgICAgIGRlbGV0ZSBpdGVtQ29weS54cGF5RGF0ZQ0KICAgICAgICAgIHJldHVybiBpdGVtQ29weQ0KICAgICAgICB9KQ0KICAgICAgfQ0KICAgICAgYXdhaXQgdGhpcy4kcmVmcy5zaG93Q29uZmlyRm9ybS52YWxpZGF0ZSgpDQogICAgICBIdHRwTW9kdWxlLm5vdENvbmZpcm0ocGFyYW0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgaWYgKHJlcy5jb2RlID09PSAnMDAwMDAwJykgew0KICAgICAgICAgIHRoaXMuY2xvc2VNb2RhbCgpDQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCflj5bmtojmiJDlip8nKQ0KICAgICAgICAgIHRoaXMucHJvQ29kZSA9ICcnDQogICAgICAgICAgdGhpcy5wcm9OYW1lID0gJycNCiAgICAgICAgICB0aGlzLnBheUNlcnRObyA9ICcnDQogICAgICAgICAgdGhpcy5hbW91bnQgPSAnJw0KICAgICAgICAgIHRoaXMucGF5QW10ID0gJycNCiAgICAgICAgICB0aGlzLm1vZmRpdk5hbWUgPSAnJw0KICAgICAgICAgIHRoaXMuYWdlbmN5TmFtZSA9ICcnDQogICAgICAgICAgdGhpcy5jb3JCZ3REb2NOb05hbWUgPSAnJw0KICAgICAgICAgIHRoaXMudXNlRGVzID0gJycNCiAgICAgICAgICB0aGlzLmR0b3MgPSBbXQ0KICAgICAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzMSgpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMucmVzdWx0KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgcmVhZCgpIHsNCiAgICAgIGNvbnN0IHBhcmFtID0gew0KICAgICAgfQ0KICAgICAgdGhpcy50YWJsZUxvYWRpbmcgPSB0cnVlDQogICAgICBIdHRwTW9kdWxlLmFkZEJlbmVmaXRQZW9wbGUocGFyYW0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgdGhpcy50YWJsZUxvYWRpbmcgPSBmYWxzZQ0KICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcwMDAwMDAnKSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfor7vlj5bmiJDlip8nKQ0KICAgICAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzMSgpDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMucmVzdWx0KQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgY2hhbmdlVmlzaWJsZSh2YWwpIHsNCiAgICAgIHRoaXMuYnJlYWtSdWxlVmlzaWJsZSA9IHZhbA0KICAgIH0sDQogICAgb25Ub29sYmFyQnRuQ2xpY2soeyBjb250ZXh0LCB0YWJsZSwgY29kZSB9KSB7DQogICAgICBzd2l0Y2ggKGNvZGUpIHsNCiAgICAgICAgLy8g5Yi35pawDQogICAgICAgIGNhc2UgJ3JlZnJlc2gnOg0KICAgICAgICAgIHRoaXMucmVmcmVzaCgpDQogICAgICAgICAgYnJlYWsNCiAgICAgIH0NCiAgICB9LA0KICAgIG9uVG9vbGJhckJ0bkNsaWNrMSh7IGNvbnRleHQsIHRhYmxlLCBjb2RlIH0pIHsNCiAgICAgIHN3aXRjaCAoY29kZSkgew0KICAgICAgICAvLyDliLfmlrANCiAgICAgICAgY2FzZSAncmVmcmVzaCc6DQogICAgICAgICAgdGhpcy5yZWZyZXNoMSgpDQogICAgICAgICAgYnJlYWsNCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOW3puS+p+agkQ0KICAgIGNoYW5nZUlucHV0KHZhbCkgew0KICAgICAgdGhpcy50cmVlR2xvYmFsQ29uZmlnLmlucHV0VmFsID0gdmFsDQogICAgfSwNCiAgICBvbkNsaWNrbWV0aG9kKG5vZGUpIHsNCiAgICAgIGxldCBjb2RlID0gbm9kZS5ub2RlLmNvZGUNCiAgICAgIHRoaXMuY29kZUxpc3QgPSBbXQ0KICAgICAgbGV0IHRyZWVEYXRhID0gbm9kZS50cmVlRGF0YQ0KICAgICAgLy8g6Z2e6aG257qn5Yy65YiS5YiZ6I635Y+W5Yy65YiSY29kZe+8jOWQpuWImeafpeivouihqOS9k+aVsOaNruaXtmNvZGVMaXN05Li656m66L+b6KGM5p+l6K+iDQogICAgICBpZiAoY29kZSAhPT0gbm9kZS50cmVlRGF0YT8uWzBdLmNvZGUpIHsNCiAgICAgICAgdGhpcy5nZXRJdGVtKGNvZGUsIHRyZWVEYXRhKQ0KICAgICAgfQ0KICAgICAgaWYgKG5vZGUuaWQgIT09ICcwJykgew0KICAgICAgICB0aGlzLm1vZmRpdmNvZGUgPSBub2RlLm5vZGUuY29kZQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5tb2ZkaXZjb2RlID0ge30NCiAgICAgIH0NCiAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzMSgpDQogICAgfSwNCiAgICBnZXRJdGVtKGNvZGUsIGRhdGEpIHsNCiAgICAgIGRhdGEuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgaWYgKGNvZGUgPT09IGl0ZW0uY29kZSkgew0KICAgICAgICAgIGxldCBkYXRhID0gW10NCiAgICAgICAgICBkYXRhLnB1c2goaXRlbSkNCiAgICAgICAgICB0aGlzLmdldENvZGVMaXN0KGRhdGEpDQogICAgICAgIH0gZWxzZSBpZiAoaXRlbS5jaGlsZHJlbikgew0KICAgICAgICAgIHRoaXMuZ2V0SXRlbShjb2RlLCBpdGVtLmNoaWxkcmVuKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgZ2V0Q29kZUxpc3QoZGF0YSkgew0KICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICB0aGlzLmNvZGVMaXN0LnB1c2goaXRlbS5jb2RlKQ0KICAgICAgICBpZiAoaXRlbS5jaGlsZHJlbikgew0KICAgICAgICAgIHRoaXMuZ2V0Q29kZUxpc3QoaXRlbS5jaGlsZHJlbikNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICAgIHRyZWVTZXRDb25mcmltRGF0YShjdXJUcmVlKSB7DQogICAgICB0aGlzLnRyZWVRdWVyeXBhcmFtcy5lbGVtZW50Q29kZSA9IGN1clRyZWUuY29kZQ0KICAgICAgdGhpcy4kcmVmcy5sZWZ0VHJlZS5yZWZyZXNoVHJlZSgpDQogICAgfSwNCiAgICBhc2lkZUNoYW5nZSgpIHsNCiAgICAgIHRoaXMubGVmdFRyZWVWaXNpYmxlID0gZmFsc2UNCiAgICB9LA0KICAgIC8vIOafpeeci+mZhOS7tg0KICAgIHNob3dBdHRhY2htZW50KHJvdykgew0KICAgICAgdGhpcy5iaWxsZ3VpZCA9IHJvdy5hdHRhY2htZW50X2lkDQogICAgICB0aGlzLnNob3dBdHRhY2htZW50RGlhbG9nID0gdHJ1ZQ0KICAgIH0sDQogICAgLy8g6KGo5qC85Y2V5YWD6KGM5Y2V5Ye7DQogICAgY2VsbENsaWNrKG9iaiwgY29udGV4dCwgZSkgew0KICAgICAgbGV0IGtleSA9IG9iai5jb2x1bW4ucHJvcGVydHkNCiAgICAgIHN3aXRjaCAoa2V5KSB7DQogICAgICB9DQogICAgfSwNCiAgICAvLyDliLfmlrDmjInpkq4g5Yi35paw5p+l6K+i5qCP77yM5o+Q56S65Yi35pawIHRhYmxlIOaVsOaNrg0KICAgIHJlZnJlc2gxKCkgew0KICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMxKCkNCiAgICAgIC8vIHRoaXMucXVlcnlUYWJsZURhdGFzQ291bnQoKQ0KICAgIH0sDQogICAgYWpheFRhYmxlRGF0YTEoeyBwYXJhbXMsIGN1cnJlbnRQYWdlLCBwYWdlU2l6ZSB9KSB7DQogICAgICB0aGlzLm1haW5QYWdlckNvbmZpZzEuY3VycmVudFBhZ2UgPSBjdXJyZW50UGFnZQ0KICAgICAgdGhpcy5tYWluUGFnZXJDb25maWcxLnBhZ2VTaXplID0gcGFnZVNpemUNCiAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzMSgpDQogICAgfSwNCiAgICAvLyDlsZXlvIDmipjlj6Dmn6Xor6LmoYYNCiAgICBvblF1ZXJ5Q29uZGl0aW9uc0NsaWNrKGlzT3Blbikgew0KICAgICAgdGhpcy5pc1Nob3dRdWVyeUNvbmRpdGlvbnMgPSBpc09wZW4NCiAgICB9LA0KICAgIC8vIOaWsOWinuaIluS/ruaUueW8ueahhg0KICAgIGNsaWNrQWRkQnRuKHJvdykgew0KICAgICAgLy8gaWYgKHRoaXMuYWRkVGFibGVEYXRhLmxlbmd0aCA+IDApIHsNCiAgICAgIC8vICAgdGhpcy5hZGRUYWJsZURhdGEgPSBbXQ0KICAgICAgLy8gfQ0KICAgICAgdGhpcy5kaWFsb2dUaXRsZSA9ICfmlrDlop4nDQogICAgICAvLyB0aGlzLmFkZFRhYmxlRGF0YS5wdXNoKHJvdykNCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUNCiAgICB9LA0KICAgIC8vIOeCueWHu+aWsOWing0KICAgIG9uQWRkVG9vbGJhckNsaWNrQWRkKG9iaiwgY29udGV4dCwgZSkgew0KICAgICAgLy8gbGV0IHJvdyA9IFtdDQogICAgICAvLyByb3cgPSB0aGlzLiRyZWZzLm1haW5UYWJsZVJlZi5nZXRTZWxlY3Rpb25EYXRhKClbMF0NCiAgICAgIC8vIGlmICh0aGlzLiRyZWZzLm1haW5UYWJsZVJlZi5nZXRTZWxlY3Rpb25EYXRhKCkubGVuZ3RoICE9PSAxKSB7DQogICAgICAvLyAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+36YCJ5oup5LiA5p2h5pWw5o2uJykNCiAgICAgIC8vICAgcmV0dXJuDQogICAgICAvLyB9DQogICAgICAvLyB0aGlzLmFkZFRhYmxlRGF0YSA9IHRoaXMuJHJlZnMubWFpblRhYmxlUmVmLmdldFNlbGVjdGlvbkRhdGEoKQ0KICAgICAgdGhpcy5kaWFsb2dWaXNpYmxlID0gdHJ1ZQ0KICAgICAgLy8gdGhpcy5zZWxlY3RTdW1JZCA9IHRoaXMuJHJlZnMubWFpblRhYmxlUmVmLmdldFNlbGVjdGlvbkRhdGEoKVswXS5zdW1faWQNCiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAn5paw5aKeJw0KICAgIH0sDQogICAgLy8g5p+l6K+iIHRhYmxlMSDmlbDmja4NCiAgICBxdWVyeVRhYmxlRGF0YXMxKCkgew0KICAgICAgY29uc3QgcGFyYW0gPSB7DQogICAgICAgIHBhZ2U6IHRoaXMubWFpblBhZ2VyQ29uZmlnMS5jdXJyZW50UGFnZSwgLy8g6aG156CBDQogICAgICAgIHBhZ2VTaXplOiB0aGlzLm1haW5QYWdlckNvbmZpZzEucGFnZVNpemUsIC8vIOavj+mhteadoeaVsA0KICAgICAgICBwYXlDZXJ0Tm86IHRoaXMucGF5Q2VydE5vLA0KICAgICAgICBwcm9OYW1lOiB0aGlzLnByb05hbWUsDQogICAgICAgIHByb0NvZGU6IHRoaXMucHJvQ29kZSwNCiAgICAgICAgYWdlbmN5TmFtZTogdGhpcy5hZ2VuY3lOYW1lLA0KICAgICAgICBjb3JCZ3REb2NOb05hbWU6IHRoaXMuY29yQmd0RG9jTm9OYW1lLA0KICAgICAgICB1c2VEZXM6IHRoaXMudXNlRGVzLA0KICAgICAgICBhbW91bnQ6IHRoaXMuYW1vdW50LA0KICAgICAgICBpc0hvb2s6IHRoaXMuaXNIb29rLA0KICAgICAgICByb2xlSWQ6IHRoaXMucm9sZUlkLA0KICAgICAgICBtb2ZEaXZDb2RlOiB0aGlzLm1vZkRpdkNvZGUsIC8vIOiOt+WPluW3puS+p+agkQ0KICAgICAgICBtb2ZEaXZDb2RlczogdGhpcy5jb2RlTGlzdCwNCiAgICAgICAgZHRvczogdGhpcy5kdG9zDQogICAgICB9DQogICAgICB0aGlzLnRhYmxlTG9hZGluZzIgPSB0cnVlDQogICAgICBIdHRwTW9kdWxlLnBhZ2VQYXlRdWVyeShwYXJhbSkudGhlbihyZXMgPT4gew0KICAgICAgICB0aGlzLnRhYmxlTG9hZGluZzIgPSBmYWxzZQ0KICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcwMDAwMDAnKSB7DQogICAgICAgICAgdGhpcy50YWJsZURhdGExID0gcmVzLmRhdGEucmVzdWx0cw0KICAgICAgICAgIHRoaXMubWFpblBhZ2VyQ29uZmlnMS50b3RhbCA9IHJlcy5kYXRhLnRvdGFsQ291bnQNCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5yZXN1bHQpDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgfSwNCiAgICAvLyDmk43kvZzml6Xlv5cNCiAgICBxdWVyeUFjdGlvbkxvZyhyb3cpIHsNCiAgICAgIC8vIGxldCBkYXRhID0gew0KICAgICAgLy8gICByb2xlZ3VpZDogdGhpcy4kc3RvcmUuc3RhdGUuY3VyTmF2TW9kdWxlLnJvbGVndWlkLA0KICAgICAgLy8gICBkYXRhOiB7DQogICAgICAvLyAgICAgc3RhdHVzQ29kZTogdGhpcy50b29sQmFyU3RhdHVzU2VsZWN0LmNvZGUsDQogICAgICAvLyAgICAgaWQ6IHJvdy5pZCwNCiAgICAgIC8vICAgICBhcHBJZDogJ3BheV92b3VjaGVyJw0KICAgICAgLy8gICB9DQogICAgICAvLyB9DQogICAgICAvLyBIdHRwTW9kdWxlLnF1ZXJ5QWN0aW9uTG9nKGRhdGEpLnRoZW4ocmVzID0+IHsNCiAgICAgIC8vICAgdGhpcy5sb2dEYXRhID0gcmVzLmRhdGENCiAgICAgIC8vICAgY29uc29sZS5sb2codGhpcy5sb2dEYXRhKQ0KICAgICAgLy8gICB0aGlzLnNob3dMb2dWaWV3ID0gdHJ1ZQ0KICAgICAgLy8gfSkNCiAgICB9LA0KICAgIC8vIOmAgeWuoQ0KICAgIGF1ZGllRGF0YShwYXJhbSkgew0KICAgICAgLy8gSHR0cE1vZHVsZS5hdWRpZURhdGEocGFyYW0pLnRoZW4ocmVzID0+IHsNCiAgICAgIC8vICAgaWYgKHJlcy5jb2RlID09PSAnMDAwMDAwJykgew0KICAgICAgLy8gICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn5pON5L2c5oiQ5YqfJykNCiAgICAgIC8vICAgICB0aGlzLnF1ZXJ5VGFibGVEYXRhcygpDQogICAgICAvLyAgIH0NCiAgICAgIC8vIH0pDQogICAgfSwNCiAgICAvKioNCiAgICAgKiDlt6bkvqfmoJHov4fmu6TmkJzntKINCiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZTx2b2lkPn0NCiAgICAgKi8NCiAgICBhc3luYyBzZWFyY2hUcmVlSGFuZGxlKGlucHV0VmFsKSB7DQogICAgICB0aGlzLnRyZWVGaWx0ZXJUZXh0ID0gaW5wdXRWYWwNCiAgICAgIHRoaXMudHJlZUN1cnJlbnRQYWdlID0gMQ0KICAgICAgYXdhaXQgdGhpcy5nZXRMZWZ0VHJlZURhdGEoKQ0KICAgIH0sDQogICAgZ2V0TGVmdFRyZWVEYXRhKCkgew0KICAgICAgbGV0IHRoYXQgPSB0aGlzDQogICAgICBsZXQgcGFyYW1zID0ge30NCiAgICAgIGlmICh0aGlzLnVzZXJJbmZvLnByb3ZpbmNlID09PSAnNjEwMDAwMDAwJykgew0KICAgICAgICBwYXJhbXMgPSB7DQogICAgICAgICAgZWxlbWVudENvZGU6ICdhZG1kaXYnLA0KICAgICAgICAgIHByb3ZpbmNlOiAnNjEwMDAwMDAwJywNCiAgICAgICAgICB5ZWFyOiB0aGlzLnVzZXJJbmZvLnllYXIsDQogICAgICAgICAgd2hlcmVzcWw6ICdhbmQgY29kZSBsaWtlIFwnJyArIDYxICsgJyVcJycNCiAgICAgICAgfQ0KICAgICAgfSBlbHNlIGlmICgNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDEwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDEwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDIwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDMwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDQwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDUwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDYwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDcwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDgwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMDkwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMTAwMDAwMCcgfHwNCiAgICAgICAgdGhpcy51c2VySW5mby5wcm92aW5jZSA9PT0gJzYxMTIwMDAwMCcNCiAgICAgICkgew0KICAgICAgICBwYXJhbXMgPSB7DQogICAgICAgICAgZWxlbWVudENvZGU6ICdhZG1kaXYnLA0KICAgICAgICAgIHByb3ZpbmNlOiB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlLA0KICAgICAgICAgIHllYXI6IHRoaXMudXNlckluZm8ueWVhciwNCiAgICAgICAgICB3aGVyZXNxbDogJ2FuZCBjb2RlIGxpa2UgXCcnICsgdGhpcy51c2VySW5mby5wcm92aW5jZS5zdWJzdHJpbmcoMCwgNCkgKyAnJVwnJw0KICAgICAgICB9DQogICAgICB9IGVsc2Ugew0KICAgICAgICBwYXJhbXMgPSB7DQogICAgICAgICAgZWxlbWVudENvZGU6ICdhZG1kaXYnLA0KICAgICAgICAgIHByb3ZpbmNlOiB0aGlzLnVzZXJJbmZvLnByb3ZpbmNlLA0KICAgICAgICAgIHllYXI6IHRoaXMudXNlckluZm8ueWVhciwNCiAgICAgICAgICB3aGVyZXNxbDogJ2FuZCBjb2RlIGxpa2UgXCcnICsgdGhpcy51c2VySW5mby5wcm92aW5jZS5zdWJzdHJpbmcoMCwgNikgKyAnJVwnJw0KICAgICAgICB9DQogICAgICB9DQogICAgICBIdHRwTW9kdWxlLmdldFRyZWVEYXRhMShwYXJhbXMpLnRoZW4ocmVzID0+IHsNCiAgICAgICAgaWYgKHJlcy5kYXRhKSB7DQogICAgICAgICAgLy8gbGV0IHRyZWVSZXNkYXRhID0gdGhhdC5nZXRDaGlsZHJlbkRhdGEocmVzLmRhdGEpDQogICAgICAgICAgLy8gdHJlZVJlc2RhdGEuZm9yRWFjaChpdGVtID0+IHsNCiAgICAgICAgICAvLyAgIGl0ZW0ubGFiZWwgPSBpdGVtLmlkICsgJy0nICsgaXRlbS5idXNpbmVzc05hbWUNCiAgICAgICAgICAvLyB9KQ0KICAgICAgICAgIC8vIGNvbnN0IHJlc3VsdCA9IFsNCiAgICAgICAgICAvLyAgIHsNCiAgICAgICAgICAvLyAgICAgaWQ6ICdyb290JywNCiAgICAgICAgICAvLyAgICAgbGFiZWw6ICflhajpg6gnLA0KICAgICAgICAgIC8vICAgICBjb2RlOiAncm9vdCcsDQogICAgICAgICAgLy8gICAgIGlzbGVhZjogJzAnLA0KICAgICAgICAgIC8vICAgICBjaGlsZHJlbjogdHJlZVJlc2RhdGENCiAgICAgICAgICAvLyAgIH0NCiAgICAgICAgICAvLyBdDQogICAgICAgICAgdGhhdC50cmVlRGF0YSA9IHJlcy5kYXRhDQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5bem5L6n5qCR5Yqg6L295aSx6LSlJykNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICAgIGhhbmRsZUN1cnJlbnRDaGFuZ2UodmFsKSB7DQogICAgICB0aGlzLnRyZWVDdXJyZW50UGFnZSA9IHZhbA0KICAgICAgdGhpcy5nZXRMZWZ0VHJlZURhdGEoKQ0KICAgIH0sDQogICAgaGFuZGxlU2l6ZUNoYW5nZSh2YWwpIHsNCiAgICB9LA0KICAgIGdldENoaWxkcmVuRGF0YShkYXRhcykgew0KICAgICAgbGV0IHRoYXQgPSB0aGlzDQogICAgICBkYXRhcy5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICBpdGVtLmxhYmVsID0gaXRlbS50ZXh0DQogICAgICAgIGlmIChpdGVtLmNoaWxkcmVuKSB7DQogICAgICAgICAgdGhhdC5nZXRDaGlsZHJlbkRhdGEoaXRlbS5jaGlsZHJlbikNCiAgICAgICAgfQ0KICAgICAgfSkNCg0KICAgICAgcmV0dXJuIGRhdGFzDQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIGNvbnNvbGUubG9nKCd0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUnLCB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUpDQogICAgdGhpcy5tZW51SWQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUuZ3VpZA0KICAgIHRoaXMucm9sZWd1aWQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUucm9sZWd1aWQNCiAgICB0aGlzLnRva2VuaWQgPSB0aGlzLiRzdG9yZS5nZXR0ZXJzLmdldExvZ2luQXV0aGVudGljYXRpb24udG9rZW5pZA0KICAgIHRoaXMudXNlckluZm8gPSB0aGlzLiRzdG9yZS5zdGF0ZS51c2VySW5mbw0KICAgIHRoaXMubWVudU5hbWUgPSB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJOYXZNb2R1bGUubmFtZQ0KICAgIHRoaXMucm9sZUlkID0gdGhpcy4kc3RvcmUuc3RhdGUuY3VyTmF2TW9kdWxlLnJvbGVndWlkDQogICAgdGhpcy5nZXRMZWZ0VHJlZURhdGEoKQ0KICAgIC8vIHRoaXMucXVlcnlUYWJsZURhdGFzKCkNCiAgICAvLyB0aGlzLnF1ZXJ5VGFibGVEYXRhczEoKQ0KICB9DQp9DQo="},{"version":3,"sources":["benefitPeopleConfirm.vue"],"names":[],"mappingsfile":"benefitPeopleConfirm.vue","sourceRoot":"src/views/main/fundMonitoring/benefitPeopleConfirm","sourcesContent":["<!--支付数据规范性检查-->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n        />\r\n        <BsTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :config=\"leftTreeConfig\"\r\n          :tree-data=\"treeData\"\r\n          @onNodeClick=\"onClickmethod\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <!-- <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          />\r\n        </div> -->\r\n        <!-- <BsTable\r\n          ref=\"mainTableRef\"\r\n          v-loading=\"tableLoading1\"\r\n          style=\"height: 40%\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @checkboxChange=\"checkboxChange\"\r\n          @checkboxAll=\"checkboxChange\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n        </BsTable> -->\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig1\"\r\n            :query-form-data=\"searchDataList1\"\r\n            @onSearchClick=\"search1\"\r\n          />\r\n        </div>\r\n        <BsTable\r\n          ref=\"mainTableRef1\"\r\n          v-loading=\"tableLoading2\"\r\n          style=\"height: 100%\"\r\n          :footer-config=\"tableFooterConfig1\"\r\n          :table-columns-config=\"tableColumnsConfig1\"\r\n          :table-data=\"tableData1\"\r\n          :table-config=\"tableConfig1\"\r\n          :pager-config=\"mainPagerConfig1\"\r\n          :toolbar-config=\"tableToolbarConfig1\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick1\"\r\n          @ajaxData=\"ajaxTableData1\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">支付凭证信息</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <ImportModel\r\n      :file-config=\"fileConfig\"\r\n      :import-modal-visible.sync=\"importModalVisible\"\r\n      @onDownloadTemplateClick=\"onDownloadTemplateClick\"\r\n      @onImportClick=\"onImportClick\"\r\n      @onImportFileClick=\"onImportFileClick\"\r\n    />\r\n    <vxe-modal\r\n      v-model=\"showConfirmModal\"\r\n      width=\"600\"\r\n      height=\"200\"\r\n      :show-footer=\"true\"\r\n      title=\"取消确认\"\r\n      @close=\"closeModal\"\r\n    >\r\n      <el-form ref=\"showConfirForm\" :model=\"formModelData\" :rules=\"formModelRule\" label-width=\"80px\">\r\n        <el-form-item label=\"取消说明\" prop=\"cancelDescription\" class=\"one-row\">\r\n          <el-input\r\n            v-model=\"formModelData.cancelDescription\"\r\n            type=\"textarea\"\r\n            :maxlength=\"100\"\r\n            show-word-limit\r\n            resize=\"none\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n            placeholder=\"请输入取消说明\"\r\n          />\r\n        </el-form-item>\r\n      </el-form>\r\n      <!-- <vxe-form ref=\"showConfirForm\" :data=\"formModelData\" :rules=\"formModelRule\">\r\n        <vxe-form-item title=\"取消说明\" field=\"reason\" required class=\"one-row\">\r\n          <el-input\r\n            v-model=\"formModelData.reason\"\r\n            type=\"textarea\"\r\n            :maxlength=\"100\"\r\n            show-word-limit\r\n            resize=\"none\"\r\n            :autosize=\"{ minRows: 2, maxRows: 4 }\"\r\n            placeholder=\"请输入取消说明\"\r\n          />\r\n        </vxe-form-item>\r\n      </vxe-form> -->\r\n      <div slot=\"footer\" class=\"vxeModalUnique\">\r\n        <el-button size=\"small\" @click=\"closeModal\">取消</el-button>\r\n        <el-button type=\"primary\" size=\"small\" @click=\"notHook(clickRow)\">确定</el-button>\r\n      </div>\r\n    </vxe-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf, getDateString } from './benefitPeopleConfirm'\r\nimport ImportModel from '../../../../components/Table/import/import.vue'\r\nimport { Import } from '../../../../components/Table/import/import/import.js'\r\nimport HttpModule from '@/api/frame/main/fundMonitoring/benefitPeopleConfirm.js'\r\nimport { Export } from '../../../../components/Table/export/export/export'\r\nimport { repairExcelTimestamp } from '@/utils/excel'\r\n// import AddDialog from './children/addDialog'\r\n// import HttpModule from '@/api/frame/main/Monitoring/WarningDetailsByCompartment.js'\r\nexport default {\r\n  components: {\r\n    ImportModel\r\n    // AddDialog\r\n  },\r\n  computed: {\r\n    wheresql() {\r\n      return `and name like '%${this.treeFilterText}%'`\r\n    },\r\n    tableColumnsConfig1() {\r\n      return proconf.PoliciesTableColumns1(this)\r\n    }\r\n  },\r\n  watch: {\r\n    queryConfig() {\r\n      this.getSearchDataList()\r\n    },\r\n    queryConfig1() {\r\n      this.getSearchDataList1()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      showConfirmModal: false,\r\n      clickRow: {},\r\n      formModelData: {\r\n        cancelDescription: ''\r\n      },\r\n      // 左侧树过滤值\r\n      treeFilterText: '',\r\n      matchHoot: true,\r\n      isProName: false,\r\n      isAmount: false,\r\n      codeList: [],\r\n      importModalVisible: false, // 导入弹框\r\n      fileConfig: {\r\n        fileName: '',\r\n        maxSize: 1024 * 1024 * 10\r\n      }, // 导入文件配置\r\n      row1: {},\r\n      proTotal: 0,\r\n      treePageSize: 200,\r\n      offset: 0,\r\n      treeCurrentPage: 1,\r\n      // BsQuery 查询栏\r\n      queryConfig: proconf.highQueryConfig,\r\n      queryConfig1: proconf.highQueryConfig1,\r\n      searchDataList: proconf.highQueryData,\r\n      searchDataList1: proconf.highQueryData1,\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      treeData: [{\r\n        children: [],\r\n        code: 0,\r\n        id: 0,\r\n        label: '0-全部分类',\r\n        name: '全部分类',\r\n        parentId: null,\r\n        parentRuleName: null,\r\n        ruleLevel: 0,\r\n        ruleName: '全部分类'\r\n      }],\r\n      treeTypeConfig: {\r\n        curRadio: 'AGENCY'\r\n      },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      },\r\n      formModelRule: {\r\n        reason: [\r\n          { required: true, message: '请输入取消说明', trigger: 'blur' }\r\n        ]\r\n      },\r\n      treeQueryparams: { elementCode: 'admdiv', province: this.$store.state.userInfo.province, year: this.$store.state.userInfo.year, wheresql: 'and province =' + this.$store.state.userInfo.province },\r\n      // treeServerUri: 'pay-clear-service/v2/lefttree',\r\n      treeServerUri: '',\r\n      treeAjaxType: 'get',\r\n      leftTreeVisible: true,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        buttons: proconf.statusButtons,\r\n        curButton: proconf.curStatusButton,\r\n        buttonsInfo: proconf.buttons,\r\n        methods: {\r\n          bsToolbarClickEvent: this.bsToolbarClickEvent\r\n        }\r\n      },\r\n      buttonsInfo: proconf.statusRightToolBarButtonByBusDept,\r\n      tabStatusNumConfig: {\r\n        '1': 0,\r\n        '2': 0,\r\n        '3': 0\r\n      },\r\n      isShowQueryConditions: true,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        iconName: 'base-all.png',\r\n        iconNameActive: 'base-all-active.png',\r\n        iconUrl: '',\r\n        label: '全部',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableLoading1: false,\r\n      tableLoading2: false,\r\n      tableColumnsConfig: proconf.PoliciesTableColumns,\r\n      tableData: [],\r\n      tableData1: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      tableToolbarConfig1: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      leftNode: {},\r\n      regulationStatus: '1',\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 50\r\n      },\r\n      mainPagerConfig1: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 50\r\n      },\r\n      tableConfig: {\r\n      },\r\n      tableConfig1: {\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      tableFooterConfig1: {\r\n        showFooter: false\r\n      },\r\n      fiscalYear: '',\r\n      isHook: '0',\r\n      proCode1: '',\r\n      proCode: '',\r\n      payCertNo: '',\r\n      proName: '',\r\n      proName1: '',\r\n      agencyName: '',\r\n      corBgtDocNoName: '',\r\n      useDes: '',\r\n      dtos: [],\r\n      amount: '',\r\n      mofdivName: '',\r\n      payAcctNameStr: '',\r\n      payAcctNoStr: '',\r\n      payeeAcctNameStr: '',\r\n      payeeAcctNoStr: '',\r\n      proNameStr: '',\r\n      payTimeStr: '',\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '系统级监控规则',\r\n      roleId: '',\r\n      params5: '',\r\n      menuId: '',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      // 文件\r\n      showAttachmentDialog: false,\r\n      billguid: '',\r\n      condition: {},\r\n      handleType: '',\r\n      isEnable: '',\r\n      regulationType: '',\r\n      warningLevel: '',\r\n      DetailData: {},\r\n      regulationclass: '',\r\n      firulename: '',\r\n      payAmt: '',\r\n      mofDivCode: this.$store.state.userInfo.province,\r\n      leftTreeConfig: { // 左侧单位树配置\r\n        showFilter: false, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 0, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '请选择',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{code}-{name}', // {code}-{name}\r\n          nodeKey: 'code', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        multiple: false, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true,\r\n        tabSelect: '0'\r\n      },\r\n      importData: [], // 导入数据\r\n      treeLoadingState: false\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    closeModal() {\r\n      this.showConfirmModal = false\r\n      this.formModelData.cancelDescription = ''\r\n      this.$refs.showConfirForm.clearValidate()\r\n    },\r\n    onImportClick() {\r\n      // 导入提交\r\n      if (!this.importData.length) {\r\n        this.$XModal.message({ status: 'error', message: '无数据导入请重新导入数据！' })\r\n      } else {\r\n        this.importModalVisible = false\r\n        if (typeof (this.importConfig.importSuccessCallback) === 'function') {\r\n          this.importConfig.importSuccessCallback(this.importData)\r\n        } else {\r\n          this.$emit('importSuccessCallback', this.importData)\r\n        }\r\n      }\r\n    },\r\n    async onImportFileClick() {\r\n      // 导入文件\r\n      this.$Import = new Import()\r\n      await this.$Import.importExcel({\r\n      }, (result, filename) => {\r\n        // this.tableDataIn = result\r\n        this.importData = result\r\n        this.fileConfig.fileName = filename\r\n      })\r\n    },\r\n    onDownloadTemplateClick(obj) {\r\n      // 下载模版\r\n      if (typeof (this.importConfig.downloadTemplateCallback) === 'function') {\r\n        this.importConfig.downloadTemplateCallback(this.importData)\r\n      } else {\r\n        this.importData = []\r\n        const columns = this.tableColumnsConfig\r\n        const selection = this.selection\r\n        let defaultConfig = {\r\n          isExportTree: !!self.treeConfigIn,\r\n          saveType: '.xlsx',\r\n          fileName: 'importTempplate', // 文件名\r\n          dataType: 'fullData',\r\n          isExportOnlySourceField: true, // 是否只导出数据源表头字段，\r\n          isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n          isExportHead: true, // 是否导出表头\r\n          exportViewTitleType: 'nestTitle',\r\n          isExportFooter: false, // 是否导出表尾部\r\n          isExportOriginalData: true, // 是否导出源数据\r\n          isExportData: true, // 是否导出数据\r\n          columns: columns, // 表头配置\r\n          datas: [], // 源数据,\r\n          selection: selection, // 选中数据\r\n          index: true, // 是否添加序号,\r\n          ignoreColsTypes: [\r\n            'dragSort',\r\n            'seq',\r\n            'checkbox',\r\n            'radio',\r\n            'optionRow',\r\n            'expand',\r\n            'attach',\r\n            'ach',\r\n            'list',\r\n            'attachlist'\r\n          ] // 忽略导出的列类型\r\n        }\r\n        this.$Export.exportExcel(obj ? Object.assign(defaultConfig, obj) : obj, this)\r\n      }\r\n    },\r\n    downLoadImportTemplates() {\r\n      // 下载导入模版\r\n      const tableColumnsConfig = this.tableColumnsConfig\r\n      // const unitLabel = this.toolbarConfigInCopy.moneyUnitOptions?.find(item => item.value === this.moneyUnit)?.label\r\n      this.$Export = new Export({ unit: '元' })\r\n      this.$Export.exportExcel({\r\n        saveType: '.xlsx',\r\n        fileName: '导入模版', // 文件名\r\n        dataType: 'fullData',\r\n        isExportOnlyViewTitle: true, // 是否只导出数据源表头字段，\r\n        columns: tableColumnsConfig, // 表头配置\r\n        index: false // 是否添加序号,\r\n      }, this)\r\n    },\r\n    triggerImportOption(config = {}) {\r\n      // 触发导入\r\n      this.importData = []\r\n      this.importConfig = config\r\n      this.fileConfig.fileName = ''\r\n      this.importModalVisible = true\r\n    },\r\n    bsToolbarClickEvent(obj, $this) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.code) {\r\n        case '1':\r\n          this.isHook = '0'\r\n          this.matchHoot = true\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n        case '2':\r\n          this.isHook = '1'\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n        case '3':\r\n          this.isHook = '2'\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.mainPagerConfig1.currentPage = 1\r\n      this.refresh1()\r\n      // this.$refs.mainTableRef.$refs.xGrid.clearScroll()\r\n    },\r\n    search1(obj) {\r\n      this.payCertNo = obj.payCertNo\r\n      this.proName = obj.proName\r\n      this.agencyName = obj.agencyName\r\n      this.corBgtDocNoName = obj.corBgtDocNoName\r\n      this.useDes = obj.useDes\r\n      this.queryTableDatas1()\r\n      // this.queryTableDatasCount()\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList1() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList1 = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.code) {\r\n        case '1':\r\n          this.isHook = '0'\r\n          break\r\n        case '2':\r\n          this.isHook = '1'\r\n          break\r\n      }\r\n      // this.queryTableDatas1()\r\n    },\r\n    checkboxChange(checked, row) {\r\n      switch (this.toolBarStatusSelect.code) {\r\n        case '1':\r\n          break\r\n        case '2':\r\n          this.dtos.length = checked.selection.length\r\n          for (let i = 0; i < this.dtos.length; i++) {\r\n            this.$set(this.dtos, i, checked.selection[i].payCertId)\r\n          }\r\n          this.queryTableDatas1()\r\n          break\r\n      }\r\n    },\r\n    // checkboxChange1(checked, row) {\r\n    //   switch (this.toolBarStatusSelect.code) {\r\n    //     case '1':\r\n    //       if (this.isProName && this.isAmount) {\r\n    //         this.proName = checked.selection[0].proName\r\n    //         this.amount = checked.selection[0].amount\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       if (this.isProName) {\r\n    //         this.proName = checked.selection[0].proName\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       if (this.isAmount) {\r\n    //         this.amount = checked.selection[0].amount\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       break\r\n    //     case '2':\r\n    //       this.dtos.length = checked.selection.length\r\n    //       for (let i = 0; i < this.dtos.length; i++) {\r\n    //         this.$set(this.dtos, i, checked.selection[i].payCertId)\r\n    //       }\r\n    //       this.queryTableDatas()\r\n    //       break\r\n    //   }\r\n    // },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      let self = this\r\n      let datas2 = this.$refs.mainTableRef1.getSelectionData()\r\n      switch (obj.code) {\r\n        // 挂接\r\n        case 'hook_set':\r\n          if (datas2.length === 0) {\r\n            this.$message.warning('请选择数据')\r\n            return\r\n          }\r\n          this.hook(datas2)\r\n          break\r\n        // 手动读取\r\n        case 'peo_read':\r\n          this.read()\r\n          break\r\n        // 取消挂接\r\n        case 'hook_not':\r\n          if (datas2.length === 0) {\r\n            this.$message.warning('请选择数据')\r\n            return\r\n          }\r\n          this.showConfirmModal = true\r\n          this.clickRow = datas2\r\n          // this.notHook(datas2)\r\n          break\r\n        // 导入\r\n        case 'import':\r\n          this.triggerImportOption(\r\n            {\r\n              downloadTemplateCallback(Cb) {\r\n                self.downLoadImportTemplates()\r\n              },\r\n              importSuccessCallback(res) {\r\n                self.$refs.mainTableRef.deaImportViewData(\r\n                  {\r\n                    conlums: proconf.PoliciesTableColumns,\r\n                    viewData: res\r\n                  }\r\n                )\r\n                // 将导入的支付时间格式化\r\n                res?.forEach(row => {\r\n                  const timestamp = repairExcelTimestamp(row.xpayDate)\r\n                  row.xpayDate = timestamp ? getDateString(timestamp) : row.xpayDate\r\n                })\r\n                self.importSuccessCallback(res)\r\n              }\r\n            }\r\n          )\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    importSuccessCallback(res) {\r\n      console.log('res:', res)\r\n      HttpModule.importBenefit(res).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('导入成功')\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n      this.refresh()\r\n    },\r\n    hook(datas2) {\r\n      const param = {\r\n        payDetailIds: datas2.map(item => {\r\n          let itemCopy = Object.assign({}, item, { xPayDate: item.xpayDate, isHook: this.isHook })\r\n          delete itemCopy.xpayDate\r\n          return itemCopy\r\n        })\r\n      }\r\n      HttpModule.confirm(param).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('确认成功')\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    async notHook(datas2) {\r\n      const param = {\r\n        payDetailIds: datas2.map(item => {\r\n          let itemCopy = Object.assign({}, item, { xPayDate: item.xpayDate, cancelDescription: this.formModelData.cancelDescription })\r\n          delete itemCopy.xpayDate\r\n          return itemCopy\r\n        })\r\n      }\r\n      await this.$refs.showConfirForm.validate()\r\n      HttpModule.notConfirm(param).then(res => {\r\n        if (res.code === '000000') {\r\n          this.closeModal()\r\n          this.$message.success('取消成功')\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    read() {\r\n      const param = {\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.addBenefitPeople(param).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.$message.success('读取成功')\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    changeVisible(val) {\r\n      this.breakRuleVisible = val\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    onToolbarBtnClick1({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh1()\r\n          break\r\n      }\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.treeGlobalConfig.inputVal = val\r\n    },\r\n    onClickmethod(node) {\r\n      let code = node.node.code\r\n      this.codeList = []\r\n      let treeData = node.treeData\r\n      // 非顶级区划则获取区划code，否则查询表体数据时codeList为空进行查询\r\n      if (code !== node.treeData?.[0].code) {\r\n        this.getItem(code, treeData)\r\n      }\r\n      if (node.id !== '0') {\r\n        this.mofdivcode = node.node.code\r\n      } else {\r\n        this.mofdivcode = {}\r\n      }\r\n      this.queryTableDatas1()\r\n    },\r\n    getItem(code, data) {\r\n      data.forEach(item => {\r\n        if (code === item.code) {\r\n          let data = []\r\n          data.push(item)\r\n          this.getCodeList(data)\r\n        } else if (item.children) {\r\n          this.getItem(code, item.children)\r\n        }\r\n      })\r\n    },\r\n    getCodeList(data) {\r\n      data.forEach(item => {\r\n        this.codeList.push(item.code)\r\n        if (item.children) {\r\n          this.getCodeList(item.children)\r\n        }\r\n      })\r\n    },\r\n    treeSetConfrimData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 查看附件\r\n    showAttachment(row) {\r\n      this.billguid = row.attachment_id\r\n      this.showAttachmentDialog = true\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh1() {\r\n      this.queryTableDatas1()\r\n      // this.queryTableDatasCount()\r\n    },\r\n    ajaxTableData1({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig1.currentPage = currentPage\r\n      this.mainPagerConfig1.pageSize = pageSize\r\n      this.queryTableDatas1()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 新增或修改弹框\r\n    clickAddBtn(row) {\r\n      // if (this.addTableData.length > 0) {\r\n      //   this.addTableData = []\r\n      // }\r\n      this.dialogTitle = '新增'\r\n      // this.addTableData.push(row)\r\n      this.dialogVisible = true\r\n    },\r\n    // 点击新增\r\n    onAddToolbarClickAdd(obj, context, e) {\r\n      // let row = []\r\n      // row = this.$refs.mainTableRef.getSelectionData()[0]\r\n      // if (this.$refs.mainTableRef.getSelectionData().length !== 1) {\r\n      //   this.$message.warning('请选择一条数据')\r\n      //   return\r\n      // }\r\n      // this.addTableData = this.$refs.mainTableRef.getSelectionData()\r\n      this.dialogVisible = true\r\n      // this.selectSumId = this.$refs.mainTableRef.getSelectionData()[0].sum_id\r\n      this.dialogTitle = '新增'\r\n    },\r\n    // 查询 table1 数据\r\n    queryTableDatas1() {\r\n      const param = {\r\n        page: this.mainPagerConfig1.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig1.pageSize, // 每页条数\r\n        payCertNo: this.payCertNo,\r\n        proName: this.proName,\r\n        proCode: this.proCode,\r\n        agencyName: this.agencyName,\r\n        corBgtDocNoName: this.corBgtDocNoName,\r\n        useDes: this.useDes,\r\n        amount: this.amount,\r\n        isHook: this.isHook,\r\n        roleId: this.roleId,\r\n        mofDivCode: this.mofDivCode, // 获取左侧树\r\n        mofDivCodes: this.codeList,\r\n        dtos: this.dtos\r\n      }\r\n      this.tableLoading2 = true\r\n      HttpModule.pagePayQuery(param).then(res => {\r\n        this.tableLoading2 = false\r\n        if (res.code === '000000') {\r\n          this.tableData1 = res.data.results\r\n          this.mainPagerConfig1.total = res.data.totalCount\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    // 操作日志\r\n    queryActionLog(row) {\r\n      // let data = {\r\n      //   roleguid: this.$store.state.curNavModule.roleguid,\r\n      //   data: {\r\n      //     statusCode: this.toolBarStatusSelect.code,\r\n      //     id: row.id,\r\n      //     appId: 'pay_voucher'\r\n      //   }\r\n      // }\r\n      // HttpModule.queryActionLog(data).then(res => {\r\n      //   this.logData = res.data\r\n      //   console.log(this.logData)\r\n      //   this.showLogView = true\r\n      // })\r\n    },\r\n    // 送审\r\n    audieData(param) {\r\n      // HttpModule.audieData(param).then(res => {\r\n      //   if (res.code === '000000') {\r\n      //     this.$message.warning('操作成功')\r\n      //     this.queryTableDatas()\r\n      //   }\r\n      // })\r\n    },\r\n    /**\r\n     * 左侧树过滤搜索\r\n     * @returns {Promise<void>}\r\n     */\r\n    async searchTreeHandle(inputVal) {\r\n      this.treeFilterText = inputVal\r\n      this.treeCurrentPage = 1\r\n      await this.getLeftTreeData()\r\n    },\r\n    getLeftTreeData() {\r\n      let that = this\r\n      let params = {}\r\n      if (this.userInfo.province === '610000000') {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: '610000000',\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + 61 + '%\\''\r\n        }\r\n      } else if (\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610200000' ||\r\n        this.userInfo.province === '610300000' ||\r\n        this.userInfo.province === '610400000' ||\r\n        this.userInfo.province === '610500000' ||\r\n        this.userInfo.province === '610600000' ||\r\n        this.userInfo.province === '610700000' ||\r\n        this.userInfo.province === '610800000' ||\r\n        this.userInfo.province === '610900000' ||\r\n        this.userInfo.province === '611000000' ||\r\n        this.userInfo.province === '611200000'\r\n      ) {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 4) + '%\\''\r\n        }\r\n      } else {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 6) + '%\\''\r\n        }\r\n      }\r\n      HttpModule.getTreeData1(params).then(res => {\r\n        if (res.data) {\r\n          // let treeResdata = that.getChildrenData(res.data)\r\n          // treeResdata.forEach(item => {\r\n          //   item.label = item.id + '-' + item.businessName\r\n          // })\r\n          // const result = [\r\n          //   {\r\n          //     id: 'root',\r\n          //     label: '全部',\r\n          //     code: 'root',\r\n          //     isleaf: '0',\r\n          //     children: treeResdata\r\n          //   }\r\n          // ]\r\n          that.treeData = res.data\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.treeCurrentPage = val\r\n      this.getLeftTreeData()\r\n    },\r\n    handleSizeChange(val) {\r\n    },\r\n    getChildrenData(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.text\r\n        if (item.children) {\r\n          that.getChildrenData(item.children)\r\n        }\r\n      })\r\n\r\n      return datas\r\n    }\r\n  },\r\n  created() {\r\n    console.log('this.$store.state.curNavModule', this.$store.state.curNavModule)\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.menuName = this.$store.state.curNavModule.name\r\n    this.roleId = this.$store.state.curNavModule.roleguid\r\n    this.getLeftTreeData()\r\n    // this.queryTableDatas()\r\n    // this.queryTableDatas1()\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.T-mainFormListLayout-modulebox .table-toolbar-left {\r\n  font-size: 14px;\r\n}\r\n.Titans-table .table-toolbar-left .table-toolbar-left-title.left-title-clear-float {\r\n  float: none;\r\n  margin-bottom: 4px;\r\n}\r\n</style>\r\n<style scoped>\r\n.radio-right{\r\n  float: right;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n.one-row{\r\n  width: 100%;\r\n}\r\n</style>\r\n"]}]}