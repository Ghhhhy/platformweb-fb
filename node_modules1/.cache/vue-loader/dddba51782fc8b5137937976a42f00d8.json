{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\ThemePicker\\ThemePicker.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\ThemePicker\\ThemePicker.vue","mtime":1694505521663},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696752946978},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGhlbWUtbWVzc2FnZSwNCi50aGVtZS1waWNrZXItZHJvcGRvd24gew0KICB6LWluZGV4OiA5OTk5OSAhaW1wb3J0YW50Ow0KfQ0KDQoudGhlbWUtcGlja2VyLmVsLWNvbG9yLXBpY2tlciB7DQogIGhlaWdodDogMTZweCAhaW1wb3J0YW50Ow0KfQ0KDQoudGhlbWUtcGlja2VyIC5lbC1jb2xvci1waWNrZXJfX3RyaWdnZXIgew0KICB3aWR0aDogMTVweCAhaW1wb3J0YW50Ow0KICBoZWlnaHQ6IDE2cHggIWltcG9ydGFudDsNCiAgYm94LXNoYWRvdzogMXB4IDFweCAxcHggIzIxMjEyMTg4IGluc2V0Ow0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbi1yaWdodDogNXB4Ow0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIHRvcDogM3B4Ow0KICBib3JkZXItcmFkaXVzOiAycHg7DQogIHBhZGRpbmc6IDA7DQogIGJvcmRlcjogbm9uZTsNCn0NCg0KLnRoZW1lLXBpY2tlciAuZWwtY29sb3ItcGlja2VyX19jb2xvciB7DQogIGJvcmRlcjogbm9uZTsNCn0NCg0KLnRoZW1lLXBpY2tlci1kcm9wZG93biAuZWwtY29sb3ItZHJvcGRvd25fX2xpbmstYnRuIHsNCiAgZGlzcGxheTogbm9uZTsNCn0NCg=="},{"version":3,"sources":["ThemePicker.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoJA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"ThemePicker.vue","sourceRoot":"src/components/ThemePicker","sourcesContent":["<template>\r\n  <el-color-picker\r\n    ref=\"picker\"\r\n    v-model=\"theme\"\r\n    class=\"theme-picker\"\r\n    popper-class=\"theme-picker-dropdown\"\r\n  />\r\n</template>\r\n\r\n<script>\r\nconst ORIGINAL_THEME = '#4d77e7' // default color\r\nexport default {\r\n  data() {\r\n    return {\r\n      cachedStyle: '', // content of adjust css\r\n      theme: '#4d77e7',\r\n      publicPath: process.env.NODE_ENV === 'production' ? './' : './'\r\n    }\r\n  },\r\n  computed: {},\r\n  watch: {\r\n    theme(val) {\r\n      this.changeTheme(val)\r\n    }\r\n  },\r\n  methods: {\r\n    updateStyle(style, oldCluster, newCluster) {\r\n      let newStyle = style\r\n      oldCluster.forEach((color, index) => {\r\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\r\n      })\r\n      return newStyle\r\n    },\r\n    getCSSString(url, variable, $message) {\r\n      return new Promise((resolve, reject) => {\r\n        const adjustTheme = localStorage.getItem('__bossui__adjust_theme__')\r\n        if (adjustTheme !== null) {\r\n          this[variable] = adjustTheme\r\n          resolve()\r\n        }\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\r\n            localStorage.setItem('__bossui__adjust_theme__', this[variable])\r\n            resolve()\r\n          } else if (xhr.readyState === 4) {\r\n            $message.close()\r\n            this.$XModal.message({ status: 'error', message: '切换主题失败' })\r\n            reject(new Error('切换主题失败了'))\r\n          }\r\n        }\r\n        xhr.open('GET', url)\r\n        xhr.send()\r\n      })\r\n    },\r\n    getThemeCluster(theme) {\r\n      const tintColor = (color, tint) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n        if (tint === 0) { // when primary color is in its rgb space\r\n          return [red, green, blue].join(',')\r\n        } else {\r\n          red += Math.round(tint * (255 - red))\r\n          green += Math.round(tint * (255 - green))\r\n          blue += Math.round(tint * (255 - blue))\r\n          // let brightness = (299 * red + 587 * green + 114 * blue) / 1000\r\n          red = red.toString(16)\r\n          green = green.toString(16)\r\n          blue = blue.toString(16)\r\n          // console.log(`#${red}${green}${blue}-----${brightness}`)\r\n          return `#${red}${green}${blue}`\r\n        }\r\n      }\r\n      const shadeColor = (color, shade) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n        red = Math.round((1 - shade) * red)\r\n        green = Math.round((1 - shade) * green)\r\n        blue = Math.round((1 - shade) * blue)\r\n        red = red.toString(16)\r\n        green = green.toString(16)\r\n        blue = blue.toString(16)\r\n        return `#${red}${green}${blue}`\r\n      }\r\n      const clusters = [theme]\r\n      for (let i = 0; i <= 25; i++) {\r\n        clusters.push(tintColor(theme, Number((i / 25).toFixed(2))))\r\n      }\r\n      clusters.push(shadeColor(theme, 0.1))\r\n      return clusters\r\n    },\r\n    async changeTheme(primaryColor) {\r\n      // let oldTheme = localStorage.getItem('__bossui__colortheme__') || ORIGINAL_THEME\r\n      // const oldVal = this.cachedStyle ? oldTheme : ORIGINAL_THEME\r\n      if (typeof primaryColor !== 'string') return\r\n      const themeCluster = this.getThemeCluster(primaryColor.replace('#', ''))\r\n      // const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\r\n      const $message = this.$message({\r\n        message: '切换主题中',\r\n        customClass: 'theme-message',\r\n        type: 'info',\r\n        duration: 0,\r\n        iconClass: 'ri-loader-4-line roll'\r\n      })\r\n      const getHandler = (variable, id) => {\r\n        return () => {\r\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\r\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\r\n          let styleTag = document.getElementById(id)\r\n          if (!styleTag) {\r\n            styleTag = document.createElement('style')\r\n            styleTag.setAttribute('id', id)\r\n            document.head.appendChild(styleTag)\r\n          }\r\n          styleTag.innerHTML = newStyle\r\n        }\r\n      }\r\n      if (!this.cachedStyle) {\r\n        const url = this.publicPath + '/static/css/defaultTheme.css'\r\n        await this.getCSSString(url, 'cachedStyle', $message)\r\n      }\r\n      const chalkHandler = getHandler('cachedStyle', 'adjust-style-roy')\r\n      chalkHandler()\r\n      // const styles = [].slice.call(document.querySelectorAll('style'))\r\n      //   .filter(style => {\r\n      //     const text = style.innerText\r\n      //     return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\r\n      //   })\r\n      // styles.forEach(style => {\r\n      //   const { innerText } = style\r\n      //   if (typeof innerText !== 'string') return\r\n      //   style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\r\n      // })\r\n      this.$emit('change', primaryColor)\r\n      localStorage.setItem('__bossui__colortheme__', primaryColor)\r\n      $message.close()\r\n    },\r\n    showPicker() {\r\n      this.$el.querySelector('.el-color-picker__trigger').click()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.theme-message,\r\n.theme-picker-dropdown {\r\n  z-index: 99999 !important;\r\n}\r\n\r\n.theme-picker.el-color-picker {\r\n  height: 16px !important;\r\n}\r\n\r\n.theme-picker .el-color-picker__trigger {\r\n  width: 15px !important;\r\n  height: 16px !important;\r\n  box-shadow: 1px 1px 1px #21212188 inset;\r\n  display: inline-block;\r\n  margin-right: 5px;\r\n  position: relative;\r\n  top: 3px;\r\n  border-radius: 2px;\r\n  padding: 0;\r\n  border: none;\r\n}\r\n\r\n.theme-picker .el-color-picker__color {\r\n  border: none;\r\n}\r\n\r\n.theme-picker-dropdown .el-color-dropdown__link-btn {\r\n  display: none;\r\n}\r\n</style>\r\n"]}]}