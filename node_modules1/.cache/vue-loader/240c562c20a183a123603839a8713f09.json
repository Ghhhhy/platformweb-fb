{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\InquiryLetterCreate\\children\\filePreview.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\InquiryLetterCreate\\children\\filePreview.vue","mtime":1695716045048},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["filePreview.vue"],"names":[],"mappingsfile":"filePreview.vue","sourceRoot":"src/views/main/MointoringMatters/InquiryLetterCreate/children","sourcesContent":["<template>\r\n  <vxe-modal\r\n    id=\"filePreview\"\r\n    ref=\"filePreviewRef\"\r\n    v-model=\"dialogVisible\"\r\n    width=\"90%\"\r\n    height=\"90%\"\r\n    :resize=\"resize\"\r\n    :dblclick-zoom=\"resize\"\r\n    storage\r\n    transfer\r\n    esc-closable\r\n    :loading=\"loading\"\r\n    @zoom=\"zoomCallback\"\r\n  >\r\n    <template v-slot:title>\r\n      <span>{{ topTitle }}</span>\r\n    </template>\r\n    <template v-slot>\r\n      <div style=\"text-align: center;\">\r\n        <div v-if=\"fileShow\">\r\n          <!-- 图片 -->\r\n          <el-image\r\n            v-if=\"fileType === 'img'\"\r\n            :src=\"url\"\r\n            fit=\"contain\"\r\n          />\r\n          <!-- 视频 -->\r\n          <video-player\r\n            v-if=\"fileType === 'video'\"\r\n            class=\"video-player vjs-custom-skin\"\r\n            :playsinline=\"true\"\r\n            :options=\"positivePlayerOptions\"\r\n          />\r\n          <!-- 音乐 -->\r\n          <Aplayer\r\n            v-if=\"fileType === 'music'\"\r\n            :music=\"musicOptions\"\r\n          />\r\n          <!-- word -->\r\n          <div v-if=\"fileType === 'word' || fileType === 'pdf'\" class=\"dialog-body-content-base-style\">\r\n            <iframe\r\n              frameborder=\"0\"\r\n              :src=\"url\"\r\n              width=\"100%\"\r\n              :style=\"style\"\r\n            >\r\n            </iframe>\r\n          </div>\r\n          <div v-if=\"fileType === ''\" style=\"text-align:left\">\r\n            <span style=\"color: red; font-weight: 700\">\r\n              <i class=\"vxe-icon--warning\"></i>\r\n              {{ file.suffix }}格式的文件不支持预览，请下载之后查看\r\n            </span>\r\n            <span>\r\n              <el-divider content-position=\"left\">支持如下附件类型进行预览</el-divider>\r\n            </span>\r\n            <div style=\"padding-left: 30px\">\r\n              <span>txt</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>sql</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>java</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>js</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>html</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>xml</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>css</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>yml</span>\r\n              <br>\r\n\r\n              <span>png</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>jpg</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>jpeg</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>bmp</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>gif</span>\r\n              <br>\r\n\r\n              <span>doc</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>docx</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>xlsx</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>xls</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>ppt</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>pptx</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>pdf</span>\r\n              <br>\r\n\r\n              <span>mp4</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>m2v</span>\r\n              <el-divider direction=\"vertical\" />\r\n              <span>mkv</span>\r\n              <br>\r\n\r\n              <span>mp3</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-if=\"errorShow\">\r\n          <span style=\"color: red\">\r\n            <i class=\"vxe-icon--warning\"></i>\r\n            附件加载失败\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </template>\r\n  </vxe-modal>\r\n</template>\r\n\r\n<script>\r\nimport Aplayer from 'vue-aplayer'\r\nexport default {\r\n  name: 'FilePreview',\r\n  components: { Aplayer },\r\n  props: {\r\n    visible: {\r\n      type: Boolean,\r\n      default() {\r\n        return false\r\n      }\r\n    },\r\n    fileGuid: {\r\n      type: String,\r\n      default() {\r\n        return ''\r\n      }\r\n    },\r\n    appId: {\r\n      type: String,\r\n      default() {\r\n        return 'pay_voucher'\r\n      }\r\n    },\r\n    topTitle: {\r\n      type: String,\r\n      default() {\r\n        return '查看'\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      resize: false,\r\n      loading: false,\r\n      style: {\r\n        height: 'calc(100vh - 1px)'\r\n      },\r\n      errorShow: false,\r\n      fileShow: false,\r\n      title: '附件预览',\r\n      // 文本类型文件后缀\r\n      textType: ['txt', 'sql', 'java', 'js', 'html', 'xml', 'css', 'yml'],\r\n      // 图片类型文件后缀\r\n      imgType: ['png', 'jpg', 'jpeg', 'bmp', 'gif'],\r\n      // office文件类型后缀\r\n      officeType: ['doc', 'docx', 'xlsx', 'xls', 'ppt', 'pptx'],\r\n      // pdf文件后缀\r\n      pdfType: ['pdf'],\r\n      // 视频类型文件后缀\r\n      videoType: ['mp4', 'm2v', 'mkv'],\r\n      // 音乐类型文件后缀\r\n      musicType: ['mp3'],\r\n      // 压缩包相关\r\n      compressType: ['zip', 'tar'],\r\n      // 不支持的文件类型\r\n      notSupportType: [],\r\n      dialogVisible: this.visible,\r\n      url: '',\r\n      fileType: '',\r\n      file: {},\r\n      musicOptions: {\r\n        title: 'Preparation',\r\n        // author: '',\r\n        url: 'http://devtest.qiniudn.com/Preparation.mp3',\r\n        // pic: 'http://devtest.qiniudn.com/Preparation.jpg',\r\n        lrc: '[00:00.00]lrc here\\n[00:01.00]aplayer'\r\n      },\r\n      // 播放器配置\r\n      positivePlayerOptions: {\r\n        playbackRates: [0.5, 1.0, 1.5, 2.0], // 播放速度\r\n        autoplay: false, // 如果true,浏览器准备好时开始回放。\r\n        muted: false, // 默认情况下将会消除任何音频。\r\n        loop: false, // 导致视频一结束就重新开始。\r\n        preload: 'auto', // 建议浏览器在<video>加载元素后是否应该开始下载视频数据。auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\r\n        language: 'zh-CN',\r\n        aspectRatio: '16:13', // 将播放器置于流畅模式，并在计算播放器的动态大小时使用该值。值应该代表一个比例 - 用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\r\n        fluid: true, // 当true时，Video.js player将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\r\n        sources: [{\r\n          type: '',\r\n          src: '' // 视频url地址\r\n        }],\r\n        poster: '', // 你的封面地址\r\n        // width: document.documentElement.clientWidth,\r\n        notSupportedMessage: '此视频暂无法播放，请稍后再试', // 允许覆盖Video.js无法播放媒体源时显示的默认信息。\r\n        controlBar: {\r\n          timeDivider: true,\r\n          durationDisplay: true,\r\n          remainingTimeDisplay: false,\r\n          fullscreenToggle: true // 全屏按钮\r\n        },\r\n        common: 'positivePlayer'\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    mountedInit() {\r\n      this.toPdf()\r\n    },\r\n    // resize回调函数，计算高度\r\n    zoomCallback(type, $event) {\r\n      let curModalHeight = this.$refs.filePreviewRef.getBox().style.height\r\n      let curModalHeightNumber = curModalHeight.substring(0, curModalHeight.length - 2)\r\n      // todo 这里要减去的应该是导航栏敢赌，现在先写死\r\n      curModalHeightNumber = curModalHeightNumber - 65\r\n      this.style = {\r\n        height: curModalHeightNumber + 'px'\r\n      }\r\n    },\r\n    inArray(type, types) {\r\n      let flag = false\r\n      for (let i = 0; i < types.length; i++) {\r\n        if (type === types[i]) {\r\n          flag = true\r\n          break\r\n        }\r\n      }\r\n      return flag\r\n    },\r\n    // 将word等文件转成pdf进行预览\r\n    toPdf() {\r\n      if (!this.$store.getters.isSx) {\r\n        window.open(`${process.env.BASE_URL}fileView.html?fileguid=` + this.fileGuid + '&appid=' + this.appId)\r\n        return\r\n      }\r\n      this.loading = true\r\n      let filePreviewService = ''\r\n      if (process.env.NODE_ENV === 'development') {\r\n        filePreviewService = window.gloableToolFn.serverGatewayMap.development.filePreviewService\r\n      } else if (process.env.NODE_ENV === 'production') {\r\n        filePreviewService = window.gloableToolFn.serverGatewayMap.production.filePreviewService\r\n      }\r\n      const urlObj = filePreviewService + '/v1/file_preview'\r\n      this.$http.get(urlObj, { appId: this.appId, fileId: this.fileGuid }).then(res => {\r\n        if (res.code === 200) {\r\n          this.file = res.data\r\n          this.buildFileType()\r\n          this.fileShow = true\r\n          this.errorShow = false\r\n          this.loading = false\r\n        } else {\r\n          this.$message({ type: 'warning', message: res.msg })\r\n          this.fileShow = false\r\n          this.errorShow = true\r\n          this.loading = false\r\n          this.resize = false\r\n        }\r\n      }).catch(error => {\r\n        console.log(error)\r\n        this.$message({ type: 'error', message: error })\r\n        this.fileShow = false\r\n        this.errorShow = true\r\n        this.loading = false\r\n        this.resize = false\r\n      })\r\n    },\r\n    buildFileType() {\r\n      var cur = window.document.location.href.split('/')[2]\r\n      console.log(cur)\r\n      let fileSuffix = this.file.suffix\r\n      this.title = this.file.filename\r\n      // let newUrl = 'https://' + cur + '/filePreviewService' + '/' + this.file.path.split('/').splice(3).toString().replace(/,/g, '/')\r\n      let filePreviewService = ''\r\n      if (process.env.NODE_ENV === 'development') {\r\n        filePreviewService = window.gloableToolFn.serverGatewayMap.development.filePreviewService\r\n      } else if (process.env.NODE_ENV === 'production') {\r\n        filePreviewService = window.gloableToolFn.serverGatewayMap.production.filePreviewService\r\n      }\r\n      let newUrl = filePreviewService + '/' + this.file.path.split('/').splice(3).toString().replace(/,/g, '/')\r\n      this.url = newUrl\r\n      console.log(newUrl)\r\n      this.positivePlayerOptions.sources[0].src = this.url\r\n      if (this.inArray(fileSuffix, this.notSupportType)) {\r\n        this.fileType = 'noSupport'\r\n        return\r\n      }\r\n      if (this.inArray(fileSuffix, this.imgType)) {\r\n        this.fileType = 'img'\r\n        return\r\n      }\r\n      if (this.inArray(fileSuffix, this.videoType)) {\r\n        this.fileType = 'video'\r\n        return\r\n      }\r\n      if (this.inArray(fileSuffix, this.musicType)) {\r\n        this.fileType = 'music'\r\n        this.style.height = '70px'\r\n        this.musicOptions.url = this.url\r\n        this.musicOptions.title = this.title\r\n        return\r\n      }\r\n      if (this.inArray(fileSuffix, this.officeType) ||\r\n        this.inArray(fileSuffix, this.textType) ||\r\n        this.inArray(fileSuffix, this.pdfType)) {\r\n        this.fileType = 'word'\r\n        this.resize = true\r\n        return\r\n      }\r\n      if (this.inArray(fileSuffix, ['pdf'])) {\r\n        this.fileType = 'pdf'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mountedInit()\r\n  },\r\n  watch: {\r\n    dialogVisible: {\r\n      handler(newval) {\r\n        this.$emit('update:visible', newval)\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n</style>\r\n"]}]}