{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\platformReport\\DataReport\\reportSearch.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\platformReport\\DataReport\\reportSearch.vue","mtime":1694576524818},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["reportSearch.vue"],"names":[],"mappingsfile":"reportSearch.vue","sourceRoot":"src/views/platformReport/DataReport","sourcesContent":["<!--  formList模版   Author:Titans@2396757591@qq.com -->\r\n<template>\r\n  <div v-loading=\"showLoading\" class=\"height-all reportSearchModel\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftVisible\">\r\n      <template v-slot:mainForm>\r\n        <div class=\"main-query\">\r\n          <BsQuery\r\n            v-if=\"isquery\"\r\n            ref=\"queryForm\"\r\n            :query-form-item-config=\"queryFormItemConfigIn\"\r\n            :query-form-data=\"queryFormData\"\r\n            :query-config=\"queryConfig\"\r\n            @onSearchClick=\"onSearchClick\"\r\n            @onSearchResetClick=\"onresetSearchClick\"\r\n            @itemChange=\"itemChange\"\r\n          />\r\n        </div>\r\n        <div\r\n          v-for=\"(item, index) in inputTableTreeData\"\r\n          :key=\"index\"\r\n          :style=\"{ height: item.id === currentTableNode.id ? '7%' : '0px' }\"\r\n        >\r\n          <div v-show=\"item.id === currentTableNode.id\" :style=\"{ height: item.id === currentTableNode.id ? '100%' : '0px' }\">\r\n            <div class=\"main-query\">\r\n              <BsQuery\r\n                :ref=\"'queryForm' + item.id\"\r\n                :query-form-item-config=\"queryFormItemConfigIn\"\r\n                :query-form-data=\"queryFormData\"\r\n                :query-config=\"queryConfig\"\r\n                :edit-rules=\"queryFormRules\"\r\n                @onSearchClick=\"onSearchClick\"\r\n                @onSearchResetClick=\"onresetSearchClick\"\r\n                @itemChange=\"itemChange\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <template>\r\n          <div style=\"height:95%\">\r\n            <div\r\n              v-for=\"(item, index) in inputTableTreeData\"\r\n              :key=\"index\"\r\n              :style=\"{ height: item.id === currentTableNode.id ? '100%' : '0px' }\"\r\n            >\r\n              <div\r\n                v-show=\"item.id === currentTableNode.id\"\r\n                :style=\"{ height: item.id === currentTableNode.id ? '100%' : '0px' }\"\r\n              >\r\n                <DatavReportView\r\n                  :ref=\"'datavReportView' + item.id\"\r\n                  :isload=\"item.isLoad\"\r\n                  :report-params=\"reportParams\"\r\n                  :style=\"{ height: item.id === currentTableNode.id ? '100%' : '0px' }\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n  </div>\r\n</template>\r\n<script>\r\nimport DatavReportView from '../platformReport/index.vue'\r\nimport resolveResult from '@/utils/result.js'\r\nimport { get } from '@/api/http'\r\nexport default {\r\n  name: 'DatavReportSearch',\r\n  components: {\r\n    DatavReportView\r\n  },\r\n  props: {\r\n  },\r\n  data() {\r\n    return {\r\n      percentNum: 50,\r\n      isquery: true,\r\n      queryConfig: {\r\n        searchBtnText: '查询',\r\n        resetBtnText: false\r\n      },\r\n      unitArr: [], // 全部单位数据\r\n      checkedkeys: ['10000'],\r\n      shfundtype: null,\r\n      Batchno: null,\r\n      datatype: null,\r\n      leftTreeShow: false,\r\n      leftVisible: false,\r\n      agencyTreeConfig: {\r\n        isPramas: false,\r\n        showFilter: false, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 1, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '请选择',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{code}-{name}', // {code}-{name}\r\n          nodeKey: 'id', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        axiosConfig: {\r\n          rootName: '全部',\r\n          successCode: '100000', // 成功code\r\n          statusField: 'code',\r\n          method: 'get', // 请求方式\r\n          url: '' // 'queryTreeAssistData', // 是否调用接口直接获取数据，当此项有值时将会自动家数据\r\n        },\r\n        defaultSelectFirstLeafNode: true,\r\n        multiple: true, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true\r\n      },\r\n      currentAgencyTreeNodeKey: '',\r\n      currentAgencyNode: {},\r\n      agencyTreeQueryparams: {\r\n        roleGuid: this.$store.state.curNavModule.roleguid,\r\n        // eleCode: 'VW_BAS_AGENCY_PR_TREE',\r\n        // eleCode: 'vw_bas_mof_dep_tree',\r\n        eleCode: 'VW_BAS_AGENCY_INFO_LEAF_TREE',\r\n        queryCondition: this.transJson(this.$store.state.curNavModule.param5).queryCondition\r\n      },\r\n      agencyTreeFilterText: '',\r\n      agencyTreeData: [],\r\n      inputTableTreeConfig: {\r\n        showFilter: false, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 1, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{name}',\r\n        placeholder: '请选择',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{name}', // {code}-{name}\r\n          nodeKey: 'id', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        axiosConfig: {\r\n          successCode: '100000', // 成功code\r\n          statusField: 'code',\r\n          method: 'post', // 请求方式\r\n          url: ''\r\n          // url: 'bisBudget/cfg/bgtCfgAgencyToReport/reportTree' // 'queryTreeAssistData', // 是否调用接口直接获取数据，当此项有值时将会自动家数据\r\n        },\r\n        defaultSelectFirstLeafNode: false,\r\n        multiple: false, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true\r\n      },\r\n      inputTableTreeQueryparams: {\r\n        type: ''\r\n      },\r\n      inputTableTreeFilterText: '',\r\n      inputTableTreeData: [],\r\n      tablePanls: [],\r\n      currentTableTreeNodeKey: '',\r\n      showLoading: false,\r\n      reportParams: {},\r\n      params5: {},\r\n      tabSelect: {},\r\n      delarLoading: false,\r\n      checkedForms: {\r\n        sql_batch_no: '',\r\n        sql_datatype: ''\r\n      },\r\n      checkedAgencys: {\r\n        agencyIds: '',\r\n        agencyCodes: '',\r\n        agencyNames: '',\r\n        deptCodes: '',\r\n        sql_dept_code: '',\r\n        sql_agency_code: ''\r\n      },\r\n      currentTableNode: {},\r\n      queryFormRules: {},\r\n      queryFormData: {\r\n        jzsj: this.getNowFormatDate()// 截止日期默认当天\r\n      },\r\n      shFundType_: '',\r\n      shFundType_Code: '',\r\n      shFundType_Id: '',\r\n      shFundType_Name: '',\r\n      queryFormItemConfigIn: [],\r\n      recordMap: [],\r\n      usertype: '',\r\n      newDataArr: '',\r\n      defshFundType: ''\r\n    }\r\n  },\r\n  computed: {\r\n    curNavModule() {\r\n      return this.$store.state.curNavModule\r\n    },\r\n    userInfo() {\r\n      return this.$store.state.userInfo\r\n    }\r\n  },\r\n  methods: {\r\n    ...resolveResult,\r\n    initFiscalConfig(menuguid) {\r\n      let self = this\r\n      let data = this.$refs.queryForm.getFormData()\r\n      this.queryFormItemConfigIn.forEach((item) => {\r\n        if (item.field === 'batchNo') {\r\n          data.batchNo = '2'\r\n        }\r\n        if (item.field === 'datatype') {\r\n          if (this.$store.state.userInfo.province === '310000000') {\r\n            if (self.userInfo.usertype === '0') {\r\n              data.datatype = '1'\r\n            } else if (self.userInfo.usertype === '1') {\r\n              data.datatype = '5'\r\n            } else if (self.userInfo.usertype === '2') {\r\n              data.datatype = '3'\r\n            } else {\r\n              data.datatype = '0'\r\n            }\r\n          }\r\n        }\r\n        if (item.field === 'qssj') {\r\n          data.qssj = new Date(Date.parse(new Date().getFullYear() + '-1-1')).format('YYYY-MM-DD')\r\n        }\r\n      })\r\n      this.queryFormData = data\r\n      get('/bisBudget/api/budget/bisBudget/bgtFbConfig/getFbPageConfig?menuguid=' + menuguid).then(res => {\r\n        // get('http://43.143.57.251:6015/api/budget/bisBasicinfo/basicinfo/basAgencyInfoGd/queryAgencyTree?menuguid=' + menuguid).then(res => {\r\n        if (res && res.code === '100000') {\r\n          let optionsss = []\r\n          let options = ''\r\n          if (res.data && res.data.reportdatatype) {\r\n            options = res.data.reportdatatype\r\n          }\r\n          if (options && options !== '') {\r\n            let optionss = options.split('#')\r\n            optionss.forEach(s => {\r\n              let ss = s.split('=')\r\n              let value = ss[0]\r\n              let label = ss[1]\r\n              optionsss.push({ value: value, label: label })\r\n            })\r\n            this.queryFormItemConfigIn.forEach((item) => {\r\n              if (item.field === 'datatype') {\r\n                item.itemRender.options = optionsss\r\n              }\r\n            })\r\n            // this.queryFormItemConfigIn[2].itemRender.options = optionsss\r\n          }\r\n        }\r\n      })\r\n    },\r\n    getFirstId(data) {\r\n      if (data && data.length > 0) {\r\n        let firstData = data[0]\r\n        let getChildrenId = (data) => {\r\n          if (data && data.length > 0) {\r\n            let child = data[0]\r\n            if (child.children && child.children.length > 0) {\r\n              return getChildrenId(child.children)\r\n            } else {\r\n              return child.id\r\n            }\r\n          } else {\r\n            return ''\r\n          }\r\n        }\r\n        let id = getChildrenId(firstData.children)\r\n        if (id === '') {\r\n          id = firstData.id\r\n        }\r\n        return id\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    showDialog() {\r\n      this.dialogVisible = true\r\n    },\r\n    onTreeLoaded({ treeData, tree, currentNodeKey, curSelectNode }, bstree) {\r\n      let id = this.getFirstId(treeData)\r\n      if (id && id !== null && id !== '') {\r\n        tree.setCurrentKey(id)\r\n        bstree.defaultExpandedKeys = [id]\r\n      }\r\n      if (curSelectNode) {\r\n        this.currentAgencyTreeNodeKey = curSelectNode.id\r\n        this.currentAgencyNode = curSelectNode\r\n      }\r\n      // this.onAgencyTreeNodeClick({ node: curSelectNode })\r\n    },\r\n    onAgencyTreeNodeClick({ node }) {\r\n    },\r\n    itemChange(obj) {\r\n      let DataArr = []\r\n      obj.$form.$children[0].$children[0].curCheckednodes.forEach((item) => {\r\n        DataArr.push(item.code)\r\n      })\r\n      this.newDataArr = DataArr.map(i => '\\'' + i + '\\'').join(',')\r\n    },\r\n    onSearchClick() {\r\n      let self = this\r\n      if (this.showFlag !== '2') {\r\n        if (!this.checkedAgencys.agencyCodes) {\r\n          this.$XModal.message({ status: 'info', message: '请先选择预算单位' })\r\n          return false\r\n        }\r\n      }\r\n      if (!self.currentTableNode) {\r\n        this.$XModal.message({ status: 'info', message: '请先选择查询表' })\r\n        return false\r\n      }\r\n      if (self.$refs['queryForm' + self.currentTableNode.id][0].getFormData().batchNo) {\r\n        self.checkedForms.sql_batch_no = self.$refs['queryForm' + self.currentTableNode.id][0].getFormData().batchNo\r\n      }\r\n      if (self.$refs['queryForm' + self.currentTableNode.id][0].getFormData().datatype) {\r\n        self.checkedForms.sql_datatype = self.$refs['queryForm' + self.currentTableNode.id][0].getFormData().datatype\r\n      }\r\n      self.setReportableParams(self.currentTableNode)\r\n      console.log(this.reportParams, 888888888)\r\n      this.inputTableTreeData.forEach(v => {\r\n        if (v.id === self.currentTableNode.id) {\r\n          v['isLoad'] = true\r\n        }\r\n      })\r\n      this.$nextTick(() => {\r\n        console.log('当前查询表为：', self.currentTableNode.name)\r\n        self.$refs['datavReportView' + self.currentTableNode.id][0].parentCallSearch()\r\n        // self.$refs[`datavReportView${self.currentTableNode.id}`][0].parentCallSearch()\r\n      })\r\n      this.inputTableTreeData.forEach(v => {\r\n        if (v.id === self.currentTableNode.id) {\r\n          v['isLoad'] = false\r\n        }\r\n      })\r\n    },\r\n    onInputTableTreeNodeClick(node) {\r\n      let self = this\r\n      if (this.showFlag !== '2') {\r\n        if (!this.checkedAgencys.agencyCodes) {\r\n          this.$XModal.message({ status: 'info', message: '请先选择预算单位' })\r\n          return false\r\n        }\r\n      }\r\n      if (node && node.id) {\r\n        this.isquery = false\r\n        this.currentTableNode = node\r\n        this.$nextTick(() => {\r\n          // 资金渠道真实的值（全局搜newDataArr）\r\n          this.newDataArr = self.defshFundType.split(',').map(v => {\r\n            v = `'${v}'`\r\n            return v\r\n          })\r\n          this.newDataArr = this.newDataArr.join(',')\r\n          this.inputTableTreeData.forEach(v => {\r\n            if (v.id === node.id) {\r\n              v['isLoad'] = true\r\n            } else {\r\n              v['isLoad'] = false\r\n            }\r\n          })\r\n          if (self.recordMap.indexOf(self.currentTableNode.id) !== -1) {\r\n            console.log('当前跳过查询表为：', self.currentTableNode.name)\r\n            return\r\n          }\r\n          setTimeout(() => {\r\n            this.onSearchClick()\r\n            this.recordMap.push(node.id) // 有时间改成得到值再记录\r\n          }, 10)\r\n        })\r\n        // this.$refs.bsTab.curTabSelect = this.deepCopy(node)\r\n      } else {\r\n        this.$XModal.message({ status: 'info', message: '请先选择预算单位' })\r\n      }\r\n    },\r\n    // onNodeCheckChange(a) {\r\n    //   // this.delarLoading = true\r\n    //   let agencies = this.$refs.agencyTree.curCheckednodes\r\n    //   if (!agencies || agencies.length === 0 || (agencies.length === 1 && agencies[0].code === 'root' && agencies[0].children.length === 0)) {\r\n    //     // this.$XModal.message({ status: 'info', message: '请' })\r\n    //     this.checkedAgencys.agencyCodes = ''\r\n    //     return\r\n    //   }\r\n    //   let agency = agencies.filter(item => item.isleaf).map(item => { return item })\r\n    //   let agencyIds = agency.map(v => v.id)\r\n    //   let agencyCodes = agency.map(v => v.code)\r\n    //   let agencyNames = agency.map(v => v.name)\r\n    //   let deptCodes = Array.from(new Set(agency.map(v => v.code.substr(0, 3))))\r\n    //   let sqlAgencyCode = agencyCodes.map(i => '\\'' + i + '\\'').join(',')\r\n    //   let sqlDeptCode = deptCodes.map(i => '\\'' + i + '\\'').join(',')\r\n    //   this.checkedAgencys = {\r\n    //     agencyIds,\r\n    //     agencyCodes,\r\n    //     agencyNames,\r\n    //     deptCodes,\r\n    //     sql_agency_code: sqlAgencyCode,\r\n    //     sql_dept_code: sqlDeptCode\r\n    //   }\r\n    //   if (this.currentTableNode) {\r\n    //     this.setReportableParams(this.currentTableNode)\r\n    //   }\r\n    //   // setTimeout(() => {\r\n    //   //   this.delarLoading = false\r\n    //   // }, 500)\r\n    // },\r\n    getReportData() {\r\n      let menuGuidValue = this.params5.reportMenu\r\n      if (!this.params5.reportMenu) {\r\n        menuGuidValue = this.curNavModule.guid\r\n      }\r\n      let param = {\r\n        type: this.params5.reportType,\r\n        // agencyId: agencyIds,\r\n        // menuGuid: '30828356A82C49EBA4EF7EBBA1F90989'\r\n        menuGuid: menuGuidValue\r\n      }\r\n      let self = this\r\n      // *******************\r\n      self.$http.post('/bisBudget/api/budget/bisBudget/cfg/bgtCfgAgencyToReport/queryReportTree', param).then((res) => {\r\n        // self.$http.post('http://43.143.57.251:6015/api/budget/bisBudget/cfg/bgtCfgAgencyToReport/queryReportTree', param).then((res) => {\r\n        self.resolveResult(data => {\r\n          self.inputTableTreeData = data\r\n          self.inputTableTreeData.forEach(v => {\r\n            v['isLoad'] = false\r\n          })\r\n        }, res)\r\n        this.onInputTableTreeNodeClick(res.data[0])\r\n      }).catch((e) => {\r\n        self.$XModal.message({ status: 'error', message: '获取列表失败：' + e })\r\n        self.showLoading = false\r\n      })\r\n    },\r\n    ArrayData(DataArr) {\r\n      // let DataArr = JSON.parse(JSON.stringify(array))\r\n      DataArr.forEach(v => {\r\n        this.unitArr.push(v)\r\n        if (v.children.length >= 1) {\r\n          this.ArrayData(v.children)\r\n        }\r\n      })\r\n      return this.unitArr\r\n    },\r\n    getTreeData() {\r\n      let self = this\r\n      this.showLoading = true\r\n      self.$http.get('/bisBudget/api/budget/bisBasicinfo/basicinfo/basAgencyInfoGd/queryAgencyTree', self.agencyTreeQueryparams).then((res) => {\r\n        // self.$http.get('http://43.143.57.251:6015/api/budget/bisBasicinfo/basicinfo/basAgencyInfoGd/queryAgencyTree', self.agencyTreeQueryparams).then((res) => {\r\n        // 默认拿到这个数的全选数据\r\n        this.unitArr = []\r\n        let agencies = this.ArrayData(res.data)\r\n        let agency = agencies.filter(item => item.isleaf).map(item => { return item })\r\n        let agencyIds = agency.map(v => v.id)\r\n        let agencyCodes = agency.map(v => v.code)\r\n        let agencyNames = agency.map(v => v.name)\r\n        let deptCodes = Array.from(new Set(agency.map(v => v.code.substr(0, 3))))\r\n        let sqlAgencyCode = agencyCodes.map(i => '\\'' + i + '\\'').join(',')\r\n        let sqlDeptCode = deptCodes.map(i => '\\'' + i + '\\'').join(',')\r\n        this.checkedAgencys = {\r\n          agencyIds,\r\n          agencyCodes,\r\n          agencyNames,\r\n          deptCodes,\r\n          sql_agency_code: sqlAgencyCode,\r\n          sql_dept_code: sqlDeptCode\r\n        }\r\n        console.log(this.checkedAgencys, 'this.checkedAgencys ')\r\n        this.showLoading = false\r\n        this.getReportData()\r\n        if (this.currentTableNode) {\r\n          this.setReportableParams(this.currentTableNode)\r\n        }\r\n      }).catch((e) => {\r\n        self.$XModal.message({ status: 'error', message: '获取列表失败：' + e })\r\n      })\r\n    },\r\n    getQueryFormData() {\r\n      let param = {\r\n        eleCode: 'SHFUND_TYPE'\r\n      }\r\n      let self = this\r\n      self.$http.post('/bisBudget/api/budget/bisConfig/config/common/queryTreeAssistData', param).then((res) => {\r\n        // self.$http.post('http://43.143.57.251:6015/api/budget/bisBudget/budget/bisConfig/config/common/queryTreeAssistData', param).then((res) => {\r\n        self.showLoading = false\r\n        self.resolveResult(data => {\r\n          // 传输数据\r\n          let defSort = self.getAllData(data)\r\n          let defshFundType = []\r\n          defSort.forEach(item => {\r\n            defshFundType.push(item.code)\r\n          })\r\n          self.defshFundType = defshFundType.toString()\r\n          // 显示数据\r\n          let datas = self.getAllChildren(data)\r\n          let getqueryFormData = []\r\n          let getqueryFormDataCode = []\r\n          let getqueryFormDataId = []\r\n          let getqueryFormDataName = []\r\n          datas.forEach(item => {\r\n            getqueryFormData.push(item.code + '##' + item.name + '##' + item.guid)\r\n            getqueryFormDataCode.push(item.code)\r\n            getqueryFormDataId.push(item.guid)\r\n            getqueryFormDataName.push(item.name)\r\n          })\r\n          let datass = this.$refs.queryForm.getFormData()\r\n          datass.shFundType = getqueryFormData.join(',')\r\n          datass.shFundTypeCode = getqueryFormDataCode.join(',')\r\n          datass.shFundTypeId = getqueryFormDataId.join(',')\r\n          datass.shFundTypeName = getqueryFormDataName.join(',')\r\n          this.queryFormData = datass\r\n        }, res)\r\n      }).catch((e) => {\r\n        self.$XModal.message({ status: 'error', message: '获取列表失败：' + e })\r\n        self.showLoading = false\r\n      })\r\n    },\r\n    getAllChildren(data, children = []) {\r\n      data.forEach(item => {\r\n        if (item.children && item.children.length) {\r\n          this.getAllChildren(item.children, children)\r\n        } else {\r\n          children.push(item)\r\n        }\r\n      })\r\n      return children\r\n    },\r\n    getAllData(data, children = []) {\r\n      data.forEach(item => {\r\n        children.push(item)\r\n        if (item.children && item.children.length) {\r\n          // children.push(item.code)\r\n          this.getAllData(item.children, children)\r\n        }\r\n      })\r\n      return children\r\n    },\r\n    setReportableParams(inputReport) {\r\n      this.showLoading = false\r\n      let self = this\r\n      let formData = {}\r\n      if (self.$refs['queryForm' + self.currentTableNode.id]) {\r\n        formData = self.$refs['queryForm' + self.currentTableNode.id][0].getFormData()\r\n        for (var v in formData) {\r\n          if (v.endsWith('Code')) {\r\n            let data = formData[v].split(',').map(v => {\r\n              v = `'${v}'`\r\n              return v\r\n            })\r\n            formData[v] = data.join(',')\r\n          }\r\n        }\r\n      }\r\n      this.reportParams = {\r\n        code: inputReport.id,\r\n        paramsObj: {\r\n          title: inputReport.name,\r\n          city: '上海市',\r\n          agencyCode: this.checkedAgencys.agencyCodes,\r\n          agencyId: this.checkedAgencys.agencyIds,\r\n          agencyName: this.checkedAgencys.agencyNames,\r\n          deptCode: this.checkedAgencys.deptCodes,\r\n          sql_agency_code: this.checkedAgencys.sql_agency_code,\r\n          sql_dept_code: this.checkedAgencys.sql_dept_code,\r\n          menuGuid: this.$store.state.curNavModule.guid,\r\n          roleGuid: this.$store.state.curNavModule.roleguid,\r\n          mofDivCode: this.$store.state.userInfo.admdiv,\r\n          mof_div_code: this.$store.state.userInfo.province,\r\n          fiscalYear: this.$store.state.userInfo.year,\r\n          sql_shfundtype_code: self.newDataArr,\r\n          sql_datatype: this.checkedForms.sql_datatype,\r\n          sql_batch_no: this.checkedForms.sql_batch_no,\r\n          ...formData\r\n        }\r\n      }\r\n    },\r\n    transJson(str) {\r\n      if (!str) return\r\n      var params = str.split(',')\r\n      var result = {}\r\n      if (params && params.length > 0) {\r\n        for (var i = 0; i < params.length; i++) {\r\n          var map = params[i].split('=')\r\n          result[map[0]] = map[1]\r\n        }\r\n      }\r\n      return result\r\n    },\r\n    getreportParams() {\r\n      // this.params5 = this.$store.getters.getMenuParams5\r\n      this.params5 = this.transJson(this.$store.state.curNavModule.param5)\r\n    },\r\n    deepCopy(obj) { // 深拷贝通用方法\r\n      // var new_arr = JSON.parse(JSON.stringify(arr)) // 不仅可拷贝数组还能拷贝对象（ 但不能拷贝函数）\r\n      // 只拷贝对象\r\n      let me = this\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      // 根据obj的类型判断是新建一个数组还是一个对象\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        // 遍历obj,并且判断是obj的属性才拷贝\r\n        if (obj.hasOwnProperty(key)) {\r\n          // 判断属性值的类型，如果是对象递归调用深拷贝\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n    queryFormItem(dicCode) {\r\n      let self = this\r\n      get('/bisBudget/api/budget/bisConfig/config/report/getBossReportConfig', { dicCode }).then(res => {\r\n        self.resolveResult(data => {\r\n          self.queryFormItemConfigIn = JSON.parse(data.formItems)\r\n          // 下拉数需要拼接（window.location.pathname）\r\n          self.queryFormItemConfigIn.forEach(v => {\r\n            if (v.itemRender.props.config.axiosConfig.url) {\r\n              // 固定写法 报表固定网关\r\n              v.itemRender.props.config.isPramas = false\r\n              v.itemRender.props.config.axiosConfig.url = 'fiscal/api/budget' + v.itemRender.props.config.axiosConfig.url\r\n            }\r\n          })\r\n          console.log(self.queryFormItemConfigIn, 'self.queryFormItemConfigIn')\r\n          this.initFiscalConfig(this.$store.state.curNavModule.guid)\r\n        }, res)\r\n      }).catch(e => {\r\n        self.$XModal.message({ status: 'error', message: '获取配置列失败' })\r\n      })\r\n    },\r\n    // 获取当前时间\r\n    getNowFormatDate() {\r\n      let date = new Date()\r\n      let seperator1 = '-' // 格式分隔符\r\n      let year = date.getFullYear() // 获取完整的年份(4位)\r\n      let month = date.getMonth() + 1 // 获取当前月份(0-11,0代表1月)\r\n      let strDate = date.getDate() // 获取当前日(1-31)\r\n      if (month >= 1 && month <= 9) month = '0' + month // 如果月份是个位数，在前面补0\r\n      if (strDate >= 0 && strDate <= 9) strDate = '0' + strDate // 如果日是个位数，在前面补0\r\n      let currentdate = year + seperator1 + month + seperator1 + strDate\r\n      return currentdate\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getreportParams()\r\n    this.agencyTreeQueryparams.eleCode = this.params5.eleCode\r\n    // this.getReportData()\r\n    this.getTreeData()\r\n  },\r\n  created() {\r\n    // this.getTreeData()\r\n    this.getreportParams()\r\n    if (this.params5.showFlag === '2') {\r\n      this.showFlag = '2'\r\n      this.percentNum = 0\r\n    } else {\r\n      // 默认值 '1'\r\n      // this.showFlag = '1'\r\n      this.showFlag = '1'\r\n      this.percentNum = 50\r\n    }\r\n    if (this.params5.dicCode) {\r\n      this.queryFormItem(this.params5.dicCode)\r\n      this.getQueryFormData()\r\n    }\r\n    // 当前时间\r\n    this.$nextTick(() => {\r\n      this.queryFormData.jzsj__viewSort = this.getNowFormatDate()\r\n      this.queryFormData.jzsj = this.getNowFormatDate()\r\n      this.$refs.queryForm.formDataListIn = this.queryFormData\r\n    })\r\n    console.log(this.queryFormData, 'this.queryFormData')\r\n  },\r\n  watch: {\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n// 横向分割条\r\n.T-mainFormListLayout-modulebox .mmc-formlist .vue-splitter-container .splitter-pane-resizer.horizontal {\r\n  width: 100% !important;\r\n  height: 5px !important;\r\n}\r\n\r\n// .x-spreadsheet .x-spreadsheet-sheet {\r\n// }\r\n// .no-left-tree {\r\n// }\r\n.flex {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n}\r\n\r\n.inner-padding {\r\n  padding: 0 0px;\r\n}\r\n.reportSearchModel {\r\n  .vxe-form--item-title {\r\n      display: inline-block !important;\r\n  }\r\n}\r\n</style>\r\n"]}]}