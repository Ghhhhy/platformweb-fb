{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\directFund\\report\\accept.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\directFund\\report\\accept.vue","mtime":1694505522417},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgcmVzb2x2ZVJlc3VsdCBmcm9tICdAL3V0aWxzL3Jlc3VsdC5qcycNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnQ2hlY2tBdWRpdERpYWxvZycsDQogIHByb3BzOiB7DQogICAgZGlhbG9nVmlzaWJsZTogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIGRlZmF1bHQoKSB7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0sDQogICAgYWNjZXB0VHlwZTogew0KICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgZGVmYXVsdCgpIHsNCiAgICAgICAgcmV0dXJuIDENCiAgICAgIH0NCiAgICB9LA0KICAgIGN1clJlcG9ydElkOiB7DQogICAgICB0eXBlOiBTdHJpbmcsDQogICAgICBkZWZhdWx0KCkgew0KICAgICAgICByZXR1cm4gMQ0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgYWNjZXB0VHJlZUNvbmZpZzogew0KICAgICAgICBzaG93RmlsdGVyOiB0cnVlLCAvLyDmmK/lkKbmmL7npLrov4fmu6QNCiAgICAgICAgaXNJbml0TG9hZERhdGE6IGZhbHNlLA0KICAgICAgICBzY3JvbGxMb2FkOiBmYWxzZSwgLy8g5piv5ZCm5byA5ZCv5rua5Yqo5Yqg6L29DQogICAgICAgIGlzbGVhZjogMCwgLy8g5oyH5a6a6IqC54K55piv5ZCm5Li65Y+25a2Q6IqC54K577yM5LuF5Zyo5oyH5a6a5LqGIGxhenkg5bGe5oCn55qE5oOF5Ya15LiL55Sf5pWIDQogICAgICAgIGxldmVsbm86IC0xLCAvLyDlj6/pgInlsYLnuqcNCiAgICAgICAgdmFsdWVLZXlzOiBbJ2NvZGUnLCAnbmFtZScsICdpZCddLA0KICAgICAgICBmb3JtYXQ6ICd7Y29kZX0te25hbWV9JywNCiAgICAgICAgcGxhY2Vob2xkZXI6ICcnLA0KICAgICAgICBtdWx0aXBsZVZhbHVlVHlwZTogJ1N0cmluZycsIC8vIOWkmumAieWAvOexu+WeiyBTdHJpbmdb6YCX5Y+35YiG5YmyXe+8jEFycmF5IC8v5bqf5byDDQogICAgICAgIHRyZWVQcm9wczogew0KICAgICAgICAgIC8vIOagkemFjee9rumAiemhuQ0KICAgICAgICAgIGxhYmVsRm9ybWF0OiAne2NvZGV9LXtuYW1lfScsIC8vIHtjb2RlfS17bmFtZX0NCiAgICAgICAgICBub2RlS2V5OiAnaWQnLCAvLyDmoJHnmoTkuLvplK4NCiAgICAgICAgICBsYWJlbDogJ25hbWUnLCAvLyDmoJHnmoTmmL7npLpsYWxlbOWtl+autQ0KICAgICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nIC8vIOagkeeahOW1jOWll+Wtl+autQ0KICAgICAgICB9LA0KICAgICAgICBheGlvc0NvbmZpZzogew0KICAgICAgICAgIHN1Y2Nlc3NDb2RlOiAnMTAwMDAwJywgLy8g5oiQ5YqfY29kZQ0KICAgICAgICAgIHN0YXR1c0ZpZWxkOiAnY29kZScsDQogICAgICAgICAgbWV0aG9kOiAnZ2V0JywgLy8g6K+35rGC5pa55byPDQogICAgICAgICAgdXJsOiAncGF5LXJlcG9ydC1zZXJ2aWNlL3YxL3BheXJlcG9ydGRhdGEvYWNjZXB0L3RyZWUvJyArIHRoaXMuYWNjZXB0VHlwZSAvLyAncXVlcnlUcmVlQXNzaXN0RGF0YScsIC8vIOaYr+WQpuiwg+eUqOaOpeWPo+ebtOaOpeiOt+WPluaVsOaNru+8jOW9k+atpOmhueacieWAvOaXtuWwhuS8muiHquWKqOWutuaVsOaNrg0KICAgICAgICB9LA0KICAgICAgICBtdWx0aXBsZTogdHJ1ZSwgLy8g5piv5ZCm5aSa6YCJLA0KICAgICAgICBpc0xhemVMb2FkOiBmYWxzZSwgLy8g5piv5ZCm6LCD55So5o6l5Y+j6L+c56iL5oeS5Yqg6L295pWw5o2uDQogICAgICAgIHJlYWRvbmx5OiB0cnVlLA0KICAgICAgICBjbGVhcmFibGU6IHRydWUNCiAgICAgIH0sDQogICAgICBhY2NlcHRUcmVlRGF0YTogW10sDQogICAgICBhY2NlcHRUcmVlRmlsdGVyVGV4dDogJycsDQogICAgICBhY2NlcHRUcmVlUXVlcnlwYXJhbXM6IHt9LA0KICAgICAgdGl0bGU6ICcnLA0KICAgICAgY3VycmVudENoZWNrOiBbXQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC4uLnJlc29sdmVSZXN1bHQsDQogICAgYWNjZXB0VHJlZU5vZGVDaGVja0NoYW5nZSh7IGNoZWNrZWQsIGNoaWxkcmVuQ2hlY2tlZCwgbm9kZSB9KSB7DQogICAgfSwNCiAgICBhY2NlcHRUcmVlTm9kZUNoZWNrQ2xpY2soeyBub2RlcyB9KSB7DQogICAgICBsZXQgY2hlY2tzID0gW10NCiAgICAgIG5vZGVzLmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgIGlmIChpdGVtLmlzbGVhZikgew0KICAgICAgICAgIGNoZWNrcy5wdXNoKGl0ZW0uY29kZSkNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICAgIHRoaXMuY3VycmVudENoZWNrID0gY2hlY2tzDQogICAgfSwNCiAgICBhY2NlcHRUcmVlTm9kZUNsaWNrKHsgbm9kZSB9KSB7DQogICAgfSwNCiAgICBzaG93TG9hZGluZygpIHsNCiAgICAgIHJldHVybiB0aGlzLiRsb2FkaW5nKHsNCiAgICAgICAgbG9jazogdHJ1ZSwNCiAgICAgICAgdGV4dDogJ+ato+WcqOaOpeaUtuS4rS4uLuivt+aCqOeojeWQjicsDQogICAgICAgIHNwaW5uZXI6ICdlbC1pY29uLWxvYWRpbmcnLA0KICAgICAgICBiYWNrZ3JvdW5kOiAncmdiYSgwLCAwLCAwLCAwLjcpJw0KICAgICAgfSkNCiAgICB9LA0KICAgIGRvQWNjZXB0KCkgew0KICAgICAgdGhpcy5jbG9zZURpYWxvZygpDQogICAgICB0aGlzLmxvYWRpbmdQYWdlID0gdGhpcy5zaG93TG9hZGluZygpDQogICAgICBzZXRUaW1lb3V0KCgpID0+IHsNCiAgICAgICAgdGhpcy5sb2FkaW5nUGFnZS5jbG9zZSgpDQogICAgICAgIHRoaXMuJFhNb2RhbC5tZXNzYWdlKHsgc3RhdHVzOiAnc3VjY2VzcycsIG1lc3NhZ2U6ICfmjqXmlLbmiJDlip8hJyB9KQ0KICAgICAgfSwgMzAwMCkNCiAgICAgIC8vIGxldCBwYXJhbXMgPSB7fQ0KICAgICAgLy8gcGFyYW1zLm1vZkRpdkNvZGVzID0gdGhpcy5jdXJyZW50Q2hlY2sNCiAgICAgIC8vIHBhcmFtcy5hY3Rpb25UeXBlID0gdGhpcy5hY2NlcHRUeXBlDQogICAgICAvLyBwYXJhbXMucmVwb3J0SWQgPSB0aGlzLmN1clJlcG9ydElkDQogICAgICAvLyB0aGlzLiRodHRwLnBvc3QoJ3BheS1yZXBvcnQtc2VydmljZS92MS9wYXlyZXBvcnRkYXRhL2FjY2VwdC9iYWNrJywgcGFyYW1zKS50aGVuKHJlcyA9PiB7DQogICAgICAvLyAgIHRoaXMubG9hZGluZ1BhZ2UuY2xvc2UoKQ0KICAgICAgLy8gICBpZiAocmVzKSB7DQogICAgICAvLyAgICAgaWYgKHJlcy5jb2RlID09PSAnMTAwMDAwJykgew0KICAgICAgLy8gICAgICAgdGhpcy4kWE1vZGFsLm1lc3NhZ2UoeyBzdGF0dXM6ICdzdWNjZXNzJywgbWVzc2FnZTogdGhpcy50aXRsZSArICfmiJDlip8hJyB9KQ0KICAgICAgLy8gICAgICAgdGhpcy5jbG9zZURpYWxvZygpDQogICAgICAvLyAgICAgfSBlbHNlIHsNCiAgICAgIC8vICAgICAgIHRoaXMuJFhNb2RhbC5tZXNzYWdlKHsgc3RhdHVzOiAnZXJyb3InLCBtZXNzYWdlOiB0aGlzLnRpdGxlICsgJ+Wksei0pSEnICsgcmVzLm1lc3NhZ2UgfSkNCiAgICAgIC8vICAgICB9DQogICAgICAvLyAgIH0NCiAgICAgIC8vIH0pLmNhdGNoKGUgPT4gew0KICAgICAgLy8gICB0aGlzLiRYTW9kYWwubWVzc2FnZSh7IHN0YXR1czogJ2Vycm9yJywgbWVzc2FnZTogJ+WLvueoveWuoeaguOafpeivouWksei0pScgKyBlIH0pDQogICAgICAvLyAgIHRoaXMubG9hZGluZ1BhZ2UuY2xvc2UoKQ0KICAgICAgLy8gfSkNCiAgICB9LA0KICAgIGNsb3NlRGlhbG9nKCkgew0KICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOmRpYWxvZ1Zpc2libGUnLCBmYWxzZSkNCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgLy8gdGhpcy5jaGVja0F1ZGl0UmVzdWx0KCkNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICBkaWFsb2dWaXNpYmxlOiB7DQogICAgICBoYW5kbGVyKG5ld3ZhbCkgew0KICAgICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6ZGlhbG9nVmlzaWJsZScsIG5ld3ZhbCkNCiAgICAgIH0sDQogICAgICBkZWVwOiB0cnVlLA0KICAgICAgaW1tZWRpYXRlOiB0cnVlDQogICAgfSwNCiAgICBhY2NlcHRUeXBlOiB7DQogICAgICBoYW5kbGVyKG5ld3ZhbCkgew0KICAgICAgICBzd2l0Y2ggKG5ld3ZhbCkgew0KICAgICAgICAgIGNhc2UgMToNCiAgICAgICAgICAgIHRoaXMudGl0bGUgPSAn5o6l5pS2Jw0KICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICBjYXNlIDI6DQogICAgICAgICAgICB0aGlzLnRpdGxlID0gJ+mAgOWbnicNCiAgICAgICAgICAgIGJyZWFrDQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICBpbW1lZGlhdGU6IHRydWUNCiAgICB9DQogIH0NCg0KfQ0K"},{"version":3,"sources":["accept.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"accept.vue","sourceRoot":"src/views/main/directFund/report","sourcesContent":["<template>\r\n  <vxe-modal\r\n    ref=\"acceptDialog\"\r\n    v-model=\"dialogVisible\"\r\n    resize\r\n    width=\"40%\"\r\n    height=\"80%\"\r\n    :position=\"{ top: '5%',left: '30%' }\"\r\n    transfer\r\n    :title=\"title + '区划'\"\r\n    @close=\"closeDialog\"\r\n  >\r\n    <div class=\"mmc-left-tree\" style=\"height:calc(100% - 50px)\">\r\n      <div class=\"mmc-left-tree-body\">\r\n        <BsTree\r\n          ref=\"acceptTree\"\r\n          open-loading\r\n          :filter-text=\"acceptTreeFilterText\"\r\n          :config=\"acceptTreeConfig\"\r\n          :tree-data=\"acceptTreeData\"\r\n          :queryparams=\"acceptTreeQueryparams\"\r\n          @onNodeCheckChange=\"acceptTreeNodeCheckChange\"\r\n          @onNodeCheckClick=\"acceptTreeNodeCheckClick\"\r\n          @onNodeClick=\"acceptTreeNodeClick\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <div class=\"container-project\">\r\n      <div class=\"container-project-bottom\">\r\n        <div class=\"option-line-group\" style=\"text-align:right!important;\">\r\n          <div class=\"fn-inline option-line-group-btn\">\r\n            <vxe-button status=\"primary\" @click=\"doAccept\">{{ title }}</vxe-button></vxe-button>\r\n            <vxe-button @click=\"closeDialog\">取消</vxe-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </vxe-modal>\r\n</template>\r\n\r\n<script>\r\nimport resolveResult from '@/utils/result.js'\r\n\r\nexport default {\r\n  name: 'CheckAuditDialog',\r\n  props: {\r\n    dialogVisible: {\r\n      type: Boolean,\r\n      default() {\r\n        return false\r\n      }\r\n    },\r\n    acceptType: {\r\n      type: Number,\r\n      default() {\r\n        return 1\r\n      }\r\n    },\r\n    curReportId: {\r\n      type: String,\r\n      default() {\r\n        return 1\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      acceptTreeConfig: {\r\n        showFilter: true, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 0, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{code}-{name}', // {code}-{name}\r\n          nodeKey: 'id', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        axiosConfig: {\r\n          successCode: '100000', // 成功code\r\n          statusField: 'code',\r\n          method: 'get', // 请求方式\r\n          url: 'pay-report-service/v1/payreportdata/accept/tree/' + this.acceptType // 'queryTreeAssistData', // 是否调用接口直接获取数据，当此项有值时将会自动家数据\r\n        },\r\n        multiple: true, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true\r\n      },\r\n      acceptTreeData: [],\r\n      acceptTreeFilterText: '',\r\n      acceptTreeQueryparams: {},\r\n      title: '',\r\n      currentCheck: []\r\n    }\r\n  },\r\n  methods: {\r\n    ...resolveResult,\r\n    acceptTreeNodeCheckChange({ checked, childrenChecked, node }) {\r\n    },\r\n    acceptTreeNodeCheckClick({ nodes }) {\r\n      let checks = []\r\n      nodes.forEach(item => {\r\n        if (item.isleaf) {\r\n          checks.push(item.code)\r\n        }\r\n      })\r\n      this.currentCheck = checks\r\n    },\r\n    acceptTreeNodeClick({ node }) {\r\n    },\r\n    showLoading() {\r\n      return this.$loading({\r\n        lock: true,\r\n        text: '正在接收中...请您稍后',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      })\r\n    },\r\n    doAccept() {\r\n      this.closeDialog()\r\n      this.loadingPage = this.showLoading()\r\n      setTimeout(() => {\r\n        this.loadingPage.close()\r\n        this.$XModal.message({ status: 'success', message: '接收成功!' })\r\n      }, 3000)\r\n      // let params = {}\r\n      // params.mofDivCodes = this.currentCheck\r\n      // params.actionType = this.acceptType\r\n      // params.reportId = this.curReportId\r\n      // this.$http.post('pay-report-service/v1/payreportdata/accept/back', params).then(res => {\r\n      //   this.loadingPage.close()\r\n      //   if (res) {\r\n      //     if (res.code === '100000') {\r\n      //       this.$XModal.message({ status: 'success', message: this.title + '成功!' })\r\n      //       this.closeDialog()\r\n      //     } else {\r\n      //       this.$XModal.message({ status: 'error', message: this.title + '失败!' + res.message })\r\n      //     }\r\n      //   }\r\n      // }).catch(e => {\r\n      //   this.$XModal.message({ status: 'error', message: '勾稽审核查询失败' + e })\r\n      //   this.loadingPage.close()\r\n      // })\r\n    },\r\n    closeDialog() {\r\n      this.$emit('update:dialogVisible', false)\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.checkAuditResult()\r\n  },\r\n  watch: {\r\n    dialogVisible: {\r\n      handler(newval) {\r\n        this.$emit('update:dialogVisible', newval)\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    acceptType: {\r\n      handler(newval) {\r\n        switch (newval) {\r\n          case 1:\r\n            this.title = '接收'\r\n            break\r\n          case 2:\r\n            this.title = '退回'\r\n            break\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]}]}