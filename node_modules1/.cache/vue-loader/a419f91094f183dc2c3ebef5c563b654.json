{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\benefitPeopleConfirm\\benefitPeopleConfirm.vue?vue&type=style&index=1&id=b97c8a8e&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\benefitPeopleConfirm\\benefitPeopleConfirm.vue","mtime":1694505522527},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5yYWRpby1yaWdodHsNCiAgZmxvYXQ6IHJpZ2h0Ow0KfQ0KLlRpdGFucy10YWJsZSA6OnYtZGVlcCAgLnZ4ZS1ib2R5LS1yb3cucm93LXllbGxvdyB7DQogIGJhY2tncm91bmQtY29sb3I6IHllbGxvdzsNCiAgY29sb3I6ICNmZmY7DQp9DQouVGl0YW5zLXRhYmxlIDo6di1kZWVwICAudnhlLWJvZHktLXJvdy5yb3ctYmx1ZSB7DQogIGJhY2tncm91bmQtY29sb3I6IGJsdWU7DQogIGNvbG9yOiAjZmZmOw0KfQ0KLlRpdGFucy10YWJsZSA6OnYtZGVlcCAgLnZ4ZS1ib2R5LS1yb3cucm93LXJlZCB7DQogIGJhY2tncm91bmQtY29sb3I6IHJlZDsNCiAgY29sb3I6ICNmZmY7DQp9DQo="},{"version":3,"sources":["benefitPeopleConfirm.vue"],"names":[],"mappingsfile":"benefitPeopleConfirm.vue","sourceRoot":"src/views/main/fundMonitoring/benefitPeopleConfirm","sourcesContent":["<!--支付数据规范性检查-->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n        />\r\n        <BsTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :config=\"leftTreeConfig\"\r\n          :tree-data=\"treeData\"\r\n          @onNodeClick=\"onClickmethod\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <!-- <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          />\r\n        </div> -->\r\n        <!-- <BsTable\r\n          ref=\"mainTableRef\"\r\n          v-loading=\"tableLoading1\"\r\n          style=\"height: 40%\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @checkboxChange=\"checkboxChange\"\r\n          @checkboxAll=\"checkboxChange\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n        </BsTable> -->\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig1\"\r\n            :query-form-data=\"searchDataList1\"\r\n            @onSearchClick=\"search1\"\r\n          />\r\n        </div>\r\n        <BsTable\r\n          ref=\"mainTableRef1\"\r\n          v-loading=\"tableLoading2\"\r\n          style=\"height: 100%\"\r\n          :footer-config=\"tableFooterConfig1\"\r\n          :table-columns-config=\"tableColumnsConfig1\"\r\n          :table-data=\"tableData1\"\r\n          :table-config=\"tableConfig1\"\r\n          :pager-config=\"mainPagerConfig1\"\r\n          :toolbar-config=\"tableToolbarConfig1\"\r\n          @checkboxChange=\"checkboxChange1\"\r\n          @checkboxAll=\"checkboxChange1\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick1\"\r\n          @ajaxData=\"ajaxTableData1\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">支付凭证信息</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <ImportModel\r\n      :file-config=\"fileConfig\"\r\n      :import-modal-visible.sync=\"importModalVisible\"\r\n      @onDownloadTemplateClick=\"onDownloadTemplateClick\"\r\n      @onImportClick=\"onImportClick\"\r\n      @onImportFileClick=\"onImportFileClick\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf, getDateString } from './benefitPeopleConfirm'\r\nimport ImportModel from '../../../../components/Table/import/import.vue'\r\nimport { Import } from '../../../../components/Table/import/import/import.js'\r\nimport HttpModule from '@/api/frame/main/fundMonitoring/benefitPeopleConfirm.js'\r\nimport { Export } from '../../../../components/Table/export/export/export'\r\nimport { repairExcelTimestamp } from '@/utils/excel'\r\n// import AddDialog from './children/addDialog'\r\n// import HttpModule from '@/api/frame/main/Monitoring/WarningDetailsByCompartment.js'\r\nexport default {\r\n  components: {\r\n    ImportModel\r\n    // AddDialog\r\n  },\r\n  computed: {\r\n    wheresql() {\r\n      return `and name like '%${this.treeFilterText}%'`\r\n    }\r\n  },\r\n  watch: {\r\n    queryConfig() {\r\n      this.getSearchDataList()\r\n    },\r\n    queryConfig1() {\r\n      this.getSearchDataList1()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 左侧树过滤值\r\n      treeFilterText: '',\r\n      matchHoot: true,\r\n      isProName: false,\r\n      isAmount: false,\r\n      codeList: [],\r\n      importModalVisible: false, // 导入弹框\r\n      fileConfig: {\r\n        fileName: '',\r\n        maxSize: 1024 * 1024 * 10\r\n      }, // 导入文件配置\r\n      row1: {},\r\n      proTotal: 0,\r\n      treePageSize: 200,\r\n      offset: 0,\r\n      treeCurrentPage: 1,\r\n      // BsQuery 查询栏\r\n      queryConfig: proconf.highQueryConfig,\r\n      queryConfig1: proconf.highQueryConfig1,\r\n      searchDataList: proconf.highQueryData,\r\n      searchDataList1: proconf.highQueryData1,\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      treeData: [{\r\n        children: [],\r\n        code: 0,\r\n        id: 0,\r\n        label: '0-全部分类',\r\n        name: '全部分类',\r\n        parentId: null,\r\n        parentRuleName: null,\r\n        ruleLevel: 0,\r\n        ruleName: '全部分类'\r\n      }],\r\n      treeTypeConfig: {\r\n        curRadio: 'AGENCY'\r\n      },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      },\r\n      treeQueryparams: { elementCode: 'admdiv', province: this.$store.state.userInfo.province, year: this.$store.state.userInfo.year, wheresql: 'and province =' + this.$store.state.userInfo.province },\r\n      // treeServerUri: 'pay-clear-service/v2/lefttree',\r\n      treeServerUri: '',\r\n      treeAjaxType: 'get',\r\n      leftTreeVisible: true,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        buttons: proconf.statusButtons,\r\n        curButton: proconf.curStatusButton,\r\n        buttonsInfo: proconf.buttons,\r\n        methods: {\r\n          bsToolbarClickEvent: this.bsToolbarClickEvent\r\n        }\r\n      },\r\n      buttonsInfo: proconf.statusRightToolBarButtonByBusDept,\r\n      tabStatusNumConfig: {\r\n        '1': 0,\r\n        '2': 0\r\n      },\r\n      isShowQueryConditions: true,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        iconName: 'base-all.png',\r\n        iconNameActive: 'base-all-active.png',\r\n        iconUrl: '',\r\n        label: '全部',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableLoading1: false,\r\n      tableLoading2: false,\r\n      tableColumnsConfig: proconf.PoliciesTableColumns,\r\n      tableColumnsConfig1: proconf.PoliciesTableColumns1,\r\n      tableData: [],\r\n      tableData1: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      tableToolbarConfig1: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      leftNode: {},\r\n      regulationStatus: '1',\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 50\r\n      },\r\n      mainPagerConfig1: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 50\r\n      },\r\n      tableConfig: {\r\n      },\r\n      tableConfig1: {\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      tableFooterConfig1: {\r\n        showFooter: false\r\n      },\r\n      fiscalYear: '',\r\n      isHook: '0',\r\n      proCode1: '',\r\n      proCode: '',\r\n      payCertNo: '',\r\n      proName: '',\r\n      proName1: '',\r\n      agencyName: '',\r\n      corBgtDocNoName: '',\r\n      useDes: '',\r\n      dtos: [],\r\n      amount: '',\r\n      mofdivName: '',\r\n      payAcctNameStr: '',\r\n      payAcctNoStr: '',\r\n      payeeAcctNameStr: '',\r\n      payeeAcctNoStr: '',\r\n      proNameStr: '',\r\n      payTimeStr: '',\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '系统级监控规则',\r\n      roleId: '',\r\n      params5: '',\r\n      menuId: '',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      // 文件\r\n      showAttachmentDialog: false,\r\n      billguid: '',\r\n      condition: {},\r\n      handleType: '',\r\n      isEnable: '',\r\n      regulationType: '',\r\n      warningLevel: '',\r\n      DetailData: {},\r\n      regulationclass: '',\r\n      firulename: '',\r\n      payAmt: '',\r\n      mofDivCode: this.$store.state.userInfo.province,\r\n      leftTreeConfig: { // 左侧单位树配置\r\n        showFilter: false, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 0, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '请选择',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{code}-{name}', // {code}-{name}\r\n          nodeKey: 'code', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        multiple: false, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true,\r\n        tabSelect: '0'\r\n      },\r\n      importData: [], // 导入数据\r\n      treeLoadingState: false\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    onImportClick() {\r\n      // 导入提交\r\n      if (!this.importData.length) {\r\n        this.$XModal.message({ status: 'error', message: '无数据导入请重新导入数据！' })\r\n      } else {\r\n        this.importModalVisible = false\r\n        if (typeof (this.importConfig.importSuccessCallback) === 'function') {\r\n          this.importConfig.importSuccessCallback(this.importData)\r\n        } else {\r\n          this.$emit('importSuccessCallback', this.importData)\r\n        }\r\n      }\r\n    },\r\n    async onImportFileClick() {\r\n      // 导入文件\r\n      this.$Import = new Import()\r\n      await this.$Import.importExcel({\r\n      }, (result, filename) => {\r\n        // this.tableDataIn = result\r\n        this.importData = result\r\n        this.fileConfig.fileName = filename\r\n      })\r\n    },\r\n    onDownloadTemplateClick(obj) {\r\n      // 下载模版\r\n      if (typeof (this.importConfig.downloadTemplateCallback) === 'function') {\r\n        this.importConfig.downloadTemplateCallback(this.importData)\r\n      } else {\r\n        this.importData = []\r\n        const columns = this.tableColumnsConfig\r\n        const selection = this.selection\r\n        let defaultConfig = {\r\n          isExportTree: !!self.treeConfigIn,\r\n          saveType: '.xlsx',\r\n          fileName: 'importTempplate', // 文件名\r\n          dataType: 'fullData',\r\n          isExportOnlySourceField: true, // 是否只导出数据源表头字段，\r\n          isExportOnlyViewTitle: false, // 是否只导出数据表头名称，\r\n          isExportHead: true, // 是否导出表头\r\n          exportViewTitleType: 'nestTitle',\r\n          isExportFooter: false, // 是否导出表尾部\r\n          isExportOriginalData: true, // 是否导出源数据\r\n          isExportData: true, // 是否导出数据\r\n          columns: columns, // 表头配置\r\n          datas: [], // 源数据,\r\n          selection: selection, // 选中数据\r\n          index: true, // 是否添加序号,\r\n          ignoreColsTypes: [\r\n            'dragSort',\r\n            'seq',\r\n            'checkbox',\r\n            'radio',\r\n            'optionRow',\r\n            'expand',\r\n            'attach',\r\n            'ach',\r\n            'list',\r\n            'attachlist'\r\n          ] // 忽略导出的列类型\r\n        }\r\n        this.$Export.exportExcel(obj ? Object.assign(defaultConfig, obj) : obj, this)\r\n      }\r\n    },\r\n    downLoadImportTemplates() {\r\n      // 下载导入模版\r\n      const tableColumnsConfig = this.tableColumnsConfig\r\n      // const unitLabel = this.toolbarConfigInCopy.moneyUnitOptions?.find(item => item.value === this.moneyUnit)?.label\r\n      this.$Export = new Export({ unit: '元' })\r\n      this.$Export.exportExcel({\r\n        saveType: '.xlsx',\r\n        fileName: '导入模版', // 文件名\r\n        dataType: 'fullData',\r\n        isExportOnlyViewTitle: true, // 是否只导出数据源表头字段，\r\n        columns: tableColumnsConfig, // 表头配置\r\n        index: false // 是否添加序号,\r\n      }, this)\r\n    },\r\n    triggerImportOption(config = {}) {\r\n      // 触发导入\r\n      this.importData = []\r\n      this.importConfig = config\r\n      this.fileConfig.fileName = ''\r\n      this.importModalVisible = true\r\n    },\r\n    bsToolbarClickEvent(obj, $this) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.code) {\r\n        case '1':\r\n          this.isHook = '0'\r\n          this.matchHoot = true\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n        case '2':\r\n          this.isHook = '1'\r\n          this.matchHoot = false\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.mainPagerConfig1.currentPage = 1\r\n      this.refresh1()\r\n      // this.$refs.mainTableRef.$refs.xGrid.clearScroll()\r\n    },\r\n    search1(obj) {\r\n      this.payCertNo = obj.payCertNo\r\n      this.proName = obj.proName\r\n      this.agencyName = obj.agencyName\r\n      this.corBgtDocNoName = obj.corBgtDocNoName\r\n      this.useDes = obj.useDes\r\n      this.queryTableDatas1()\r\n      // this.queryTableDatasCount()\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList1() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList1 = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.code) {\r\n        case '1':\r\n          this.isHook = '0'\r\n          break\r\n        case '2':\r\n          this.isHook = '1'\r\n          break\r\n      }\r\n      // this.queryTableDatas1()\r\n    },\r\n    checkboxChange(checked, row) {\r\n      switch (this.toolBarStatusSelect.code) {\r\n        case '1':\r\n          break\r\n        case '2':\r\n          this.dtos.length = checked.selection.length\r\n          for (let i = 0; i < this.dtos.length; i++) {\r\n            this.$set(this.dtos, i, checked.selection[i].payCertId)\r\n          }\r\n          this.queryTableDatas1()\r\n          break\r\n      }\r\n    },\r\n    // checkboxChange1(checked, row) {\r\n    //   switch (this.toolBarStatusSelect.code) {\r\n    //     case '1':\r\n    //       if (this.isProName && this.isAmount) {\r\n    //         this.proName = checked.selection[0].proName\r\n    //         this.amount = checked.selection[0].amount\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       if (this.isProName) {\r\n    //         this.proName = checked.selection[0].proName\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       if (this.isAmount) {\r\n    //         this.amount = checked.selection[0].amount\r\n    //         this.queryTableDatas()\r\n    //         break\r\n    //       }\r\n    //       break\r\n    //     case '2':\r\n    //       this.dtos.length = checked.selection.length\r\n    //       for (let i = 0; i < this.dtos.length; i++) {\r\n    //         this.$set(this.dtos, i, checked.selection[i].payCertId)\r\n    //       }\r\n    //       this.queryTableDatas()\r\n    //       break\r\n    //   }\r\n    // },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      let self = this\r\n      let datas2 = this.$refs.mainTableRef1.getSelectionData()\r\n      switch (obj.code) {\r\n        // 挂接\r\n        case 'hook_set':\r\n          if (datas2.length === 0) {\r\n            this.$message.warning('请选择数据')\r\n            return\r\n          }\r\n          this.hook(datas2)\r\n          break\r\n        // 手动读取\r\n        case 'peo_read':\r\n          this.read()\r\n          break\r\n        // 取消挂接\r\n        case 'hook_not':\r\n          if (datas2.length === 0) {\r\n            this.$message.warning('请选择数据')\r\n            return\r\n          }\r\n          this.notHook(datas2)\r\n          break\r\n        // 导入\r\n        case 'import':\r\n          this.triggerImportOption(\r\n            {\r\n              downloadTemplateCallback(Cb) {\r\n                self.downLoadImportTemplates()\r\n              },\r\n              importSuccessCallback(res) {\r\n                self.$refs.mainTableRef.deaImportViewData(\r\n                  {\r\n                    conlums: proconf.PoliciesTableColumns,\r\n                    viewData: res\r\n                  }\r\n                )\r\n                // 将导入的支付时间格式化\r\n                res?.forEach(row => {\r\n                  const timestamp = repairExcelTimestamp(row.xpayDate)\r\n                  row.xpayDate = timestamp ? getDateString(timestamp) : row.xpayDate\r\n                })\r\n                self.importSuccessCallback(res)\r\n              }\r\n            }\r\n          )\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    importSuccessCallback(res) {\r\n      console.log('res:', res)\r\n      HttpModule.importBenefit(res).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('导入成功')\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n      this.refresh()\r\n    },\r\n    hook(datas2) {\r\n      const param = {\r\n        payDetailIds: datas2\r\n      }\r\n      HttpModule.confirm(param).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('确认成功')\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    notHook(datas2) {\r\n      HttpModule.notConfirm(datas2).then(res => {\r\n        if (res.code === '000000') {\r\n          this.$message.success('取消成功')\r\n          this.proCode = ''\r\n          this.proName = ''\r\n          this.payCertNo = ''\r\n          this.amount = ''\r\n          this.payAmt = ''\r\n          this.mofdivName = ''\r\n          this.agencyName = ''\r\n          this.corBgtDocNoName = ''\r\n          this.useDes = ''\r\n          this.dtos = []\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    read() {\r\n      const param = {\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.addBenefitPeople(param).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.$message.success('读取成功')\r\n          this.queryTableDatas1()\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    changeVisible(val) {\r\n      this.breakRuleVisible = val\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    onToolbarBtnClick1({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh1()\r\n          break\r\n      }\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.treeGlobalConfig.inputVal = val\r\n    },\r\n    onClickmethod(node) {\r\n      let code = node.node.code\r\n      this.codeList = []\r\n      let treeData = node.treeData\r\n      // 非顶级区划则获取区划code，否则查询表体数据时codeList为空进行查询\r\n      if (code !== node.treeData?.[0].code) {\r\n        this.getItem(code, treeData)\r\n      }\r\n      if (node.id !== '0') {\r\n        this.mofdivcode = node.node.code\r\n      } else {\r\n        this.mofdivcode = {}\r\n      }\r\n      this.queryTableDatas1()\r\n    },\r\n    getItem(code, data) {\r\n      data.forEach(item => {\r\n        if (code === item.code) {\r\n          let data = []\r\n          data.push(item)\r\n          this.getCodeList(data)\r\n        } else if (item.children) {\r\n          this.getItem(code, item.children)\r\n        }\r\n      })\r\n    },\r\n    getCodeList(data) {\r\n      data.forEach(item => {\r\n        this.codeList.push(item.code)\r\n        if (item.children) {\r\n          this.getCodeList(item.children)\r\n        }\r\n      })\r\n    },\r\n    treeSetConfrimData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 查看附件\r\n    showAttachment(row) {\r\n      this.billguid = row.attachment_id\r\n      this.showAttachmentDialog = true\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh1() {\r\n      this.queryTableDatas1()\r\n      // this.queryTableDatasCount()\r\n    },\r\n    ajaxTableData1({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig1.currentPage = currentPage\r\n      this.mainPagerConfig1.pageSize = pageSize\r\n      this.queryTableDatas1()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 新增或修改弹框\r\n    clickAddBtn(row) {\r\n      // if (this.addTableData.length > 0) {\r\n      //   this.addTableData = []\r\n      // }\r\n      this.dialogTitle = '新增'\r\n      // this.addTableData.push(row)\r\n      this.dialogVisible = true\r\n    },\r\n    // 点击新增\r\n    onAddToolbarClickAdd(obj, context, e) {\r\n      // let row = []\r\n      // row = this.$refs.mainTableRef.getSelectionData()[0]\r\n      // if (this.$refs.mainTableRef.getSelectionData().length !== 1) {\r\n      //   this.$message.warning('请选择一条数据')\r\n      //   return\r\n      // }\r\n      // this.addTableData = this.$refs.mainTableRef.getSelectionData()\r\n      this.dialogVisible = true\r\n      // this.selectSumId = this.$refs.mainTableRef.getSelectionData()[0].sum_id\r\n      this.dialogTitle = '新增'\r\n    },\r\n    // 查询 table1 数据\r\n    queryTableDatas1() {\r\n      const param = {\r\n        page: this.mainPagerConfig1.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig1.pageSize, // 每页条数\r\n        payCertNo: this.payCertNo,\r\n        proName: this.proName,\r\n        proCode: this.proCode,\r\n        agencyName: this.agencyName,\r\n        corBgtDocNoName: this.corBgtDocNoName,\r\n        useDes: this.useDes,\r\n        amount: this.amount,\r\n        isHook: this.isHook,\r\n        roleId: this.roleId,\r\n        mofDivCode: this.mofDivCode, // 获取左侧树\r\n        mofDivCodes: this.codeList,\r\n        dtos: this.dtos\r\n      }\r\n      this.tableLoading2 = true\r\n      HttpModule.pagePayQuery(param).then(res => {\r\n        this.tableLoading2 = false\r\n        if (res.code === '000000') {\r\n          this.tableData1 = res.data.results\r\n          this.mainPagerConfig1.total = res.data.totalCount\r\n        } else {\r\n          this.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    // 操作日志\r\n    queryActionLog(row) {\r\n      // let data = {\r\n      //   roleguid: this.$store.state.curNavModule.roleguid,\r\n      //   data: {\r\n      //     statusCode: this.toolBarStatusSelect.code,\r\n      //     id: row.id,\r\n      //     appId: 'pay_voucher'\r\n      //   }\r\n      // }\r\n      // HttpModule.queryActionLog(data).then(res => {\r\n      //   this.logData = res.data\r\n      //   console.log(this.logData)\r\n      //   this.showLogView = true\r\n      // })\r\n    },\r\n    // 送审\r\n    audieData(param) {\r\n      // HttpModule.audieData(param).then(res => {\r\n      //   if (res.code === '000000') {\r\n      //     this.$message.warning('操作成功')\r\n      //     this.queryTableDatas()\r\n      //   }\r\n      // })\r\n    },\r\n    /**\r\n     * 左侧树过滤搜索\r\n     * @returns {Promise<void>}\r\n     */\r\n    async searchTreeHandle(inputVal) {\r\n      this.treeFilterText = inputVal\r\n      this.treeCurrentPage = 1\r\n      await this.getLeftTreeData()\r\n    },\r\n    getLeftTreeData() {\r\n      let that = this\r\n      let params = {}\r\n      if (this.userInfo.province === '610000000') {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: '610000000',\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + 61 + '%\\''\r\n        }\r\n      } else if (\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610200000' ||\r\n        this.userInfo.province === '610300000' ||\r\n        this.userInfo.province === '610400000' ||\r\n        this.userInfo.province === '610500000' ||\r\n        this.userInfo.province === '610600000' ||\r\n        this.userInfo.province === '610700000' ||\r\n        this.userInfo.province === '610800000' ||\r\n        this.userInfo.province === '610900000' ||\r\n        this.userInfo.province === '611000000' ||\r\n        this.userInfo.province === '611200000'\r\n      ) {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 4) + '%\\''\r\n        }\r\n      } else {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.userInfo.province,\r\n          year: this.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 6) + '%\\''\r\n        }\r\n      }\r\n      HttpModule.getTreeData1(params).then(res => {\r\n        if (res.data) {\r\n          // let treeResdata = that.getChildrenData(res.data)\r\n          // treeResdata.forEach(item => {\r\n          //   item.label = item.id + '-' + item.businessName\r\n          // })\r\n          // const result = [\r\n          //   {\r\n          //     id: 'root',\r\n          //     label: '全部',\r\n          //     code: 'root',\r\n          //     isleaf: '0',\r\n          //     children: treeResdata\r\n          //   }\r\n          // ]\r\n          that.treeData = res.data\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.treeCurrentPage = val\r\n      this.getLeftTreeData()\r\n    },\r\n    handleSizeChange(val) {\r\n    },\r\n    getChildrenData(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.text\r\n        if (item.children) {\r\n          that.getChildrenData(item.children)\r\n        }\r\n      })\r\n\r\n      return datas\r\n    }\r\n  },\r\n  created() {\r\n    console.log('this.$store.state.curNavModule', this.$store.state.curNavModule)\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.menuName = this.$store.state.curNavModule.name\r\n    this.roleId = this.$store.state.curNavModule.roleguid\r\n    this.getLeftTreeData()\r\n    // this.queryTableDatas()\r\n    // this.queryTableDatas1()\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.T-mainFormListLayout-modulebox .table-toolbar-left {\r\n  font-size: 14px;\r\n}\r\n.Titans-table .table-toolbar-left .table-toolbar-left-title.left-title-clear-float {\r\n  float: none;\r\n  margin-bottom: 4px;\r\n}\r\n</style>\r\n<style scoped>\r\n.radio-right{\r\n  float: right;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n</style>\r\n"]}]}