{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\monitProcFeedback\\monitProcFeedbackModal.vue?vue&type=style&index=0&id=1b6af1c4&lang=scss&scoped=true&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\monitProcFeedback\\monitProcFeedbackModal.vue","mtime":1694505522810},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696752946978},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKIC9kZWVwLyAuY3JlYXRlUmVmewogIC52eGUtZm9ybS0taXRlbS52eGUtY29sLS0yNHsKICAgICAudnhlLWZvcm0tLWl0ZW0taW5uZXJ7CiAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0ICFpbXBvcnRhbnQ7CiAgICB9CiAgfQogIC52eGUtdGV4dGFyZWEtLWlubmVyW2Rpc2FibGVkXXsKICAgIGJhY2tncm91bmQ6IHZhcigtLWNvbW1vbi1iYWNrZ3JvdW5kKSAhaW1wb3J0YW50OwogIH0KfQoK"},{"version":3,"sources":["monitProcFeedbackModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"monitProcFeedbackModal.vue","sourceRoot":"src/views/main/monitProcFeedback","sourcesContent":["<!--处理弹框-->\r\n<template>\r\n  <div v-loading=\"tableLoading\">\r\n    <vxe-modal\r\n      v-model=\"dialogVisible\"\r\n      :title=\"title\"\r\n      width=\"96%\"\r\n      height=\"90%\"\r\n      :show-footer=\"true\"\r\n      @close=\"dialogClose\"\r\n    >\r\n      <div v-loading=\"addLoading\" class=\"payVoucherInput\">\r\n        <div v-for=\"(item,index) in formData\" :key=\"item.titleName\">\r\n          <template v-if=\"item.type !== 'components'\">\r\n            <div style=\"color:#40aaff;margin-bottom:5px;font-size:16px;font-weight:bold\">{{ item.titleName }}</div>\r\n            <BsForm\r\n              :ref=\"item.formRefKey || `createRef${index}`\"\r\n              class=\"createRef\"\r\n              :form-items-config=\"item.formItemList\"\r\n              :form-data-list=\"createDataList\"\r\n              :form-validation-config=\"validateData[item.formRefKey]\"\r\n              :is-editable=\"isCreate\"\r\n              title-align=\"top\"\r\n              @itemChange=\"itemChange\"\r\n            />\r\n          </template>\r\n          <BsUploadBak\r\n            v-if=\"item.type === 'components'\"\r\n            ref=\"myUpload\"\r\n            :disabled=\"false\"\r\n            :allow-delete=\"true\"\r\n            :allow-download=\"true\"\r\n            :allow-preview=\"true\"\r\n            :is-upload=\"true\"\r\n            :attachment-id=\"createDataList[item.field]\"\r\n            :file-list=\"fileList3\"\r\n            :file-data-bak-del.sync=\"fileDataBakDel3\"\r\n            :file-data.sync=\"fileData3\"\r\n          />\r\n        </div>\r\n        <BsUpload\r\n          ref=\"attachmentUpload\"\r\n          :downloadparams=\"downloadParams\"\r\n          uniqe-name=\"attachmentUpload\"\r\n        />\r\n      </div>\r\n      <div slot=\"footer\" style=\"height: 80px;margin:0 15px\">\r\n        <div v-if=\"showbox\" id=\"bigbox\"></div>\r\n        <el-divider style=\"color:#E7EBF0\" />\r\n        <div type=\"flex\" justify=\"space-around\">\r\n          <div>\r\n            <vxe-button status=\"primary\" @click=\"doFeedback\">确定</vxe-button>\r\n            <vxe-button @click=\"dialogClose\">取消</vxe-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </vxe-modal>\r\n  </div>\r\n</template>\r\n<script>\r\n// import { proconf } from './createProcessing.js'\r\nimport HttpModule from '@/api/frame/main/fundMonitoring/createProcessing.js'\r\n// import { checkPhone } from '@/utils/index.js'\r\nimport VXETable from 'vxe-table'\r\nimport loadBsConfig from '@/views/main/dynamicTableSetting/config'\r\nexport default {\r\n  name: 'HandleDialog',\r\n  mixins: [loadBsConfig],\r\n  computed: {\r\n    userInfo() {\r\n      return this.$store.state.userInfo\r\n    }\r\n  },\r\n  props: {\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      configTypeId: {},\r\n      tableLoading: false,\r\n      tabCode: 'dcl-hsfk',\r\n      showFormType: {\r\n        show1: true,\r\n        show2: true,\r\n        show3: false,\r\n        show4: false,\r\n        show5: false\r\n      },\r\n      formData: [],\r\n      validateData: {},\r\n      title: '监控处理单',\r\n      dialogVisible: false,\r\n      createValidate: {\r\n\r\n        // phone1: [\r\n        //   { validator: proconf.mobilePhoneValid, trigger: 'change' }\r\n        // ]\r\n      },\r\n      downloadParams: {\r\n        fileguid: ''\r\n      },\r\n      createDataList: {},\r\n      attachmentid: '',\r\n      isCreate: true,\r\n      showbox: false,\r\n      fileList3: [{}],\r\n      fileData3: [],\r\n      fileDataBakDel3: [],\r\n      addLoading: false,\r\n      param5: {}\r\n      // ----\r\n    }\r\n  },\r\n  methods: {\r\n    getAttachmentInfo(billguid) {\r\n      if (!billguid) return []\r\n      let params = {\r\n        year: this.userInfo.year,\r\n        province: this.mofDivCode || this.userInfo.province,\r\n        billguid: billguid\r\n      }\r\n      return HttpModule.getFile(params).then((res) => {\r\n        let fileList = JSON.parse(res.data) || []\r\n        fileList.length && fileList.forEach(element => {\r\n          let size = element.filesize / 1024\r\n          element.filesize = size.toFixed(2) + 'KB'\r\n        })\r\n        return fileList\r\n      })\r\n    },\r\n    setOtherFormItem() {\r\n      this.showFormType = {\r\n        show1: false,\r\n        show2: false,\r\n        show3: false,\r\n        show4: false,\r\n        show5: false\r\n      }\r\n    },\r\n    setFormDisabled(formItemIndexList = []) {\r\n      if (!formItemIndexList.length) return\r\n      formItemIndexList.forEach((formItem) => {\r\n        this[`createConfig${formItem}`].forEach(item => {\r\n          item.itemRender.props['disabled'] = true\r\n        })\r\n      })\r\n    },\r\n    /**\r\n     *\r\n     * @param {Array[string]} formItemIndexList 在data定义的表单字段list\r\n     * @param {Array[string]} filedList 需要禁用的字段,传filed的值\r\n     */\r\n    setFormItemDisabled(formItemIndexList, filedList) { //\r\n      if (!formItemIndexList.length) return\r\n      formItemIndexList.forEach((formItem) => {\r\n        this[`createConfig${formItem}`].forEach(item => {\r\n          if (filedList.includes(item.field)) {\r\n            item.itemRender.props['disabled'] = true\r\n          } else {\r\n            item.itemRender.props['disabled'] = false\r\n          }\r\n        })\r\n      })\r\n    },\r\n    dialogClose() {\r\n      this.dialogVisible = false\r\n      this.$emit('close')\r\n    },\r\n    itemChange({ $form, property, itemValue, data }, bsform) {\r\n      console.log('changeItemproperty', property)\r\n      // form表单联动当前字段change事件代理\r\n      switch (property) {\r\n        case 'violateType' :\r\n          this.$refs.createRef?.$refs?.form?.clearValidate?.()\r\n          this.createDataList.violateType = itemValue\r\n          break\r\n        case 'handleType' :\r\n          this.createDataList.handleType = itemValue\r\n          break\r\n        case 'handleResult' :\r\n          this.createDataList.handleResult = itemValue\r\n          break\r\n        default :\r\n          break\r\n      }\r\n    },\r\n    getTableConfByMenuguid(menuguid) {\r\n      // 根据菜单menuguid获取其下所有表配置\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        self.$http\r\n          .get('mp-b-perm-service/v1/tableconf/menuguid', {\r\n            menuguid: menuguid,\r\n            mof_div_code: self.userInfo.province, // 区划\r\n            fiscalyear: self.userInfo.year // 年份\r\n          })\r\n          .then((res) => {\r\n            if (res.rscode === '100000') {\r\n              resolve(res.data)\r\n              // resolve(self.generateCurTableConfDataMap(res.data))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            reject(error)\r\n          })\r\n      })\r\n    },\r\n    getFlowParamVoList() {\r\n      // 获取动态配置表单里面绑定得field 并且组装成[{key:表单每项得filed,value:表单filed绑定值}，，...]传给后端\r\n      let flowParamVoList = []\r\n      let formData = {}\r\n      if (this.formData && this.formData.length) {\r\n        this.formData.forEach((item, index) => {\r\n          if (item.type !== 'components') { // 判断不是上传组件\r\n            let formItemData = {}\r\n            if (item.formRefKey) {\r\n              formItemData = this.$refs[item.formRefKey][0].getFormData()\r\n            } else {\r\n              formItemData = this.$refs[`createRef${index}`][0].getFormData()\r\n            }\r\n            item.formItemList.forEach((ii, idx) => {\r\n              let obj = {}\r\n              obj.bizKey = ii.field\r\n              obj.bizValue = formItemData[ii.field]\r\n              if (item.needUpload) { // 获取需要上传的哪个表单的数据\r\n                if (ii.field.indexOf('commentDept') > -1) {\r\n                  let obj2 = {\r\n                    bizKey: 'commentName',\r\n                    bizValue: ii.itemRender.options.find(item => { return item.value === obj.bizValue }).label\r\n                  }\r\n                  flowParamVoList.push(obj2)\r\n                }\r\n                flowParamVoList.push(obj)\r\n              }\r\n              formData[ii.field] = formItemData[ii.field]\r\n            })\r\n          } else {\r\n            let obj = {}\r\n            obj.bizKey = item.field\r\n            obj.bizValue = this.createDataList.createdAttachmentid\r\n            flowParamVoList.push(obj)\r\n          }\r\n        })\r\n      }\r\n      return { flowParamVoList, formData }\r\n    },\r\n\r\n    // 反馈\r\n    async doFeedback() {\r\n      if (Object.keys(this.validateData).length) {\r\n        let formValidaPass = await Promise.all(\r\n          Object.keys(this.validateData).map(key => {\r\n            return new Promise(async(resolve, reject) => {\r\n              let formInstance = this.$refs[key]\r\n              if (!formInstance) {\r\n                resolve(true)\r\n                return\r\n              }\r\n              let valid = await formInstance[0].validate()\r\n              if (valid === undefined) resolve(true)\r\n            })\r\n          })\r\n        )\r\n        if (!formValidaPass.every(one => { return one })) return\r\n      }\r\n      let { flowParamVoList, formData } = this.getFlowParamVoList()\r\n      console.log(flowParamVoList, formData)\r\n      formData.flowParamVoList = flowParamVoList\r\n      this.tableLoading = true\r\n      let params = {\r\n        ...this.createDataList,\r\n        ...formData,\r\n        actionType: '2',\r\n        menuId: this.$store.state.curNavModule.guid\r\n      }\r\n      HttpModule.workFlowUpdate([params]).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.$message.success('核实反馈成功')\r\n          this.dialogClose()\r\n\r\n          this.$parent.queryTableDatas()\r\n        }\r\n      })\r\n    },\r\n    initModal() {\r\n      console.log('查看数据', Object.assign({}, this.createDataList))\r\n      this.getTableConfByMenuguid(this.$store.state.curNavModule.guid).then(res => {\r\n        res.forEach(item => {\r\n          this.configTypeId[item.type] = item.id\r\n        })\r\n        this.loadConfig(this.configTypeId)\r\n        // this.getValidateConfig(this.configTypeId)\r\n      })\r\n    },\r\n    // 下载附件\r\n    downloadAttachment(row) {\r\n      console.log(row, '点击下载')\r\n      if (!row.fileguid) return\r\n      this.downloadParams.fileguid = row.fileguid\r\n      this.$refs.attachmentUpload.downloadFileFile()\r\n    },\r\n    async loadConfig(configTypeId) { // 请求工作流formitem配置项\r\n      let { form } = configTypeId\r\n      if (!form) return\r\n      let params = {\r\n        tableId: {\r\n          id: form,\r\n          fiscalyear: this.userInfo.year,\r\n          mof_div_code: this.userInfo.province,\r\n          menuguid: this.$store.state.curNavModule.guid\r\n          // userguid: ''\r\n        }\r\n      }\r\n      let configQueryData = await this.loadBsConfig(params)\r\n      this.$set(this, 'formData', configQueryData.itemsConfig)\r\n      this.$set(this, 'validateData', configQueryData.editRules)\r\n      let createDataList = Object.assign({}, this.createDataList)\r\n      let formDefaultValue = configQueryData.editConfig.defaultValue || {}\r\n      if (Object.keys(formDefaultValue)) { // 重新组装默认值\r\n        Object.keys(formDefaultValue).forEach(fieldKey => {\r\n          if (!createDataList[fieldKey]) {\r\n            createDataList[fieldKey] = formDefaultValue[fieldKey]\r\n          }\r\n        })\r\n      }\r\n      // 如果表单项配置了附件 则通过接口 拿到附件列表 并且重新给表单得配置项得itemRender挂载一个fileList\r\n      for (let i = 0; i < this.formData.length; i++) {\r\n        let eachForm = this.formData[i]\r\n        if (eachForm.formItemList && eachForm.formItemList.length) {\r\n          for (let j = 0; j < eachForm.formItemList.length; j++) {\r\n            let formItem = eachForm.formItemList[j]\r\n            if (formItem.itemRender.name === '$customerFileRender') { // 判断是渲染文件列表\r\n              let fileList = await this.getAttachmentInfo(createDataList[formItem.field])\r\n              this.$set(formItem.itemRender, 'fileList', fileList)\r\n            }\r\n            if (formItem.itemRender.getServerTime) { // 如果配置了获取服务器时间 则取服务器时间\r\n              createDataList[formItem.field] = createDataList.serverTime\r\n            }\r\n            if (formItem.itemRender.getUserName) { // 如果配置了获取服务器时间 则取服务器时间\r\n              createDataList[formItem.field] = createDataList.userName\r\n            }\r\n          }\r\n        } else if (eachForm.type === 'components') { // 如果表单配置了上传组件 则给表单数据配置一个上传组件得唯一ID 用于获取上传附件得id\r\n          createDataList[eachForm.field] = createDataList.createdAttachmentid\r\n        }\r\n      }\r\n      this.$set(this, 'createDataList', createDataList)\r\n      // 给vxetable配置渲染器  渲染文件列表\r\n      let _this = this\r\n      VXETable.renderer.add('$customerFileRender', {\r\n        renderItemContent(h, renderOpts, { data, property }) {\r\n          console.log('customerFileRender', renderOpts, data, property)\r\n          let fileList = renderOpts.fileList || []\r\n          return fileList.map(item => {\r\n            return <div>\r\n              <a style=\"color: #1890ff; text-decoration: underline;\" onClick={() => { _this.downloadAttachment(item) }}>{item.filename}</a>\r\n            </div>\r\n          })\r\n        }\r\n      })\r\n    }\r\n  },\r\n  watch: {\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n    console.log('当前传过来得formData', this.createDataList)\r\n    console.log('当前传过来得表单配置项', this.formData)\r\n  },\r\n  destoryed() {\r\n    VXETable.renderer.delete('$customerFileRender')\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n /deep/ .createRef{\r\n  .vxe-form--item.vxe-col--24{\r\n     .vxe-form--item-inner{\r\n      align-items: flex-start !important;\r\n    }\r\n  }\r\n  .vxe-textarea--inner[disabled]{\r\n    background: var(--common-background) !important;\r\n  }\r\n}\r\n\r\n</style>\r\n"]}]}