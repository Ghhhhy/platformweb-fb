{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\CheckPayBill\\CheckPayBill.vue?vue&type=style&index=0&id=7bb25ca4&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MointoringMatters\\CheckPayBill\\CheckPayBill.vue","mtime":1696752729813},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLyogOjp2LWRlZXAgLnZ4ZS10b29scy0td3JhcHBlciB7DQogIGRpc3BsYXk6IG5vbmU7DQp9ICovDQovKiAuVC1zZWFyY2ggew0KICBiYWNrZ3JvdW5kOiBub25lICFpbXBvcnRhbnQ7DQp9ICovDQovKiAudW5pdC10cmVlLW1haW4udW5pdC10cmVlLW1haW4tbm9kcm9wDQogIC5zZWxlY3Rpb24tdHJlZS1ub2Ryb3ANCiAgLnZ4ZS1pbnB1dC1maWx0ZXItdHJlZSB7DQogIG1hcmdpbi1ib3R0b206IDBweCAhaW1wb3J0YW50Ow0KfSAqLw0KLyogLnRyZWUtc2V0X19jb250ZW50IHsNCiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50Ow0KfSAqLw0KLmxlZnQtdHJlZSB7DQogIGhlaWdodDogMTAwJTsNCn0NCi5sZWZ0LXRyZWUtYm9keSB7DQogIGhlaWdodDogMTAwJTsNCn0NCg=="},{"version":3,"sources":["CheckPayBill.vue"],"names":[],"mappingsfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CheckPayBill.vue","sourceRoot":"src/views/main/MointoringMatters/CheckPayBill","sourcesContent":["<!--\r\n * @Author: hupengcheng 1286335855@qq.com\r\n * @Date: 2023-10-06 15:48:40\r\n * @LastEditors: hupengcheng 1286335855@qq.com\r\n * @LastEditTime: 2023-10-08 16:11:59\r\n * @FilePath: \\platformweb-fb\\src\\views\\main\\MointoringMatters\\CheckPayBill\\CheckPayBill.vue\r\n * @Description: 这是默认设置,请设置`customMade`, 打开koroFileHeader查看配置 进行设置: https://github.com/OBKoro1/koro1FileHeader/wiki/%E9%85%8D%E7%BD%AE\r\n-->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTabPane>\r\n        <!-- <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          show-zero\r\n          :show-num=\"true\"\r\n          :is-open=\"isShowQueryConditions\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        /> -->\r\n      </template>\r\n      <template v-slot:query>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <!-- <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          /> -->\r\n          <!-- <BsForm\r\n            ref=\"queryFrom\"\r\n            :form-items-config=\"formSchemas\"\r\n            :form-data-list=\"formData.value\"\r\n            @itemChange=\"itemChange\"\r\n          /> -->\r\n        </div>\r\n      </template>\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"showAside\"\r\n          :tree-config=\"setConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n        />\r\n        <BsTree\r\n          :queryparams=\"treeQueryparams\"\r\n          :config=\"treeConfig\"\r\n          :filter-text=\"filterText\"\r\n          :tree-data=\"treeData\"\r\n          @onNodeClick=\"onNodeClick\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <!-- <BsTable\r\n          ref=\"mainTableRef\"\r\n          :table-config=\"tableConfig\"\r\n          :table-global-config=\"tableGlobalConfig\"\r\n          :toolbar-config=\"toolbarConfig\"\r\n          :height=\"420\"\r\n          :pager-config=\"{}\"\r\n          :tree-config=\"treeConfigTable\"\r\n          :footer-config=\"footerConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div\r\n                v-if=\"leftTreeVisible === false\"\r\n                class=\"table-toolbar-contro-leftvisible\"\r\n                @click=\"leftTreeVisible = true\"\r\n              ></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable> -->\r\n        <ReportView\r\n          v-if=\"isShowReport\"\r\n          ref=\"reportViewRef\"\r\n          class=\"platfromreport\"\r\n          codes=\"354692d064e511eeb7ea51396d5e9d2f\"\r\n          :editable=\"editable\"\r\n          :init-params=\"initParams\"\r\n          @custom-excel-link=\"excelLinkHandle\"\r\n          @exportExcelByServiceBefore=\"exportExcelByServiceBefore\"\r\n          @exportExcelByServiceAfter=\"exportExcelByServiceAfter\"\r\n        />\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <CheckPayBillModal\r\n      v-if=\"showModal\"\r\n      ref=\"CheckPayBillModal\"\r\n      @close=\"closeModal\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf } from './CheckPayBill.js'\r\n// import useForm from '@/hooks/useForm/index.js'\r\n// import { getSchemas } from './model/data'\r\nimport CheckPayBillModal from './CheckPayBillModal.vue'\r\nexport default {\r\n  components: {\r\n    CheckPayBillModal\r\n  },\r\n  data() {\r\n    return {\r\n      tableLoading: false,\r\n      searchDataList: {},\r\n      queryConfig: proconf.highQueryConfig,\r\n      isShowQueryConditions: true,\r\n      leftTreeVisible: true,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        changeBtns: true,\r\n        buttons: proconf.toolBarStatusButtons,\r\n        curButton: {\r\n          type: 'button',\r\n          iconName: 'base-all.png',\r\n          iconNameActive: 'base-all-active.png',\r\n          iconUrl: '',\r\n          label: '全部',\r\n          code: '1',\r\n          curValue: '1'\r\n        },\r\n        buttonsInfo: proconf.statusRightToolBarButton,\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        }\r\n      },\r\n      // 弹框\r\n      showModal: false,\r\n      // 左侧树\r\n      showAside: false,\r\n      setConfig: {},\r\n      treeQueryparams: { elementCode: 'AGENCY' },\r\n      treeConfig: {\r\n        showFilter: false, // 是否显示过滤\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        placeholder: '请选择',\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{code}-{name}', //  {code}-{name}\r\n          nodeKey: 'id', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        axiosConfig: {\r\n          rootName: '全部',\r\n          successCode: '200', // 成功code\r\n          statusField: 'rscode',\r\n          method: 'get', // 请求方式\r\n          url: ''\r\n        },\r\n        multiple: false, // 是否多选,\r\n        clearable: true, // 可清除\r\n        defaultExpandAll: true // 默认是否展开所有节点\r\n      },\r\n      filterText: '', // 树字段过滤\r\n      treeData: [\r\n        {\r\n          id: '1',\r\n          code: '100',\r\n          name: '山西省',\r\n          label: '100-山西省',\r\n          children: [\r\n            {\r\n              id: '11',\r\n              code: '101',\r\n              name: '太原',\r\n              label: '101-太原'\r\n            },\r\n            {\r\n              id: '12',\r\n              code: '102',\r\n              name: '大同',\r\n              label: '102-大同'\r\n            },\r\n            {\r\n              id: '13',\r\n              code: '103',\r\n              name: '运城',\r\n              label: '103-运城'\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n\r\n      // BsTable表格\r\n      menuName: '转移支付资金上下级对账结果列表',\r\n      tableConfig: {\r\n        renderers: {\r\n          // 修改 配置 下发 删除\r\n          $customerRender: {\r\n            renderDefault: (h, cellRender, { row, rowIndex }, context) => {\r\n              let vnode = (\r\n                <div>\r\n                  <a\r\n                    style=\"cursor: pointer\"\r\n                    onClick={() => this.handleRowClick(row)}\r\n                  >\r\n                    查看详情\r\n                  </a>\r\n                </div>\r\n              )\r\n              // {this.queryData.flowStatus === '2' ? <el-button type=\"primary\" size=\"mini\" onClick={() => this.withdraw(row)}>撤回</el-button> : ''}\r\n              return [vnode]\r\n            }\r\n          }\r\n        },\r\n        globalConfig: {\r\n          // 全局默认渲染列配置\r\n          // 全局配置\r\n          checkType: 'checkbox',\r\n          seq: true\r\n        }\r\n      },\r\n      tableGlobalConfig: {\r\n        showOverflow: true\r\n      },\r\n      footerConfig: {\r\n        showFooter: false\r\n      },\r\n      toolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      treeConfigTable: {\r\n        expandAll: true,\r\n        indent: 10,\r\n        accordion: false\r\n      },\r\n      tableColumnsConfig: proconf.tableColumnsConfig,\r\n      tableData: [\r\n        {\r\n          name: 'test1',\r\n          superDivision: '特定转移支付资金1',\r\n          acceptDivision: '22',\r\n          transferPayment: 'beijing',\r\n          documentNumber: '111',\r\n          documentMoney: '999',\r\n          result: '比对失败',\r\n          time: '9.27'\r\n        },\r\n        {\r\n          name: 'test2',\r\n          superDivision: '特定转移支付资金2',\r\n          acceptDivision: '22',\r\n          transferPayment: 'beijing',\r\n          documentNumber: '111',\r\n          documentMoney: '999',\r\n          result: '比对成功',\r\n          time: '9.27'\r\n        },\r\n        {\r\n          name: 'test3',\r\n          superDivision: '特定转移支付资金3',\r\n          acceptDivision: '22',\r\n          transferPayment: 'beijing',\r\n          documentNumber: '111',\r\n          documentMoney: '999',\r\n          result: '比对成功',\r\n          time: '9.27'\r\n        }\r\n      ],\r\n      // datav表格数据\r\n      reportParams: {},\r\n      editable: {},\r\n      businessContext: {\r\n        token: this.$store.getters.getLoginAuthentication.tokenid\r\n      },\r\n      ifRenderReport: true,\r\n      code: '',\r\n      searchObj: {},\r\n      curDivCode: '',\r\n      isShowReport: false\r\n    }\r\n  },\r\n  computed: {\r\n    paramsObj() {\r\n      return {\r\n        mofDivCode: this.curDivCode\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    asideChange() {\r\n      // this.leftTreeVisible = false\r\n    },\r\n    onQueryConditionsClick() {\r\n      this.isShowQueryConditions = !this.isShowQueryConditions\r\n    },\r\n    search(val) {\r\n      console.log(val, 'query查询条件')\r\n      this.paramsObj = val\r\n    },\r\n    handleRowClick(row) {\r\n      console.log('点击每行的方法', row)\r\n      console.log(this.showModal, '111')\r\n      this.showModal = !this.showModal\r\n      // this.fiRuleCode = row.fiRuleCode || ''\r\n      // this.warningCode = row.warningCode || ''\r\n      // this.dialogVisible = true\r\n      // this.dialogTitle = '查看详情信息'\r\n    },\r\n    closeModal(value) {\r\n      console.log(value, '222')\r\n      this.showModal = false\r\n    },\r\n\r\n    changeInput(val) {\r\n      this.filterText = val\r\n    },\r\n    // 点击树节点\r\n    onNodeClick({ node, treeData }, $event, treeContext) {\r\n      console.log(node, '-----')\r\n      this.isShowReport = true\r\n      this.curDivCode = node?.code\r\n      this.$refs?.reportViewRef?.searchData()\r\n    },\r\n    // async searchReport() {\r\n    //   const { regionId, reportList } = formData.value\r\n    //   // 跳过没有选择查询参数\r\n    //   if (!regionId || reportList?.length < 1) {\r\n    //     Message.warning('请先选择期间及分析报表')\r\n    //     return\r\n    //   }\r\n    //   await nextTick()\r\n    //   // 初始化 -> 显示报表进行查询\r\n    //   if (!unref(reportVisible)) reportVisible.value = true\r\n    //   // 重置参数调用searchData重新渲染\r\n    //   else reportViewRef.value?.searchData?.(initParams({ ...formData.value, reportCode: reportCodeId.value.reportCode, reportId: reportCodeId.value.reportId }))\r\n    // },\r\n    // datav表格\r\n    initParams(params) {\r\n      return new Promise((resolve) => {\r\n        console.log(this.paramsObj, '2222')\r\n        let paramsTemp = { ...this.paramsObj }\r\n        console.log('当前报表参数为：', paramsTemp)\r\n        Object.keys(params).map((key) => {\r\n          if (Object.hasOwnProperty.call(this.paramsObj, key)) {\r\n            paramsTemp[key] = this.paramsObj[key]\r\n          }\r\n        })\r\n        resolve(paramsTemp)\r\n      })\r\n    },\r\n    initSearchData(searchObj) {\r\n      return new Promise(resolve => {\r\n        let searchObjTemp = { ...this.searchObj }\r\n        Object.keys(searchObj).map(key => {\r\n          if (Object.hasOwnProperty.call(this.searchObj, key)) {\r\n            searchObjTemp[key] = this.searchObj[key]\r\n          }\r\n        })\r\n        resolve(searchObjTemp)\r\n      })\r\n    },\r\n    setExportLoading() {\r\n      this.$loading({\r\n        lock: true,\r\n        text: '报表数据导出中...',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      })\r\n    },\r\n    exportExcelByServiceBefore() {\r\n      this.setExportLoading()\r\n    },\r\n    exportExcelByServiceAfter() {\r\n      this.$loading().close()\r\n    },\r\n    // const setExportLoading = () => {\r\n    //   this.$loading({\r\n    //     lock: true,\r\n    //     text: '报表数据导出中...',\r\n    //     spinner: 'el-icon-loading',\r\n    //     background: 'rgba(0, 0, 0, 0.7)'\r\n    //   })\r\n    // }\r\n    // const exportExcelByServiceBefore = () => {\r\n    //   setExportLoading()\r\n    // }\r\n    // const exportExcelByServiceAfter = () => {\r\n    //   this.$loading().close()\r\n    // }\r\n    // batchExportExcel(excelParams) {\r\n    //   this.$refs.reportView.batchExportExcel(excelParams) // 选中报表批量导出成Excel\r\n    // },\r\n    // batchExportPDF(excelParams) {\r\n    //   this.$refs.reportView.batchExportPDF(excelParams) // 选中报表批量导出成PDF\r\n    // },\r\n    exportCurrentExcel() {\r\n      this.$refs.reportView.exportExcel() // 当前报表导出成Excel\r\n    },\r\n    exportCurrentPDF() {\r\n      this.$refs.reportView.exportPDF() // 当前报表导出成PDF\r\n    },\r\n    // print() {\r\n    //   this.$refs.reportView.print() // 打印当前报表\r\n    // },\r\n    // batchPrint(draftList) {\r\n    //   this.$refs.reportView.batchPrint(draftList) // 打印当前报表\r\n    // },\r\n    // submit() {\r\n    //   console.log(82, this.$refs.reportView.getExcelData())\r\n    //   return this.$refs.reportView.getSubmitFillData() // 提交前调用报表插件的\r\n    // },\r\n    // getExcelData() {\r\n    //   return this.$refs.reportView.getExcelData()\r\n    // },\r\n    // encodeExcelPassword(password) {\r\n    //   return this.$refs.reportView.excelPasswordEncode(password)\r\n    // },\r\n    // searchData() {\r\n    //   this.$refs.report_view.searchData(this.paramsObj) // 查询当前报表数据\r\n    // },\r\n    // /**\r\n    //  * @description: 报表参数变了，刷新报表数据\r\n    //  * @param {*}\r\n    //  * @return {*}\r\n    //  */\r\n    // refreshReport() {\r\n    //   const { code, paramsObj } = this.reportParams\r\n    //   this.code = code\r\n    //   this.paramsObj = paramsObj\r\n    //   // this.searchData()\r\n    // },\r\n    // parentCallSearch() {\r\n    //   this.refreshReport()\r\n    //   this.ifRenderReport = false\r\n    //   this.$nextTick(() => {\r\n    //     this.ifRenderReport = true\r\n    //   })\r\n    // },\r\n    // /**\r\n    //  * 若无权限控制，则插件中不需要绑定该方法\r\n    //  * 设置业务上下文信息businessContext\r\n    //  * 上下文信息会在数据获取时传递给应用后端进行权限控制 **/\r\n    initBusinessContext() {\r\n      return new Promise((resolve) => {\r\n        resolve(this.businessContext)\r\n      })\r\n    },\r\n    getInstance() {\r\n      let self = this\r\n      var Xsheet = window.bossJS.Xsheet\r\n      return Xsheet.getInstance({\r\n        config: {\r\n          appId: self.$store.state.loginAuthentication.appguid || 'gov-aims'\r\n        }\r\n      })\r\n    },\r\n    printPdf(options) {\r\n      let instance = this.getInstance()\r\n      let exportPages = instance.printingSheetRequest(options)\r\n      let _this = this\r\n      exportPages\r\n        .done(function (data) {\r\n          _this.$refs.reportview.batchPrintDone()\r\n          console.log('print pdf success', data)\r\n        })\r\n        .fail(function (obj) {\r\n          _this.$refs.reportview.batchPrintFail()\r\n          console.log('print pdf error', obj)\r\n        })\r\n    },\r\n    exportExcel(options) {\r\n      let instance = this.getInstance()\r\n      let exportPages = instance.printingSheetRequest(options)\r\n      let _this = this\r\n      exportPages\r\n        .done(function (data) {\r\n          _this.$refs.reportView.exportExcelDone()\r\n          console.log('img print success', data)\r\n        })\r\n        .fail(function (obj) {\r\n          _this.$refs.reportView.exportExcelFail()\r\n          console.log('export excel error', obj)\r\n        })\r\n    },\r\n    excelLinkHandle(payload) {\r\n      const { excelSheet: { sheetName }, cell } = payload?.origin\r\n      console.log(cell, sheetName, '---')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* ::v-deep .vxe-tools--wrapper {\r\n  display: none;\r\n} */\r\n/* .T-search {\r\n  background: none !important;\r\n} */\r\n/* .unit-tree-main.unit-tree-main-nodrop\r\n  .selection-tree-nodrop\r\n  .vxe-input-filter-tree {\r\n  margin-bottom: 0px !important;\r\n} */\r\n/* .tree-set__content {\r\n  display: none !important;\r\n} */\r\n.left-tree {\r\n  height: 100%;\r\n}\r\n.left-tree-body {\r\n  height: 100%;\r\n}\r\n</style>\r\n"]}]}