{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\dynamicTableSetting\\dynamicTableSetting.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\dynamicTableSetting\\dynamicTableSetting.vue","mtime":1694505522433},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["dynamicTableSetting.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"dynamicTableSetting.vue","sourceRoot":"src/views/main/dynamicTableSetting","sourcesContent":["<!--  表格信息配置   Author:Titans@2396757591@qq.com -->\r\n<template>\r\n  <div class=\"height-all\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftVisible\">\r\n      <template v-slot:topTap>\r\n        <!-- <JsonEditor />  -->\r\n      </template>\r\n      <template v-slot:topTabPane> </template>\r\n      <template v-slot:query> </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <template v-slot:mainTree>\r\n        <div class=\"height-all left-tree-pane\">\r\n          <div class=\"mmc-left-tree-title\">\r\n            <BsTreeSet\r\n              :tree-config=\"treeConfig\"\r\n              @onAsideChange=\"leftVisible = false\"\r\n              @onChangeInput=\"changeInput\"\r\n              @onConfrimData=\"confrimData\"\r\n            />\r\n            <!-- <div class=\"mmc-title\">\r\n              <span class=\"fn-inline\">菜单树</span>\r\n            </div> -->\r\n          </div>\r\n          <div class=\"mmc-left-tree-body\" style=\"height: calc(100% - 48px)\">\r\n            <BsBossTree\r\n              ref=\"testTree\"\r\n              is-need-root\r\n              :tree-props=\"{\r\n                label: 'name',\r\n                children: 'children',\r\n              }\"\r\n              open-loading\r\n              :is-server=\"false\"\r\n              :datas=\"leftTreeData\"\r\n              :server-uri=\"serverUri\"\r\n              :global-config=\"leftTreeConfig\"\r\n              :queryparams=\"treeQueryparams\"\r\n              :clickmethod=\"onLeftTreeNodeClick\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <BsTable\r\n          ref=\"bsTableRef\"\r\n          :footer-config=\"{ showFooter: false }\"\r\n          :table-config=\"tableConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"curTableConfDatasMapArr\"\r\n          :toolbar-config=\"toolbarConfig\"\r\n          :pager-config=\"false\"\r\n          :edit-config=\"{}\"\r\n          @ajaxData=\"ajaxData\"\r\n          @editClosed=\"editClosed\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div\r\n                v-if=\"leftVisible === false\"\r\n                class=\"table-toolbar-contro-leftvisible\"\r\n                @click=\"leftVisible = true\"\r\n              ></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{\r\n                  (curLeftTreeClickNode.name ? curLeftTreeClickNode.name : '') + '菜单表配置'\r\n                }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <template v-slot:toolbar-custom-slot>\r\n            <div class=\"toolbar-slot-custom-slot fn-inline\">\r\n              <!-- <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"编辑表单项配置\"\r\n                @click=\"onEditFormClick\"\r\n              />\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"编辑表格列配置\"\r\n                @click=\"onEditTableClick\"\r\n              /> -->\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"新增\"\r\n                @click=\"onAddClick\"\r\n              />\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"删除\"\r\n                @click=\"onDeleteClick\"\r\n              />\r\n              <vxe-button\r\n                size=\"medium\"\r\n                status=\"primary\"\r\n                content=\"编辑\"\r\n                @click=\"onEditClick\"\r\n              />\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <div>\r\n      <TableConfModal\r\n        v-if=\"tableConfModalVisible\"\r\n        :dialog-visible.sync=\"tableConfModalVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n      <FormConfModal\r\n        v-if=\"formConfModalVisible\"\r\n        :dialog-visible.sync=\"formConfModalVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n      <EnteringDefault\r\n        v-if=\"enteringDefaultVisible\"\r\n        :dialog-visible.sync=\"enteringDefaultVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n      <SubTabConfigModal\r\n        v-if=\"SubTabConfigVisible\"\r\n        :dialog-visible.sync=\"SubTabConfigVisible\"\r\n        :params=\"tableConfModalParams\"\r\n        @closeCallback=\"refreshTable\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport TableConfModal from './tableConfModal.vue'\r\nimport FormConfModal from './FormConfModal.vue'\r\nimport EnteringDefault from './enteringDefault.vue'\r\nimport getFormConfData from './formConf.js'\r\nimport SubTabConfigModal from './SubTabConfigModal.vue'\r\nexport default {\r\n  name: '',\r\n  components: {\r\n    TableConfModal,\r\n    FormConfModal,\r\n    EnteringDefault,\r\n    SubTabConfigModal\r\n  },\r\n  props: {\r\n    allPropData: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      menuguids: [],\r\n      curConfType: 'table',\r\n      leftVisible: true,\r\n      leftTreeData: [],\r\n      curSplitPaneLeftWidth: 20,\r\n      isShowQueryConditions: false,\r\n      serverUri: 'mp-b-perm-service/v1/tableconf/menuguid',\r\n      treeQueryparams: {\r\n        menuguid: 'test_123456',\r\n        useRight: false,\r\n        batchno: 2,\r\n        datatype: 5,\r\n        eleCode: 'DEPBGTECO',\r\n        sxspecroleguid: '637B6D5A823F459AB313CBF94C87765B'\r\n      },\r\n      treeleftTreeConfig: {\r\n        inputVal: ''\r\n      },\r\n      treeConfig: {\r\n        curRadio: 'zf',\r\n        radioGroup: [\r\n          {\r\n            code: 'zf',\r\n            label: '政府部门树'\r\n          },\r\n          {\r\n            code: 'xuexiao',\r\n            label: '学校树'\r\n          },\r\n          {\r\n            code: 'jigou',\r\n            label: '机构树'\r\n          }\r\n        ]\r\n      },\r\n      leftTreeConfig: {\r\n        inputVal: ''\r\n      },\r\n      pagerConfig: {\r\n        currentPage: 1,\r\n        total: 100\r\n      },\r\n      curTableConfDatas: [],\r\n      currentPage: 1,\r\n      curTableConfDatasMapArr: [\r\n        // {\r\n        //   tableName: '1',\r\n        //   businessTableName: '1',\r\n        //   tableNote: '1',\r\n        //   measuringUnit: 1,\r\n        //   viewOrder: '001',\r\n        //   editableBatch: '001',\r\n        //   tableType: '001',\r\n        //   note: '1',\r\n        //   autoBuiltTables: false,\r\n        //   editble: true,\r\n        //   showCheckbox: true,\r\n        //   canUse: true,\r\n        //   aSingleTable: false,\r\n        //   batchModify: false,\r\n        //   rowConfig: false,\r\n        //   noRecordIsAllowedToReport: true,\r\n        //   subtotalRows: true\r\n        // }\r\n      ],\r\n      curTableConfDatasMap: {},\r\n      globleConfigCp: {\r\n        tableName: '',\r\n        businessTableName: '',\r\n        tableNote: '',\r\n        measuringUnit: '',\r\n        viewOrder: '',\r\n        editableBatch: '',\r\n        tableType: '',\r\n        note: '',\r\n        autoBuiltTables: false,\r\n        editble: true,\r\n        showCheckbox: true,\r\n        canUse: true,\r\n        aSingleTable: false,\r\n        batchModify: false,\r\n        rowConfig: false,\r\n        noRecordIsAllowedToReport: true,\r\n        subtotalRows: true\r\n      },\r\n      toolbarConfig: {\r\n        disabledMoneyConversion: false,\r\n        ...getFormConfData('tableInforConf', 'toolbarConfig')\r\n      },\r\n      tableConfig: getFormConfData('tableInforConf', 'tableConfig'),\r\n      tableColumnsConfig: getFormConfData(\r\n        'tableInforConf',\r\n        'tableColumnsConfig'\r\n      ),\r\n      tableConfModalVisible: false,\r\n      formConfModalVisible: false,\r\n      enteringDefaultVisible: false,\r\n      curLeftTreeClickNode: {},\r\n      enteringDefaultFlag: false,\r\n      SubTabConfigVisible: false\r\n    }\r\n  },\r\n  computed: {\r\n    curNavModule() {\r\n      return this.$store.state.curNavModule\r\n    },\r\n    userInfo() {\r\n      return this.$store.state.userInfo\r\n    }\r\n  },\r\n  methods: {\r\n    deepCopy(obj) {\r\n      // 深拷贝通用方法\r\n      let me = this\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n    jsonStringify(columns) {\r\n      // 对象转换成json字符串\r\n      return JSON.stringify(columns, function (key, val) {\r\n        if (typeof val === 'function') {\r\n          return val + ''\r\n        }\r\n        return val\r\n      })\r\n    },\r\n    jsonParse(str) {\r\n      // json字符串转换成对象\r\n      return JSON.parse(str, function (k, v) {\r\n        try {\r\n          if (\r\n            v.indexOf &&\r\n            (v.indexOf('function') > -1 || v.indexOf('=>') > -1)\r\n          ) {\r\n            // return eval('(function(){return ' + v + ' })()')\r\n            // eslint-disable-next-line no-new-func\r\n            let func = new Function('return ' + v)\r\n            return func()\r\n          }\r\n          return v\r\n        } catch (e) {\r\n          return v\r\n        }\r\n      })\r\n    },\r\n    changeInput(val) {\r\n      this.treeleftTreeConfig.inputVal = val\r\n    },\r\n    confrimData(curTree) {\r\n      this.confrimData.curRadio = curTree.code\r\n      switch (curTree.code) {\r\n        case 'zf':\r\n          break\r\n        case 'xuexiao':\r\n          this.tabStatusNumConfig['ycl'] = 12\r\n          break\r\n        case 'jigou':\r\n          break\r\n      }\r\n    },\r\n    onSplitPaneResize(leftWidth) {\r\n      if (leftWidth > 1) {\r\n        this.curSplitPaneLeftWidth = leftWidth\r\n        this.leftVisible = true\r\n      } else {\r\n        this.leftVisible = false\r\n      }\r\n    },\r\n    ajaxData({ currentPage, pageSize }) {\r\n      this.pagerConfig.currentPage = currentPage\r\n      this.queryParams = Object.assign(this.queryParams, {\r\n        currentPage,\r\n        pageSize\r\n      })\r\n      this.getTableDatas(currentPage, pageSize)\r\n    },\r\n    getTableDatas(currentPage, pageSize) {\r\n      // 服务端查询数据\r\n      this.showLoading = true\r\n      let self = this\r\n      this.$http.post('url', this.queryParams).then((res) => {\r\n        if (res.code === 200) {\r\n          self.tableData = res.data.list\r\n          self.pagerConfig = {\r\n            total: res.data.total,\r\n            currentPage: currentPage\r\n          }\r\n          this.showLoading = false\r\n        }\r\n      })\r\n    },\r\n    transformConlumsDataToNest(columns) {\r\n      // columns转化为vxe-table columns数据结构\r\n      let self = this\r\n      columns.forEach((column, columnIndex) => {\r\n        if (Array.isArray(column.children) && column.children.length) {\r\n          column.children = self.transformConlumsDataToNest(column.children)\r\n        } else {\r\n          column[column.renderType] = {\r\n            name: column.renderName, // 渲染器名,\r\n            options: ((params) => {\r\n              if (typeof params === 'object') {\r\n                return self.deepCopy(params)\r\n              } else if (typeof params === 'string') {\r\n                return params\r\n                  ? params.split('+').map((item, index) => {\r\n                    return {\r\n                      value: item.split('#')[0],\r\n                      label: item.split('#')[1]\r\n                    }\r\n                  })\r\n                  : []\r\n              } else {\r\n                return params\r\n              }\r\n            })(column.options), // 下拉数据源\r\n            defaultValue: column.defaultValue, // 默认值\r\n            props: column.props // 额外参数\r\n          }\r\n          delete column._XID\r\n          delete column.renderType\r\n          delete column.renderName\r\n          delete column.options\r\n          delete column.props\r\n          delete column.defaultValue\r\n          delete self.deepCopy(column.props)\r\n        }\r\n      })\r\n      return columns\r\n    },\r\n    transformConlumsDataToSingle(columns) {\r\n      // vxe-table columns数据结构转化为单层columns\r\n      let self = this\r\n      columns.forEach((column, columnIndex) => {\r\n        if (Array.isArray(column.children) && column.children.length) {\r\n          column.children = self.transformConlumsDataToNest(column.children)\r\n        } else {\r\n          if (column.hasOwnProperty('editRender')) {\r\n            column.renderType = 'editRender'\r\n            column.renderName = column.editRender.name\r\n            column = Object.assign(column, self.deepCopy(column.editRender))\r\n            delete column.editRender\r\n          } else if (column.hasOwnProperty('cellRender')) {\r\n            column.renderType = 'cellRender'\r\n            column.renderName = column.cellRender.name\r\n            column = Object.assign(column, self.deepCopy(column.cellRender))\r\n          } else if (column.hasOwnProperty('itemRender')) {\r\n            column.renderType = 'itemRender'\r\n            column.renderName = column.itemRender.name\r\n            column = Object.assign(column, self.deepCopy(column.itemRender))\r\n          } else {\r\n          }\r\n          if (['$select', '$vxeSelect', '$vxeFormSelect', '$vxeSwitch', '$vxeRadio', '$vxeSwitch', '$vxeCheckbox'].indexOf(column.renderName) >= 0) {\r\n            column.options = column.options\r\n              .map((item, index) => {\r\n                return item.value + '#' + item.label\r\n              })\r\n              .join('+')\r\n          }\r\n        }\r\n      })\r\n      return columns\r\n    },\r\n    transformItemsDataToSingle(items) {\r\n      // vxe-table items数据结构转化为单层items\r\n      let self = this\r\n      items.forEach((item, itemIndex) => {\r\n        if (Array.isArray(item.children) && item.children.length) {\r\n          item.children = self.transformConlumsDataToNest(item.children)\r\n        } else {\r\n          if (item.hasOwnProperty('itemRender')) {\r\n            item.renderType = 'itemRender'\r\n            item.renderName = item.itemRender.name\r\n            item = Object.assign(item, self.deepCopy(item.itemRender))\r\n            delete item.itemRender\r\n          }\r\n          if (['$select', '$vxeSelect', '$vxeFormRadio', '$vxeFormSelect', '$vxeSwitch', '$vxeRadio', '$vxeSwitch', '$vxeCheckbox', '$vxeFormCheckbox'].indexOf(item.renderName) >= 0) {\r\n            item.options = Array.isArray(item.options) ? item.options\r\n              .map((item, index) => {\r\n                return item.value + '#' + item.label\r\n              })\r\n              .join('+') : item.options\r\n          }\r\n        }\r\n      })\r\n      return items\r\n    },\r\n    getTableConfByMenuguid(menuguid) {\r\n      // 根据菜单menuguid获取其下所有表配置\r\n      let self = this\r\n      return new Promise((resolve, reject) => {\r\n        self.$http\r\n          .get('mp-b-perm-service/v1/tableconf/menuguid', {\r\n            menuguid: menuguid,\r\n            mof_div_code: self.userInfo.province, // 区划\r\n            fiscalyear: self.userInfo.year // 年份\r\n          })\r\n          .then((res) => {\r\n            if (res.rscode === '100000') {\r\n              resolve(res.data)\r\n              // resolve(self.generateCurTableConfDataMap(res.data))\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            reject(error)\r\n          })\r\n      })\r\n    },\r\n    generateCurTableConfDataMap(curMenuConfs) {\r\n      // 生成当前menu下表格数据映射\r\n      let self = this\r\n      let resultObj = {}\r\n      let curTableConfDatasMap = {}\r\n      let curTableConfDatasMapArr = []\r\n      resultObj.curTableConfDatas = curMenuConfs\r\n      curMenuConfs.forEach((item, index) => {\r\n        let { itemsConfig, globalConfig, formConfig } = self.jsonParse(\r\n          item.configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        formConfig = formConfig || []\r\n        let globalConfigCp = Object.assign(\r\n          {\r\n            tablename: '',\r\n            businessTableName: '',\r\n            tableNote: '',\r\n            measuringUnit: '',\r\n            viewOrder: '',\r\n            editableBatch: '',\r\n            tableType: '',\r\n            note: '',\r\n            autoBuiltTables: '',\r\n            editble: '',\r\n            showCheckbox: '',\r\n            canUse: '',\r\n            aSingleTable: '',\r\n            batchModify: '',\r\n            rowConfig: '',\r\n            noRecordIsAllowedToReport: '',\r\n            subtotalRows: ''\r\n          },\r\n          globalConfig,\r\n          {\r\n            // tablename: item.tablename,\r\n            type: item.type,\r\n            updatetime: item.updatetime,\r\n            menuname: this.curLeftTreeClickNode.name,\r\n            id: item.id,\r\n            menuguid: item.menuguid\r\n          }\r\n        )\r\n        curTableConfDatasMapArr.push(globalConfigCp)\r\n        curTableConfDatasMap[item.id] = {\r\n          itemsConfig: self.transformConlumsDataToSingle(itemsConfig),\r\n          formConfig: self.transformItemsDataToSingle(formConfig),\r\n          id: item.id,\r\n          globalConfig: globalConfigCp,\r\n          menuguid: item.menuguid,\r\n          type: item.type\r\n        }\r\n      })\r\n      resultObj.curTableConfDatasMapArr = curTableConfDatasMapArr\r\n      resultObj.curTableConfDatasMap = curTableConfDatasMap\r\n      return resultObj\r\n    },\r\n    setLeftMenuTree() {\r\n      // 加载左侧树\r\n      this.leftTreeData = [].concat(this.$store.state.systemMenu)\r\n    },\r\n    onLeftTreeNodeClick(node, leftTree) {\r\n      // 左侧树点击事件\r\n      if (!(Array.isArray(node.children) && node.children.length)) {\r\n        let self = this\r\n        this.curLeftTreeClickNode = node\r\n        this.getTableConfByMenuguid(node.guid).then((res) => {\r\n          self.$message({\r\n            showClose: true,\r\n            message: `当前菜单数据查询成功,共计(${res.length}条)`,\r\n            type: 'success'\r\n          })\r\n          self.curTableConfDatasMapArr = res\r\n        })\r\n      }\r\n    },\r\n    refreshTable() {\r\n      // 刷新表格\r\n      let self = this\r\n      this.getTableConfByMenuguid(this.curLeftTreeClickNode.guid).then(\r\n        (res) => {\r\n          self.$message({\r\n            showClose: true,\r\n            message: '当前菜单数据已刷新',\r\n            type: 'success'\r\n          })\r\n          self.curTableConfDatasMapArr = res\r\n          self.$refs.bsTableRef\r\n            .tableOptionFn()\r\n            .reloadData(self.curTableConfDatasMapArr).then(() => {}).catch(() => {\r\n            })\r\n        }\r\n      )\r\n    },\r\n    onEditTableClick() {\r\n      // 编辑点击事件\r\n      let selection = this.$refs.bsTableRef.selection\r\n      if (selection.length === 1) {\r\n        let { itemsConfig, globalConfig, formConfig } = this.jsonParse(\r\n          selection[0].configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        formConfig = formConfig || []\r\n        this.tableConfModalParams = Object.assign(selection[0], {\r\n          globalConfig: globalConfig,\r\n          itemsConfig: this.transformConlumsDataToSingle(itemsConfig),\r\n          formConfig: this.transformItemsDataToSingle(formConfig)\r\n        })\r\n        this.tableConfModalVisible = true\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请选择一条数据进行编辑',\r\n          type: 'info'\r\n        })\r\n      }\r\n    },\r\n    onEditFormClick() {\r\n      // 编辑点击事件\r\n      let selection = this.$refs.bsTableRef.selection\r\n      if (selection.length === 1) {\r\n        let { itemsConfig, globalConfig, formConfig } = this.jsonParse(\r\n          selection[0].configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        formConfig = formConfig || []\r\n        this.tableConfModalParams = Object.assign(selection[0], {\r\n          globalConfig: globalConfig,\r\n          itemsConfig: this.transformConlumsDataToSingle(itemsConfig),\r\n          formConfig: this.transformItemsDataToSingle(formConfig)\r\n        })\r\n        this.formConfModalVisible = true\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请选择一条数据进行编辑',\r\n          type: 'info'\r\n        })\r\n      }\r\n    },\r\n    onEditClick() {\r\n      let selection = this.$refs.bsTableRef.selection\r\n      if (selection.length === 1) {\r\n        let { itemsConfig, globalConfig, subTabConfig, defaultConfig } = this.jsonParse(\r\n          selection[0].configure\r\n        )\r\n        globalConfig = globalConfig || {}\r\n        itemsConfig = itemsConfig || []\r\n        subTabConfig = subTabConfig || {\r\n          buttons: [],\r\n          buttonsInfo: {}\r\n        }\r\n        defaultConfig = defaultConfig || []\r\n        if (selection[0].type === 'form' || selection[0].type === 'formConf' || selection[0].type === 'detail' || selection[0].type === 'detailConf') {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(itemsConfig),\r\n            itemsConfig: this.transformItemsDataToSingle(itemsConfig)\r\n          })\r\n          this.formConfModalVisible = true\r\n        } else if (selection[0].type === 'tabPaneConf') {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(subTabConfig),\r\n            subTabConfig: subTabConfig\r\n          })\r\n          this.SubTabConfigVisible = true\r\n        } else if (selection[0].type === 'enteringDefault') {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(defaultConfig),\r\n            itemsConfig: this.transformConlumsDataToSingle(defaultConfig)\r\n          })\r\n          this.enteringDefaultVisible = true\r\n        } else {\r\n          this.tableConfModalParams = Object.assign(selection[0], {\r\n            globalConfig: globalConfig,\r\n            itemsConfigNest: this.deepCopy(itemsConfig),\r\n            itemsConfig: this.transformConlumsDataToSingle(itemsConfig)\r\n          })\r\n          this.tableConfModalVisible = true\r\n        }\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '请选择一条数据进行编辑',\r\n          type: 'info'\r\n        })\r\n      }\r\n    },\r\n    onAddClick() {\r\n      let self = this\r\n      this.$refs.bsTableRef.insertRowData({\r\n        data: {\r\n          menuguid: self.curLeftTreeClickNode.guid,\r\n          type: 'table',\r\n          optionType: 'add',\r\n          id: self.$ToolFn.utilFn.getUuid(),\r\n          menuname: self.curLeftTreeClickNode.name,\r\n          mof_div_code: self.userInfo.province,\r\n          tablename: '',\r\n          fiscalyear: self.userInfo.year,\r\n          configure: self.jsonStringify({\r\n            globalConfig: {}, // 全局配置\r\n            itemsConfig: [], // 项配置\r\n            pageConfig: {}, // 分页配置\r\n            editConfig: {}, // 编辑配置\r\n            editRules: {}, // 校验规则\r\n            footerConfig: {}, // 表尾配置\r\n            dataConfig: {\r\n              dataSouceType: 'query'\r\n            },\r\n            subTabConfig: [],\r\n            defaultConfig: [] // 录入默认值\r\n          })\r\n        // menuguid: '123456'\r\n        }\r\n      })\r\n    },\r\n    onDeleteClick() {\r\n      let self = this\r\n      let ids = this.$refs.bsTableRef.selection.map((item, index) => {\r\n        return item.id\r\n      })\r\n      let menuguid = this.$refs.bsTableRef.selection[0].menuguid\r\n      this.menuguids[0] = menuguid\r\n      if (ids.length) {\r\n        self.$confirm('确定删除？', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          self.$http\r\n            .del('mp-b-perm-service/v1/tableconf', {\r\n              mof_div_code: self.userInfo.province, // 区划\r\n              fiscalyear: self.userInfo.year, // 年份s\r\n              ids: ids,\r\n              menuguids: this.menuguids\r\n            })\r\n            .then((res) => {\r\n              if (res.rscode === '100000') {\r\n                self.$message({\r\n                  showClose: true,\r\n                  message: `选中的${ids.length}条数据已删除`,\r\n                  type: 'success'\r\n                })\r\n                self.refreshTable()\r\n                // resolve(self.generateCurTableConfDataMap(res.data))\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.log('error', error)\r\n            })\r\n        }).catch(e => {\r\n          self.$message.success('取消删除成功')\r\n        })\r\n      }\r\n    },\r\n    onTableCellClick({\r\n      row,\r\n      rowIndex,\r\n      $rowIndex,\r\n      column,\r\n      columnIndex,\r\n      $columnIndex,\r\n      triggerRadio,\r\n      triggerCheckbox,\r\n      triggerTreeNode,\r\n      triggerExpandNode,\r\n      $event\r\n    }) {\r\n      // this.tableConfModalParams = this.curTableConfDatasMap[row.id]\r\n      // this.TableConfModalVisible = true\r\n    },\r\n    // 区划默认值\r\n    getProvince() {\r\n      let obj = {\r\n        value: this.userInfo.province,\r\n        label: this.userInfo.admdivname\r\n      }\r\n      let flag = false\r\n      this.tableColumnsConfig[0].editRender.options.forEach(item => {\r\n        if (item.value === this.userInfo.province) {\r\n          flag = true\r\n        }\r\n      })\r\n      if (!flag) {\r\n        this.tableColumnsConfig[0].editRender.options.push(obj)\r\n      }\r\n      this.tableColumnsConfig[0].editRender.defaultValue = this.userInfo.province\r\n    },\r\n    // 编辑的时候录入默认值有个默认id\r\n    editClosed({ row, column }) {\r\n      // enteringDefaultFlag标识，当改过为录入默认值后，再更改才影响id变化\r\n      if (row.type === 'enteringDefault') {\r\n        row.id = 'D9A0B58E5C2242F3860E6D8151C211B2'\r\n        row.id__viewSort = 'D9A0B58E5C2242F3860E6D8151C211B2'\r\n        this.enteringDefaultFlag = true\r\n      } else if (row.type !== 'enteringDefault' && this.enteringDefaultFlag === true) {\r\n        row.id = this.$ToolFn.utilFn.getUuid()\r\n        row.id__viewSort = row.id\r\n        this.enteringDefaultFlag = false\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.setLeftMenuTree()\r\n    if (this.$gloableToolFn.currentProvince === this.$gloableToolFn.FuJian) {\r\n      this.getProvince()\r\n    }\r\n  },\r\n  watch: {\r\n    tableConfModalVisible: {\r\n      handler(newval) {\r\n        // if (!newval) {\r\n        //   this.refreshTable()\r\n        // }\r\n      },\r\n      // deep: true,\r\n      immediate: true\r\n    },\r\n    formConfModalVisible: {\r\n      handler(newval) {\r\n        // if (!newval) {\r\n        //   this.refreshTable()\r\n        // }\r\n      },\r\n      // deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.left-tree-pane {\r\n  .mmc-title {\r\n    height: 47px;\r\n    padding: 7px 15px;\r\n    line-height: 31px;\r\n    color: #464c5b;\r\n    font-size: 16px;\r\n    box-sizing: border-box;\r\n    border-bottom: 1px solid #dce3f3;\r\n    background-color: #e3f2fe;\r\n  }\r\n}\r\n</style>\r\n"]}]}