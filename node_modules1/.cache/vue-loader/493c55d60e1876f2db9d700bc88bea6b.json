{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableOld\\batchModify\\BatchModify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\TableOld\\batchModify\\BatchModify.vue","mtime":1694505521632},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BatchModify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BatchModify.vue","sourceRoot":"src/components/TableOld/batchModify","sourcesContent":["<!--  table modify   Author:Titans@2396757591@qq.com -->\r\n<template>\r\n  <div class=\"table-batch-modify\">\r\n    <vxe-form\r\n      ref=\"batchModifyForm\"\r\n      title-align=\"right\"\r\n      title-width=\"100\"\r\n      :data=\"formData\"\r\n      size=\"middle\"\r\n      @submit=\"submitEvent\"\r\n    >\r\n      <vxe-form-item\r\n        title-align=\"right\"\r\n        :title-width=\"30\"\r\n        align=\"left\"\r\n        span=\"9\"\r\n        title=\"列\"\r\n        field=\"modifyField\"\r\n      >\r\n        <template v-slot>\r\n          <vxe-select\r\n            v-model=\"formData.modifyField\"\r\n            placeholder=\"请选择修改项\"\r\n            clearable\r\n            @change=\"onModifyItemChange\"\r\n            @clear=\"onModifyItemClear\"\r\n          >\r\n            <vxe-option\r\n              v-for=\"(item, index) in tableColumnsOptionMapArr\"\r\n              :key=\"index\"\r\n              :value=\"item.value\"\r\n              :label=\"item.label\"\r\n            />\r\n          </vxe-select>\r\n        </template>\r\n      </vxe-form-item>\r\n      <vxe-form-item\r\n        title-align=\"right\"\r\n        :title-width=\"60\"\r\n        :align=\"modifyItem.align || 'left'\"\r\n        span=\"12\"\r\n        title=\"修改为\"\r\n        :field=\"modifyItem.field\"\r\n        :item-render=\"modifyItem.itemRender\"\r\n      />\r\n      <vxe-form-item align=\"center\" span=\"3\">\r\n        <template v-slot>\r\n          <vxe-button type=\"submit\" status=\"primary\">确定</vxe-button>\r\n        </template>\r\n      </vxe-form-item>\r\n    </vxe-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'TableBatchModifyVue',\r\n  components: {},\r\n  props: {\r\n    tableColumns: {\r\n      type: Array,\r\n      default() {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      hasModifyItem: false, // 是否有修改项\r\n      itemsConfig: [\r\n        // 批量修改项表单配置\r\n        {\r\n          field: 'modifyField',\r\n          title: '列',\r\n          itemRender: {\r\n            name: 'vxeSelect',\r\n            props: {\r\n              clearable: true,\r\n              options: [],\r\n              placeholder: '请选择修改项'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          field: 'modifyValue',\r\n          title: '修改为',\r\n          itemRender: {\r\n            name: '$vxeInput',\r\n            props: {\r\n              type: 'text',\r\n              clearable: true,\r\n              placeholder: '请输入值'\r\n            }\r\n          }\r\n        },\r\n        {\r\n          itemRender: {\r\n            name: 'input',\r\n            attrs: {\r\n              type: 'submit',\r\n              value: '确定'\r\n            }\r\n          }\r\n        }\r\n      ],\r\n      modifyItem: {\r\n        // 修改项\r\n        field: 'modifyValue',\r\n        itemRender: {\r\n          name: '$input',\r\n          type: 'text'\r\n        }\r\n      },\r\n      formData: {\r\n        modifyField: ''\r\n      }, // 修改项表单数据\r\n      formDataCp: {\r\n        // 修改项表单数据\r\n        modifyField: ''\r\n      },\r\n      tableColumnsMap: {\r\n        tableColumnsFieldMap: {}, // 字段map: field:conlum\r\n        tableColumnsOptionMap: {}, // 字段map: field:render\r\n        tableColumnsOptionMapArr: [] // 批量修改源数据\r\n      },\r\n      tableColumnsFieldMap: {}, // 字段map: field:conlum\r\n      tableColumnsOptionMap: {}, // 字段map: field:render\r\n      tableColumnsOptionMapArr: [] // 批量修改源数据\r\n    }\r\n  },\r\n  methods: {\r\n    itemChange({ $form, property, itemValue: value, data, renderOpts }) {},\r\n    deepCopy(obj) {\r\n      // 深拷贝通用方法\r\n      let me = this\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n    riverColumnsGenerateColumnsMap(columns, obj) {\r\n      // 递归生成列配置映射\r\n      let self = this\r\n      obj = obj || {\r\n        tableColumnsFieldMap: {}, // 字段map: field:conlum\r\n        tableColumnsOptionMap: {}, // 字段map: field:render\r\n        tableColumnsOptionMapArr: [] // 批量修改源数据\r\n      }\r\n      columns.forEach((conlum, index) => {\r\n        if (Array.isArray(conlum.children) && conlum.children.length) {\r\n          self.riverColumnsGenerateColumnsMap(conlum.children, obj)\r\n        } else {\r\n          if (conlum.field && !conlum.formula) {\r\n            obj.tableColumnsFieldMap[conlum.field] = conlum\r\n            if (conlum.editRender) {\r\n              obj.tableColumnsOptionMapArr.push({\r\n                label: conlum.title,\r\n                value: conlum.field\r\n              })\r\n              obj.tableColumnsOptionMap[conlum.field] = {\r\n                span: 12,\r\n                align: conlum.align,\r\n                field: conlum.field,\r\n                title: conlum.title,\r\n                itemRender: conlum.editRender\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n      return obj\r\n    },\r\n    generateColumnsMap(columns) {\r\n      // 生成修改map\r\n      let obj = this.riverColumnsGenerateColumnsMap(columns)\r\n      const { tableColumnsOptionMap, tableColumnsOptionMapArr } = obj\r\n      this.tableColumnsMap = obj\r\n      this.tableColumnsOptionMap = tableColumnsOptionMap // 字段map: field:render\r\n      this.tableColumnsOptionMapArr = tableColumnsOptionMapArr // 批量修改源数据\r\n      this.hasModifyItem = false\r\n    },\r\n    onModifyItemChange({ value, $event }) {\r\n      // 修改项改变\r\n      this.formData.modifyField = value\r\n      this.modifyItem = this.tableColumnsOptionMap[value]\r\n      this.formData = Object.assign(\r\n        {},\r\n        {\r\n          modifyField: value\r\n        },\r\n        {\r\n          [this.modifyItem.field]: ''\r\n        }\r\n      )\r\n      this.hasModifyItem = true\r\n    },\r\n    onModifyItemClear({ value, $event }) {\r\n      // 修改项置空\r\n      this.hasModifyItem = false\r\n      this.modifyItem = {\r\n        field: 'modifyValue',\r\n        itemRender: {\r\n          name: '$input',\r\n          type: 'text'\r\n        }\r\n      }\r\n      this.formData = Object.assign({}, this.formDataCp)\r\n    },\r\n    submitEvent() {\r\n      // 提交修改\r\n      let self = this\r\n      if (!this.$parent.$parent.$parent.selection.length) {\r\n        self.$message({\r\n          type: 'info',\r\n          message: '请先选中数据再进行批量修改！'\r\n        })\r\n      } else {\r\n        this.$XModal\r\n          .confirm('您确定要批量修改所选中数据吗?')\r\n          .then(() => {\r\n            let result = self.deepCopy(self.formData)\r\n            delete result.modifyField\r\n            self.$emit('onSureClick', {\r\n              modifyItem: self.modifyItem,\r\n              formData: result\r\n            })\r\n            // this.$nextTick().then(() => {\r\n            //   this.init()\r\n            // })\r\n          })\r\n          .catch(() => {\r\n            self.$message({\r\n              type: 'info',\r\n              message: '已取消删除'\r\n            })\r\n          })\r\n      }\r\n    },\r\n    init() {\r\n      this.generateColumnsMap(this.tableColumns)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  watch: {\r\n    tableColumns: {\r\n      handler() {\r\n        this.init()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.table-batch-modify {\r\n  width: 480px;\r\n  margin-right: 8px;\r\n  .vxe-form {\r\n    height: 34px;\r\n    background-color: #e3f1fe;\r\n\r\n    .vxe-form--item {\r\n      height: 100%;\r\n      padding: 0 5px;\r\n    }\r\n    .vxe-col--3 {\r\n      padding: 0 0 0 2px;\r\n    }\r\n    .vxe-form--item-inner {\r\n      height: 100%;\r\n      min-height: 32px;\r\n    }\r\n    .vxe-textarea {\r\n      height: 100%;\r\n    }\r\n    .vxe-form--item-content {\r\n      height: 100%;\r\n      line-height: 32px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}