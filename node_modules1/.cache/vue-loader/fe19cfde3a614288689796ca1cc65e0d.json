{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\handlingOfViolations\\index.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\handlingOfViolations\\index.vue","mtime":1695716045730},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696752946978},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8v5omn6KGMIOWNleS9jembtuS9meminei3s+i9rOWIsOivpemhtemdoiDlr7zoh7Rjc3PmoLflvI/kuKLlpLENCmJ1dHRvbi5lbC1idXR0b24uZWwtYnV0dG9uLS1kZWZhdWx0LmVsLWJ1dHRvbi0tc21hbGwuZWwtYnV0dG9uLS1wcmltYXJ5ew0KICBjb2xvcjogI2ZmZiAhaW1wb3J0YW50Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAgIzRkNzdlNyAhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwcA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/main/handlingOfViolations","sourcesContent":["<template>\r\n  <div style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible=\"isUnitMenu ? false : leftVisible\">\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          :tab-status-btn-config=\"tabStatusBtnConfig\"\r\n          :is-open=\"isShowSearchForm\"\r\n          @tabClick=\"onTabClick\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <template v-slot:query>\r\n        <div v-show=\"isShowSearchForm\" class=\"main-query\">\r\n          <BsQuery\r\n            :query-form-item-config=\"formSchemas\"\r\n            :query-form-data=\"formData\"\r\n            @onSearchClick=\"search\"\r\n            @register=\"registerForm\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <template v-if=\"!isUnitMenu\" v-slot:mainTree>\r\n        <div style=\"height: 100%;\">\r\n          <BsTreeTitle\r\n            :visiable.sync=\"leftVisible\"\r\n            :input-value.sync=\"treeFilterText\"\r\n            label=\"导航\"\r\n          />\r\n          <div class=\"mmc-left-tree-body\" style=\"height: calc(100% - 8px); overflow-y: auto\">\r\n            <BsTree\r\n              ref=\"mofDivTree\"\r\n              v-loading=\"treeLoading\"\r\n              :filter-text=\"treeFilterText\"\r\n              :config=\"{ showFilter: false,expandOnClickNode: false, treeProps }\"\r\n              :tree-data=\"treeData\"\r\n              @onNodeClick=\"nodeClick\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <div style=\"height: 100%\">\r\n          <BsTable\r\n            v-loading=\"tableLoadingState\"\r\n            :table-config=\"tableConfig\"\r\n            :table-columns-config=\"columns\"\r\n            :table-data=\"tableData\"\r\n            :toolbar-config=\"tableToolbarConfig\"\r\n            :pager-config=\"pagerConfig\"\r\n            size=\"medium\"\r\n            @register=\"registerTable\"\r\n            @ajaxData=\"pagerChange\"\r\n            @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          >\r\n            <template v-slot:toolbarSlots>\r\n              <div class=\"table-toolbar-left\">\r\n                <div v-if=\"!leftVisible\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftVisible = true\"></div>\r\n                <BsTableTitle title=\"违规处理单\" />\r\n              </div>\r\n            </template>\r\n          </BsTable>\r\n        </div>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <AuditModal\r\n      v-if=\"auditVisible\"\r\n      v-model=\"auditVisible\"\r\n      :checked-records=\"checkedRecords\"\r\n      :menu-name=\"menuName\"\r\n      @success=\"resetFetchTableData\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineComponent, ref, unref, computed, provide, readonly, toRaw } from '@vue/composition-api'\r\nimport AuditModal from './components/AuditModal'\r\nimport useTable from '@/hooks/useTable'\r\nimport useForm from '@/hooks/useForm'\r\nimport useTree from '@/hooks/useTree'\r\nimport useTabPlanel from './hooks/useTabPlanel'\r\nimport useIs from './hooks/useIs'\r\nimport store from '@/store'\r\nimport { transJson2 } from '@/utils/params'\r\nimport elementTreeApi from '@/api/frame/common/tree/unitTree.js'\r\nimport { pageQueryIndex } from '@/api/frame/main/handlingOfViolations/index.js'\r\n\r\nimport {\r\n  searchFormCommonSchemas,\r\n  getCommonColumns,\r\n  getAuditDescriptionColumn,\r\n  getStatusCodeColumn,\r\n  sendAuditTabs,\r\n  doAuditTabs,\r\n  pagePathMapNodeType,\r\n  searchFormAllTabSchema,\r\n  getStatusCodeOptions,\r\n  fjAddColumns\r\n} from './model/data'\r\nimport { TabEnum, RouterPathEnum } from './model/enum'\r\nimport transJson from '@/utils/transformMenuQuery.js'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    AuditModal\r\n  },\r\n  setup(_, { root }) {\r\n    const menuName = ref(store.getters.getCurNavModule.name)\r\n    const route = root.$route\r\n\r\n    // 页面路由\r\n    const pagePath = ref(route.path)\r\n\r\n    const { isDivisionPage } = useIs({}, pagePath)\r\n\r\n    // 是否是单位页面（单位反馈、单位审核）\r\n    // const isUnitMenu = computed(() => {\r\n    //   return [RouterPathEnum().UNIT_FEEDBACK, RouterPathEnum().UNIT_AUDIT].includes(pagePath.value)\r\n    // })\r\n    const isUnitMenu = ref(false)\r\n\r\n    // 是否是单位反馈\r\n    const isUnitFeedbackMenu = computed(() => {\r\n      return pagePath.value === RouterPathEnum().UNIT_FEEDBACK\r\n    })\r\n    // 是否是专项单位反馈\r\n    const isUnitFeedbackBySpe = computed(() => {\r\n      return pagePath.value === 'unitFeedbackBySpe'\r\n    })\r\n\r\n    // 左侧区划树显隐\r\n    const leftVisible = ref(true)\r\n\r\n    // 处理单弹窗显隐\r\n    const auditVisible = ref(false)\r\n\r\n    /**\r\n     * 搜索表单\r\n     */\r\n    const [\r\n      {\r\n        formData,\r\n        formSchemas,\r\n        setSubmitFormData,\r\n        getSubmitFormData,\r\n        updateFormSchemas\r\n        // getForm\r\n      },\r\n      registerForm\r\n    ] = useForm(searchFormCommonSchemas)\r\n\r\n    /**\r\n     * 搜索&重置\r\n     * */\r\n    function search(obj) {\r\n      Object.assign(formData, obj)\r\n      setSubmitFormData(toRaw(formData))\r\n\r\n      resetFetchTableData()\r\n    }\r\n\r\n    /**\r\n     * 区划树相关\r\n     */\r\n    const {\r\n      treeProps,\r\n      treeData,\r\n      treeFilterText,\r\n      treeLoading\r\n    } = useTree(\r\n      {\r\n        treeProps: {\r\n          labelFormat: '{code}-{name}',\r\n          id: 'code',\r\n          nodeKey: 'code', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children'\r\n        },\r\n        fetch: elementTreeApi.getAgencyTree,\r\n        beforeFetch: params => {\r\n          return {\r\n            ...params,\r\n            isUnit: unref(isDivisionPage) ? 'department' : 'company'\r\n          }\r\n        },\r\n        afterFetch: data => {\r\n          return [\r\n            {\r\n              id: 'ALL',\r\n              name: '全部',\r\n              customCode: 'ALL',\r\n              children: data || [],\r\n              code: 'ALL'\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      // 单位反馈不请求\r\n      !unref(isUnitMenu)\r\n    )\r\n    const currentTreeNode = ref(null)\r\n    /**\r\n     * 指标数节点点击\r\n     */\r\n    function nodeClick({ node }) {\r\n      currentTreeNode.value = node\r\n      resetFetchTableData()\r\n    }\r\n\r\n    // 当前选中的tab\r\n    const currentTab = ref(\r\n      unref(pagePath) === RouterPathEnum().UNIT_FEEDBACK\r\n        ? sendAuditTabs[0]\r\n        : doAuditTabs[0]\r\n    )\r\n\r\n    /**\r\n     * 表格\r\n     * */\r\n    const [\r\n      {\r\n        columns,\r\n        tableToolbarConfig,\r\n        tableConfig,\r\n        tableData,\r\n        resetFetchTableData,\r\n        tableLoadingState,\r\n        pagerChange,\r\n        pagerConfig,\r\n        onToolbarBtnClick,\r\n        getTable\r\n      },\r\n      registerTable\r\n    ] = useTable({\r\n      fetch: pageQueryIndex,\r\n      beforeFetch: params => {\r\n        if (unref(currentTab)?.code !== TabEnum.ALL) {\r\n          // 非全部页签的statusCode字段取值映射tab对应的值\r\n          params.statusCode = unref(currentTab).value\r\n        } else if (unref(currentTab)?.code === TabEnum.ALL) {\r\n          // 全部页签\r\n          params.isAll = true\r\n        }\r\n        const menuId = store.state.curNavModule?.guid || ''\r\n        return {\r\n          ...params,\r\n          regulationClass: transJson(store.state.curNavModule.param5)?.regulationClass,\r\n          nodeType: pagePathMapNodeType[unref(pagePath)],\r\n          elementCode: unref(currentTreeNode)?.code,\r\n          menuId\r\n        }\r\n      },\r\n      // 请求后置钩子\r\n      afterFetch(data) {\r\n        // 未提交页卡\r\n        // 处理业务编号\r\n        let nullNum = 0\r\n        data.results.forEach(item => {\r\n          if (item.businessNo === null) {\r\n            nullNum++\r\n          }\r\n        })\r\n        if (nullNum === data.results.length) {\r\n          let index = columns.value.findIndex(item => {\r\n            return item.field === 'businessNo'\r\n          })\r\n          columns.value.splice(index, 1)\r\n        }\r\n        return data\r\n      },\r\n      columns: [],\r\n      getSubmitFormData,\r\n      dataKey: 'data.results',\r\n      routeConfig: {\r\n        isUnitFeedbackMenu\r\n      }\r\n    })\r\n    tableConfig.showOverflow = false\r\n    // 选中行\r\n    const checkedRecords = ref([])\r\n\r\n    /**\r\n     * 设置columns\r\n     * */\r\n    function computedColumns() {\r\n      // 未送审\r\n      let initColumns = getCommonColumns()\r\n\r\n      if (unref(currentTab).code === TabEnum.SENDED) {\r\n        // 已送审\r\n        initColumns.splice(initColumns.length - 1, 0, getAuditDescriptionColumn({ title: '处理说明' }))\r\n      } else if ([TabEnum.RETURN, TabEnum.DISABLED].includes(unref(currentTab).code)) {\r\n        // 退回 || 禁止\r\n        initColumns.splice(\r\n          2,\r\n          0,\r\n          getAuditDescriptionColumn({ title: '处理意见' })\r\n        )\r\n      } else if (unref(currentTab).code === TabEnum.ALL) {\r\n        // 全部\r\n        initColumns.splice(2, 0, getStatusCodeColumn(unref(isUnitMenu)))\r\n        if (unref(pagePath) === RouterPathEnum().UNIT_FEEDBACK) {\r\n          initColumns.splice(\r\n            initColumns.length - 2,\r\n            0,\r\n            getAuditDescriptionColumn({ title: '处理说明' })\r\n          )\r\n        } else {\r\n          initColumns.splice(\r\n            initColumns.length - 2,\r\n            0,\r\n            getAuditDescriptionColumn({ title: '处理意见' })\r\n          )\r\n        }\r\n      } else if (unref(currentTab).code === TabEnum.NO_AUDIT) {\r\n        // 未审核\r\n        initColumns.splice(\r\n          initColumns.length - 1,\r\n          0,\r\n          getAuditDescriptionColumn({ title: '处理说明' })\r\n        )\r\n      } else if (unref(currentTab).code === TabEnum.AUDITED) {\r\n        // 已审核\r\n        initColumns.splice(\r\n          initColumns.length - 1,\r\n          0,\r\n          getAuditDescriptionColumn({ title: '处理意见' })\r\n        )\r\n      }\r\n      // 福建不要业务编码 以区划区分\r\n      if (store.state.userInfo.province.startsWith('35')) {\r\n        initColumns = initColumns.filter(item => {\r\n          return item.field !== 'businessNo'\r\n        })\r\n      }\r\n      const projectCode = transJson2(store.state.curNavModule.param5 || '').projectCode\r\n      if (projectCode !== 'SH') {\r\n        initColumns = initColumns.concat(fjAddColumns)\r\n      }\r\n      if (isUnitFeedbackBySpe) {\r\n        initColumns = initColumns.filter(item => {\r\n          return item.field !== 'isDir'\r\n        })\r\n      }\r\n      columns.value = initColumns\r\n    }\r\n\r\n    /**\r\n     * 顶部tab模块\r\n     */\r\n    const {\r\n      tabStatusBtnConfig,\r\n      isShowSearchForm,\r\n      modalType,\r\n      onQueryConditionsClick\r\n    } = useTabPlanel(auditVisible, getTable, pagePath, checkedRecords, currentTab, resetFetchTableData)\r\n    /**\r\n     * tab切换\r\n     * @param tab\r\n     */\r\n    function onTabClick(tab) {\r\n      currentTab.value = tab\r\n      resetConfig()\r\n\r\n      resetFetchTableData()\r\n    }\r\n\r\n    /**\r\n     * 设置搜索表单\r\n     */\r\n    function computedSchemas() {\r\n      formSchemas.value = searchFormCommonSchemas\r\n\r\n      // 全部tab时添加状态筛选\r\n      if (unref(currentTab).code === TabEnum.ALL) {\r\n        formSchemas.value = [...searchFormCommonSchemas, ...searchFormAllTabSchema]\r\n        unref(formSchemas).forEach(schema => {\r\n          if (!Reflect.has(formData, schema.field)) {\r\n            Object.assign(formData, { [schema.field]: '' })\r\n          }\r\n        })\r\n\r\n        updateFormSchemas({\r\n          field: 'statusCode',\r\n          itemRender: {\r\n            options: [\r\n              // 根据当前页面的tab获取全部tab里面的状态筛选\r\n              ...unref(tabStatusBtnConfig).buttons.slice(0, unref(tabStatusBtnConfig).buttons?.length - 1),\r\n              // 2023.3.6单位反馈添加已作废状态\r\n              ...unref(isUnitFeedbackMenu)\r\n                ? [{ value: TabEnum.VOIDED, label: '已作废' }]\r\n                : getStatusCodeOptions()\r\n                  .filter(item => [TabEnum.RETURN_SELF, TabEnum.DISABLED_SELF].includes(item.value))\r\n            ]\r\n          }\r\n        })\r\n      } else {\r\n        formSchemas.value = searchFormCommonSchemas\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 重新计算配置信息\r\n     */\r\n    function resetConfig() {\r\n      computedSchemas()\r\n      computedColumns()\r\n    }\r\n    resetConfig()\r\n\r\n    /**\r\n     * modalType:弹窗打开操作\r\n     * pagePath:页面路由\r\n     */\r\n    provide('modalType', readonly(modalType))\r\n    provide('pagePath', readonly(pagePath))\r\n    return {\r\n      leftVisible,\r\n      isUnitMenu,\r\n      auditVisible,\r\n      menuName,\r\n\r\n      treeLoading,\r\n      treeProps,\r\n      treeData,\r\n      treeFilterText,\r\n      nodeClick,\r\n\r\n      columns,\r\n      registerTable,\r\n      tableConfig,\r\n      tableData,\r\n      tableLoadingState,\r\n      pagerConfig,\r\n      tableToolbarConfig,\r\n      onToolbarBtnClick,\r\n      pagerChange,\r\n      resetFetchTableData,\r\n      checkedRecords,\r\n\r\n      tabStatusBtnConfig,\r\n      isShowSearchForm,\r\n      onTabClick,\r\n      modalType,\r\n      onQueryConditionsClick,\r\n\r\n      registerForm,\r\n      formData,\r\n      formSchemas,\r\n      search\r\n    }\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n//执行 单位零余额跳转到该页面 导致css样式丢失\r\nbutton.el-button.el-button--default.el-button--small.el-button--primary{\r\n  color: #fff !important;\r\n  background-color:  #4d77e7 !important;\r\n}\r\n</style>\r\n"]}]}