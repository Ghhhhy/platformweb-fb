{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\platformReport\\platformReport\\index.vue?vue&type=style&index=0&id=7768d2b0&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\platformReport\\platformReport\\index.vue","mtime":1694505522873},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696752946978},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnBsYXRmcm9tcmVwb3J0IC9kZWVwLyBpbnB1dCB7DQogIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0Ow0KfQ0KDQoucGxhdGZyb21yZXBvcnQgL2RlZXAvIC5lbC1pY29uLWFycm93LWRvd246YmVmb3JlIHsNCiAgY29sb3I6ICM2MDYyNjYNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkPA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/platformReport/platformReport","sourcesContent":["<!--\r\n * @Author: Comer\r\n * @Mail: xinlai@bosssoft.com.cn\r\n * @Date: 2021-12-16 10:22:56\r\n * @LastEditors: 罗景丹 luojingdan@bosssoft.com.cn\r\n * @LastEditTime: 2023-05-24 17:24:19\r\n * @Description:\r\n-->\r\n<template>\r\n  <ReportView\r\n    v-if=\"ifRenderReport\"\r\n    ref=\"reportView\"\r\n    class=\"platfromreport\"\r\n    :codes=\"code\"\r\n    :editable=\"editable\"\r\n    :init-params=\"initParams\"\r\n    :init-business-context=\"initBusinessContext\"\r\n    :enable-row-readable-authority=\"true\"\r\n    @export-excel=\"exportExcel\"\r\n    @print-pdf=\"printPdf\"\r\n  />\r\n</template>\r\n<script>\r\nexport default {\r\n  name: 'PlatFormReport',\r\n  props: {\r\n    editable: {\r\n      default: true,\r\n      type: Boolean\r\n    },\r\n    reportParams: {\r\n      type: Object,\r\n      default() {\r\n        return {\r\n\r\n        }\r\n      }\r\n    },\r\n    isload: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    exportLoading: {\r\n      default: false,\r\n      type: Boolean\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      businessContext: {\r\n        token: this.$store.getters.getLoginAuthentication.tokenid\r\n      },\r\n      ifRenderReport: true,\r\n      code: '',\r\n      paramsObj: ''\r\n    }\r\n  },\r\n  computed: {\r\n  },\r\n  methods: {\r\n    /**\r\n     * @description: initParams方法进行报表内容替换和搜索条件初始值设置\r\n     * 例如设计端报表设置了占位符 #{city},等待应用端渲染完成后excel内容含有#{city}的占位符 将替换成'福建省'，\r\n     * 如果搜索条件的关键字设置成city ，搜索条件的默认值会变成'福建省'\r\n     * @param {*} params\r\n     * @return {*}\r\n     */\r\n    batchExportExcel(excelParams) {\r\n      this.$refs.reportView.batchExportExcel(excelParams) // 选中报表批量导出成Excel\r\n    },\r\n    batchExportPDF(excelParams) {\r\n      this.$refs.reportView.batchExportPDF(excelParams) // 选中报表批量导出成PDF\r\n    },\r\n    exportCurrentExcel() {\r\n      this.$refs.reportView.exportExcel() // 当前报表导出成Excel\r\n    },\r\n    exportCurrentPDF() {\r\n      this.$refs.reportView.exportPDF() // 当前报表导出成PDF\r\n    },\r\n    print() {\r\n      this.$refs.reportView.print() // 打印当前报表\r\n    },\r\n    batchPrint(draftList) {\r\n      this.$refs.reportView.batchPrint(draftList) // 打印当前报表\r\n    },\r\n    submit() {\r\n      console.log(82, this.$refs.reportView.getExcelData())\r\n      return this.$refs.reportView.getSubmitFillData() // 提交前调用报表插件的\r\n    },\r\n    getExcelData() {\r\n      return this.$refs.reportView.getExcelData()\r\n    },\r\n    encodeExcelPassword(password) {\r\n      return this.$refs.reportView.excelPasswordEncode(password)\r\n    },\r\n    initParams(params) {\r\n      return new Promise(resolve => {\r\n        let paramsTemp = { ...this.paramsObj }\r\n        console.log('当前报表参数为：', paramsTemp)\r\n        Object.keys(params).map(key => {\r\n          if (Object.hasOwnProperty.call(this.paramsObj, key)) {\r\n            paramsTemp[key] = this.paramsObj[key]\r\n          }\r\n        })\r\n        resolve(paramsTemp)\r\n      })\r\n    },\r\n    searchData() {\r\n      this.$refs.report_view.searchData(this.paramsObj) // 查询当前报表数据\r\n    },\r\n    /**\r\n     * @description: 报表参数变了，刷新报表数据\r\n     * @param {*}\r\n     * @return {*}\r\n     */\r\n    refreshReport() {\r\n      const { code, paramsObj } = this.reportParams\r\n      this.code = code\r\n      this.paramsObj = paramsObj\r\n      // this.searchData()\r\n    },\r\n    parentCallSearch() {\r\n      this.refreshReport()\r\n      this.ifRenderReport = false\r\n      this.$nextTick(() => {\r\n        this.ifRenderReport = true\r\n      })\r\n    },\r\n    /**\r\n      * 若无权限控制，则插件中不需要绑定该方法\r\n      * 设置业务上下文信息businessContext\r\n      * 上下文信息会在数据获取时传递给应用后端进行权限控制 **/\r\n    initBusinessContext() {\r\n      return new Promise(resolve => {\r\n        resolve(this.businessContext)\r\n      })\r\n    },\r\n    getInstance() {\r\n      let self = this\r\n      var Xsheet = window.bossJS.Xsheet\r\n      return Xsheet.getInstance({\r\n        config: {\r\n          appId: self.$store.state.loginAuthentication.appguid || 'gov-aims'\r\n        }\r\n      })\r\n    },\r\n    printPdf(options) {\r\n      let instance = this.getInstance()\r\n      let exportPages = instance.printingSheetRequest(options)\r\n      let _this = this\r\n      exportPages\r\n        .done(function (data) {\r\n          _this.$refs.reportview.batchPrintDone()\r\n          console.log('print pdf success', data)\r\n        })\r\n        .fail(function (obj) {\r\n          _this.$refs.reportview.batchPrintFail()\r\n          console.log('print pdf error', obj)\r\n        })\r\n    },\r\n    exportExcel(options) {\r\n      let instance = this.getInstance()\r\n      let exportPages = instance.printingSheetRequest(options)\r\n      let _this = this\r\n      exportPages\r\n        .done(function (data) {\r\n          _this.$refs.reportView.exportExcelDone()\r\n          console.log('img print success', data)\r\n        })\r\n        .fail(function (obj) {\r\n          _this.$refs.reportView.exportExcelFail()\r\n          console.log('export excel error', obj)\r\n        })\r\n    },\r\n    getreportParams() {\r\n      let paramsObj = {}\r\n      const { code, city } = this.$store.getters.getMenuParams5\r\n      // eslint-disable-next-line no-unused-vars\r\n      let param = this.$store.getters.getMenuParams5.paramsObj\r\n      if (param) {\r\n        param = param.substr(1) // 删除第一个字符\r\n        param = param.substr(0, param.length - 1) // 删除最后一字符\r\n        let arr = param.split(',')\r\n        arr.map((item, index) => {\r\n          if (!item.split(':')[0]) {\r\n            return\r\n          }\r\n          paramsObj[item.split(':')[0]] = item.split(':')[1]\r\n        })\r\n      }\r\n      paramsObj['fiscal_year'] = this.$store.state.userInfo.year\r\n      return {\r\n        code,\r\n        city,\r\n        paramsObj\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    // console.log(this.reportParams.code, 89)\r\n    // if (this.reportParams.code) {\r\n    //   this.refreshReport()\r\n    // }\r\n  },\r\n  watch: {\r\n    reportParams: {\r\n      // 查询参数\r\n      handler(newVal, oldVal) {\r\n        console.log(!newVal.code, 50144)\r\n        if (!newVal.code) {\r\n          this.ifRenderReport = false\r\n          return false\r\n        }\r\n        // if (newVal && oldVal && JSON.stringfy(newVal) === JSON.stringfy(oldVal)) {\r\n        //   this.ifRenderReport = false\r\n        //   return false\r\n        // }{}\r\n        if (this.isload) {\r\n          this.refreshReport()\r\n          // this.ifRenderReport = false\r\n          this.$nextTick(() => {\r\n            this.ifRenderReport = true\r\n          })\r\n        }\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    editable: {\r\n      handler(newVal, oldVal) {\r\n        this.parentCallSearch()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  mounted() {\r\n    window.bossJS.init && window.bossJS.init()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.platfromreport /deep/ input {\r\n  vertical-align: inherit;\r\n}\r\n\r\n.platfromreport /deep/ .el-icon-arrow-down:before {\r\n  color: #606266\r\n}\r\n</style>\r\n"]}]}