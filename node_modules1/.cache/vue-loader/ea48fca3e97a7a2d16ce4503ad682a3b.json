{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\CardMenu\\other\\menuTree\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\CardMenu\\other\\menuTree\\index.vue","mtime":1694505521363},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgTWVudU1vZHVsZSBmcm9tICdAL2FwaS9mcmFtZS9jb21tb24vbWVudS5qcycNCg0KaW1wb3J0IHRyZWVSZW5kZXIgZnJvbSAnLi9jb21wb25lbnRzL1RyZWVSZW5kZXInDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgY29tcG9uZW50czogew0KICAgIHRyZWVSZW5kZXINCiAgfSwNCiAgcHJvcHM6IHsNCiAgICBkYXRhOiB7DQogICAgICB0eXBlOiBPYmplY3QsDQogICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgIHJldHVybiB7fQ0KICAgICAgfQ0KICAgIH0sDQogICAgdHJlZURhdGE6IHsNCiAgICAgIHR5cGU6IFtBcnJheSwgT2JqZWN0XSwNCiAgICAgIC8vIHJlcXVpcmVkOiB0cnVlLA0KICAgICAgZGVmYXVsdDogKCkgPT4ge30NCiAgICB9DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGZpbHRlck1zZzogW10sDQogICAgICBrZXlXb3JkOiAnJywNCiAgICAgIGFsbE1zZzogW10NCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZXRSb3V0ZXIodmFsdWUpIHsNCiAgICAgIGxldCBhcnIgPSBbXQ0KICAgICAgYXJyLnB1c2godmFsdWUpDQogICAgICBsZXQgdmFsdWVOdW0gPSBhcnIuc2xpY2UoMCwgYXJyLmxlbmd0aCArIDEpDQogICAgICBpZiAodmFsdWVOdW1bMF0ubmFtZSA9PT0gdmFsdWVOdW1bMF0uZl9GdWxsTmFtZSkgew0KICAgICAgICB0aGlzLm9uTWVudVNlbGVjdENoYW5nZSh2YWx1ZSkNCiAgICAgIH0NCiAgICB9LA0KICAgIG9uTWVudVNlbGVjdENoYW5nZShvYmopIHsNCiAgICAgIGxldCBzZWxmID0gdGhpcw0KICAgICAgaWYgKG9iai5wYXJhbTUgJiYgb2JqLnBhcmFtNS5pbmRleE9mKCduZWVkY2hlY2s9dHJ1ZScpID49IDApIHsgLy8g6ZyA6KaB5qCh6aqM57yW5oql5piv5ZCm5bey5YWz6ZetDQogICAgICAgIGxldCBwYXJhbXMgPSB7DQogICAgICAgICAgbWVudWd1aWQ6IG9iai5ndWlkLA0KICAgICAgICAgIGFwcGd1aWQ6IG9iai5hcHBpZCwNCiAgICAgICAgICBhcHBpZDogb2JqLmFwcHN5c2lkLA0KICAgICAgICAgIHNwZWNyb2xlZ3VpZDogJycsDQogICAgICAgICAgcm9sZWd1aWQ6IG9iai5yb2xlZ3VpZCB9DQogICAgICAgIE1lbnVNb2R1bGUuZ2V0RmJQYWdlQ29uZmlnKHBhcmFtcykudGhlbihyZXMgPT4gew0KICAgICAgICAgIE9iamVjdC5hc3NpZ24ob2JqLCByZXMpDQogICAgICAgICAgaWYgKHJlcy5pc2J1ZGdldGJlZ2luID09PSAwICYmIHJlcy5kYXRhdHlwZSAhPT0gOCkgew0KICAgICAgICAgICAgc2VsZi4kbWVzc2FnZSgn6aKE566X57yW5oql5bey5YWz6ZetJykNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdzZXRDdXJNZW51T2JqJywgb2JqKQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnc2V0Q3VyTWVudU9iaicsIG9iaikNCiAgICAgIH0NCiAgICB9LA0KICAgIGlucHV0IChxdWVyeVN0cmluZykgew0KICAgICAgbGV0IHF1ZXJ5U3RyaW5nQXJyID0gcXVlcnlTdHJpbmcuc3BsaXQoJycpDQogICAgICBsZXQgc3RyID0gJyguKj8pJw0KICAgICAgdGhpcy5maWx0ZXJNc2cgPSBbXQ0KICAgICAgbGV0IHJlZ1N0ciA9IHN0ciArIHF1ZXJ5U3RyaW5nQXJyLmpvaW4oc3RyKSArIHN0cg0KICAgICAgbGV0IHJlZyA9IFJlZ0V4cChyZWdTdHIsICdpJykgLy8g5LulbWjkuLrkvovnlJ/miJDnmoTmraPliJnooajovr7lvI/kuLovKC4qPyltKC4qPyloKC4qPykvaQ0KICAgICAgdGhpcy5hbGxNc2cubWFwKGl0ZW0gPT4gew0KICAgICAgICBpZiAocmVnLnRlc3QoaXRlbS5uYW1lKSkgew0KICAgICAgICAgIHRoaXMuZmlsdGVyTXNnLnB1c2goaXRlbSkNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIOagkeeKtue7k+aehOaVsOaNrui9rOaNoiDlupXlsYJyb3V0ZSBwdXNo6L+b54i257qnc3VibGlzdA0KICAgIGZvcm1hdCAob2JqLCBsZXZlbCA9IDApIHsNCiAgICAgIGlmIChvYmouY2hpbGRyZW4pIHsNCiAgICAgICAgY29uc3QgZGF0YSA9IG9iai5jaGlsZHJlbg0KICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgZGF0YS5sZW5ndGg7IGluZGV4KyspIHsNCiAgICAgICAgICB2YXIgaXRlbSA9IGRhdGFbaW5kZXhdDQogICAgICAgICAgaXRlbS5sZXZlbCA9IGxldmVsICsgMQ0KICAgICAgICAgIGlmIChpdGVtLmNoaWxkcmVuKSB7DQogICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGl0ZW0uY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgICAgaWYgKGl0ZW0uY2hpbGRyZW5baV0uY2hpbGRyZW4pIHsNCiAgICAgICAgICAgICAgICBpdGVtLmNoaWxkcmVuW2ldLmxldmVsID0gbGV2ZWwgKyAyDQogICAgICAgICAgICAgICAgdGhpcy5mb3JtYXQoaXRlbS5jaGlsZHJlbltpXSwgbGV2ZWwgKyAyKQ0KICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIGl0ZW0uc3ViTGlzdCA/IGl0ZW0uc3ViTGlzdC5wdXNoKGl0ZW0uY2hpbGRyZW5baV0pIDogKGl0ZW0uc3ViTGlzdCA9IFtpdGVtLmNoaWxkcmVuW2ldXSkNCiAgICAgICAgICAgICAgICBpdGVtLmNoaWxkcmVuLnNwbGljZShpLS0sIDEpDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgb2JqLnN1Ykxpc3QgPyBvYmouc3ViTGlzdC5wdXNoKGl0ZW0pIDogKG9iai5zdWJMaXN0ID0gW2l0ZW1dKQ0KICAgICAgICAgICAgZGF0YS5zcGxpY2UoaW5kZXgtLSwgMSkNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuIFtvYmpdDQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gW29ial0NCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOagkeaJgeW5s+WMlg0KICAgIHRyZWVUb0xpc3QgKHRyZWUsIHJlc3VsdCA9IFtdLCBsZXZlbCA9IDApIHsNCiAgICAgIHRyZWUuZm9yRWFjaChub2RlID0+IHsNCiAgICAgICAgcmVzdWx0LnB1c2gobm9kZSkNCiAgICAgICAgbm9kZS5sZXZlbCA9IGxldmVsICsgMQ0KICAgICAgICBub2RlLmNoaWxkcmVuICYmIHRoaXMudHJlZVRvTGlzdChub2RlLmNoaWxkcmVuLCByZXN1bHQsIGxldmVsICsgMSkNCiAgICAgIH0pDQogICAgICByZXR1cm4gcmVzdWx0DQogICAgfQ0KDQogIH0sDQogIGNyZWF0ZWQoKSB7DQoNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgfSwNCiAgYmVmb3JlRGVzdHJveSgpIHt9LA0KICB3YXRjaDogew0KICAgIGRhdGE6IHsNCiAgICAgIGhhbmRsZXIobmV3VmFsdWUsIG9sZFZhbHVlKSB7DQogICAgICAgIHRoaXMudHJlZUxpc3QgPSB0aGlzLmZvcm1hdChKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG5ld1ZhbHVlKSkpDQogICAgICAgIHRoaXMuYWxsTXNnID0gbmV3VmFsdWUuY2hpbGRyZW4NCiAgICAgICAgICA/IHRoaXMudHJlZVRvTGlzdChKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG5ld1ZhbHVlKSkuY2hpbGRyZW4pIDogSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShuZXdWYWx1ZSkpDQogICAgICAgIHRoaXMuJGZvcmNlVXBkYXRlKCkNCiAgICAgIH0sDQogICAgICBkZWVwOiB0cnVlLA0KICAgICAgaW1tZWRpYXRlOiB0cnVlDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"index.vue","sourceRoot":"src/components/CardMenu/other/menuTree","sourcesContent":["<!-- 功能菜单 -->\r\n<template>\r\n  <div class=\"menu-children__tree\">\r\n    <el-input\r\n      v-model=\"keyWord\"\r\n      placeholder=\"请输入菜单内容\"\r\n      size=\"mini\"\r\n      @input=\"input\"\r\n    />\r\n    <div v-if=\"keyWord\" class=\"filter-box\">\r\n      <ul>\r\n        <li v-for=\"(k,v) in filterMsg\" :key=\"v\" @click=\"getRouter(k)\">\r\n          {{ k.name }}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-else style=\"padding: 20px;box-sizing:border-box\">\r\n      <tree-render :tree-data=\"treeList\" />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport MenuModule from '@/api/frame/common/menu.js'\r\n\r\nimport treeRender from './components/TreeRender'\r\n\r\nexport default {\r\n  components: {\r\n    treeRender\r\n  },\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      default: () => {\r\n        return {}\r\n      }\r\n    },\r\n    treeData: {\r\n      type: [Array, Object],\r\n      // required: true,\r\n      default: () => {}\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      filterMsg: [],\r\n      keyWord: '',\r\n      allMsg: []\r\n    }\r\n  },\r\n  methods: {\r\n    getRouter(value) {\r\n      let arr = []\r\n      arr.push(value)\r\n      let valueNum = arr.slice(0, arr.length + 1)\r\n      if (valueNum[0].name === valueNum[0].f_FullName) {\r\n        this.onMenuSelectChange(value)\r\n      }\r\n    },\r\n    onMenuSelectChange(obj) {\r\n      let self = this\r\n      if (obj.param5 && obj.param5.indexOf('needcheck=true') >= 0) { // 需要校验编报是否已关闭\r\n        let params = {\r\n          menuguid: obj.guid,\r\n          appguid: obj.appid,\r\n          appid: obj.appsysid,\r\n          specroleguid: '',\r\n          roleguid: obj.roleguid }\r\n        MenuModule.getFbPageConfig(params).then(res => {\r\n          Object.assign(obj, res)\r\n          if (res.isbudgetbegin === 0 && res.datatype !== 8) {\r\n            self.$message('预算编报已关闭')\r\n          } else {\r\n            this.$store.commit('setCurMenuObj', obj)\r\n          }\r\n        })\r\n      } else {\r\n        this.$store.commit('setCurMenuObj', obj)\r\n      }\r\n    },\r\n    input (queryString) {\r\n      let queryStringArr = queryString.split('')\r\n      let str = '(.*?)'\r\n      this.filterMsg = []\r\n      let regStr = str + queryStringArr.join(str) + str\r\n      let reg = RegExp(regStr, 'i') // 以mh为例生成的正则表达式为/(.*?)m(.*?)h(.*?)/i\r\n      this.allMsg.map(item => {\r\n        if (reg.test(item.name)) {\r\n          this.filterMsg.push(item)\r\n        }\r\n      })\r\n    },\r\n    // 树状结构数据转换 底层route push进父级sublist\r\n    format (obj, level = 0) {\r\n      if (obj.children) {\r\n        const data = obj.children\r\n        for (var index = 0; index < data.length; index++) {\r\n          var item = data[index]\r\n          item.level = level + 1\r\n          if (item.children) {\r\n            for (var i = 0; i < item.children.length; i++) {\r\n              if (item.children[i].children) {\r\n                item.children[i].level = level + 2\r\n                this.format(item.children[i], level + 2)\r\n              } else {\r\n                item.subList ? item.subList.push(item.children[i]) : (item.subList = [item.children[i]])\r\n                item.children.splice(i--, 1)\r\n              }\r\n            }\r\n          } else {\r\n            obj.subList ? obj.subList.push(item) : (obj.subList = [item])\r\n            data.splice(index--, 1)\r\n          }\r\n        }\r\n        return [obj]\r\n      } else {\r\n        return [obj]\r\n      }\r\n    },\r\n    // 树扁平化\r\n    treeToList (tree, result = [], level = 0) {\r\n      tree.forEach(node => {\r\n        result.push(node)\r\n        node.level = level + 1\r\n        node.children && this.treeToList(node.children, result, level + 1)\r\n      })\r\n      return result\r\n    }\r\n\r\n  },\r\n  created() {\r\n\r\n  },\r\n  mounted() {\r\n  },\r\n  beforeDestroy() {},\r\n  watch: {\r\n    data: {\r\n      handler(newValue, oldValue) {\r\n        this.treeList = this.format(JSON.parse(JSON.stringify(newValue)))\r\n        this.allMsg = newValue.children\r\n          ? this.treeToList(JSON.parse(JSON.stringify(newValue)).children) : JSON.parse(JSON.stringify(newValue))\r\n        this.$forceUpdate()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang='scss' scoped>\r\n.menu-children__tree{\r\n  height: 300px;\r\n  padding: 20px;\r\n  box-sizing: border-box;\r\n  .filter-box{\r\n    padding: 20px 0;\r\n    box-sizing: border-box;\r\n    ul{\r\n      li{\r\n        height: 30px;\r\n        line-height: 30px;\r\n        cursor: pointer;\r\n        padding: 0 5px;\r\n        border-radius: 5px;\r\n      }\r\n      li:hover{\r\n        background: rgb(235, 226, 226);\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}