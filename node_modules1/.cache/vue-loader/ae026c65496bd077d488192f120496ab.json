{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\dynamicTableSetting\\tableConfModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\dynamicTableSetting\\tableConfModal.vue","mtime":1694505522433},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["tableConfModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"tableConfModal.vue","sourceRoot":"src/views/main/dynamicTableSetting","sourcesContent":["<template>\r\n  <div>\r\n    <vxe-modal\r\n      v-model=\"dialogVisible\"\r\n      show-zoom\r\n      title=\"当前选中表表格配置\"\r\n      width=\"90%\"\r\n      height=\"90%\"\r\n      :position=\"{ top: '8%', left: '5%' }\"\r\n      resize\r\n      remember\r\n      transfer\r\n      class=\"conf-modal\"\r\n    >\r\n      <div class=\"height-all\">\r\n        <!-- <div class=\"option-line-group\">\r\n        <div class=\"fn-inline option-line-group-btn\">\r\n          <vxe-button status=\"primary\" @click=\"onSaveClick\">保 存</vxe-button>\r\n          <vxe-button\r\n            code=\"reset\"\r\n            @click=\"dialogVisible = false\"\r\n          >取 消</vxe-button>\r\n        </div>\r\n      </div> -->\r\n        <div class=\"main-modulebox-tabcon ofa pdl10 pdr10\" style=\"height: calc(100% - 15px)\">\r\n          <BsTable\r\n            v-if=\"ifRenderTableConfTable\"\r\n            ref=\"bsTableRef\"\r\n            :footer-config=\"{ showFooter: false }\"\r\n            :table-config=\"tableConfig\"\r\n            :table-columns-config=\"tableColumnsConfig\"\r\n            :table-data=\"tableData\"\r\n            :edit-config=\"editConfig\"\r\n            :toolbar-config=\"toolbarConfig\"\r\n            :pager-config=\"false\"\r\n          >\r\n            <template v-slot:toolbarSlots>\r\n              <div class=\"table-toolbar-left tl\">\r\n                <vxe-button size=\"medium\" status=\"primary\" content=\"录入配置项\" @click=\"onEnterConfig\" />\r\n                <vxe-button size=\"medium\" status=\"primary\" content=\"新增行\" @click=\"onAddRowClick\" />\r\n                <vxe-button size=\"medium\" status=\"primary\" content=\"删除行\" @click=\"onDeleteRowClick\" />\r\n              </div>\r\n            </template>\r\n            <template v-slot:toolbar-custom-slot>\r\n              <div class=\"toolbar-slot-custom-slot fn-inline mgr15\">\r\n                <vxe-button size=\"medium\" status=\"primary\" content=\"保存\" @click=\"onSaveClick\" />\r\n              </div>\r\n            </template>\r\n          </BsTable>\r\n        </div>\r\n      </div>\r\n      <EnterItemConfigModal :item-visible.sync=\"itemVisible\" :config-params=\"configParams\" @onItemClose=\"dialogClose\" />\r\n    </vxe-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport getFormConfData from './formConf.js'\r\nimport EnterItemConfigModal from './EnterItemConfigModal'\r\n// import { proconf } from './config/AddUnitFundPlan.js'\r\nexport default {\r\n  name: 'TableConfModal',\r\n  components: { EnterItemConfigModal },\r\n  props: {\r\n    dialogVisible: {\r\n      type: Boolean,\r\n      default () {\r\n        return false\r\n      }\r\n    },\r\n    params: {\r\n      type: Object,\r\n      default () {\r\n        return {}\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ifRenderTableConfTable: true,\r\n      toolbarConfig: {\r\n        disabledMoneyConversion: false,\r\n        ...getFormConfData('tableConf', 'toolbarConfig')\r\n      },\r\n      tableConfig: getFormConfData('tableConf', 'tableConfig'),\r\n      tableColumnsConfig: getFormConfData('tableConf', 'tableColumnsConfig'),\r\n      tableData: getFormConfData('tableConf', 'tableData'),\r\n      itemVisible: false,\r\n      configParams: {},\r\n      paramsCp: {}\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    onEnterConfig() {\r\n      let paramsCopy = this.deepCopy(this.paramsCp)\r\n      paramsCopy.configure = this.jsonParse(\r\n        paramsCopy.configure\r\n      )\r\n      this.configParams = this.deepCopy(paramsCopy)\r\n      this.itemVisible = true\r\n    },\r\n    dialogClose() {\r\n      this.itemVisible = false\r\n      this.dialogVisible = false\r\n      this.$emit('closeCallback')\r\n    },\r\n    deepCopy(obj) {\r\n      // 深拷贝通用方法\r\n      let me = this\r\n      if (typeof obj !== 'object' || obj === null) return obj\r\n      let newObj = obj instanceof Array ? [] : {}\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          newObj[key] =\r\n            typeof obj[key] === 'object' ? me.deepCopy(obj[key]) : obj[key]\r\n        }\r\n      }\r\n      return newObj\r\n    },\r\n    jsonParse(str) {\r\n      // json字符串转换成对象\r\n      return JSON.parse(str, function (k, v) {\r\n        try {\r\n          if (\r\n            v.indexOf &&\r\n            (v.indexOf('function') > -1 || v.indexOf('=>') > -1)\r\n          ) {\r\n            // return eval('(function(){return ' + v + ' })()')\r\n            // eslint-disable-next-line no-new-func\r\n            let func = new Function('return ' + v)\r\n            return func()\r\n          }\r\n          return v\r\n        } catch (e) {\r\n          return v\r\n        }\r\n      })\r\n    },\r\n    transformConlumsDataToNest(columns) {\r\n      // columns转化为vxe-table columns数据结构\r\n      let self = this\r\n      columns.forEach((column, columnIndex) => {\r\n        if (Array.isArray(column.children) && column.children.length) {\r\n          column.children = self.transformConlumsDataToNest(column.children)\r\n        } else {\r\n          if (column['renderType'] && column.renderName) {\r\n            column[column.renderType] = {\r\n              name: column.renderName, // 渲染器名,\r\n              options: ((arg) => {\r\n                if (typeof arg === 'object') {\r\n                  return self.deepCopy(arg)\r\n                } else if (typeof arg === 'string') {\r\n                  return arg ? arg.split('+').map((item, index) => {\r\n                    return { value: item.split('#')[0], label: item.split('#')[1] }\r\n                  }) : []\r\n                } else {\r\n                  return arg\r\n                }\r\n              })(column.options), // 下拉数据源\r\n              defaultValue: column.defaultValue, // 默认值\r\n              props: column.props // 额外参数\r\n            }\r\n          } else {\r\n            delete column['itemRender']\r\n          }\r\n          delete column.insertMark\r\n          delete column.date\r\n          delete column.isNew\r\n          delete column._XID\r\n          delete column.renderType\r\n          delete column.renderName\r\n          delete column.options\r\n          delete column.props\r\n          delete column.defaultValue\r\n          delete self.deepCopy(column.props)\r\n        }\r\n      })\r\n      return columns\r\n    },\r\n    jsonStringify(columns) {\r\n      // 对象转换成json字符串\r\n      return JSON.stringify(columns, function(key, val) {\r\n        if (typeof val === 'function') {\r\n          return val + ''\r\n        }\r\n        return val\r\n      })\r\n    },\r\n    onAddRowClick() {\r\n      this.$refs.bsTableRef.insertRowData()\r\n    },\r\n    onDeleteRowClick() {\r\n      this.$refs.bsTableRef.deleteRowData()\r\n    },\r\n    saveTableConf(tableConfStr) {\r\n      // 保存表格配置\r\n      let self = this\r\n\r\n      this.$http[self.params.optionType === 'add' ? 'post' : 'put']('mp-b-perm-service/v1/tableconf', this.getSaveParams({\r\n        configure: tableConfStr\r\n        // type: 'tableConf'\r\n        // id: self.$ToolFn.utilFn.getUuid(),\r\n        // name: 'testData',\r\n        // menuguid: '123456'\r\n      }))\r\n        .then((res) => {\r\n          if (res.rscode === '100000') {\r\n            self.dialogVisible = false\r\n            self.$emit('closeCallback')\r\n            self.$message({\r\n              showClose: true,\r\n              message: self.params.optionType === 'add' ? '数据新增成功' : '数据保存成功',\r\n              type: 'success'\r\n            })\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log('error', error)\r\n        })\r\n    },\r\n    getSaveParams(obj) {\r\n      return Object.assign({ ...this.paramsCp }, { itemsConfig: [], formConfig: [], globalConfig: {} }, obj)\r\n    },\r\n    onSaveClick() {\r\n      // 保存点击事件\r\n      const { fullData } = this.$refs.bsTableRef.getTableData()\r\n      if (fullData.length) {\r\n        let saveJson = this.transformConlumsDataToNest(this.deepCopy(this.clearDataRenderField(fullData)))\r\n        this.saveTableConf(\r\n          this.jsonStringify({\r\n            itemsConfig: saveJson,\r\n            globalConfig: this.params.globalConfig,\r\n            pageConfig: {}, // 分页配置\r\n            editConfig: {}, // 编辑配置\r\n            editRules: {}, // 校验规则\r\n            footerConfig: {}, // 表尾配置\r\n            dataConfig: {\r\n              dataSouceType: 'query'\r\n            }\r\n          })\r\n        )\r\n      } else {\r\n        this.$message({\r\n          showClose: true,\r\n          message: '没有数据可保存，请重新录入！',\r\n          type: 'success'\r\n        })\r\n      }\r\n    },\r\n    autoAddMissingTtributes(config, data) {\r\n      // 自动补齐所有缺失属性\r\n      data.forEach((item, index) => {\r\n        config.forEach((column, columnIndex) => {\r\n          if (column.field) {\r\n            item[column.field] = item[column.field] === undefined || item[column.field] === null ? '' : item[column.field]\r\n            if (column.field.indexOf('props') >= 0) {\r\n              item[column.field] = item[column.field] || {}\r\n            }\r\n          }\r\n        })\r\n      })\r\n      return data\r\n    },\r\n    clearDataRenderField(data) {\r\n      // 删除viewSort字段\r\n      let self = this\r\n      return data.map((item, index) => {\r\n        let itemN = Object.assign({}, item)\r\n        Object.keys(itemN).forEach((key, ki) => {\r\n          if (key.indexOf('__') >= 0) {\r\n            delete itemN[key]\r\n          }\r\n          delete itemN['insertMark']\r\n          delete itemN['date']\r\n          delete itemN['isNew']\r\n          if (Array.isArray(itemN.children) && itemN.children.length) {\r\n            itemN.children = self.clearDataRenderField(itemN.children)\r\n          }\r\n        })\r\n        return itemN\r\n      })\r\n    },\r\n    getPureConfigData(data) {\r\n      delete data['itemsConfig']\r\n      delete data['globalConfig']\r\n      delete data['pageConfig']\r\n      delete data['editConfig']\r\n      delete data['editRules']\r\n      delete data['footerConfig']\r\n      delete data['dataConfig']\r\n      delete data['itemsConfigNest']\r\n      delete data['_XID']\r\n      Object.keys(data).forEach((key) => {\r\n        if (key.indexOf('__') >= 0) {\r\n          delete data[key]\r\n        }\r\n      })\r\n      return data\r\n    },\r\n    init() {\r\n      this.tableData = this.autoAddMissingTtributes(this.tableColumnsConfig, this.clearDataRenderField(this.params.itemsConfig))\r\n      this.paramsCp = this.getPureConfigData(this.deepCopy(this.params))\r\n      this.ifRenderTableConfTable = false\r\n      this.$nextTick(() => {\r\n        this.ifRenderTableConfTable = true\r\n      })\r\n    }\r\n  },\r\n  mounted() {},\r\n  watch: {\r\n    dialogVisible: {\r\n      handler(newval) {\r\n        if (newval) {\r\n          this.init()\r\n        }\r\n        this.$emit('update:dialogVisible', newval)\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    params: {\r\n      handler(newval) {\r\n        this.paramsCp = this.getPureConfigData(this.params)\r\n        if (newval.type === 'radioConf') {\r\n          this.tableColumnsConfig = getFormConfData('radioConf', 'radioColumnsConfig')\r\n        } else {\r\n          this.tableColumnsConfig = getFormConfData('tableConf', 'tableColumnsConfig')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n  .conf-modal {\r\n    .vxe-modal--content {\r\n      height: 100%;\r\n    }\r\n  }\r\n</style>\r\n"]}]}