{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MonitorRuleContactConfiguration\\MonitorRuleContactConfiguration.vue?vue&type=style&index=0&id=a65294e6&scoped=true&lang=scss&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\MonitorRuleContactConfiguration\\MonitorRuleContactConfiguration.vue","mtime":1695716045262},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696752946978},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoucmFkaW8tcmlnaHR7DQpmbG9hdDogcmlnaHQ7DQp9DQouVGl0YW5zLXRhYmxlIDo6di1kZWVwICAudnhlLWJvZHktLXJvdy5yb3cteWVsbG93IHsNCiAgYmFja2dyb3VuZC1jb2xvcjogeWVsbG93Ow0KICBjb2xvcjogI2ZmZjsNCn0NCi5UaXRhbnMtdGFibGUgOjp2LWRlZXAgIC52eGUtYm9keS0tcm93LnJvdy1ibHVlIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTsNCiAgY29sb3I6ICNmZmY7DQp9DQouVGl0YW5zLXRhYmxlIDo6di1kZWVwICAudnhlLWJvZHktLXJvdy5yb3ctcmVkIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmVkOw0KICBjb2xvcjogI2ZmZjsNCn0NCi9kZWVwLyAuYm9zcy1zbGVjdF9fdG9vbGJhciAuYm9zcy10b29sYmFyX19jb250ZW50IC50b29sYmFyLWJ0bnMgLnNlbGVjdC10YWItbGl7DQogIG1heC13aWR0aDogaW5oZXJpdDsNCn0NCi5Nb25pdG9yUnVsZUNvbnRhY3RDb25maWd1cmF0aW9uew0KICAvZGVlcC8gLndhcm5pbmdMZXZlbDF7DQogICAgY29sb3I6IHJlZDsNCiAgfQ0KICAvZGVlcC8ud2FybmluZ0xldmVsMnsNCiAgICBjb2xvcjojRkY2RjIwDQogIH0NCiAgL2RlZXAvLndhcm5pbmdMZXZlbDN7DQogICAgY29sb3I6ICNGRkQ0M0M7DQogIH0NCiAgL2RlZXAvIC53YXJuaW5nTGV2ZWw0ew0KICAgIGNvbG9yOiBibHVlICFpbXBvcnRhbnQ7DQogIH0NCn0NCg0K"},{"version":3,"sources":["MonitorRuleContactConfiguration.vue"],"names":[],"mappingspBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MonitorRuleContactConfiguration.vue","sourceRoot":"src/views/main/MonitorRuleContactConfiguration","sourcesContent":["<!-- 政策法规管理 -->\r\n<template>\r\n  <div v-loading=\"tableLoading\" class=\"MonitorRuleContactConfiguration\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          show-zero\r\n          :is-open=\"isShowQueryConditions\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <template v-slot:query>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n            @itemChange=\"itemChange\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n          @onConfrimData=\"treeSetConfrimData\"\r\n        />\r\n        <BsTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :filter-text=\"leftTreeFilterText\"\r\n          :config=\"leftTreeConfig\"\r\n          :global-config=\"treeGlobalConfig\"\r\n          :tree-data=\"treeData\"\r\n          :queryparams=\"treeQueryparams\"\r\n          :default-expanded-keys=\"defaultExpandedKeysIn\"\r\n          @onNodeClick=\"onClickmethod\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <!-- 附件弹框 -->\r\n    <BsAttachment v-if=\"showAttachmentDialog\" refs=\"attachmentboss\" :user-info=\"userInfo\" :billguid=\"billguid\" />\r\n    <RuleModal ref=\"RuleModal\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf } from './columns'\r\nimport RuleModal from './ruleModal.vue'\r\nimport HttpModule from '@/api/frame/main/Monitoring/Policies.js'\r\n\r\nexport default {\r\n  components: {\r\n    RuleModal\r\n  },\r\n  watch: {\r\n    queryConfig() {\r\n      this.getSearchDataList()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      mofDivCode: '',\r\n      showGlAttachmentDialog: false,\r\n      // BsQuery 查询栏\r\n      queryConfig: proconf.highQueryConfig,\r\n      searchDataList: proconf.highQueryData,\r\n      defaultCheckedKeys: [],\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      leftTreeFilterText: '',\r\n      defaultExpandedKeysIn: [],\r\n      // 头部工具栏 BsTabPanel config\r\n      leftTreeConfig: { // 左侧单位树配置\r\n        showFilter: false, // 是否显示过滤\r\n        isInitLoadData: false,\r\n        scrollLoad: false, // 是否开启滚动加载\r\n        isleaf: 0, // 指定节点是否为叶子节点，仅在指定了 lazy 属性的情况下生效\r\n        levelno: -1, // 可选层级\r\n        valueKeys: ['code', 'name', 'id'],\r\n        format: '{code}-{name}',\r\n        placeholder: '请选择',\r\n        multipleValueType: 'String', // 多选值类型 String[逗号分割]，Array //废弃\r\n        treeProps: {\r\n          // 树配置选项\r\n          labelFormat: '{label}', // {code}-{name}\r\n          nodeKey: 'code', // 树的主键\r\n          label: 'name', // 树的显示lalel字段\r\n          children: 'children' // 树的嵌套字段\r\n        },\r\n        multiple: false, // 是否多选,\r\n        isLazeLoad: false, // 是否调用接口远程懒加载数据\r\n        readonly: true,\r\n        clearable: true,\r\n        codeList: []\r\n      },\r\n      toolBarStatusBtnConfig: {\r\n        changeBtns: true,\r\n        buttons: proconf.toolBarStatusButtons,\r\n        curButton: {\r\n          type: 'button',\r\n          iconName: 'base-all.png',\r\n          iconNameActive: 'base-all-active.png',\r\n          iconUrl: '',\r\n          label: '全部',\r\n          code: '1',\r\n          curValue: '1'\r\n        },\r\n        buttonsInfo: proconf.statusRightToolBarButton,\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        }\r\n      },\r\n      tabStatusNumConfig: {\r\n        '1': 0\r\n      },\r\n      isShowQueryConditions: true,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        iconName: 'base-all.png',\r\n        iconNameActive: 'base-all-active.png',\r\n        iconUrl: '',\r\n        label: '全部',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableColumnsConfig: proconf.PoliciesTableColumns,\r\n      tableData: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        search: false, // 是否有search\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 20\r\n      },\r\n      tableConfig: {\r\n        renderers: {\r\n          // 编辑 附件 操作日志\r\n          $gloableOptionRow: proconf.gloableOptionRow\r\n        },\r\n        methods: {\r\n          onOptionRowClick: this.onOptionRowClick\r\n        }\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      showDetail: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      regulationsCode: '',\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '',\r\n      params5: '',\r\n      menuId: '',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      // 文件\r\n      showAttachmentDialog: false,\r\n      billguid: '',\r\n      condition: {},\r\n      detailTitle: '详情',\r\n      detailData: {},\r\n      leftTreeVisible: true,\r\n      treeTypeConfig: {\r\n        curRadio: 'AGENCY'\r\n      },\r\n      treeAjaxType: 'get',\r\n      treeServerUri: 'large-monitor-platform/lmp/businessFunctions/tree',\r\n      treeData: [{\r\n        children: [],\r\n        code: 0,\r\n        id: 0,\r\n        label: '全部分类',\r\n        name: '全部分类',\r\n        parentId: null,\r\n        parentRuleName: null,\r\n        ruleLevel: 0,\r\n        ruleName: '全部分类'\r\n      }],\r\n      treeQueryparams: { },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    itemChange(data) {\r\n      if (['regulationType', 'warningLevel'].includes(data.property)) {\r\n        if (data.itemValue === null) {\r\n          data.data[data.property] = ''\r\n        }\r\n      }\r\n    },\r\n    getLeftTreeData() {\r\n      console.log('getLeftTreeData')\r\n      let that = this\r\n      let params = {}\r\n      if (this.$store.state.province === '610000000') {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: '610000000',\r\n          year: '2021',\r\n          wheresql: 'and code like \\'' + 61 + '%\\''\r\n        }\r\n      } else if (\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610100000' ||\r\n        this.userInfo.province === '610200000' ||\r\n        this.userInfo.province === '610300000' ||\r\n        this.userInfo.province === '610400000' ||\r\n        this.userInfo.province === '610500000' ||\r\n        this.userInfo.province === '610600000' ||\r\n        this.userInfo.province === '610700000' ||\r\n        this.userInfo.province === '610800000' ||\r\n        this.userInfo.province === '610900000' ||\r\n        this.userInfo.province === '611000000' ||\r\n        this.userInfo.province === '611200000'\r\n      ) {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.$store.state.userInfo.province,\r\n          year: this.$store.state.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 4) + '%\\''\r\n        }\r\n      } else {\r\n        params = {\r\n          elementCode: 'admdiv',\r\n          province: this.$store.state.userInfo.province,\r\n          year: this.$store.state.userInfo.year,\r\n          wheresql: 'and code like \\'' + this.userInfo.province.substring(0, 6) + '%\\''\r\n        }\r\n      }\r\n      HttpModule.getLeftTree(params).then(res => {\r\n        if (res.data) {\r\n          let treeResdata = that.getChildrenData(res.data)\r\n          that.treeData = treeResdata\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    },\r\n    getChildrenData(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        item.label = item.text || `${item.code}-${item.name}`\r\n        if (item.children) {\r\n          that.getChildrenData(item.children)\r\n        }\r\n      })\r\n\r\n      return datas\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.leftTreeFilterText = val\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    search(obj) {\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.searchDataList.regulationName = obj.regulationName\r\n      this.searchDataList.warningLevel = obj.warningLevel\r\n      this.searchDataList.regulationType = obj.regulationType\r\n      this.searchDataList.ruleTypeCode = obj.ruleTypeCode\r\n      this.searchDataList.regulationClass = obj.regulationClass_code\r\n      this.queryTableDatas()\r\n    },\r\n    onNodeCheckClick(data) {\r\n      console.log(data.nodes)\r\n      let arr = []\r\n\r\n      let regulationType = this.$store.state.curNavModule.f_FullName.substring(0, 3)\r\n      if (regulationType === '系统级') {\r\n        data.nodes.forEach(item => {\r\n          if (item.isleaf) {\r\n            let obj = {\r\n              mofDivCode: '',\r\n              agencyCode: '',\r\n              mofDiv: ''\r\n            }\r\n            obj.mofDivId = item.code\r\n            obj.mofDivCode = item.name.split('-')[0]\r\n            arr.push(obj)\r\n          }\r\n        })\r\n      } else if (regulationType === '部门级') {\r\n        data.nodes.forEach(item => {\r\n          if (item.isleaf) {\r\n            let obj = {\r\n              mofDivCode: '',\r\n              agencyCode: ''\r\n            }\r\n            obj.mofDivId = item.code\r\n            arr.push(obj)\r\n          }\r\n        })\r\n      } else if (regulationType === '财政级') {\r\n        data.nodes.forEach(item => {\r\n          if (item.isleaf) {\r\n            let obj = {\r\n              mofDivCode: '',\r\n              agencyCode: ''\r\n            }\r\n            obj.mofDivId = item.code\r\n            obj.mofDivCode = item.name.split('-')[0]\r\n            arr.push(obj)\r\n          }\r\n        })\r\n      }\r\n      console.log('arr', arr)\r\n      this.scope = arr\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.curValue) {\r\n        // 全部\r\n        case '1':\r\n          this.menuName = '监控规则联系人列表'\r\n          // this.getSearchDataList()\r\n          this.radioShow = true\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.refresh()\r\n      this.$refs.mainTableRef.$refs.xGrid.clearScroll()\r\n    },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      console.log(obj.code)\r\n      switch (obj.code) {\r\n        case 'setup':\r\n        case 'edit':\r\n          let selection = this.$refs.mainTableRef.getSelectionData()\r\n          if (selection.length < 1) {\r\n            this.$message.warning('请至少选择一条数据')\r\n            return\r\n          }\r\n          this.$refs.RuleModal.dialogVisible = true\r\n          this.$refs.RuleModal.selection = selection\r\n          // this.$refs.RuleModal.createDataList = selection\r\n          break\r\n      }\r\n    },\r\n    changeVisible(val) {\r\n      console.log(val, '输出')\r\n      this.breakRuleVisible = val\r\n    },\r\n    // table 右侧操作按钮\r\n    onOptionRowClick({ row, optionType }, context) {\r\n      // console.log(context.$parent.$parent.$parent)\r\n      switch (optionType) {\r\n        // 附件\r\n        case 'attachment':\r\n          this.showAttachment(row)\r\n          break\r\n        default:\r\n      }\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    onClickmethod(node) {\r\n      this.mofDivCode = node.node.code\r\n      // console.log(777, node)\r\n      // let code = node.node.code\r\n      // this.codeList = []\r\n      // let treeData = node.treeData\r\n      // this.getItem(code, treeData)\r\n      // console.log(this.codeList)\r\n      // if (node.id !== '0') {\r\n      //   console.log(node)\r\n      //   this.mofDivCode = ''\r\n      // } else {\r\n      //   this.condition = {}\r\n      // }\r\n      this.queryTableDatas()\r\n    },\r\n    getItem(code, data) {\r\n      data.forEach(item => {\r\n        if (code === item.code) {\r\n          let data = []\r\n          data.push(item)\r\n          this.getCodeList(data)\r\n        } else if (item.children) {\r\n          this.getItem(code, item.children)\r\n        }\r\n      })\r\n    },\r\n    getCodeList(data) {\r\n      data.forEach(item => {\r\n        this.codeList.push(item.code)\r\n        if (item.children) {\r\n          this.getCodeList(item.children)\r\n        }\r\n      })\r\n    },\r\n    treeSetConfrimData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 查看附件\r\n    showAttachment(row) {\r\n      console.log('查看附件')\r\n      if (row.regulationsCode === null || row.regulationsCode === '') {\r\n        this.$message.warning('该数据无附件')\r\n        return\r\n      }\r\n      this.billguid = row.regulationsCode\r\n      // this.showAttachmentDialog = true\r\n      this.showGlAttachmentDialog = true\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      console.log(key, obj.row)\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh() {\r\n      this.queryTableDatas()\r\n    },\r\n    ajaxTableData({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig.currentPage = currentPage\r\n      this.mainPagerConfig.pageSize = pageSize\r\n      this.queryTableDatas()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 点击新增\r\n    onAddToolbarClickAdd(obj, context, e) {\r\n      this.regulationsCode = ''\r\n      this.dialogVisible = true\r\n      this.dialogTitle = '新增'\r\n    },\r\n    // 删除\r\n    delPolicies() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length < 1) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      let regulationsCodes = []\r\n      selection.forEach(item => {\r\n        regulationsCodes.push(item.regulationsCode)\r\n      })\r\n      let param = {\r\n        regulationsCodes: regulationsCodes\r\n      }\r\n      this.$confirm('是否确定删除 ?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        this.tableLoading = true\r\n        HttpModule.delPolicies(param).then(res => {\r\n          this.tableLoading = false\r\n          if (res.code === '000000') {\r\n            this.$message.success('删除成功')\r\n            this.queryTableDatas()\r\n          } else {\r\n            this.$message.error(res.message)\r\n          }\r\n        })\r\n      }).catch(() => {\r\n        this.$message({\r\n          type: 'info',\r\n          message: '已取消'\r\n        })\r\n      })\r\n    },\r\n    // 修改\r\n    changePolices() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n        return\r\n      }\r\n      this.regulationsCode = selection[0].regulationsCode\r\n      this.dialogVisible = true\r\n      this.dialogTitle = '修改'\r\n    },\r\n    detail() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n        return\r\n      }\r\n      this.showDetail = true\r\n      this.detailData = selection[0]\r\n    },\r\n    // 查询 table 数据\r\n    queryTableDatas(province) {\r\n      const param = {\r\n        page: this.mainPagerConfig.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig.pageSize, // 每页条数\r\n        regulationClass: this.searchDataList.regulationClass,\r\n        regulationName: this.searchDataList.regulationName,\r\n        ruleTypeCode: this.searchDataList.ruleTypeCode,\r\n        regulationType: this.searchDataList.regulationType,\r\n        warningLevel: this.searchDataList.warningLevel,\r\n        mofDivCode: this.mofDivCode\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.getTableDate2(param).then(res => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.tableData = res.data.results\r\n          this.mainPagerConfig.total = res.data.totalCount\r\n          this.tabStatusNumConfig['1'] = res.data.totalCount\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    getRegulation() {\r\n      HttpModule.getTree(0).then(res => {\r\n        if (res.code === '000000') {\r\n          let treeResdata = this.getRegulationChildrenData1(res.data)\r\n          this.queryConfig[this.queryConfig.findIndex(item => { return item.field === 'regulationClass' })].itemRender.options = treeResdata\r\n        } else {\r\n          this.$message.error('下拉树加载失败')\r\n        }\r\n      })\r\n    },\r\n    getRegulationChildrenData1(datas) {\r\n      let that = this\r\n      datas.forEach(item => {\r\n        // item.code = item.code\r\n        item.name = item.ruleName\r\n        item.label = item.code + '-' + item.ruleName\r\n        if (item.children.length > 0) {\r\n          that.getRegulationChildrenData1(item.children)\r\n          item.leaf = false\r\n        } else {\r\n          item.leaf = true\r\n        }\r\n      })\r\n\r\n      return datas\r\n    }\r\n  },\r\n  created() {\r\n    // this.params5 = commonFn.transJson(this.$store.state.curNavModule.param5)\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    if (this.menuId === '266A441A752111ECA9A7B8F0F910FFFB') {\r\n      this.toolBarStatusBtnConfig.buttonsInfo = proconf.statusRightToolBarSelectButton\r\n    }\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.getLeftTreeData()\r\n    this.getRegulation()\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.radio-right{\r\nfloat: right;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n/deep/ .boss-slect__toolbar .boss-toolbar__content .toolbar-btns .select-tab-li{\r\n  max-width: inherit;\r\n}\r\n.MonitorRuleContactConfiguration{\r\n  /deep/ .warningLevel1{\r\n    color: red;\r\n  }\r\n  /deep/.warningLevel2{\r\n    color:#FF6F20\r\n  }\r\n  /deep/.warningLevel3{\r\n    color: #FFD43C;\r\n  }\r\n  /deep/ .warningLevel4{\r\n    color: blue !important;\r\n  }\r\n}\r\n\r\n</style>\r\n"]}]}