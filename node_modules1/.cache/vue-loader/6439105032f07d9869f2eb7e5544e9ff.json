{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\bgtDataQuery\\bgtDataQuery.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\bgtDataQuery\\bgtDataQuery.vue","mtime":1695716045272},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["bgtDataQuery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"bgtDataQuery.vue","sourceRoot":"src/views/main/bgtDataQuery","sourcesContent":["<!-- 预算执行报表-指标数据查询 -->\r\n<template>\r\n  <div v-loading=\"isLoadingShow\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template #topTap></template>\r\n      <template #topTabPane>\r\n        <BsTabPanel\r\n          show-zero\r\n          is-open\r\n          :tab-status-btn-config=\"tabStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <template #query>\r\n        <div v-if=\"isShowQueryConditions\" ref=\"BsQueryRef\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryFormItemConfig\"\r\n            :query-form-data=\"queryFormData\"\r\n            @onSearchClick=\"handleSearch\"\r\n          />\r\n        </div>\r\n      </template>\r\n      <template #mainTree>\r\n        <BsTreeSet\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeConfig\"\r\n          class=\"content\"\r\n          @onChangeInput=\"treeOnChangeInput\"\r\n          @onAsideChange=\"treeOnAsideChange\"\r\n          @onConfrimData=\"treeOnConfirmData\"\r\n        />\r\n        <BsBossTree\r\n          ref=\"leftTree\"\r\n          :key=\"treeKey\"\r\n          open-loading\r\n          :defaultexpandedkeys=\"['0']\"\r\n          :is-server=\"false\"\r\n          :ajax-type=\"'get'\"\r\n          :server-uri=\"'large-monitor-platform/lmp/elementQuery/lefttree'\"\r\n          :datas=\"treeData\"\r\n          :queryparams=\"treeQueryparams\"\r\n          :global-config=\"treeGlobalConfig\"\r\n          :clickmethod=\"treeClickMethod\"\r\n        />\r\n      </template>\r\n      <template #mainForm>\r\n        <!-- :row-config=\"{ keyField: 'id' }\" -->\r\n        <!-- :pager-config=\"tablePagerConfig\" -->\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          v-loading=\"tableLoading\"\r\n          :high-config=\"scrollY\"\r\n          :row-id=\"'id'\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"false\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          :tree-config=\"treeTableConfig\"\r\n          :cell-style=\"cellStyle\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template slot=\"toolbarSlots\">\r\n            <div class=\"table-toolbar-left\">\r\n              <!-- <div\r\n                v-if=\"leftTreeVisible === false\"\r\n                class=\"table-toolbar-contro-leftvisible\"\r\n                @click=\"leftTreeVisible = true\"\r\n              ></div> -->\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <vxe-modal\r\n      v-model=\"settingModal\"\r\n      :title=\"'设置条件'\"\r\n      width=\"1000px\"\r\n      height=\"621px\"\r\n      :show-footer=\"true\"\r\n      transfer\r\n      @close=\"cancelDialogClose\"\r\n    >\r\n      <div style=\"overflow: hidden\">\r\n        <div class=\"tag-button-form\">\r\n          <el-row type=\"flex\" :gutter=\"10\">\r\n            <el-col :span=\"1.5\" style=\"padding: 6px 0 0 5px\">\r\n              <b>选择模板</b>\r\n            </el-col>\r\n            <el-col :span=\"3.5\" style=\"margin-left: 10px\">\r\n              <vxe-select v-model=\"treeTemplateSel\" placeholder=\"请选择模板\" :options=\"temOption\" clearable @change=\"dropdownmethod\" />\r\n            </el-col>\r\n            <el-col :span=\"12\" style=\"padding-top: 3px\">\r\n              <vxe-button\r\n                style=\"margin-left: 12px\"\r\n                size=\"mini\"\r\n                status=\"primary\"\r\n                @click=\"templateManage\"\r\n              >\r\n                模板管理\r\n              </vxe-button>\r\n              <vxe-button\r\n                size=\"mini\"\r\n                status=\"primary\"\r\n                @click=\"reset\"\r\n              >\r\n                恢复默认\r\n              </vxe-button>\r\n              <el-popover\r\n                v-model=\"tempSaveShow\"\r\n                placement=\"bottom\"\r\n                width=\"400\"\r\n                trigger=\"manual\"\r\n              >\r\n                <div v-if=\"tempSaveShow\">\r\n                  <vxe-form v-if=\"isNew\">\r\n                    <vxe-form-item title=\"模板名称：\" field=\"name\">\r\n                      <template v-slot>\r\n                        <vxe-input\r\n                          v-model=\"modalName\"\r\n                          style=\"width: 100%\"\r\n                          placeholder=\"请输入模板名称\"\r\n                          clearable\r\n                        />\r\n                      </template>\r\n                    </vxe-form-item>\r\n                    <vxe-form-item style=\"float: right\">\r\n                      <template v-slot>\r\n                        <vxe-button status=\"primary\" size=\"mini\" :loading=\"btnLoading\" @click=\"handleSave('save')\">确定</vxe-button>\r\n                        <vxe-button size=\"mini\" @click=\"handleCloseTemplate\">取消</vxe-button>\r\n                      </template>\r\n                    </vxe-form-item>\r\n                  </vxe-form>\r\n                  <vxe-form v-else>\r\n                    <vxe-form-item>\r\n                      <template v-slot>\r\n                        <i class=\"el-icon-warning\" style=\"color:red\"></i>\r\n                        <span>是否覆盖当前模板[{{ modalName }}]？</span>\r\n                      </template>\r\n                    </vxe-form-item>\r\n                    <vxe-form-item style=\"float: right\">\r\n                      <template v-slot>\r\n                        <vxe-button size=\"mini\" :loading=\"btnLoading\" @click=\"handleTrue\">是</vxe-button>\r\n                        <vxe-button status=\"primary\" size=\"mini\" @click=\"handleFalse\">否</vxe-button>\r\n                      </template>\r\n                    </vxe-form-item>\r\n                  </vxe-form>\r\n                </div>\r\n                <vxe-button\r\n                  slot=\"reference\"\r\n                  style=\"margin-left: 12px\"\r\n                  size=\"mini\"\r\n                  status=\"primary\"\r\n                  @click=\"saveTemplate\"\r\n                >\r\n                  条件保存为模板\r\n                </vxe-button>\r\n              </el-popover>\r\n              <vxe-checkbox v-model=\"isShowDetails\" style=\"margin-left: 10px;\" content=\"只展示明细\" />\r\n              <!-- <vxe-button\r\n                style=\"margin-left: 12px\"\r\n                round\r\n                size=\"mini\"\r\n                status=\"my-blue\"\r\n                icon=\"el-icon-s-check\"\r\n                @click=\"templateAuthorize\"\r\n              >\r\n                模板授权\r\n              </vxe-button> -->\r\n            </el-col>\r\n          </el-row>\r\n        </div>\r\n        <div style=\"height: 461px;margin-top: 10px\">\r\n          <BsTable\r\n            ref=\"settingTableRef\"\r\n            v-loading=\"settingTableLoading\"\r\n            class=\"settingtable\"\r\n            height=\"99%\"\r\n            :table-config=\"settingTableConfig\"\r\n            :table-global-config=\"settingTableGlobalConfig\"\r\n            :footer-config=\"{ showFooter: false }\"\r\n            :table-columns-config=\"settingTableColumnsConfig\"\r\n            :table-data=\"settingTableData\"\r\n            :toolbar-config=\"false\"\r\n            :pager-config=\"false\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <template slot=\"footer\">\r\n        <vxe-button size=\"medium\" @click=\"cancelDialogClose\">取消</vxe-button>\r\n        <vxe-button\r\n          size=\"medium\"\r\n          status=\"primary\"\r\n          @click=\"handleSureSetting\"\r\n        >确定</vxe-button>\r\n      </template>\r\n    </vxe-modal>\r\n    <vxe-modal\r\n      v-model=\"amtDetailModal\"\r\n      v-loading=\"amtDetailTableLoading\"\r\n      :title=\"'金额明细'\"\r\n      width=\"80%\"\r\n      height=\"60%\"\r\n      :show-footer=\"false\"\r\n      transfer\r\n      @close=\"cancelDialogClose\"\r\n    >\r\n      <div style=\"height: 99%\">\r\n        <BsTable\r\n          ref=\"amtDetailTableRef\"\r\n          height=\"99%\"\r\n          :table-config=\"amtDetailTableConfig\"\r\n          :footer-config=\"amtDetailTableFooterConfig\"\r\n          :table-columns-config=\"amtDetailTableColumnsConfig\"\r\n          :table-data=\"amtDetailTableData\"\r\n          :toolbar-config=\"false\"\r\n          :pager-config=\"amtDetailTablePagerConfig\"\r\n          @ajaxData=\"amtDetailAjaxData\"\r\n        />\r\n      </div>\r\n    </vxe-modal>\r\n    <vxe-modal\r\n      v-model=\"templateModal\"\r\n      :title=\"'模板列表'\"\r\n      width=\"40%\"\r\n      height=\"70%\"\r\n      :show-footer=\"false\"\r\n      transfer\r\n      @close=\"cancelDialogCloseTemplate\"\r\n    >\r\n      <div class=\"buttons\">\r\n        <el-button type=\"primary\" @click=\"handleTemplateUse\">模板调用</el-button>\r\n        <el-button @click=\"setDefalutTemplate\">设为默认</el-button>\r\n        <el-button @click=\"deleteTemplate\">删除</el-button>\r\n        <el-button @click=\"cancelDialogCloseTemplate\">取消</el-button>\r\n      </div>\r\n      <div style=\"height: 85%\">\r\n        <BsTable\r\n          ref=\"templateTableRef\"\r\n          v-loading=\"templateTableLoading\"\r\n          :table-config=\"templateTableConfig\"\r\n          :footer-config=\"false\"\r\n          :table-columns-config=\"templateTableColumnsConfig\"\r\n          :table-data=\"templateTableData\"\r\n          :toolbar-config=\"false\"\r\n          :pager-config=\"false\"\r\n        />\r\n      </div>\r\n    </vxe-modal>\r\n  </div>\r\n</template>\r\n<script>\r\nimport HTTPModule from '@/api/frame/main/baseConfigManage/customQueryService.js'\r\nimport { proconf } from './js/bgtDataQuery.js'\r\nimport loadBsConfig from '@/views/main/dynamicTableSetting/config'\r\n// import { mockTableData } from './mockData'\r\nexport default {\r\n  mixins: [loadBsConfig],\r\n  data() {\r\n    return {\r\n      axiosFeild: {\r\n        codeField: 'rscode',\r\n        successCode: 200\r\n      },\r\n      // queryConfigId: '1B7EAFCAC74B49938E59A647BB96A6A5',\r\n      queryConfigId: 'CBEE20182D8F42C184FDB1DB2ADDD21A',\r\n      isShowDetails: false,\r\n      scrollY: {\r\n        scrollY: {\r\n          mode: 'wheel',\r\n          gt: 25\r\n        }\r\n      },\r\n      isLoadingShow: false,\r\n      leftTreeVisible: false,\r\n      tabStatusBtnConfig: {\r\n        changeBtns: true, // tab页右边的按钮是否会根据页签的不同而改变\r\n        buttons: proconf.tabStatusBtnConfigButtons,\r\n        curButton: {\r\n          type: 'button',\r\n          iconName: 'base-daiban.png',\r\n          iconUrl: '',\r\n          label: '',\r\n          code: '0',\r\n          curValue: '0'\r\n        },\r\n        buttonsInfo: proconf.tabStatusBtnConfigButtonsInfo,\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        }\r\n      },\r\n      tabStatusNumConfig: { '-1': 0, 0: 0, 1: 0, 2: 0 },\r\n      isShowQueryConditions: true,\r\n      queryFormItemConfig: [],\r\n      queryFormData: {},\r\n      // queryFormData: proconf.queryFormData,\r\n      treeConfig: {\r\n        // 左侧树类型\r\n        // curRadio: 'AGENCY',\r\n        curRadio: '',\r\n        radioGroup: [\r\n          /* {\r\n            code: 'AGENCY',\r\n            label: '预算单位AT PAGE'\r\n          },\r\n          {\r\n            code: 'EXP_FUNC',\r\n            label: '功能分类AT PAGE'\r\n          },\r\n          {\r\n            code: 'dep_bgt_eco',\r\n            label: '预算支出分类科目AT PAGE'\r\n          } */\r\n        ]\r\n      },\r\n      treeData: [],\r\n      treeQueryparams: { elementCode: 'AGENCY' },\r\n      treeGlobalConfig: {\r\n        treeInputVal: ''\r\n      },\r\n      tableLoading: false,\r\n      tableFooterConfig: {\r\n        totalObj: {\r\n          amount: 0,\r\n          pay_amt: 0,\r\n          clear_amt: 0,\r\n          plan_amt: 0\r\n        },\r\n        combinedType: ['switchTotal'],\r\n        showFooter: true\r\n      },\r\n      amtDetailTableFooterConfig: {\r\n        combinedType: ['switchTotal'],\r\n        showFooter: true\r\n      },\r\n      tableColumnsConfig: [],\r\n      // tableColumnsConfig: proconf.tableColumnsConfig,\r\n      tableData: [],\r\n      tableConfig: {\r\n        globalConfig: {\r\n          checkType: false, // checkbox\r\n          seq: true // 序号列\r\n        },\r\n        renderers: {\r\n          // 编辑 附件 操作日志\r\n          $gloableOptionRow: proconf.gloableOptionRow,\r\n          $editRadio: proconf.editRadio,\r\n          $editLevel: proconf.editLevel,\r\n          $editCodeCheckbox: proconf.editCodeCheckbox,\r\n          $editCheckbox: proconf.editCheckbox,\r\n          $order: proconf.order\r\n        }\r\n        /* methods: {\r\n          onOptionRowClick: this.onOptionRowClick\r\n        } */\r\n      },\r\n      tablePagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 100000000\r\n      },\r\n      amtDetailTablePagerConfig: {\r\n        total: 0,\r\n        pageSize: 20,\r\n        currentPage: 1\r\n      },\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        moneyConversion: true, // 是否有金额转换\r\n        search: false, // 是否有search\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: true, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      treeTableConfig: {\r\n        expandAll: false,\r\n        dblExpandAll: true,\r\n        dblExpand: true,\r\n        accordion: false\r\n      },\r\n      amtDetailQueryParams: {\r\n        ids: [],\r\n        pageNum: 1,\r\n        pageSize: 20\r\n      },\r\n      amtDetailType: '1',\r\n      amountQueryId: 'C9C2B60A6F26475084EB3576435B7A89', // '6ACA4D6BC4264EDC8523044897FAFF31',\r\n      payAmtQueryId: 'F28B5451E7B84E6E87C2DA920FC9F74E', // '686A3B189F5A49028DC9ADF91CC2CC94',\r\n      planAmtQueryId: 'AAA5B9C66A5B478C875E6E900F743AD9', // '742827FA532A4FEBA351A118D8DFAA82',\r\n      clearAmtQueryId: '7B9C09F1DCCD464CB8FDBBDEB413E36C', // '851AED1ED08F47F49040A50BDD7E5934',\r\n      menuName: '指标数据查询',\r\n      tableTreeConfig: {\r\n        transform: true,\r\n        expandRowKeys: [24300]\r\n      },\r\n      settingModal: false,\r\n      amtDetailModal: false,\r\n      amtDetailTableLoading: false,\r\n      amtDetailTableColumnsConfig: [],\r\n      amtDetailTableColumnsConfigAmount: [],\r\n      amtDetailTableColumnsConfigPay: [],\r\n      amtDetailTableColumnsConfigPlan: [],\r\n      amtDetailTableColumnsConfigClear: [],\r\n      amtDetailTableData: [],\r\n      toolBarStatusSelect: {},\r\n      settingTableData: [],\r\n      settingTableLoading: false,\r\n      settingTableColumnsConfig: proconf.settingTableColumnsConfig,\r\n      isColumnVisible: 1,\r\n      settingTableConfig: {\r\n        globalConfig: {\r\n          sortable: false,\r\n          rowDrop: true,\r\n          checkType: 'checkbox'\r\n        }\r\n      },\r\n      settingTableGlobalConfig: {\r\n        rowDrop: true, // 行拖拽\r\n        dragColumnsConfig: {\r\n          cacheStatus: false, // 是否开启缓存\r\n          openDrag: true // 是否开启拖拽排序\r\n        }\r\n      },\r\n      amtDetailTableConfig: {\r\n        globalConfig: {\r\n          checkType: 'checkbox'\r\n        }\r\n      },\r\n      isNew: true,\r\n      btnLoading: false,\r\n      modalName: '',\r\n      tempSaveShow: false,\r\n      treeTemplate: null,\r\n      treeTemplateSel: null,\r\n      temOption: [],\r\n      temQueryparams: {\r\n        menuId: this.$store.state.curNavModule.guid || 'Home'\r\n      },\r\n      templateModal: false,\r\n      templateTableLoading: false,\r\n      templateTableConfig: {\r\n        globalConfig: {\r\n          checkType: 'checkbox'\r\n        }\r\n      },\r\n      templateTableColumnsConfig: proconf.templateTableColumnsConfig,\r\n      templateTableData: [],\r\n      temActionParams: {\r\n        menuId: 'Home',\r\n        templateName: ''\r\n      },\r\n      colFieldList: [],\r\n      currentParams: {},\r\n      treeKey: 1,\r\n      currentTreeCode: 'agency'\r\n    }\r\n  },\r\n  methods: {\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      switch (key) {\r\n        case 'amount':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigAmount\r\n          this.amtDetailType = '1'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n        case 'pay_amt':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigPay\r\n          this.amtDetailType = '2'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n        case 'plan_amt':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigPlan\r\n          this.amtDetailType = '4'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n        case 'clear_amt':\r\n          this.amtDetailTableColumnsConfig = this.amtDetailTableColumnsConfigClear\r\n          this.amtDetailType = '3'\r\n          this.getAmtDetailData(obj.row)\r\n          break\r\n      }\r\n    },\r\n    getAmtDetailData(row) {\r\n      // 组装请求参数\r\n      var bgtIds = this.findBgtIds(row)\r\n      this.amtDetailQueryParams.ids = bgtIds\r\n      this.queryAmtDetailData()\r\n      this.amtDetailModal = true\r\n    },\r\n    findBgtIds(row) {\r\n      var newArr = []\r\n      if (row.children && row.children.length) {\r\n        row.children.forEach(item => {\r\n          newArr.push(...this.findBgtIds(item))\r\n        })\r\n      } else {\r\n        if (row.bgtIds) {\r\n          newArr.push(...row.bgtIds)\r\n        }\r\n      }\r\n      return newArr\r\n    },\r\n    queryAmtDetailData() {\r\n      this.amtDetailTableLoading = true\r\n      this.amtDetailTableData = []\r\n      let method = ''\r\n      if (this.amtDetailType === '1') {\r\n        method = 'grobBgtAmtDetail'\r\n      } else if (this.amtDetailType === '2') {\r\n        method = 'grobPayAmtDetail'\r\n      } else if (this.amtDetailType === '3') {\r\n        method = 'grobClearAmtDetail'\r\n      } else if (this.amtDetailType === '4') {\r\n        method = 'grobPlanAmtDetail'\r\n      }\r\n      HTTPModule[method](this.amtDetailQueryParams).then(res => {\r\n        this.amtDetailTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          let resData = res.data.rows\r\n          resData.forEach(item => {\r\n            for (let i in item) {\r\n              item[i.toLowerCase()] = item[i]\r\n            }\r\n          })\r\n          this.amtDetailTableData = resData\r\n          this.amtDetailTablePagerConfig.total = res.data.total\r\n        }\r\n      })\r\n    },\r\n    amtDetailAjaxData({ params, currentPage, pageSize }) {\r\n      this.amtDetailQueryParams = Object.assign(this.amtDetailQueryParams, {\r\n        pageNum: currentPage,\r\n        pageSize: pageSize\r\n      })\r\n      this.queryAmtDetailData()\r\n    },\r\n    async loadConfig(id) {\r\n      if (!id) return\r\n      let params = {\r\n        tableId: {\r\n          id: id,\r\n          fiscalyear: this.$store.getters.getuserInfo.year,\r\n          mof_div_code: this.$store.getters.getuserInfo.province,\r\n          menuguid: this.$store.state.curNavModule.guid\r\n        }\r\n      }\r\n      if (id === this.amountQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        console.log('initQuery', configData)\r\n        this.amtDetailTableColumnsConfigAmount = configData.itemsConfig\r\n      }\r\n      if (id === this.payAmtQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        this.amtDetailTableColumnsConfigPay = configData.itemsConfig\r\n      }\r\n      if (id === this.planAmtQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        this.amtDetailTableColumnsConfigPlan = configData.itemsConfig\r\n      }\r\n      if (id === this.clearAmtQueryId) {\r\n        params.tableId.id = id\r\n        let configData = await this.loadBsConfig(params)\r\n        this.amtDetailTableColumnsConfigClear = configData.itemsConfig\r\n      }\r\n      if (id === this.queryConfigId) {\r\n        params.tableId.id = id\r\n        let configQueryData = await this.loadBsConfig(params)\r\n        this.queryFormItemConfig = configQueryData.itemsConfig\r\n      }\r\n    },\r\n    getFormTable() {\r\n      this.loadConfig(this.queryConfigId)\r\n      this.loadConfig(this.amountQueryId)\r\n      this.loadConfig(this.payAmtQueryId)\r\n      this.loadConfig(this.planAmtQueryId)\r\n      this.loadConfig(this.clearAmtQueryId)\r\n    },\r\n    templateManage() {\r\n      let self = this\r\n      self.templateTableLoading = true\r\n      HTTPModule.getGrabTemplateList(this.temQueryparams).then(res => {\r\n        self.templateTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          self.templateTableData = res.data\r\n        } else {\r\n          self.$message.error(res.result)\r\n        }\r\n      }).catch(() => {\r\n        self.templateTableLoading = false\r\n      })\r\n      this.templateModal = true\r\n    },\r\n    handleTemplateUse() {\r\n      let selection = this.$refs.templateTableRef.$refs.xGrid.getSelectRecords()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择有且仅有一个模版!')\r\n        return\r\n      }\r\n      this.treeTemplate = selection[0]\r\n      this.setTemplateData()\r\n      this.cancelDialogCloseTemplate()\r\n    },\r\n    setDefalutTemplate() {\r\n      let selection = this.$refs.templateTableRef.$refs.xGrid.getSelectRecords()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择有且仅有一个模版!')\r\n        return\r\n      }\r\n      this.temActionParams.menuId = this.$store.state.curNavModule.guid || 'Home'\r\n      this.temActionParams.templateName = selection[0].template_name\r\n      this.templateTableLoading = true\r\n      HTTPModule.setDefaultGrabTemplate(this.temActionParams).then(res => {\r\n        this.templateTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          this.$message.success('设置成功！')\r\n          this.cancelDialogCloseTemplate()\r\n        } else {\r\n          this.$message.error('设置失败！' + res.result)\r\n        }\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    deleteTemplate() {\r\n      let selection = this.$refs.templateTableRef.$refs.xGrid.getSelectRecords()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择有且仅有一个模版!')\r\n        return\r\n      }\r\n      this.temActionParams.menuId = this.$store.state.curNavModule.guid || 'Home'\r\n      this.temActionParams.templateName = selection[0].template_name\r\n      this.templateTableLoading = true\r\n      HTTPModule.removeGrabTemplate(this.temActionParams).then(res => {\r\n        this.templateTableLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          this.$message.success('删除成功！')\r\n          this.getTemplateData()\r\n          this.cancelDialogCloseTemplate()\r\n        } else {\r\n          this.$message.error('删除失败！' + res.result)\r\n        }\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    saveTemplate() {\r\n      this.isNew = this.treeTemplate === null || !this.treeTemplate.template_name\r\n      this.tempSaveShow = true\r\n    },\r\n    handleTrue() {\r\n      this.handleSave('modify')\r\n    },\r\n    handleFalse() {\r\n      this.isNew = true\r\n      this.modalName = ''\r\n    },\r\n    handleSave(eventType) {\r\n      let self = this\r\n      if (self.modalName === '') {\r\n        self.$message.warning('请填写模板名称！')\r\n        return\r\n      }\r\n      if (self.modalName.length > 20) {\r\n        self.$message.warning('模板名称请小于20字！')\r\n        return\r\n      }\r\n      let saveParam = {\r\n        type: eventType,\r\n        menuId: self.$store.state.curNavModule.guid,\r\n        templateName: self.modalName,\r\n        condition: [],\r\n        fields: [],\r\n        sumAmt: [\r\n          {\r\n            field: 'amount',\r\n            type: '1',\r\n            title: '指标金额',\r\n            sortValue: null,\r\n            checked: false\r\n          },\r\n          {\r\n            field: 'pay_amt',\r\n            type: '2',\r\n            title: '已支付金额',\r\n            sortValue: null,\r\n            checked: false\r\n          },\r\n          {\r\n            field: 'clear_amt',\r\n            type: '3',\r\n            title: '已清算金额',\r\n            sortValue: null,\r\n            checked: false\r\n          },\r\n          {\r\n            field: 'plan_amt',\r\n            type: '4',\r\n            title: '计划金额',\r\n            sortValue: null,\r\n            checked: false\r\n          }\r\n        ]\r\n      }\r\n      let fields = self.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n      this.$refs.settingTableRef.$refs.xGrid.getSelectRecords().forEach(item => {\r\n        fields.forEach(items => {\r\n          if (item.code === items.code) {\r\n            items.checked = true\r\n          }\r\n        })\r\n      })\r\n      saveParam.fields = fields\r\n      saveParam.condition = fields.map(item => {\r\n        return {\r\n          name: item.name,\r\n          title: item.title,\r\n          checked: item.checked\r\n        }\r\n      })\r\n      self.btnLoading = true\r\n      HTTPModule.saveGrabTemplate(saveParam).then((res) => {\r\n        self.btnLoading = false\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          self.$message.success('保存成功')\r\n          this.handleCloseTemplate()\r\n          this.getTemplateData()\r\n        } else {\r\n          self.$message.error('保存失败：' + res.result)\r\n          self.btnLoading = false\r\n        }\r\n      }).catch(() => {\r\n        self.$message.error('保存失败')\r\n        self.btnLoading = false\r\n      })\r\n    },\r\n    handleCloseTemplate() {\r\n      this.modalName = ''\r\n      this.tempSaveShow = false\r\n    },\r\n    reset() {\r\n      this.settingTableData = this.colFieldList.map((item) => {\r\n        return {\r\n          name: item.name.toLowerCase(),\r\n          code: item.name.toLowerCase(),\r\n          title: item.title,\r\n          type: item.type === null ? '0' : item.type + '',\r\n          level: item.level + '',\r\n          totalLevel: item.level + '',\r\n          checked: item.checked,\r\n          showCode: item.showCode\r\n        }\r\n      })\r\n      setTimeout(() => {\r\n        this.$refs.settingTableRef.$refs.xGrid.setCheckboxRow(this.settingTableData.filter(item => item.checked), true)\r\n      }, 100)\r\n      this.treeTemplate = null\r\n      this.treeTemplateSel = null\r\n      this.modalName = ''\r\n    },\r\n    dropdownmethod(data) {\r\n      this.treeTemplate = data.value\r\n      this.modalName = this.treeTemplate.template_name\r\n      this.setTemplateData()\r\n    },\r\n    setTemplateData() {\r\n      if (this.treeTemplate.fields !== null && this.treeTemplate.fields !== '') {\r\n        let fields = JSON.parse(this.treeTemplate.fields)\r\n        this.settingTableData = fields.map((item) => {\r\n          if (item.level > 3) {\r\n            item.level = 6\r\n          }\r\n          return {\r\n            name: item.name,\r\n            code: item.name,\r\n            title: item.title,\r\n            type: item.type === null ? '0' : item.type + '',\r\n            level: item.level + '',\r\n            totalLevel: this.colFieldList.find(object => object.name === item.name).totalLevel,\r\n            checked: item.checked,\r\n            showCode: item.showCode\r\n          }\r\n        })\r\n        setTimeout(() => {\r\n          this.$refs.settingTableRef.$refs.xGrid.setCheckboxRow(this.settingTableData.filter(item => item.checked), true)\r\n        }, 100)\r\n      }\r\n    },\r\n    getTemplateData() {\r\n      let self = this\r\n      HTTPModule.getGrabTemplateList(this.temQueryparams).then(res => {\r\n        if (res.data instanceof Array) {\r\n          if (res.data.length > 0) {\r\n            self.temOption = res.data.map(item => {\r\n              return {\r\n                label: item.template_name,\r\n                value: item\r\n              }\r\n            })\r\n          }\r\n          if (res.data.length === 0) {\r\n            self.temOption = []\r\n          }\r\n        }\r\n      })\r\n    },\r\n    cellStyle ({ level }) {\r\n      if (level === 0) {\r\n        return {\r\n          background: '#cbe2fe !important',\r\n          border: '1px solid #e8eaec !important'\r\n        }\r\n      } else {\r\n        return {\r\n          background: '#e3f2fe !important',\r\n          border: '1px solid #e8eaec !important'\r\n        }\r\n      }\r\n    },\r\n    findObjByKeyValue(arr) {\r\n      function recursive(data) {\r\n        data.every((item) => {\r\n          if (item.bgtIds !== undefined) {\r\n            findObj = item.bgtIds\r\n            return false\r\n          }\r\n          if (item.children && item.children.length) {\r\n            recursive(item.children)\r\n          }\r\n          return true\r\n        })\r\n      }\r\n      let findObj = null\r\n      recursive(arr)\r\n      return findObj\r\n    },\r\n    getTableData(params) {\r\n      this.isLoadingShow = true\r\n      this.currentParams = params || {}\r\n      params.type = this.isShowDetails ? '1' : '0'\r\n      HTTPModule.dataQueryPageInfo(params).then((res) => {\r\n        // res = mockTableData\r\n        // console.log(333, mockTableData)\r\n        if (res.rscode === 200) {\r\n          this.isLoadingShow = false\r\n          this.tableData = res.data\r\n          this.tablePagerConfig.total = res.data.length\r\n          if (res.data.length > 0) {\r\n            this.tableFooterConfig.totalObj.amount = res.data.reduce((amount, item) => amount + Number(item.amount), 0)\r\n            this.tableFooterConfig.totalObj.pay_amt = res.data.reduce((payAmtSum, item) => payAmtSum + Number(item.pay_amt), 0)\r\n            this.tableFooterConfig.totalObj.plan_amt = res.data.reduce((planAmtSum, item) => planAmtSum + Number(item.plan_amt), 0)\r\n            this.tableFooterConfig.totalObj.clear_amt = res.data.reduce((clearAmtSum, item) => clearAmtSum + Number(item.clear_amt), 0)\r\n          }\r\n        } else {\r\n          this.isLoadingShow = false\r\n          this.$message.error(res.result)\r\n        }\r\n      }).catch(() => {\r\n        this.isLoadingShow = false\r\n      })\r\n    },\r\n    getSearchDataListFn(searchFormConfig) {\r\n      let searchDataObj = {}\r\n      if (Array.isArray(searchFormConfig) && searchFormConfig.length) {\r\n        searchFormConfig.forEach(item => {\r\n          if (item.itemRender?.name === '$formTreeInput' || item.itemRender?.name === '$vxeTree') {\r\n            if (item.field) {\r\n              searchDataObj[item.field + 'code'] = []\r\n            }\r\n          } else {\r\n            if (item.field) {\r\n              searchDataObj[item.field] = []\r\n            }\r\n          }\r\n        })\r\n      }\r\n      return searchDataObj\r\n    },\r\n    handleSureSetting() {\r\n      let currentTbl = this.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n      let selectionData = this.$refs.settingTableRef.$refs.xGrid.getSelectRecords()\r\n      let fields = []\r\n      let canUse = []\r\n      selectionData.forEach((item) => {\r\n        fields.push({\r\n          name: item.name,\r\n          type: item.type,\r\n          level: item.level,\r\n          showCode: item.showCode\r\n        })\r\n      })\r\n      currentTbl.forEach((item) => {\r\n        if (item.type !== '0' && item.checked) {\r\n          canUse.push({\r\n            name: item.title,\r\n            code: item.code\r\n          })\r\n        }\r\n      })\r\n      this.queryFormData = this.getSearchDataListFn(this.queryFormItemConfig)\r\n      this.tableColumnsConfig = []\r\n      this.tableData = []\r\n      if (fields.length > 0) {\r\n        let params = {\r\n          tableName: this.transJson(this.$store.state.curNavModule.param5).tableName || 'vw_data_query_bgt',\r\n          condition: {},\r\n          fields,\r\n          sumAmt: ['amount', 'pay_amt', 'plan_amt', 'clear_amt']\r\n        }\r\n        this.getTableData(params)\r\n        let mainTblColumns = []\r\n        selectionData.forEach((item, index) => {\r\n          if (index === 0) {\r\n            mainTblColumns.push({\r\n              title: item.title,\r\n              isDataQuery: true,\r\n              field: item.code,\r\n              width: 'fix',\r\n              align: 'left',\r\n              type: 'treeNode',\r\n              treeNode: true\r\n            })\r\n          } else {\r\n            mainTblColumns.push({\r\n              title: item.title,\r\n              isDataQuery: true,\r\n              field: item.code,\r\n              width: 'fix',\r\n              align: 'left'\r\n            })\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '指标金额',\r\n          field: 'amount',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '计划金额',\r\n          field: 'plan_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '支付金额',\r\n          field: 'pay_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '清算金额',\r\n          field: 'clear_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        this.tableColumnsConfig = mainTblColumns\r\n      }\r\n      this.cancelDialogClose()\r\n      if (this.tableColumnsConfig.length > 0) {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '设置成功，请稍候！',\r\n          duration: 3000\r\n        })\r\n      } else {\r\n        this.$message({\r\n          type: 'success',\r\n          message: '设置成功！'\r\n        })\r\n        this.tablePagerConfig.total = 0\r\n      }\r\n      let bgtDataQuery = {\r\n        tableData: this.settingTableData\r\n      }\r\n      window.localStorage.removeItem('bgtDataQuery')\r\n      window.localStorage.setItem('bgtDataQuery', JSON.stringify(bgtDataQuery))\r\n    },\r\n    cancelDialogClose() {\r\n      this.settingModal = false\r\n      this.amtDetailModal = false\r\n      this.treeTemplateSel = null\r\n      this.treeTemplate = null\r\n      this.temOption = []\r\n      this.modalName = ''\r\n      this.btnLoading = false\r\n    },\r\n    cancelDialogCloseTemplate() {\r\n      this.templateModal = false\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryFormItemConfig?.forEach(item => {\r\n        if (item.itemRender.name === '$formTreeInput' || item.itemRender.name === '$vxeTree') {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    trasToTree(arr) {\r\n      // TODO 树状表格处理数据的方法\r\n      let result = []\r\n      let map = {}\r\n      for (let i in arr) {\r\n        if (arr[i].children) {\r\n          map[arr[i].id] = arr[i]\r\n        } else {\r\n          map[arr[i].id] = Object.assign(arr[i], { children: [] })\r\n          map[arr[i].id].plan_amt = 0\r\n          map[arr[i].id].pay_app_amt = 0\r\n        }\r\n      }\r\n      for (let i in arr) {\r\n        if (map[arr[i].pid]) {\r\n          map[arr[i].pid].children.push(arr[i])\r\n          map[arr[i].pid].plan_amt = map[arr[i].pid].plan_amt + arr[i].plan_amt\r\n          map[arr[i].pid].pay_app_amt =\r\n            map[arr[i].pid].pay_app_amt + arr[i].pay_app_amt\r\n        } else {\r\n          result.push(arr[i])\r\n        }\r\n      }\r\n      return result\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        case 'refresh':\r\n          if (this.tableColumnsConfig.length > 0) {\r\n            this.getTableData(this.currentParams)\r\n          } else {\r\n            this.isLoadingShow = true\r\n            setTimeout(() => {\r\n              this.isLoadingShow = false\r\n            }, 500)\r\n          }\r\n          break\r\n      }\r\n    },\r\n    onOptionRowClick({ params, optionType }) {\r\n      switch (optionType) {\r\n        case 'top':\r\n          this.handleToTop(params.rowIndex)\r\n          break\r\n        case 'bottom':\r\n          this.handleToBottom(params.rowIndex)\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    handleToTop(index) {\r\n      if (index !== 0) {\r\n        let tableData = this.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n        let temp = tableData[index - 1]\r\n        tableData[index - 1] = tableData[index]\r\n        tableData[index] = temp\r\n        this.settingTableData = tableData\r\n        this.$message.success('上移成功')\r\n      }\r\n    },\r\n    handleToBottom(index) {\r\n      let tableData = this.$refs.settingTableRef.$refs.xGrid.getTableData().fullData\r\n      if (index !== tableData.length - 1) {\r\n        let temp = tableData[index + 1]\r\n        tableData[index + 1] = tableData[index]\r\n        tableData[index] = temp\r\n        this.settingTableData = tableData\r\n        this.$message.success('下移成功')\r\n      }\r\n    },\r\n    treeClickMethod(obj) {\r\n      if (this.tableColumnsConfig.length > 0) {\r\n        if (!obj.children.length && this.currentParams.condition !== undefined) {\r\n          let code = this.currentTreeCode + '_code'\r\n          let params = this.currentParams\r\n          params.condition[code] = [obj.code]\r\n          this.getTableData(params)\r\n        } else {\r\n          if (obj.label === '全部') {\r\n            let code = this.currentTreeCode + '_code'\r\n            let params = this.currentParams\r\n            if (params.condition[code] !== undefined) delete params.condition[code]\r\n            this.getTableData(params)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    treeOnConfirmData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    treeOnAsideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    treeOnChangeInput(val) {\r\n      this.treeGlobalConfig.treeInputVal = val\r\n      this.$refs.leftTree.filterText = val\r\n    },\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    handleSearch(val) {\r\n      // debugger\r\n      let condition = this.getConditionList()\r\n      for (let key in condition) {\r\n        if (\r\n          (val[key] !== undefined) &\r\n          (val[key] !== null)\r\n        ) {\r\n          if (Array.isArray(val[key])) {\r\n            condition[key] = val[key]\r\n          } else if (typeof (val[key]) === 'string') {\r\n            if (val[key].trim() !== '') {\r\n              val[key].split(',').forEach(item => {\r\n                condition[key].push(item)\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.queryFormItemConfig?.forEach(item => {\r\n        if (item.islike === true && val[item.field]) {\r\n          condition[item.field] = {}\r\n          condition[item.field][item.liketype] = val[item.field]\r\n        }\r\n      })\r\n      Object.assign(this.currentParams.condition || {}, condition)\r\n      this.getTableData(this.currentParams)\r\n      this.$message.success('查询成功！')\r\n    },\r\n    handleSettingModal() {\r\n      this.temQueryparams = {\r\n        menuId: this.$store.state.curNavModule.guid || 'Home'\r\n      }\r\n      this.getTemplateData()\r\n      this.initSettingTableData()\r\n      this.settingModal = true\r\n    },\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      switch (obj.code) {\r\n        case 'operation-setting':\r\n          // 设置\r\n          this.handleSettingModal()\r\n          break\r\n        case 'operation-expand-tree':\r\n          // 树全部展开\r\n          this.handleExpandTree()\r\n          break\r\n        case 'operation-close-tree':\r\n          // 树全部合并\r\n          this.handleCloseTree()\r\n          break\r\n      }\r\n    },\r\n    handleExpandTree() {\r\n      this.$refs.mainTableRef.$refs.xGrid.setAllTreeExpand(true)\r\n    },\r\n    handleCloseTree() {\r\n      this.$refs.mainTableRef.$refs.xGrid.clearTreeExpand()\r\n    },\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n      }\r\n    },\r\n    getInitTemplate() {\r\n      HTTPModule.initTemplate().then(res => {\r\n        if (res && res[this.axiosFeild['codeField']] === this.axiosFeild['successCode']) {\r\n          if (res.data && res.data.fields) {\r\n            this.colFieldList = res.data.fields\r\n          } else {\r\n            this.colFieldList = JSON.parse(JSON.stringify(proconf.colFieldList))\r\n          }\r\n        } else {\r\n          this.colFieldList = JSON.parse(JSON.stringify(proconf.colFieldList))\r\n        }\r\n      }).catch(() => {\r\n        this.colFieldList = JSON.parse(JSON.stringify(proconf.colFieldList))\r\n      })\r\n    },\r\n    initSettingTableData() {\r\n      this.settingTableData = this.colFieldList.map((item) => {\r\n        if (item.level > 3) {\r\n          item.level = 6\r\n        }\r\n        return {\r\n          name: item.name.toLowerCase(),\r\n          code: item.name.toLowerCase(),\r\n          title: item.title,\r\n          type: item.type === null ? '0' : item.type + '',\r\n          level: item.level + '',\r\n          totalLevel: item.level + '',\r\n          checked: item.checked,\r\n          showCode: item.showCode\r\n        }\r\n      })\r\n      setTimeout(() => {\r\n        this.$refs.settingTableRef.$refs.xGrid.setCheckboxRow(this.settingTableData.filter(item => item.checked), true)\r\n      }, 100)\r\n      this.colFieldList.forEach(col => {\r\n        col.totalLevel = col.level + ''\r\n      })\r\n    }\r\n  },\r\n  activated() {\r\n    if (JSON.stringify(this.currentParams) !== '{}') {\r\n      this.tableData = []\r\n      this.getTableData(this.currentParams)\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n    this.getInitTemplate()\r\n    this.getTemplateData()\r\n    if (window.localStorage.getItem('bgtDataQuery') !== null) {\r\n      let bgtDataQuery = JSON.parse(window.localStorage.getItem('bgtDataQuery'))\r\n      this.settingTableData = bgtDataQuery.tableData\r\n      let currentTbl = this.$refs.mainTableRef.$refs.xGrid.getTableData().fullData\r\n      let fields = []\r\n      let canUse = []\r\n      currentTbl.forEach((item) => {\r\n        if (item.type !== '0') {\r\n          fields.push({\r\n            name: item.name,\r\n            type: item.type,\r\n            showCode: item.showCode,\r\n            level: item.level\r\n          })\r\n        }\r\n      })\r\n      currentTbl.forEach((item) => {\r\n        if (item.type !== '0' && item.checked) {\r\n          canUse.push({\r\n            name: item.title,\r\n            code: item.code\r\n          })\r\n        }\r\n      })\r\n      let formDataBak = {}\r\n      canUse.forEach((item) => {\r\n        let code = item.code\r\n        formDataBak[code] = ''\r\n      })\r\n      this.queryFormData = formDataBak\r\n      this.tableColumnsConfig = []\r\n      this.tableData = []\r\n      if (fields.length > 0) {\r\n        let params = {\r\n          tableName: 'vw_data_query_bgt',\r\n          condition: {},\r\n          fields,\r\n          sumAmt: ['amount', 'pay_amt', 'plan_amt', 'clear_amt']\r\n        }\r\n        this.getTableData(params)\r\n        let mainTblColumns = []\r\n        currentTbl.forEach((item, index) => {\r\n          if (item.type !== '0') {\r\n            if (index === 0) {\r\n              mainTblColumns.push({\r\n                title: item.title,\r\n                isDataQuery: true,\r\n                field: item.code,\r\n                width: 'fix',\r\n                align: 'left',\r\n                type: 'treeNode',\r\n                treeNode: true\r\n              })\r\n            } else {\r\n              mainTblColumns.push({\r\n                title: item.title,\r\n                isDataQuery: true,\r\n                field: item.code,\r\n                width: 'fix',\r\n                align: 'left'\r\n              })\r\n            }\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '指标金额',\r\n          field: 'amount',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '支付金额',\r\n          field: 'pay_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '计划金额',\r\n          field: 'plan_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        mainTblColumns.push({\r\n          title: '清算金额',\r\n          field: 'clear_amt',\r\n          width: 'fix',\r\n          align: 'right',\r\n          combinedType: 'average,subTotal,total,totalAll',\r\n          cellRender: {\r\n            name: '$vxeMoney',\r\n            options: [],\r\n            defaultValue: '',\r\n            props: {}\r\n          }\r\n        })\r\n        this.tableColumnsConfig = mainTblColumns\r\n      } else {\r\n        setTimeout(() => {\r\n          this.settingModal = true\r\n        }, 1000)\r\n      }\r\n    }\r\n    this.getFormTable()\r\n  }\r\n\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.Titans-table ::v-deep .vxe-table{\r\n  .vxe-tree--btn-wrapper {\r\n    top: 44%;\r\n    left: 5px;\r\n  }\r\n  .drag-btn{\r\n    margin-left: 9px;\r\n  }\r\n}\r\n.Titans-table.settingtable ::v-deep .vxe-table{\r\n  .vxe-table--header-wrapper table thead tr th:nth-child(2) .vxe-cell .vxe-cell--sort{\r\n    display: none;\r\n  }\r\n}\r\n.T-mainFormListLayout-modulebox ::v-deep .mmc-formlist .mmc-right {\r\n  display: flex;\r\n  flex-flow: column;\r\n  height: 100%;\r\n  padding: 0 0 0 0;\r\n}\r\n.buttons{\r\n  margin: 10px 0 10px 0;\r\n  height: 10%;\r\n}\r\n</style>\r\n"]}]}