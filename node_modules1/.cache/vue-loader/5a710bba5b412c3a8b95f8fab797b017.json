{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\violationTypeManagement\\violationTypeManagement.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\violationTypeManagement\\violationTypeManagement.vue","mtime":1694505522841},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBwcm9jb25mIH0gZnJvbSAnLi4vdmlvbGF0aW9uVHlwZU1hbmFnZW1lbnQvdmlvbGF0aW9uVHlwZU1hbmFnZW1lbnQnDQppbXBvcnQgQWRkRGlhbG9nIGZyb20gJy4vY2hpbGRyZW4vYWRkRGlhbG9nJw0KaW1wb3J0IEh0dHBNb2R1bGUgZnJvbSAnQC9hcGkvZnJhbWUvbWFpbi9iYXNlQ29uZmlnTWFuYWdlL3Zpb2xhdGlvblR5cGVNYW5hZ2VtZW50LmpzJw0KZXhwb3J0IGRlZmF1bHQgew0KICBjb21wb25lbnRzOiB7DQogICAgQWRkRGlhbG9nDQogIH0sDQogIHdhdGNoOiB7DQogICAgcXVlcnlDb25maWcoKSB7DQogICAgICB0aGlzLmdldFNlYXJjaERhdGFMaXN0KCkNCiAgICB9DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGxlZnRUcmVlVmlzaWJsZTogdHJ1ZSwNCiAgICAgIHRyZWVEYXRhOiBbew0KICAgICAgICBjaGlsZHJlbjogW10sDQogICAgICAgIGNvZGU6IDAsDQogICAgICAgIGlkOiAwLA0KICAgICAgICBsYWJlbDogJzAt5YWo6YOo5YiG57G7JywNCiAgICAgICAgbmFtZTogJ+WFqOmDqOWIhuexuycsDQogICAgICAgIHBhcmVudElkOiBudWxsLA0KICAgICAgICBwYXJlbnRSdWxlTmFtZTogbnVsbCwNCiAgICAgICAgcnVsZUxldmVsOiAwLA0KICAgICAgICBydWxlTmFtZTogJ+WFqOmDqOWIhuexuycNCiAgICAgIH1dLA0KICAgICAgdHJlZVR5cGVDb25maWc6IHsNCiAgICAgICAgY3VyUmFkaW86ICdBR0VOQ1knDQogICAgICB9LA0KICAgICAgdHJlZUdsb2JhbENvbmZpZzogew0KICAgICAgICBpbnB1dFZhbDogJycNCiAgICAgIH0sDQogICAgICB0cmVlUXVlcnlwYXJhbXM6IHt9LA0KICAgICAgLy8gdHJlZVNlcnZlclVyaTogJ3BheS1jbGVhci1zZXJ2aWNlL3YyL2xlZnR0cmVlJywNCiAgICAgIHRyZWVTZXJ2ZXJVcmk6ICdsYXJnZS1tb25pdG9yLXBsYXRmb3JtL2xtcC9idXNpbmVzc0Z1bmN0aW9ucy90cmVlJywNCiAgICAgIHRyZWVBamF4VHlwZTogJ2dldCcsDQogICAgICBpc1Nob3dRdWVyeUNvbmRpdGlvbnM6IHRydWUsDQogICAgICByYWRpb1Nob3c6IHRydWUsDQogICAgICBicmVha1J1bGVWaXNpYmxlOiBmYWxzZSwNCiAgICAgIC8vIOWktOmDqOW3peWFt+agjyBCc1RhYlBhbmVsIGNvbmZpZw0KICAgICAgdG9vbEJhclN0YXR1c0J0bkNvbmZpZzogew0KICAgICAgICBjaGFuZ2VCdG5zOiB0cnVlLA0KICAgICAgICBidXR0b25zOiBwcm9jb25mLnRvb2xCYXJTdGF0dXNCdXR0b25zLA0KICAgICAgICBjdXJCdXR0b246IHsNCiAgICAgICAgICB0eXBlOiAnYnV0dG9uJywNCiAgICAgICAgICBpY29uTmFtZTogJ2Jhc2UtYWxsLnBuZycsDQogICAgICAgICAgaWNvbk5hbWVBY3RpdmU6ICdiYXNlLWFsbC1hY3RpdmUucG5nJywNCiAgICAgICAgICBpY29uVXJsOiAnJywNCiAgICAgICAgICBsYWJlbDogJ+WFqOmDqCcsDQogICAgICAgICAgY29kZTogJzEnLA0KICAgICAgICAgIGN1clZhbHVlOiAnMScNCiAgICAgICAgfSwNCiAgICAgICAgYnV0dG9uc0luZm86IHByb2NvbmYuc3RhdHVzUmlnaHRUb29sQmFyQnV0dG9uLA0KICAgICAgICBtZXRob2RzOiB7DQogICAgICAgICAgYnNUb29sYmFyQ2xpY2tFdmVudDogdGhpcy5vblN0YXR1c1RhYkNsaWNrDQogICAgICAgIH0NCiAgICAgIH0sDQogICAgICBidXR0b25zSW5mbzogcHJvY29uZi5zdGF0dXNSaWdodFRvb2xCYXJCdXR0b25CeUJ1c0RlcHQsDQogICAgICB0YWJTdGF0dXNOdW1Db25maWc6IHsNCiAgICAgICAgMTogMA0KICAgICAgfSwNCiAgICAgIC8vIHRhYmxlIOebuOWFs+mFjee9rg0KICAgICAgdGFibGVMb2FkaW5nOiBmYWxzZSwNCiAgICAgIHRhYmxlQ29sdW1uc0NvbmZpZzogcHJvY29uZi5Qb2xpY2llc1RhYmxlQ29sdW1ucywNCiAgICAgIHRhYmxlRGF0YTogW10sDQogICAgICB0YWJsZVRvb2xiYXJDb25maWc6IHsNCiAgICAgICAgLy8gdGFibGXlt6XlhbfmoI/phY3nva4NCiAgICAgICAgZGlzYWJsZWRNb25leUNvbnZlcnNpb246IGZhbHNlLA0KICAgICAgICBtb25leUNvbnZlcnNpb246IGZhbHNlLCAvLyDmmK/lkKbmnInph5Hpop3ovazmjaINCiAgICAgICAgc2VhcmNoOiBmYWxzZSwgLy8g5piv5ZCm5pyJc2VhcmNoDQogICAgICAgIGltcG9ydDogZmFsc2UsIC8vIOWvvOWFpQ0KICAgICAgICBleHBvcnQ6IHRydWUsIC8vIOWvvOWHug0KICAgICAgICBwcmludDogZmFsc2UsIC8vIOaJk+WNsA0KICAgICAgICB6b29tOiB0cnVlLCAvLyDnvKnmlL4NCiAgICAgICAgY3VzdG9tOiB0cnVlLCAvLyDpgInphY3lsZXnpLrliJcNCiAgICAgICAgc2xvdHM6IHsNCiAgICAgICAgICB0b29sczogJ3Rvb2xiYXJUb29scycsDQogICAgICAgICAgYnV0dG9uczogJ3Rvb2xiYXJTbG90cycNCiAgICAgICAgfQ0KICAgICAgfSwNCiAgICAgIG1haW5QYWdlckNvbmZpZzogew0KICAgICAgICB0b3RhbDogMCwNCiAgICAgICAgY3VycmVudFBhZ2U6IDEsDQogICAgICAgIHBhZ2VTaXplOiAyMA0KICAgICAgfSwNCiAgICAgIHRhYmxlRm9vdGVyQ29uZmlnOiB7DQogICAgICAgIHNob3dGb290ZXI6IGZhbHNlDQogICAgICB9LA0KICAgICAgLy8g5pON5L2c5pel5b+XDQogICAgICBsb2dEYXRhOiBbXSwNCiAgICAgIHNob3dMb2dWaWV3OiBmYWxzZSwNCiAgICAgIC8vIOaWsOWinuW8ueeqlw0KICAgICAgZGlhbG9nVmlzaWJsZTogZmFsc2UsDQogICAgICBkaWFsb2dUaXRsZTogJ+aWsOWinicsDQogICAgICBhZGRUYWJsZURhdGE6IFtdLA0KICAgICAgbW9kaWZ5RGF0YToge30sDQogICAgICAvLyDor7fmsYIgJiDop5LoibLmnYPpmZDnm7jlhbPphY3nva4NCiAgICAgIG1lbnVOYW1lOiAnJywNCiAgICAgIHBhcmFtczU6ICcnLA0KICAgICAgbWVudUlkOiAnJywNCiAgICAgIHRva2VuaWQ6ICcnLA0KICAgICAgdXNlckluZm86IHt9LA0KICAgICAgcm9sZWd1aWQ6IHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZS5yb2xlZ3VpZCwNCiAgICAgIGFwcElkOiAncGF5X3ZvdWNoZXInLA0KICAgICAgaXNIYXZlWmVybzogJzAnLA0KICAgICAgYmlsbGd1aWQ6ICcnLA0KICAgICAgY29uZGl0aW9uOiB7fSwNCiAgICAgIHNlbGVjdERhdGE6ICcnDQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkge30sDQogIG1ldGhvZHM6IHsNCiAgICBhc2lkZUNoYW5nZSgpIHsNCiAgICAgIHRoaXMubGVmdFRyZWVWaXNpYmxlID0gZmFsc2UNCiAgICB9LA0KICAgIC8vIOW3puS+p+agkQ0KICAgIGNoYW5nZUlucHV0KHZhbCkgew0KICAgICAgdGhpcy50cmVlR2xvYmFsQ29uZmlnLmlucHV0VmFsID0gdmFsDQogICAgfSwNCiAgICB0cmVlU2V0Q29uZnJpbURhdGEoY3VyVHJlZSkgew0KICAgICAgdGhpcy50cmVlUXVlcnlwYXJhbXMuZWxlbWVudENvZGUgPSBjdXJUcmVlLmNvZGUNCiAgICAgIHRoaXMuJHJlZnMubGVmdFRyZWUucmVmcmVzaFRyZWUoKQ0KICAgIH0sDQogICAgLy8g5bGV5byA5oqY5Y+g5p+l6K+i5qGGDQogICAgb25RdWVyeUNvbmRpdGlvbnNDbGljayhpc09wZW4pIHsNCiAgICAgIHRoaXMuaXNTaG93UXVlcnlDb25kaXRpb25zID0gaXNPcGVuDQogICAgfSwNCiAgICAvLyDliJ3lp4vljJbpq5jnuqfmn6Xor6JkYXRhDQogICAgZ2V0U2VhcmNoRGF0YUxpc3QoKSB7DQogICAgICAvLyDkuIvmi4nmoJENCiAgICAgIGxldCBzZWFyY2hEYXRhT2JqID0ge30NCiAgICAgIHRoaXMucXVlcnlDb25maWcuZm9yRWFjaCgoaXRlbSkgPT4gew0KICAgICAgICBpZiAoDQogICAgICAgICAgaXRlbS5pdGVtUmVuZGVyLm5hbWUgPT09ICckZm9ybVRyZWVJbnB1dCcgfHwNCiAgICAgICAgICBpdGVtLml0ZW1SZW5kZXIubmFtZSA9PT0gJyR2eGVUcmVlJw0KICAgICAgICApIHsNCiAgICAgICAgICBpZiAoaXRlbS5maWVsZCkgew0KICAgICAgICAgICAgc2VhcmNoRGF0YU9ialtpdGVtLmZpZWxkICsgJ2NvZGUnXSA9ICcnDQogICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGlmIChpdGVtLmZpZWxkKSB7DQogICAgICAgICAgICBzZWFyY2hEYXRhT2JqW2l0ZW0uZmllbGRdID0gJycNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgIH0pDQogICAgICB0aGlzLnNlYXJjaERhdGFMaXN0ID0gc2VhcmNoRGF0YU9iag0KICAgIH0sDQogICAgLy8g5Yid5aeL5YyW6auY57qn5p+l6K+i5Y+C5pWwY29uZGl0aW9uDQogICAgZ2V0Q29uZGl0aW9uTGlzdCgpIHsNCiAgICAgIGxldCBjb25kaXRpb24gPSB7fQ0KICAgICAgdGhpcy5xdWVyeUNvbmZpZy5mb3JFYWNoKChpdGVtKSA9PiB7DQogICAgICAgIGlmICgNCiAgICAgICAgICBpdGVtLml0ZW1SZW5kZXIubmFtZSA9PT0gJyRmb3JtVHJlZUlucHV0JyB8fA0KICAgICAgICAgIGl0ZW0uaXRlbVJlbmRlci5uYW1lID09PSAnJHZ4ZVRyZWUnDQogICAgICAgICkgew0KICAgICAgICAgIGlmIChpdGVtLmZpZWxkKSB7DQogICAgICAgICAgICBpZiAoaXRlbS5maWVsZCA9PT0gJ2Nvcl9iZ3RfZG9jX25vXycpIHsNCiAgICAgICAgICAgICAgY29uZGl0aW9uW2l0ZW0uZmllbGQgKyAnbmFtZSddID0gW10NCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgIGNvbmRpdGlvbltpdGVtLmZpZWxkICsgJ2NvZGUnXSA9IFtdDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIGlmIChpdGVtLmZpZWxkKSB7DQogICAgICAgICAgICBjb25kaXRpb25baXRlbS5maWVsZF0gPSBbXQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICAgIHJldHVybiBjb25kaXRpb24NCiAgICB9LA0KICAgIC8vIOWIh+aNoueKtuaAgeagjw0KICAgIG9uU3RhdHVzVGFiQ2xpY2sob2JqKSB7DQogICAgICBpZiAoIW9iai50eXBlKSB7DQogICAgICAgIHRoaXMub3BlcmF0aW9uVG9vbGJhckJ1dHRvbkNsaWNrRXZlbnQob2JqKQ0KICAgICAgICByZXR1cm4NCiAgICAgIH0NCiAgICAgIHRoaXMudG9vbEJhclN0YXR1c1NlbGVjdCA9IG9iag0KICAgICAgc3dpdGNoIChvYmouY3VyVmFsdWUpIHsNCiAgICAgICAgLy8g5YWo6YOoDQogICAgICAgIGNhc2UgJzEnOg0KICAgICAgICAgIHRoaXMubWVudU5hbWUgPSAn6L+d6KeE57G75Z6LJw0KICAgICAgICAgIHRoaXMucmFkaW9TaG93ID0gdHJ1ZQ0KICAgICAgICAgIGJyZWFrDQogICAgICB9DQogICAgICB0aGlzLmNvbmRpdGlvbiA9IHt9DQogICAgICB0aGlzLm1haW5QYWdlckNvbmZpZy5jdXJyZW50UGFnZSA9IDENCiAgICAgIHRoaXMucmVmcmVzaCgpDQogICAgICB0aGlzLiRyZWZzLm1haW5UYWJsZVJlZi4kcmVmcy54R3JpZC5jbGVhclNjcm9sbCgpDQogICAgfSwNCiAgICAvLyDmkJzntKINCiAgICBzZWFyY2godmFsKSB7DQogICAgICB0aGlzLnNlYXJjaERhdGFMaXN0ID0gdmFsDQogICAgICBsZXQgY29uZGl0aW9uID0gdGhpcy5nZXRDb25kaXRpb25MaXN0KCkNCiAgICAgIGZvciAobGV0IGtleSBpbiBjb25kaXRpb24pIHsNCiAgICAgICAgaWYgKA0KICAgICAgICAgICh0aGlzLnNlYXJjaERhdGFMaXN0W2tleV0gIT09IHVuZGVmaW5lZCkgJg0KICAgICAgICAgICh0aGlzLnNlYXJjaERhdGFMaXN0W2tleV0gIT09IG51bGwpDQogICAgICAgICkgew0KICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuc2VhcmNoRGF0YUxpc3Rba2V5XSkpIHsNCiAgICAgICAgICAgIGNvbmRpdGlvbltrZXldID0gdGhpcy5zZWFyY2hEYXRhTGlzdFtrZXldDQogICAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgdGhpcy5zZWFyY2hEYXRhTGlzdFtrZXldID09PSAnc3RyaW5nJykgew0KICAgICAgICAgICAgaWYgKHRoaXMuc2VhcmNoRGF0YUxpc3Rba2V5XS50cmltKCkgIT09ICcnKSB7DQogICAgICAgICAgICAgIHRoaXMuc2VhcmNoRGF0YUxpc3Rba2V5XS5zcGxpdCgnLCcpLmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgICAgICAgICBjb25kaXRpb25ba2V5XS5wdXNoKGl0ZW0pDQogICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgICBpZiAoDQogICAgICAgIHRoaXMuc2VhcmNoRGF0YUxpc3QuZGF0YVNvdXJjZU5hbWUgJiYNCiAgICAgICAgdGhpcy5zZWFyY2hEYXRhTGlzdC5kYXRhU291cmNlTmFtZS50cmltKCkgIT09ICcnDQogICAgICApIHsNCiAgICAgICAgY29uZGl0aW9uLmRhdGFTb3VyY2VOYW1lID0gdGhpcy5zZWFyY2hEYXRhTGlzdC5kYXRhU291cmNlTmFtZQ0KICAgICAgfQ0KICAgICAgaWYgKA0KICAgICAgICB0aGlzLnNlYXJjaERhdGFMaXN0LmJ1c2luZXNzTW9kdWxlQ29kZSAmJg0KICAgICAgICB0aGlzLnNlYXJjaERhdGFMaXN0LmJ1c2luZXNzTW9kdWxlQ29kZS50cmltKCkgIT09ICcnDQogICAgICApIHsNCiAgICAgICAgY29uZGl0aW9uLmJ1c2luZXNzTW9kdWxlQ29kZSA9IHRoaXMuc2VhcmNoRGF0YUxpc3QuYnVzaW5lc3NNb2R1bGVDb2RlDQogICAgICB9DQogICAgICB0aGlzLmNvbmRpdGlvbiA9IGNvbmRpdGlvbg0KICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQ0KICAgIH0sDQogICAgLy8g5YiH5o2i5pON5L2c5oyJ6ZKuDQogICAgb3BlcmF0aW9uVG9vbGJhckJ1dHRvbkNsaWNrRXZlbnQob2JqLCBjb250ZXh0LCBlKSB7DQogICAgICBzd2l0Y2ggKG9iai5jb2RlKSB7DQogICAgICAgIC8vIOaWsOWing0KICAgICAgICBjYXNlICdhZGQnOg0KICAgICAgICAgIHRoaXMub25BZGRUb29sYmFyQ2xpY2tBZGQob2JqLCBjb250ZXh0LCBlKQ0KICAgICAgICAgIGJyZWFrDQogICAgICAgIC8vIOS/ruaUuQ0KICAgICAgICBjYXNlICdjaGFuZ2UnOg0KICAgICAgICAgIHRoaXMuY2hhbmdlUG9saWNlcygpDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgLy8g5Yig6ZmkDQogICAgICAgIGNhc2UgJ2RlbCc6DQogICAgICAgICAgdGhpcy5kZWxQb2xpY2llcyhvYmosIGNvbnRleHQsIGUpDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgLy8g5Yi35pawDQogICAgICAgIGNhc2UgJ2FkZC10b29sYmFyLXJlZnJlc2gnOg0KICAgICAgICAgIHRoaXMucmVmcmVzaCgpDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgLy8g5Yi35pawDQogICAgICAgIGNhc2UgJ29wZXJhdGlvbi10b29sYmFyLXJlZnJlc2gnOg0KICAgICAgICAgIHRoaXMucmVmcmVzaCgpDQogICAgICAgICAgYnJlYWsNCiAgICAgICAgZGVmYXVsdDoNCiAgICAgICAgICBicmVhaw0KICAgICAgfQ0KICAgIH0sDQogICAgLy8g5Yig6ZmkDQogICAgZGVsUG9saWNpZXMoKSB7DQogICAgICBsZXQgc2VsZWN0aW9uID0gdGhpcy4kcmVmcy5tYWluVGFibGVSZWYuZ2V0U2VsZWN0aW9uRGF0YSgpDQogICAgICBpZiAoc2VsZWN0aW9uLmxlbmd0aCA9PT0gMCkgew0KICAgICAgICB0aGlzLiRtZXNzYWdlLndhcm5pbmcoJ+ivt+mAieaLqeaVsOaNricpDQogICAgICAgIHJldHVybg0KICAgICAgfQ0KICAgICAgbGV0IGlkcyA9IFtdDQogICAgICBjb25zb2xlLmxvZyhzZWxlY3Rpb24pDQogICAgICBzZWxlY3Rpb24uZm9yRWFjaCgoaXRlbSkgPT4gew0KICAgICAgICBpZHMucHVzaChpdGVtLmd1aWQpDQogICAgICB9KQ0KICAgICAgdGhpcy4kY29uZmlybSgn5piv5ZCm56Gu5a6a5Yig6ZmkLOWmguWtmOWcqOWPtuWtkOiKgueCueWwhuS4gOW5tuWIoOmZpCA/JywgJ+aPkOekuicsIHsNCiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLA0KICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywNCiAgICAgICAgdHlwZTogJ3dhcm5pbmcnDQogICAgICB9KQ0KICAgICAgICAudGhlbigoKSA9PiB7DQogICAgICAgICAgdGhpcy50YWJsZUxvYWRpbmcgPSB0cnVlDQogICAgICAgICAgSHR0cE1vZHVsZS5kZWxQb2xpY2llcyhpZHMpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICAgICAgdGhpcy50YWJsZUxvYWRpbmcgPSBmYWxzZQ0KICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAnMDAwMDAwJykgew0KICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+WIoOmZpOaIkOWKnycpDQogICAgICAgICAgICAgIHRoaXMuY29uZGl0aW9uLmFnZW5jeV9jb2RlID0gLTENCiAgICAgICAgICAgICAgdGhpcy5xdWVyeVRhYmxlRGF0YXMoKQ0KICAgICAgICAgICAgICB0aGlzLmdldExlZnRUcmVlRGF0YSgpDQogICAgICAgICAgICAgIHRoaXMucXVlcnlBY291bnQoKQ0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubWVzc2FnZSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9KQ0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goKCkgPT4gew0KICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uoew0KICAgICAgICAgICAgdHlwZTogJ2luZm8nLA0KICAgICAgICAgICAgbWVzc2FnZTogJ+W3suWPlua2iCcNCiAgICAgICAgICB9KQ0KICAgICAgICB9KQ0KICAgIH0sDQogICAgLy8g5L+u5pS5DQogICAgY2hhbmdlUG9saWNlcygpIHsNCiAgICAgIGxldCBzZWxlY3Rpb24gPSB0aGlzLiRyZWZzLm1haW5UYWJsZVJlZi5nZXRTZWxlY3Rpb25EYXRhKCkNCiAgICAgIGlmIChzZWxlY3Rpb24ubGVuZ3RoICE9PSAxKSB7DQogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZygn6K+36YCJ5oup5LiA5p2h5pWw5o2uJykNCiAgICAgICAgcmV0dXJuDQogICAgICB9DQogICAgICB0aGlzLnNlbGVjdERhdGEgPSBzZWxlY3Rpb25bMF0NCiAgICAgIHRoaXMuZGlhbG9nVmlzaWJsZSA9IHRydWUNCiAgICAgIHRoaXMuZGlhbG9nVGl0bGUgPSAn5L+u5pS5Jw0KICAgIH0sDQogICAgLy8g5paw5aKeDQogICAgb25BZGRUb29sYmFyQ2xpY2tBZGQoKSB7DQogICAgICB0aGlzLmRpYWxvZ1Zpc2libGUgPSB0cnVlDQogICAgICB0aGlzLmRpYWxvZ1RpdGxlID0gJ+aWsOWinicNCiAgICB9LA0KICAgIGNoYW5nZVZpc2libGUodmFsKSB7DQogICAgICB0aGlzLmJyZWFrUnVsZVZpc2libGUgPSB2YWwNCiAgICB9LA0KICAgIG9uVG9vbGJhckJ0bkNsaWNrKHsgY29udGV4dCwgdGFibGUsIGNvZGUgfSkgew0KICAgICAgc3dpdGNoIChjb2RlKSB7DQogICAgICAgIC8vIOWIt+aWsA0KICAgICAgICBjYXNlICdyZWZyZXNoJzoNCiAgICAgICAgICB0aGlzLnJlZnJlc2goKQ0KICAgICAgICAgIGJyZWFrDQogICAgICB9DQogICAgfSwNCiAgICBvbkNsaWNrbWV0aG9kKG5vZGUpIHsNCiAgICAgIGlmIChub2RlLmlkICE9PSAnMCcpIHsNCiAgICAgICAgbGV0IGtleSA9DQogICAgICAgICAgdGhpcy4kcmVmcy50cmVlU2V0LnRyZWVDb25maWdJbi5jdXJSYWRpby50b0xvd2VyQ2FzZSgpICsgJ19jb2RlJw0KICAgICAgICB0aGlzLmNvbmRpdGlvbltrZXldID0gbm9kZS5pZA0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5jb25kaXRpb24gPSB7fQ0KICAgICAgfQ0KDQogICAgICB0aGlzLnF1ZXJ5VGFibGVEYXRhcyhub2RlLmd1aWQpDQogICAgfSwNCiAgICAvLyDooajmoLzljZXlhYPooYzljZXlh7sNCiAgICBjZWxsQ2xpY2sob2JqLCBjb250ZXh0LCBlKSB7DQogICAgICBsZXQga2V5ID0gb2JqLmNvbHVtbi5wcm9wZXJ0eQ0KICAgICAgc3dpdGNoIChrZXkpIHsNCiAgICAgIH0NCiAgICB9LA0KICAgIC8vIOWIt+aWsOaMiemSriDliLfmlrDmn6Xor6LmoI/vvIzmj5DnpLrliLfmlrAgdGFibGUg5pWw5o2uDQogICAgcmVmcmVzaCgpIHsNCiAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzKCkNCiAgICAgIC8vIHRoaXMucXVlcnlUYWJsZURhdGFzQ291bnQoKQ0KICAgIH0sDQogICAgYWpheFRhYmxlRGF0YSh7IHBhcmFtcywgY3VycmVudFBhZ2UsIHBhZ2VTaXplIH0pIHsNCiAgICAgIHRoaXMubWFpblBhZ2VyQ29uZmlnLmN1cnJlbnRQYWdlID0gY3VycmVudFBhZ2UNCiAgICAgIHRoaXMubWFpblBhZ2VyQ29uZmlnLnBhZ2VTaXplID0gcGFnZVNpemUNCiAgICAgIHRoaXMucXVlcnlUYWJsZURhdGFzKCkNCiAgICB9LA0KICAgIC8vIOafpeivoiB0YWJsZSDmlbDmja4NCiAgICBxdWVyeVRhYmxlRGF0YXMoZ3VpZCkgew0KICAgICAgY29uc3QgcGFyYW0gPSB7DQogICAgICAgIHBhZ2U6IHRoaXMubWFpblBhZ2VyQ29uZmlnLmN1cnJlbnRQYWdlLCAvLyDpobXnoIENCiAgICAgICAgcGFnZVNpemU6IHRoaXMubWFpblBhZ2VyQ29uZmlnLnBhZ2VTaXplLCAvLyDmr4/pobXmnaHmlbANCiAgICAgICAgcGFyZW50SWQ6IGd1aWQgPz8gJycsDQogICAgICAgIGVuYWJsZTogJycgLy8g5ZCv55So5Lyg56m677yM6YO95p+l6K+iDQogICAgICB9DQogICAgICB0aGlzLnRhYmxlTG9hZGluZyA9IHRydWUNCiAgICAgIEh0dHBNb2R1bGUucXVlcnlUYWJsZURhdGFzKHBhcmFtKS50aGVuKChyZXMpID0+IHsNCiAgICAgICAgdGhpcy50YWJsZUxvYWRpbmcgPSBmYWxzZQ0KICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcwMDAwMDAnKSB7DQogICAgICAgICAgdGhpcy50YWJsZURhdGEgPSByZXMuZGF0YS5yZXN1bHRzDQogICAgICAgICAgdGhpcy5tYWluUGFnZXJDb25maWcudG90YWwgPSByZXMuZGF0YS50b3RhbENvdW50DQogICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcihyZXMubWVzc2FnZSkNCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICB9LA0KICAgIHF1ZXJ5QWNvdW50KCkgew0KICAgICAgSHR0cE1vZHVsZS5nZXRDb3VudCgpLnRoZW4oKHJlcykgPT4gew0KICAgICAgICB0aGlzLnRhYmxlTG9hZGluZyA9IGZhbHNlDQogICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAwMDAwMCcpIHsNCiAgICAgICAgICB0aGlzLnRhYlN0YXR1c051bUNvbmZpZ1snMSddID0gcmVzLmRhdGENCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKHJlcy5tZXNzYWdlKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0sDQogICAgZ2V0Q2hpbGRyZW5EYXRhKGRhdGFzKSB7DQogICAgICBsZXQgdGhhdCA9IHRoaXMNCiAgICAgIGRhdGFzLmZvckVhY2goKGl0ZW0pID0+IHsNCiAgICAgICAgaXRlbS5sYWJlbCA9IGl0ZW0uY29kZSArICctJyArIGl0ZW0ubmFtZQ0KICAgICAgICBpZiAoaXRlbS5jaGlsZHJlbikgew0KICAgICAgICAgIHRoYXQuZ2V0Q2hpbGRyZW5EYXRhKGl0ZW0uY2hpbGRyZW4pDQogICAgICAgIH0NCiAgICAgIH0pDQoNCiAgICAgIHJldHVybiBkYXRhcw0KICAgIH0sDQogICAgZ2V0TGVmdFRyZWVEYXRhKCkgew0KICAgICAgbGV0IHRoYXQgPSB0aGlzDQogICAgICBIdHRwTW9kdWxlLmdldFRyZWVEYXRhKCkudGhlbigocmVzKSA9PiB7DQogICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzAwMDAwMCcpIHsNCiAgICAgICAgICBsZXQgdHJlZVJlc2RhdGEgPSB0aGF0LmdldENoaWxkcmVuRGF0YShyZXMuZGF0YSkNCiAgICAgICAgICAvLyB0aGF0LnRyZWVEYXRhID0gdHJlZVJlc2RhdGENCiAgICAgICAgICB0aGF0LnRyZWVEYXRhWzBdLmNoaWxkcmVuID0gdHJlZVJlc2RhdGENCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCflt6bkvqfmoJHliqDovb3lpLHotKUnKQ0KICAgICAgICB9DQogICAgICB9KQ0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLm1lbnVJZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZS5ndWlkDQogICAgdGhpcy5yb2xlZ3VpZCA9IHRoaXMuJHN0b3JlLnN0YXRlLmN1ck5hdk1vZHVsZS5yb2xlZ3VpZA0KICAgIHRoaXMudG9rZW5pZCA9IHRoaXMuJHN0b3JlLmdldHRlcnMuZ2V0TG9naW5BdXRoZW50aWNhdGlvbi50b2tlbmlkDQogICAgdGhpcy51c2VySW5mbyA9IHRoaXMuJHN0b3JlLnN0YXRlLnVzZXJJbmZvDQogICAgdGhpcy5nZXRMZWZ0VHJlZURhdGEoKQ0KICAgIHRoaXMucXVlcnlBY291bnQoKQ0KICB9DQp9DQo="},{"version":3,"sources":["violationTypeManagement.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"violationTypeManagement.vue","sourceRoot":"src/views/main/violationTypeManagement","sourcesContent":["<!-- 违规类型管理 -->\r\n<template>\r\n  <div v-loading=\"tableLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          :is-open=\"isShowQueryConditions\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <!-- <template v-slot:query>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          />\r\n        </div>\r\n      </template> -->\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n          @onConfrimData=\"treeSetConfrimData\"\r\n        />\r\n        <BsBossTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :defaultexpandedkeys=\"['0']\"\r\n          style=\"overflow: hidden\"\r\n          :is-server=\"false\"\r\n          :ajax-type=\"treeAjaxType\"\r\n          :server-uri=\"treeServerUri\"\r\n          :datas=\"treeData\"\r\n          :queryparams=\"treeQueryparams\"\r\n          :global-config=\"treeGlobalConfig\"\r\n          :clickmethod=\"onClickmethod\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div\r\n                v-if=\"leftTreeVisible === false\"\r\n                class=\"table-toolbar-contro-leftvisible\"\r\n                @click=\"leftTreeVisible = true\"\r\n              ></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">{{ menuName }}</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <AddDialog\r\n      v-if=\"dialogVisible\"\r\n      :title=\"dialogTitle\"\r\n      :select-data=\"selectData\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf } from '../violationTypeManagement/violationTypeManagement'\r\nimport AddDialog from './children/addDialog'\r\nimport HttpModule from '@/api/frame/main/baseConfigManage/violationTypeManagement.js'\r\nexport default {\r\n  components: {\r\n    AddDialog\r\n  },\r\n  watch: {\r\n    queryConfig() {\r\n      this.getSearchDataList()\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      leftTreeVisible: true,\r\n      treeData: [{\r\n        children: [],\r\n        code: 0,\r\n        id: 0,\r\n        label: '0-全部分类',\r\n        name: '全部分类',\r\n        parentId: null,\r\n        parentRuleName: null,\r\n        ruleLevel: 0,\r\n        ruleName: '全部分类'\r\n      }],\r\n      treeTypeConfig: {\r\n        curRadio: 'AGENCY'\r\n      },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      },\r\n      treeQueryparams: {},\r\n      // treeServerUri: 'pay-clear-service/v2/lefttree',\r\n      treeServerUri: 'large-monitor-platform/lmp/businessFunctions/tree',\r\n      treeAjaxType: 'get',\r\n      isShowQueryConditions: true,\r\n      radioShow: true,\r\n      breakRuleVisible: false,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        changeBtns: true,\r\n        buttons: proconf.toolBarStatusButtons,\r\n        curButton: {\r\n          type: 'button',\r\n          iconName: 'base-all.png',\r\n          iconNameActive: 'base-all-active.png',\r\n          iconUrl: '',\r\n          label: '全部',\r\n          code: '1',\r\n          curValue: '1'\r\n        },\r\n        buttonsInfo: proconf.statusRightToolBarButton,\r\n        methods: {\r\n          bsToolbarClickEvent: this.onStatusTabClick\r\n        }\r\n      },\r\n      buttonsInfo: proconf.statusRightToolBarButtonByBusDept,\r\n      tabStatusNumConfig: {\r\n        1: 0\r\n      },\r\n      // table 相关配置\r\n      tableLoading: false,\r\n      tableColumnsConfig: proconf.PoliciesTableColumns,\r\n      tableData: [],\r\n      tableToolbarConfig: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: false,\r\n        moneyConversion: false, // 是否有金额转换\r\n        search: false, // 是否有search\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 20\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 新增弹窗\r\n      dialogVisible: false,\r\n      dialogTitle: '新增',\r\n      addTableData: [],\r\n      modifyData: {},\r\n      // 请求 & 角色权限相关配置\r\n      menuName: '',\r\n      params5: '',\r\n      menuId: '',\r\n      tokenid: '',\r\n      userInfo: {},\r\n      roleguid: this.$store.state.curNavModule.roleguid,\r\n      appId: 'pay_voucher',\r\n      isHaveZero: '0',\r\n      billguid: '',\r\n      condition: {},\r\n      selectData: ''\r\n    }\r\n  },\r\n  mounted() {},\r\n  methods: {\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.treeGlobalConfig.inputVal = val\r\n    },\r\n    treeSetConfrimData(curTree) {\r\n      this.treeQueryparams.elementCode = curTree.code\r\n      this.$refs.leftTree.refreshTree()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 初始化高级查询data\r\n    getSearchDataList() {\r\n      // 下拉树\r\n      let searchDataObj = {}\r\n      this.queryConfig.forEach((item) => {\r\n        if (\r\n          item.itemRender.name === '$formTreeInput' ||\r\n          item.itemRender.name === '$vxeTree'\r\n        ) {\r\n          if (item.field) {\r\n            searchDataObj[item.field + 'code'] = ''\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            searchDataObj[item.field] = ''\r\n          }\r\n        }\r\n      })\r\n      this.searchDataList = searchDataObj\r\n    },\r\n    // 初始化高级查询参数condition\r\n    getConditionList() {\r\n      let condition = {}\r\n      this.queryConfig.forEach((item) => {\r\n        if (\r\n          item.itemRender.name === '$formTreeInput' ||\r\n          item.itemRender.name === '$vxeTree'\r\n        ) {\r\n          if (item.field) {\r\n            if (item.field === 'cor_bgt_doc_no_') {\r\n              condition[item.field + 'name'] = []\r\n            } else {\r\n              condition[item.field + 'code'] = []\r\n            }\r\n          }\r\n        } else {\r\n          if (item.field) {\r\n            condition[item.field] = []\r\n          }\r\n        }\r\n      })\r\n      return condition\r\n    },\r\n    // 切换状态栏\r\n    onStatusTabClick(obj) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.curValue) {\r\n        // 全部\r\n        case '1':\r\n          this.menuName = '违规类型'\r\n          this.radioShow = true\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.refresh()\r\n      this.$refs.mainTableRef.$refs.xGrid.clearScroll()\r\n    },\r\n    // 搜索\r\n    search(val) {\r\n      this.searchDataList = val\r\n      let condition = this.getConditionList()\r\n      for (let key in condition) {\r\n        if (\r\n          (this.searchDataList[key] !== undefined) &\r\n          (this.searchDataList[key] !== null)\r\n        ) {\r\n          if (Array.isArray(this.searchDataList[key])) {\r\n            condition[key] = this.searchDataList[key]\r\n          } else if (typeof this.searchDataList[key] === 'string') {\r\n            if (this.searchDataList[key].trim() !== '') {\r\n              this.searchDataList[key].split(',').forEach((item) => {\r\n                condition[key].push(item)\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        this.searchDataList.dataSourceName &&\r\n        this.searchDataList.dataSourceName.trim() !== ''\r\n      ) {\r\n        condition.dataSourceName = this.searchDataList.dataSourceName\r\n      }\r\n      if (\r\n        this.searchDataList.businessModuleCode &&\r\n        this.searchDataList.businessModuleCode.trim() !== ''\r\n      ) {\r\n        condition.businessModuleCode = this.searchDataList.businessModuleCode\r\n      }\r\n      this.condition = condition\r\n      this.queryTableDatas()\r\n    },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      switch (obj.code) {\r\n        // 新增\r\n        case 'add':\r\n          this.onAddToolbarClickAdd(obj, context, e)\r\n          break\r\n        // 修改\r\n        case 'change':\r\n          this.changePolices()\r\n          break\r\n        // 删除\r\n        case 'del':\r\n          this.delPolicies(obj, context, e)\r\n          break\r\n        // 刷新\r\n        case 'add-toolbar-refresh':\r\n          this.refresh()\r\n          break\r\n        // 刷新\r\n        case 'operation-toolbar-refresh':\r\n          this.refresh()\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    // 删除\r\n    delPolicies() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length === 0) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      let ids = []\r\n      console.log(selection)\r\n      selection.forEach((item) => {\r\n        ids.push(item.guid)\r\n      })\r\n      this.$confirm('是否确定删除,如存在叶子节点将一并删除 ?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      })\r\n        .then(() => {\r\n          this.tableLoading = true\r\n          HttpModule.delPolicies(ids).then((res) => {\r\n            this.tableLoading = false\r\n            if (res.code === '000000') {\r\n              this.$message.success('删除成功')\r\n              this.condition.agency_code = -1\r\n              this.queryTableDatas()\r\n              this.getLeftTreeData()\r\n              this.queryAcount()\r\n            } else {\r\n              this.$message.error(res.message)\r\n            }\r\n          })\r\n        })\r\n        .catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: '已取消'\r\n          })\r\n        })\r\n    },\r\n    // 修改\r\n    changePolices() {\r\n      let selection = this.$refs.mainTableRef.getSelectionData()\r\n      if (selection.length !== 1) {\r\n        this.$message.warning('请选择一条数据')\r\n        return\r\n      }\r\n      this.selectData = selection[0]\r\n      this.dialogVisible = true\r\n      this.dialogTitle = '修改'\r\n    },\r\n    // 新增\r\n    onAddToolbarClickAdd() {\r\n      this.dialogVisible = true\r\n      this.dialogTitle = '新增'\r\n    },\r\n    changeVisible(val) {\r\n      this.breakRuleVisible = val\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    onClickmethod(node) {\r\n      if (node.id !== '0') {\r\n        let key =\r\n          this.$refs.treeSet.treeConfigIn.curRadio.toLowerCase() + '_code'\r\n        this.condition[key] = node.id\r\n      } else {\r\n        this.condition = {}\r\n      }\r\n\r\n      this.queryTableDatas(node.guid)\r\n    },\r\n    // 表格单元行单击\r\n    cellClick(obj, context, e) {\r\n      let key = obj.column.property\r\n      switch (key) {\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh() {\r\n      this.queryTableDatas()\r\n      // this.queryTableDatasCount()\r\n    },\r\n    ajaxTableData({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig.currentPage = currentPage\r\n      this.mainPagerConfig.pageSize = pageSize\r\n      this.queryTableDatas()\r\n    },\r\n    // 查询 table 数据\r\n    queryTableDatas(guid) {\r\n      const param = {\r\n        page: this.mainPagerConfig.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig.pageSize, // 每页条数\r\n        parentId: guid ?? '',\r\n        enable: '' // 启用传空，都查询\r\n      }\r\n      this.tableLoading = true\r\n      HttpModule.queryTableDatas(param).then((res) => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.tableData = res.data.results\r\n          this.mainPagerConfig.total = res.data.totalCount\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    queryAcount() {\r\n      HttpModule.getCount().then((res) => {\r\n        this.tableLoading = false\r\n        if (res.code === '000000') {\r\n          this.tabStatusNumConfig['1'] = res.data\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    getChildrenData(datas) {\r\n      let that = this\r\n      datas.forEach((item) => {\r\n        item.label = item.code + '-' + item.name\r\n        if (item.children) {\r\n          that.getChildrenData(item.children)\r\n        }\r\n      })\r\n\r\n      return datas\r\n    },\r\n    getLeftTreeData() {\r\n      let that = this\r\n      HttpModule.getTreeData().then((res) => {\r\n        if (res.code === '000000') {\r\n          let treeResdata = that.getChildrenData(res.data)\r\n          // that.treeData = treeResdata\r\n          that.treeData[0].children = treeResdata\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.tokenid = this.$store.getters.getLoginAuthentication.tokenid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.getLeftTreeData()\r\n    this.queryAcount()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.radio-right {\r\n  float: right;\r\n}\r\n.Titans-table ::v-deep .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n</style>\r\n"]}]}