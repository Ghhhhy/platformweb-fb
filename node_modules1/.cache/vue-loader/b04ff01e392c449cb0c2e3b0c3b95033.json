{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\ManageMofDepProRelation\\ManageMofDepProRelation.vue?vue&type=style&index=0&id=5eee0226&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\views\\main\\fundMonitoring\\ManageMofDepProRelation\\ManageMofDepProRelation.vue","mtime":1694576524451},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50cmVlew0KICBmbG9hdDpsZWZ0Ow0KICBoZWlnaHQ6MTAwJTsNCiAgd2lkdGg6NTAlDQp9DQo="},{"version":3,"sources":["ManageMofDepProRelation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA;AACA;AACA","file":"ManageMofDepProRelation.vue","sourceRoot":"src/views/main/fundMonitoring/ManageMofDepProRelation","sourcesContent":["<!--用户印章授权 gyl-->\r\n<template>\r\n  <div style=\"height:100%\">\r\n    <!-- <TreeScollLoad /> -->\r\n    <BsMainFormListLayout>\r\n      <template v-slot:topTap> topTap </template>\r\n      <template v-slot:topTabPane></template>\r\n      <template v-slot:query></template>\r\n      <template v-slot:mainTree>\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <div style=\"height:100%\">\r\n          <div class=\"tree\">\r\n            <div class=\"title\">\r\n              <span style=\"font-size: 14px;font-weight: bold;margin-top: 7px;\">处室列表</span>\r\n            </div>\r\n            <!--            <TreeScollLoad />-->\r\n            <BsBossTree\r\n              ref=\"userTree\"\r\n              v-loading=\"showLoadingLeft\"\r\n              :visible=\"true\"\r\n              :datas=\"userTreeData\"\r\n              empty-text=\"暂无数据\"\r\n              :is-need-root=\"false\"\r\n              :is-show-input=\"true\"\r\n              :clickmethod=\"treeNodeClick\"\r\n              :open-loading=\"true\"\r\n              :defaultexpandedkeys=\"['0']\"\r\n            />\r\n          </div>\r\n          <div class=\"tree\">\r\n            <div class=\"title\">\r\n              <span style=\"font-size: 14px;font-weight: bold;margin-top: 7px;\">资金列表</span>\r\n            </div>\r\n            <BsBossTree\r\n              ref=\"stampTree\"\r\n              v-loading=\"showLoadingRight\"\r\n              :visible=\"true\"\r\n              :datas=\"stampTreeData\"\r\n              empty-text=\"暂无数据\"\r\n              :is-need-root=\"false\"\r\n              :is-checkbox=\"true\"\r\n              :defaultexpandedkeys=\"['0']\"\r\n              :is-show-input=\"true\"\r\n              :open-loading=\"true\"\r\n              :accordion=\"accordion\"\r\n              treeid=\"code\"\r\n              :nodecheckmethod=\"nodecheckmethod\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HttpModule from '@/api/frame/main/fundMonitoring/ManageMofDepProRelation.js'\r\nexport default {\r\n  name: 'UserProRelation',\r\n  data() {\r\n    return {\r\n      showLoadingLeft: false,\r\n      showLoadingRight: false,\r\n      userTreeData: [],\r\n      stampTreeData: [],\r\n      proArray: [],\r\n      userSelect: {}\r\n    }\r\n  },\r\n  methods: {\r\n    aaa(obj, checksObj) {\r\n      console.log(obj, checksObj)\r\n    },\r\n    init() {\r\n    },\r\n    onUserTreeLoadFinish(data) {\r\n      // this.userTreeData = data\r\n      HttpModule.queryTableDatas().then(res => {\r\n        this.stampTreeData = res.data\r\n        // this.$nextTick(() => {\r\n        //   // 重新赋值\r\n        //   this.userTreeData = []\r\n        //   this.userTreeData = this.stampTreeData\r\n        // })\r\n        this.showLoadingRight = false\r\n      }).catch(() => {\r\n        this.showLoadingRight = false\r\n      })\r\n    },\r\n    treeNodeClick(obj) {\r\n      this.userSelect = obj\r\n      const param = {\r\n        mofDepId: obj.id\r\n      }\r\n      HttpModule.queryByMofDepId(param).then(res => {\r\n        let array = []\r\n        if (res.code === '000000') {\r\n          res.data && (array = this.flatData(res.data))\r\n          // res.data.forEach(item => {\r\n          //   array.push(item.code)\r\n          // })\r\n          this.proArray = array\r\n          // console.log('array', array)\r\n          // console.log('array', this.$refs.stampTree)\r\n          this.$refs.stampTree.setCheckedKeys(array)\r\n          // if (array.length > 0) {\r\n          //   this.$nextTick(() => {\r\n          //     this.$refs.stampTree.treeOptionFn().setCheckedKeys(array)\r\n          //   })\r\n          // }\r\n          console.log('array1', this.$refs.stampTree)\r\n        } else {\r\n          this.$message.error(res.message)\r\n        }\r\n      })\r\n    },\r\n    // 只有子级code才需要传入到setTree里面的列表里面\r\n    flatData(axiosTreeItemList) {\r\n      if (!Array.isArray(axiosTreeItemList)) return\r\n      let codeMap = {}\r\n      function cursionCodeNeddPush(axiosListItem, treeNode) {\r\n        for (let i = 0; i < treeNode.length; i++) {\r\n          const treeItem = treeNode[i]\r\n          if (treeItem.children && treeItem.children.length) {\r\n            cursionCodeNeddPush(axiosListItem, treeItem.children)\r\n          } else {\r\n            if (axiosListItem.code === treeItem.code) {\r\n              codeMap[axiosListItem.code] = axiosListItem.code\r\n              return\r\n            }\r\n          }\r\n        }\r\n      }\r\n      axiosTreeItemList.forEach(item => {\r\n        cursionCodeNeddPush(item, this.stampTreeData)\r\n      })\r\n      return Object.keys(codeMap)\r\n    },\r\n    nodecheckmethod(obj, state) {\r\n      // if (obj.regulationCode === '0' || obj.regulationCode === '01' || obj.regulationCode === '02') {\r\n      //   this.$message.warning('根节点不能被选中！')\r\n      //   this.$refs.stampTree.setCheckedKeys(this.proArray)\r\n      //   return\r\n      // }\r\n      if (this.userSelect.id) {\r\n        let isChecked = state.checkedKeys.includes(obj.code)\r\n        var param = {\r\n          mofDepId: this.userSelect.id,\r\n          manageMofDepProRelation: state.checkedNodes\r\n            .map(item => {\r\n              return { proCode: item.code, proName: item.name }\r\n            })\r\n        }\r\n        HttpModule.update(param).then(res => {\r\n          if (res.code === '000000') {\r\n            this.$message.success(isChecked ? '授权成功' : '取消授权成功')\r\n          } else {\r\n            this.treeNodeClick(this.userSelect)\r\n            this.$message.error(res.result)\r\n          }\r\n        })\r\n      } else {\r\n        this.$message.warning('请选择处室！')\r\n      }\r\n    },\r\n    // 获取处室树\r\n    getDep() {\r\n      const param = {\r\n        data: this.$store.state.userInfo.year\r\n      }\r\n      HttpModule.getTreewhere(param).then(res => {\r\n        let result = res\r\n        if (result.data.length) {\r\n          this.userTreeData = this.treeFormat(result.data)\r\n          this.onUserTreeLoadFinish(this.data)\r\n        }\r\n      })\r\n    },\r\n    // 格式化树形结构\r\n    treeFormat(treeArray) {\r\n      treeArray.forEach(item => {\r\n        this.$set(item, 'children', [])\r\n        this.$set(item, 'id', item.guid)\r\n        this.$set(item, 'label', item.code + '-' + item.name)\r\n      })\r\n      return treeArray\r\n    },\r\n    accordion: { // 是否每次只打开一个同级树节点展开\r\n      type: true\r\n    }\r\n  },\r\n  mounted() {\r\n    this.init()\r\n  },\r\n  created() {\r\n    this.getDep()\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.tree{\r\n  float:left;\r\n  height:100%;\r\n  width:50%\r\n}\r\n</style>\r\n"]}]}