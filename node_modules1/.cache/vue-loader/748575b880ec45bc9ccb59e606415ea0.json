{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Upload\\BossUpload.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\components\\Upload\\BossUpload.vue","mtime":1694505521679},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BossUpload.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BossUpload.vue","sourceRoot":"src/components/Upload","sourcesContent":["<!--文件上传组件-->\r\n<template>\r\n  <div v-show=\"isShow\" class=\"bs-file__upload\">\r\n    <el-upload\r\n      ref=\"uploadFile\"\r\n      :show-file-list=\"false\"\r\n      :multiple=\"multiple\"\r\n      :limit=\"limit\"\r\n      :accept=\"accept\"\r\n      action=\"\"\r\n      :data=\"uploadparams\"\r\n      :on-success=\"uploadSuccess\"\r\n      :on-error=\"uploadError\"\r\n      :on-progress=\"onProgress\"\r\n      :before-upload=\"onbeforeUpload\"\r\n      :on-exceed=\"onExceed\"\r\n      :http-request=\"() => {}\"\r\n      style=\"display: inline-block;\"\r\n    >\r\n      <el-button size=\"small\" type=\"primary\" :class=\"className\">上传</el-button>\r\n    </el-upload>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defaultServerUri } from './config'\r\nimport comUi from '@/components/index.js'\r\n// import Base64 from '@/utils/base64'\r\nimport Store from '@/utils/store'\r\nconst USER_INFO = 'userInfo'\r\nexport default {\r\n  name: 'BossUpload',\r\n  props: {\r\n    isShow: {\r\n      type: Boolean\r\n    },\r\n    limit: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    size: {\r\n      // 输入框尺寸 medium/small/mini\r\n      type: String,\r\n      default: ''\r\n    },\r\n    editActived: {\r\n      type: Boolean\r\n    },\r\n    openLoading: {\r\n      type: Boolean,\r\n      default() {\r\n        return true\r\n      }\r\n    },\r\n    uniqeName: {\r\n      type: String,\r\n      default: 'bs-upload__input'\r\n    },\r\n    queryparams: {\r\n      // 查询参数\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    deleteparams: {\r\n      // 删除参数\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    downloadparams: {\r\n      // 下载参数\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    minServer: {\r\n      // 获取数据访问uri，可自定义\r\n      type: Object,\r\n      default() {\r\n        return defaultServerUri\r\n      }\r\n    },\r\n    afterUpload: {\r\n      // 上传后回调\r\n      type: Function,\r\n      default: function(datas) {}\r\n    },\r\n    afterDelete: {\r\n      // 删除后回调\r\n      type: Function,\r\n      default: function(datas) {}\r\n    },\r\n    queryConfig: {\r\n      type: Object,\r\n      default() {\r\n        return {}\r\n      }\r\n    },\r\n    accept: {\r\n      type: String,\r\n      default: 'image/*,.doc,.docx,.xls,.xlsx,.txt,.pdf,.jpg,.jpeg,.png,.txt,.7z,.zip,.rar'\r\n      // 上传文件格式不正确，正确格式为doc，docx ，xls，xlsx ，txt ，pdf，jpg，jpeg，png\r\n    }\r\n\r\n  },\r\n  data() {\r\n    return {\r\n      serverUri: {},\r\n      className: this.uniqeName,\r\n      uploadparams: this.queryparams,\r\n      delparams: this.deleteparams,\r\n      downparams: this.downloadparams,\r\n      userInfo: Store(USER_INFO),\r\n      queryConfigFn: this.queryConfig\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    multiple() {\r\n      return this.limit > 1\r\n    },\r\n    appid() {\r\n      if (this.$store.state.curNavModule.appid === undefined ||\r\n        this.$store.state.curNavModule.appid === '' ||\r\n        this.$store.state.curNavModule.appid === null) {\r\n        return 'pay'\r\n      } else {\r\n        return this.$store.state.curNavModule.appid\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n\r\n  },\r\n\r\n  methods: {\r\n    upload() {\r\n      const mm = document.getElementsByClassName(`${this.className}`)[0].parentNode.children[1]\r\n      mm.click()\r\n    },\r\n    // 获取参数\r\n    getParams(file) {\r\n      let param = new FormData() // 创建form对象\r\n      param.append('file', file)\r\n      param.append('filename', file.name)\r\n      param.append('appid', this.appid)\r\n      param.append('billguid', this.uploadparams.billguid || '')\r\n      param.append('doctype', this.uploadparams.doctype || '')\r\n      param.append('year', this.userInfo.year)\r\n      param.append('province', this.userInfo.province)\r\n      param.append('userguid', this.userInfo.guid)\r\n      let queryConfigFnKeys = Object.keys(this.queryConfigFn)\r\n      if (queryConfigFnKeys.length) {\r\n        queryConfigFnKeys.forEach((key) => {\r\n          param.append(key, this.queryConfigFn[key])\r\n        })\r\n      }\r\n      // param.append('oldnode', this.uploadparams.oldnode || '')\r\n      // param.append('status', this.uploadparams.status || '')\r\n      // param.append('tablename', this.uploadparams.tablename || '')\r\n      // param.append('currnode', this.uploadparams.currnode || '')\r\n      // param.append('guid', this.uploadparams.guid || '')\r\n      // param.append('guids', this.uploadparams.guids || '')\r\n      // param.append('datatype', this.uploadparams.datatype || '')\r\n      // param.append('batchno', this.uploadparams.batchno || '')\r\n      // param.append('reportguid', this.uploadparams.reportguid || '')\r\n      // param.append('fields', this.uploadparams.fields || '')\r\n      // param.append('complex', this.uploadparams.complex || '')\r\n      return param\r\n    },\r\n\r\n    onbeforeUpload(file) {\r\n      //  校验处理\r\n      if (!this.checkAccept(file)) {\r\n        return\r\n      }\r\n      //  校验处理\r\n      this.openLoading && comUi.utilsLib.LoadingMark.showLoadingMark('', '上传中......')\r\n      const params = this.getParams(file)\r\n      this.$http[this.serverUri.upload.ajaxType](this.serverUri.upload.serverUri, params, null, 'multipart/form-data', 'openapi').then(res => {\r\n        if (res.rscode === '100000') {\r\n          this.$message({ showClose: true, message: '上传成功!', type: 'success' })\r\n          this.afterUpload(file, res.data)\r\n        } else {\r\n          this.$message({ showClose: true, message: '上传失败!', type: 'error' })\r\n        }\r\n        this.openLoading && comUi.utilsLib.LoadingMark.removeLoadingMark()\r\n      }).catch(err => {\r\n        console.log(err)\r\n        this.openLoading && comUi.utilsLib.LoadingMark.removeLoadingMark()\r\n      }).finally(() => {\r\n        this.$refs.uploadFile?.clearFiles()\r\n      })\r\n    },\r\n\r\n    checkAccept(file) {\r\n      var fileSuffix = file.name.substring(file.name.lastIndexOf('.') + 1)\r\n      if (this.accept === '*/*') {\r\n        return true\r\n      }\r\n\r\n      let acceptArr = this.accept.split(',')\r\n      let aceepts = acceptArr.map((item, i) => { return item.toLowerCase() })\r\n      if (!aceepts.includes(fileSuffix.toLowerCase())) {\r\n        this.$message({\r\n          message: `上传文件只能是${this.accept}格式!`,\r\n          type: 'warning'\r\n        })\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    },\r\n\r\n    // 上传文件\r\n    uploadFiles(files) {\r\n      console.log(33, files)\r\n    },\r\n\r\n    // 删除单个或多个文件\r\n    deleteFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.deleteparams\r\n      }\r\n\r\n      this.$http[this.serverUri.delete.ajaxType](this.serverUri.delete.serverUri, params, '', '', 'params').then(res => {\r\n        if (res.rscode === '100000') {\r\n          this.$message({ showClose: true, message: '删除成功!', type: 'success' })\r\n          this.afterDelete()\r\n        } else {\r\n          this.$message({ showClose: true, message: '删除失败!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n\r\n      // this.$confirm('确认要删除吗?', '提示', {\r\n      //   confirmButtonText: '确定',\r\n      //   cancelButtonText: '取消',\r\n      //   type: 'warning'\r\n      // }).then(() => {\r\n      //   this.$http[this.serverUri.delete.ajaxType](this.serverUri.delete.serverUri, params, '', '', 'params').then(res => {\r\n      //     if (res.rscode === '100000') {\r\n      //       this.$message({ showClose: true, message: '删除成功!', type: 'success' })\r\n      //       this.afterDelete()\r\n      //     } else {\r\n      //       this.$message({ showClose: true, message: '删除失败!', type: 'error' })\r\n      //     }\r\n      //   }).catch(err => {\r\n      //     console.log(err)\r\n      //   })\r\n      // }).catch(() => {\r\n\r\n      // })\r\n    },\r\n\r\n    downloadFileFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.downparams\r\n      }\r\n      this.$http[this.serverUri.fileExist.ajaxType](this.serverUri.fileExist.serverUri, params).then(res => {\r\n        if (res.rscode === '100000') {\r\n          // console.log(555, this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri))\r\n          // const urlObj = this.$gloableToolFn.getFileUrl() + '/v2/stream/download'\r\n          // const urlObj = 'http://10.77.18.172:32306/v2/stream/download'\r\n          const urlObj = this.$http.httpGlobalGatewayAgent('fileservice/v2/stream/download')\r\n          const downLoadUrl = `${urlObj.baseURL}/${urlObj.url}?appid=${this.appid}&fileguid=${this.downparams.fileguid}`\r\n          let link = document.createElement('a')\r\n          link.href = downLoadUrl\r\n          // link.download=`路由导出表-${dayjs(new Date()).format(\"YYYY-MM-DD HH:mm:ss\")}`//跨域下 名称会失效 无法设置名字\r\n          link.click()\r\n          // 通过JS打开新窗口会被拦截，换一种实现方式: 先打开页面, 后更改页面地址\r\n          // let tempwindow = window.open('_blank')\r\n          // tempwindow.location = downLoadUrl\r\n          // window.open(downLoadUrl)\r\n        } else {\r\n          this.$message({ showClose: true, message: '文件不存在!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n    downloadMoreFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        fileguid: this.downparams.fileguid\r\n      }\r\n      this.$http[this.serverUri.fileExist.ajaxType](this.serverUri.fileExist.serverUri, params).then(res => {\r\n        if (res.rscode === '100000') {\r\n          // console.log(555, this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri))\r\n          const urlObj = window.gloableToolFn.serverGatewayMap.development.fileservice + '/v2/stream/download'\r\n          const downLoadUrl = `${urlObj}?appid=${this.appid}&fileguid=${params.fileguid}`\r\n          // 通过JS打开新窗口会被拦截，换一种实现方式: 先打开页面, 后更改页面地址\r\n          let tempwindow = window.open('_blank')\r\n          tempwindow.location = downLoadUrl\r\n          // window.open(downLoadUrl)\r\n        } else {\r\n          this.$message({ showClose: true, message: '文件不存在!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n\r\n    downloadFile() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.downparams\r\n      }\r\n      this.$http[this.serverUri.fileExist.ajaxType](this.serverUri.fileExist.serverUri, params).then(res => {\r\n        if (res.rscode === '100000') {\r\n          // console.log(555, this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri))\r\n          const urlObj = this.$http.httpGlobalGatewayAgent(this.serverUri.download.serverUri)\r\n          const downLoadUrl = `${urlObj.baseURL}/${urlObj.url}?appid=${this.appid}&fileguid=${this.downparams.fileguid}`\r\n\r\n          // 通过JS打开新窗口会被拦截，换一种实现方式: 先打开页面, 后更改页面地址\r\n          let tempwindow = window.open('_blank')\r\n          tempwindow.location = downLoadUrl\r\n          // window.open(downLoadUrl)\r\n        } else {\r\n          this.$message({ showClose: true, message: '文件不存在!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        console.log(err)\r\n      })\r\n    },\r\n\r\n    // 下载问题\r\n    downloadFileBak() {\r\n      const params = {\r\n        appid: this.appid,\r\n        ...this.downparams\r\n      }\r\n      this.$http[this.serverUri.download.ajaxType](this.serverUri.download.serverUri, params).then(res => {\r\n        const code = res.headers.rscode\r\n        const filename = res.headers.filename\r\n        if (Number(code) === 100000) {\r\n          const fileName = decodeURI(filename)\r\n          const fileContent = res.data\r\n\r\n          let blob = new Blob([fileContent], { type: 'application/octet-stream' })\r\n\r\n          // const blob = new Blob([fileContent])\r\n          if ('download' in document.createElement('a')) { // 非IE下载\r\n            const a = document.createElement('a')\r\n            a.download = fileName\r\n            a.style.display = 'none'\r\n            let url = URL.createObjectURL(blob)\r\n            a.href = url\r\n            document.body.appendChild(a)\r\n            a.click()\r\n            URL.revokeObjectURL(url) // 释放URL 对象\r\n            document.body.removeChild(a)\r\n          } else { // IE10+下载\r\n            navigator.msSaveBlob(blob, fileName)\r\n          }\r\n        } else {\r\n          this.$message({ showClose: true, message: '下载异常!', type: 'error' })\r\n        }\r\n      }).catch(err => {\r\n        this.$message({ showClose: true, message: '下载异常!', type: 'error' })\r\n        console.log(err)\r\n      })\r\n    },\r\n\r\n    // 获取文件列表\r\n    getFileList() {\r\n      return new Promise((resolve, reject) => {\r\n        this.$http['get']('fileservice/v2/files', this.queryparams).then(res => {\r\n          if (res.rscode === '100000') {\r\n            resolve(res.data || res.result)\r\n          }\r\n        }).catch(err => {\r\n          reject(err)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 服务参数合并\r\n    mixinsServerUri() {\r\n      this.serverUri = Object.assign({}, defaultServerUri, this.minServer)\r\n    },\r\n\r\n    // 上传成功钩子\r\n    uploadSuccess(res, file, fileList) {\r\n      console.log('success', res, file, fileList)\r\n    },\r\n\r\n    // 上传失败钩子\r\n    uploadError(err, file, fileList) {\r\n      console.log('error', err, file, fileList)\r\n    },\r\n\r\n    // 上传进度钩子\r\n    onProgress(e, file, fileList) {\r\n      console.log('progress', e, file, fileList)\r\n    },\r\n\r\n    // 选则文件超出最大限制个数\r\n    onExceed(files, fileList) {\r\n      this.$message({ showClose: true, message: `选择的文件超过最大设置数${this.limit}了!`, type: 'error' })\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mixinsServerUri()\r\n  },\r\n  watch: {\r\n    className(val) {\r\n      this.className = val\r\n    },\r\n    minServer: {\r\n      handler(newValue, oldValue) {\r\n        this.mixinsServerUri()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    queryparams: {\r\n      handler(newValue, oldValue) {\r\n        this.uploadparams = this.queryparams\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    deleteparams: {\r\n      handler(newValue, oldValue) {\r\n        this.delparams = this.deleteparams\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    downloadparams: {\r\n      handler(newValue, oldValue) {\r\n        this.downparams = this.downloadparams\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    },\r\n    queryConfig: {\r\n      handler(newValue, oldValue) {\r\n        this.queryConfigFn = newValue\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}