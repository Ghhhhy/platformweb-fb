{"remainingRequest":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\hb\\views\\Benifit\\BenifitPeople.vue?vue&type=style&index=1&id=5ef774e9&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\src\\hb\\views\\Benifit\\BenifitPeople.vue","mtime":1694505522135},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\css-loader\\dist\\cjs.js","mtime":1696752946978},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\何小龙\\Desktop\\platformweb-fb\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoucmFkaW8tcmlnaHR7DQogIGZsb2F0OiByaWdodDsNCn0NCi5UaXRhbnMtdGFibGUgOjp2LWRlZXAgIC52eGUtYm9keS0tcm93LnJvdy15ZWxsb3cgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7DQogIGNvbG9yOiAjZmZmOw0KfQ0KLlRpdGFucy10YWJsZSA6OnYtZGVlcCAgLnZ4ZS1ib2R5LS1yb3cucm93LWJsdWUgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlOw0KICBjb2xvcjogI2ZmZjsNCn0NCi5UaXRhbnMtdGFibGUgOjp2LWRlZXAgIC52eGUtYm9keS0tcm93LnJvdy1yZWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7DQogIGNvbG9yOiAjZmZmOw0KfQ0K"},{"version":3,"sources":["BenifitPeople.vue"],"names":[],"mappingsuwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BenifitPeople.vue","sourceRoot":"src/hb/views/Benifit","sourcesContent":["<!--支付数据规范性检查-->\r\n<template>\r\n  <div v-loading=\"pageLoading\" style=\"height: 100%\">\r\n    <BsMainFormListLayout :left-visible.sync=\"leftTreeVisible\">\r\n      <template v-slot:topTap></template>\r\n      <template v-slot:topTabPane>\r\n        <BsTabPanel\r\n          ref=\"tabPanel\"\r\n          :is-open=\"isShowQueryConditions\"\r\n          :tab-status-btn-config=\"toolBarStatusBtnConfig\"\r\n          :tab-status-num-config=\"tabStatusNumConfig\"\r\n          @onQueryConditionsClick=\"onQueryConditionsClick\"\r\n        />\r\n      </template>\r\n      <!-- leftVisible不为undefined为渲染mainTree和mainForm插槽 ，否则渲染mainCon插槽-->\r\n      <template v-slot:mainTree>\r\n        <BsTreeSet\r\n          ref=\"treeSet\"\r\n          v-model=\"leftTreeVisible\"\r\n          :tree-config=\"treeTypeConfig\"\r\n          @onChangeInput=\"changeInput\"\r\n          @onAsideChange=\"asideChange\"\r\n        />\r\n        <BsBossTree\r\n          ref=\"leftTree\"\r\n          open-loading\r\n          :is-checkbox=\"false\"\r\n          :defaultexpandedkeys=\"['0']\"\r\n          style=\"overflow: hidden\"\r\n          :is-server=\"false\"\r\n          :datas=\"treeData\"\r\n          ajax-type=\"get\"\r\n          server-uri=\"pay-voucher-service/v2/benefit/action/getPro\"\r\n          :queryparams=\"treeQueryparams\"\r\n          :global-config=\"treeGlobalConfig\"\r\n          :clickmethod=\"onClickmethod\"\r\n        />\r\n      </template>\r\n      <template v-slot:mainForm>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig\"\r\n            :query-form-data=\"searchDataList\"\r\n            @onSearchClick=\"search\"\r\n          />\r\n        </div>\r\n        <BsTable\r\n          ref=\"mainTableRef\"\r\n          :loading=\"tableLoading1\"\r\n          :style=\"tableHeight\"\r\n          :footer-config=\"tableFooterConfig\"\r\n          :table-columns-config=\"tableColumnsConfig\"\r\n          :table-data=\"tableData\"\r\n          :table-config=\"tableConfig\"\r\n          :pager-config=\"mainPagerConfig\"\r\n          :toolbar-config=\"tableToolbarConfig\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick\"\r\n          @ajaxData=\"ajaxTableData\"\r\n          @cellClick=\"cellClick('detail')\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">惠民支付明细数据</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n        <div v-show=\"isShowQueryConditions\" class=\"main-query\">\r\n          <BsQuery\r\n            ref=\"queryFrom\"\r\n            :query-form-item-config=\"queryConfig1\"\r\n            :query-form-data=\"searchDataList1\"\r\n            @onSearchClick=\"search1\"\r\n          />\r\n        </div>\r\n        <BsTable\r\n          ref=\"mainTableRef1\"\r\n          :loading=\"tableLoading2\"\r\n          :style=\"tableHeight\"\r\n          :footer-config=\"tableFooterConfig1\"\r\n          :table-columns-config=\"tableColumnsConfig1\"\r\n          :table-data=\"tableData1\"\r\n          :table-config=\"tableConfig1\"\r\n          :pager-config=\"mainPagerConfig1\"\r\n          :toolbar-config=\"tableToolbarConfig1\"\r\n          @onToolbarBtnClick=\"onToolbarBtnClick1\"\r\n          @ajaxData=\"ajaxTableData1\"\r\n          @cellClick=\"cellClick('cert')\"\r\n        >\r\n          <template v-slot:toolbarSlots>\r\n            <div class=\"table-toolbar-left\">\r\n              <div v-if=\"leftTreeVisible === false\" class=\"table-toolbar-contro-leftvisible\" @click=\"leftTreeVisible = true\"></div>\r\n              <div class=\"table-toolbar-left-title\">\r\n                <span class=\"fn-inline\">支付凭证信息</span>\r\n                <i class=\"fn-inline\"></i>\r\n              </div>\r\n            </div>\r\n          </template>\r\n        </BsTable>\r\n      </template>\r\n    </BsMainFormListLayout>\r\n    <BsOperationLog :logs-data=\"logData\" :show-log-view=\"showLogView\" />\r\n    <vxe-modal\r\n      v-model=\"showImportError\"\r\n      height=\"70%\"\r\n      title=\"导入提示\"\r\n      resize\r\n      width=\"80%\"\r\n      @close=\"cancelDialogClose\"\r\n    >\r\n      <p style=\"color: red\">以下数据格式错误，请检查后重新导入！</p>\r\n      <div v-if=\"valiRule.length > 0\" style=\"margin-left:17px;margin-top:10px;font-size:14px\">\r\n        <p v-for=\"(item, index) in valiRule\" :key=\"index\" style=\"margin:5px 0;\">\r\n          {{ item }}\r\n          <el-divider style=\"color:#E7EBF0\" />\r\n        </p>\r\n      </div>\r\n    </vxe-modal>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { proconf } from './benifitPeople'\r\nimport HttpModule from '@/hb/api/BenifitPeople/index.js'\r\nimport utils from './util.js'\r\nimport { Export } from '@/components/Table/export/export/export.js'\r\nexport default {\r\n  components: {},\r\n  computed: {\r\n    tableHeight() {\r\n      return this.isShowQueryConditions ? { height: '40%' } : { height: '48%' }\r\n    }\r\n  },\r\n  watch: {\r\n    queryConfig(newVal, oldVal) {\r\n      if (newVal && newVal.length > 0) {\r\n        this.searchDataList = utils.initHightSearch(this.queryConfig)\r\n      }\r\n    },\r\n    queryConfig1(newVal, oldVal) {\r\n      if (newVal && newVal.length > 0) {\r\n        this.searchDataList1 = utils.initHightSearch(this.queryConfig1)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      // 左侧树过滤值\r\n      treeFilterText: '',\r\n      importModalVisible: false, // 导入弹框\r\n      // BsQuery 查询栏\r\n      queryConfig: [],\r\n      queryConfig1: [],\r\n      searchDataList: {},\r\n      searchDataList1: {},\r\n      breakRuleVisible: false,\r\n      treeData: [],\r\n      treeTypeConfig: {\r\n        curRadio: 'pro'\r\n      },\r\n      treeGlobalConfig: {\r\n        inputVal: ''\r\n      },\r\n      treeQueryparams: {\r\n        elementcode: 'pro'\r\n      },\r\n      leftTreeVisible: true,\r\n      // 头部工具栏 BsTabPanel config\r\n      toolBarStatusBtnConfig: {\r\n        buttons: proconf.statusButtons,\r\n        curButton: proconf.curStatusButton,\r\n        buttonsInfo: proconf.buttons,\r\n        methods: {\r\n          bsToolbarClickEvent: this.bsToolbarClickEvent\r\n        }\r\n      },\r\n      tabStatusNumConfig: {\r\n        '1': 0,\r\n        '2': 0\r\n      },\r\n      isShowQueryConditions: true,\r\n      toolBarStatusSelect: {\r\n        type: 'button',\r\n        code: '1',\r\n        curValue: '1'\r\n      },\r\n      // table 相关配置\r\n      pageLoading: true,\r\n      tableLoading1: false,\r\n      tableLoading2: false,\r\n      tableColumnsConfig: [],\r\n      tableColumnsConfig1: proconf.PoliciesTableColumns1,\r\n      tableData: [],\r\n      tableData1: [],\r\n      tableToolbarConfig: {\r\n        disabledMoneyConversion: true,\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      tableToolbarConfig1: {\r\n        // table工具栏配置\r\n        disabledMoneyConversion: true,\r\n        moneyConversion: false, // 是否有金额转换\r\n        import: false, // 导入\r\n        export: true, // 导出\r\n        print: false, // 打印\r\n        zoom: true, // 缩放\r\n        custom: true, // 选配展示列\r\n        slots: {\r\n          tools: 'toolbarTools',\r\n          buttons: 'toolbarSlots'\r\n        }\r\n      },\r\n      mainPagerConfig: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 20\r\n      },\r\n      mainPagerConfig1: {\r\n        total: 0,\r\n        currentPage: 1,\r\n        pageSize: 20\r\n      },\r\n      tableDataParams: {\r\n        condition: {}\r\n      },\r\n      tableConfig: {\r\n      },\r\n      tableConfig1: {\r\n        globalConfig: { // // 新增当前配置 注 当前配置将覆盖默认配置  不会取并集\r\n          cellClickCheck: true,\r\n          seq: true,\r\n          checkType: 'radio'\r\n        }\r\n      },\r\n      tableFooterConfig: {\r\n        showFooter: false\r\n      },\r\n      tableFooterConfig1: {\r\n        showFooter: false\r\n      },\r\n      isHook: '0',\r\n      payCertNo: '',\r\n      proName: '',\r\n      proName1: '',\r\n      agencyName: '',\r\n      corBgtDocNoName: '',\r\n      useDes: '',\r\n      dtos: [],\r\n      amount: '',\r\n      mofdivName: '',\r\n      condition: {},\r\n      // 操作日志\r\n      logData: [],\r\n      showLogView: false,\r\n      // 请求 & 角色权限相关配置\r\n      menuId: '',\r\n      templateUrl: '',\r\n      templateName: '',\r\n      valiRule: [],\r\n      showImportError: false,\r\n      // 导入模板校验：\r\n      importPeopleReg: proconf.importPeopleEnterReg\r\n    }\r\n  },\r\n  methods: {\r\n    // 下载导入模版\r\n    downLoadImportTemplates(type) {\r\n      if (type === '01') {\r\n        this.templateUrl = require('@/hb/assets/importTemplate/benifitPersonTemp.xls')\r\n        this.templateName = '补贴到人模板' + utils.DateFn.getCurrentDate()\r\n      } else {\r\n        this.templateUrl = require('@/hb/assets/importTemplate/benifitEnterpriseTemp.xls')\r\n        this.templateName = '补贴到企业模板' + utils.DateFn.getCurrentDate()\r\n      }\r\n      let a = document.createElement('a')\r\n      a.setAttribute('href', this.templateUrl)\r\n      a.setAttribute('download', this.templateName)\r\n      a.click()\r\n    },\r\n    bsToolbarClickEvent(obj, $this) {\r\n      if (!obj.type) {\r\n        this.operationToolbarButtonClickEvent(obj)\r\n        return\r\n      }\r\n      this.toolBarStatusSelect = obj\r\n      switch (obj.code) {\r\n        case '1':\r\n          this.tableColumnsConfig = [...(this.unHookTableColumns || [])]\r\n          this.isHook = '0'\r\n          break\r\n        case '2':\r\n          this.tableColumnsConfig = [...(this.hookedTableColumns || [])]\r\n          this.isHook = '1'\r\n          break\r\n      }\r\n      this.condition = {}\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.mainPagerConfig1.currentPage = 1\r\n      this.refresh()\r\n      this.refresh1()\r\n    },\r\n    search(obj) {\r\n      this.searchDataList = obj\r\n      this.mergeCondition(() => {\r\n        this.queryTableDatas()\r\n      }, 'detail')\r\n    },\r\n    search1(obj) {\r\n      this.searchDataList1 = obj\r\n      this.mergeCondition(() => {\r\n        this.queryTableDatas1()\r\n      }, 'cert')\r\n    },\r\n    // 切换操作按钮\r\n    operationToolbarButtonClickEvent(obj, context, e) {\r\n      let datas1 = this.$refs.mainTableRef.getSelectionData()\r\n      let datas2 = this.$refs.mainTableRef1.getSelectionData()\r\n      switch (obj.code) {\r\n        // 挂接\r\n        case 'hook_set':\r\n          if (datas1.length === 0) {\r\n            this.$message.warning('请选择需要挂架的惠民支付明细数据')\r\n            return\r\n          }\r\n          if (datas2.length !== 1) {\r\n            this.$message.warning('请选择一条支付凭证信息数据')\r\n            return\r\n          }\r\n          this.hook(datas1, datas2[0])\r\n          break\r\n        // 取消挂接\r\n        case 'hook_not':\r\n          if (datas1.length === 0) {\r\n            this.$message.warning('请选择数据')\r\n            return\r\n          }\r\n          this.notHook(datas1)\r\n          break\r\n        // 导入\r\n        case 'importPerson':\r\n          // 补贴到人\r\n          this.importFile('01')\r\n          break\r\n        case 'importEnterprise':\r\n          this.importFile('02')\r\n          break\r\n        case 'delete':\r\n          this.deleteDetailData()\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    },\r\n    composeParamsWithTempType(datas, type) {\r\n      datas.forEach(data => {\r\n        data.to_peop_enterp = type\r\n        data.to_peop_family = String(type * 1)\r\n      })\r\n      return datas\r\n    },\r\n    deleteDetailData() {\r\n      let selectionData = this.$refs.mainTableRef.getSelectionData()\r\n      let params = {\r\n        datas: selectionData\r\n      }\r\n      HttpModule.deleteDetail(params).then(res => {\r\n        if (res && res.rscode === '200') {\r\n          this.$message.success('删除成功')\r\n          this.refresh()\r\n        } else {\r\n          this.$message.error('删除失败')\r\n        }\r\n      })\r\n    },\r\n    importFile(type) {\r\n      let self = this\r\n      self.$refs.mainTableRef.triggerImportOption({\r\n        downloadTemplateCallback() {\r\n          self.downLoadImportTemplates(type) // 下载模板\r\n        },\r\n        importSuccessCallback(res) {\r\n          let templateColumns\r\n          if (type === '01') {\r\n            templateColumns = self.templateColumnsPerson\r\n          } else {\r\n            templateColumns = self.templateColumnsEnterprise\r\n          }\r\n          let transViewData = self.$refs.mainTableRef.deaImportViewData({\r\n            conlums: templateColumns,\r\n            viewData: res,\r\n            valiRules: self.importPeopleReg\r\n          })\r\n          // 将Excel数据解析后的数据\r\n          self.onImportSuccess(transViewData, type)\r\n        }\r\n      })\r\n    },\r\n    cancelDialogClose() {\r\n      this.showImportError = false\r\n    },\r\n    onImportSuccess(res, type) {\r\n      let self = this\r\n      console.log('res:', res)\r\n      this.valiRule = []\r\n      if (res.result === false) {\r\n        let valiResult = res.valiRule\r\n        Object.values(valiResult).forEach(vali => {\r\n          let temp = []\r\n          vali.forEach(v => {\r\n            temp.push(v.msg)\r\n          })\r\n          self.valiRule.push(temp.join(';   '))\r\n        })\r\n        this.showImportError = true\r\n        return\r\n      }\r\n      let datas = this.composeParamsWithTempType(res, type)\r\n      // 添加默认区划\r\n      let province = self.$store.state.userInfo.province\r\n      datas.forEach(item => {\r\n        item.mof_div_code = province\r\n        let toPeopFamilyVal = item.to_peop_family\r\n        let toPeopFamily = toPeopFamilyVal.split('-')\r\n        item.to_peop_family = toPeopFamily[0]\r\n      })\r\n      this.pageLoading = true\r\n      HttpModule.importBenefit({ datas: datas }).then(res => {\r\n        self.pageLoading = false\r\n        if (res.rscode === '200') {\r\n          self.refresh()\r\n          self.$message.success('导入成功')\r\n        } else {\r\n          self.$message.error(res.result)\r\n          let failedData = res.data || []\r\n          if (failedData.length > 0) {\r\n            self.downloadFailedData(failedData, type)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    downloadFailedData(failedData, type) {\r\n      let self = this\r\n      let templateColumns\r\n      if (type === '01') {\r\n        templateColumns = [...self.templateColumnsPerson]\r\n      } else {\r\n        templateColumns = [...self.templateColumnsEnterprise]\r\n      }\r\n      templateColumns.push({\r\n        title: '失败原因',\r\n        field: 'msg'\r\n      })\r\n      this.$Export.exportExcel({\r\n        columns: templateColumns,\r\n        fullData: failedData,\r\n        fileName: '导入失败数据列表',\r\n        isExportOriginalData: false\r\n      })\r\n    },\r\n    hook(datas1, datas2) {\r\n      let self = this\r\n      const param = {\r\n        data: {\r\n          pay_cert_no: datas2.pay_cert_no\r\n        },\r\n        datas: datas1\r\n      }\r\n      this.pageLoading = true\r\n      HttpModule.hook(param).then(res => {\r\n        self.pageLoading = false\r\n        if (res.rscode === '200') {\r\n          self.$message.success('挂接成功')\r\n          self.queryTableDatas()\r\n          self.queryTableDatas1()\r\n        } else {\r\n          self.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    notHook(datas1) {\r\n      let self = this\r\n      this.pageLoading = true\r\n      HttpModule.notHook({ datas: datas1 }).then(res => {\r\n        self.pageLoading = false\r\n        if (res.rscode === '200') {\r\n          self.$message.success('取消成功')\r\n          self.queryTableDatas()\r\n          self.queryTableDatas1()\r\n        } else {\r\n          self.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    changeVisible(val) {\r\n      this.breakRuleVisible = val\r\n    },\r\n    onToolbarBtnClick({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh()\r\n          break\r\n      }\r\n    },\r\n    onToolbarBtnClick1({ context, table, code }) {\r\n      switch (code) {\r\n        // 刷新\r\n        case 'refresh':\r\n          this.refresh1()\r\n          break\r\n      }\r\n    },\r\n    // 左侧树\r\n    changeInput(val) {\r\n      this.treeGlobalConfig.inputVal = val\r\n    },\r\n    onClickmethod(node) {\r\n      let proCode = ''\r\n      if (node.id !== '0') {\r\n        proCode = node.code\r\n      } else {\r\n        proCode = ''\r\n      }\r\n      this.condition = { 'pro_code': proCode ? [proCode] : [] }\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.search()\r\n      this.search1()\r\n    },\r\n    // agencyCode取左侧树和toorbal并集\r\n    mergeCondition(cb, type) {\r\n      let searchDataList, searchConfig\r\n      if (type === 'cert') {\r\n        searchConfig = this.queryConfig1\r\n        searchDataList = this.searchDataList1\r\n      } else {\r\n        searchConfig = this.queryConfig\r\n        searchDataList = this.searchDataList\r\n      }\r\n      const keyCode = this.$refs.treeSet.treeConfigIn.curRadio.toLowerCase() + '_code'\r\n      const isEmptyCondition = () => !Object.keys(utils.highSearch(searchConfig, searchDataList)).length\r\n      let code\r\n      if (!isEmptyCondition()) {\r\n        const [toolbarCode = [], treeCode = []] = [utils.highSearch(searchConfig, searchDataList)[keyCode], this.condition[keyCode]]\r\n        code = Array.from(new Set([...toolbarCode, ...treeCode]))\r\n      } else {\r\n        code = this.condition[keyCode]\r\n      }\r\n      const condition = { ...utils.highSearch(searchConfig, searchDataList), [keyCode]: code }\r\n      this.tableDataParams.condition = condition\r\n      cb && cb()\r\n      return condition\r\n    },\r\n    asideChange() {\r\n      this.leftTreeVisible = false\r\n    },\r\n    // 表格单元行单击\r\n    // 已挂接页签---点击明细---联动查询凭证列表，点击凭证---联动查询明细列表\r\n    cellClick(type) {\r\n      if (this.toolBarStatusSelect.curValue === '1') {\r\n        return\r\n      }\r\n      let selectionData\r\n      let vos = []\r\n      if (type === 'detail') {\r\n        selectionData = this.$refs.mainTableRef.getSelectionData()\r\n        selectionData.forEach(item => {\r\n          vos.push(item.pay_cert_no)\r\n        })\r\n        this.refresh1(vos.join(','))\r\n      } else {\r\n        selectionData = this.$refs.mainTableRef1.getSelectionData()\r\n        selectionData.forEach(item => {\r\n          vos.push(item.pay_cert_no)\r\n        })\r\n        this.refresh(vos.join(','))\r\n      }\r\n    },\r\n    // 刷新按钮 刷新查询栏，提示刷新 table 数据\r\n    refresh(vos) {\r\n      this.mainPagerConfig.currentPage = 1\r\n      this.queryTableDatas(vos)\r\n      // this.queryTableDatasCount()\r\n    },\r\n    refresh1(vos) {\r\n      this.queryTableDatas1(vos)\r\n      // this.queryTableDatasCount()\r\n    },\r\n    ajaxTableData({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig.currentPage = currentPage\r\n      this.mainPagerConfig.pageSize = pageSize\r\n      this.queryTableDatas()\r\n    },\r\n    ajaxTableData1({ params, currentPage, pageSize }) {\r\n      this.mainPagerConfig1.currentPage = currentPage\r\n      this.mainPagerConfig1.pageSize = pageSize\r\n      this.queryTableDatas1()\r\n    },\r\n    // 展开折叠查询框\r\n    onQueryConditionsClick(isOpen) {\r\n      this.isShowQueryConditions = isOpen\r\n    },\r\n    // 查询 table 数据--明细\r\n    queryTableDatas(vos) {\r\n      let self = this\r\n      const param = {\r\n        statusCode: self.toolBarStatusSelect.curValue,\r\n        menuId: this.menuId,\r\n        appId: this.appId,\r\n        roleguid: this.roleguid,\r\n        roleId: this.roleId,\r\n        pageNum: this.mainPagerConfig.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig.pageSize, // 每页条数\r\n        params: {\r\n          is_hook: this.isHook\r\n        },\r\n        condition: { ...this.tableDataParams.condition },\r\n        sort: 'create_time desc'\r\n      }\r\n      if (vos) {\r\n        param.condition.pay_cert_no = vos\r\n      }\r\n      this.tableLoading1 = true\r\n      let url = 'getTableDetailDataUnhook'\r\n      if (this.isHook === '1') {\r\n        // 未挂接\r\n        url = 'getTableDetailDataHooked'\r\n      }\r\n      HttpModule[url](param).then(res => {\r\n        self.tableLoading1 = false\r\n        self.pageLoading = false\r\n        if (res.rscode === '200') {\r\n          if (self.toolBarStatusSelect.curValue === param.statusCode) {\r\n            self.tableData = res.data.rows\r\n            self.mainPagerConfig.total = res.data.total\r\n          }\r\n        } else {\r\n          self.tableData = []\r\n          self.$message.error(res.result || '')\r\n        }\r\n      })\r\n    },\r\n    // 查询 table1 数据---凭证\r\n    queryTableDatas1(vos) {\r\n      let self = this\r\n      const param = {\r\n        statusCode: self.toolBarStatusSelect.curValue,\r\n        menuId: this.menuId,\r\n        appId: this.appId,\r\n        roleguid: this.roleguid,\r\n        roleId: this.roleId,\r\n        pageNum: this.mainPagerConfig1.currentPage, // 页码\r\n        pageSize: this.mainPagerConfig1.pageSize, // 每页条数\r\n        params: {\r\n          is_hook: this.isHook\r\n        },\r\n        sort: 'create_time desc',\r\n        condition: { ...this.tableDataParams.condition }\r\n      }\r\n      if (vos) {\r\n        param.condition.pay_cert_no = vos\r\n      }\r\n      this.tableLoading2 = true\r\n      HttpModule.getTableCertData(param).then(res => {\r\n        self.pageLoading = false\r\n        self.tableLoading2 = false\r\n        if (res.rscode === '200') {\r\n          if (self.toolBarStatusSelect.curValue === param.statusCode) {\r\n            self.tableData1 = res.data.rows\r\n            self.mainPagerConfig1.total = res.data.total\r\n          }\r\n        } else {\r\n          self.tableData1 = []\r\n          self.$message.error(res.result)\r\n        }\r\n      })\r\n    },\r\n    getFormTable() {\r\n      this.loadConfig('77B97E5A7E6749F081D1DC7C6A68D0D2')\r\n      this.loadConfig('283CA170CBDE4EF0BC6CB7122008F578')\r\n      this.loadConfig('8C2A250640014ECABDC03B946105DB30')\r\n      this.loadConfig('CF88F0D6A24B425080CC7C96E2B6217D')\r\n      this.loadConfig('C836A67978E946129DCB1DF5E36A7DDA')\r\n      this.loadConfig('225BC2CC55D54F5D834C4BFC06EC4096')\r\n      this.loadConfig('C23DA2958E48494AA35963BB322B4412')\r\n    },\r\n    // 动态表头\r\n    async loadConfig(id) {\r\n      let self = this\r\n      let configData = await self.loadBsConfig({\r\n        tableId: {\r\n          id: id,\r\n          fiscalyear: self.userInfo.year,\r\n          mof_div_code: self.userInfo.province,\r\n          menuguid: self.menuId\r\n        }\r\n      })\r\n      // 惠民支付明细表头---已挂接\r\n      if (id === '77B97E5A7E6749F081D1DC7C6A68D0D2') {\r\n        self.hookedTableColumns = configData.itemsConfig || proconf.hookedTableColumns\r\n      }\r\n      // 惠民支付明细表头---未挂接\r\n      if (id === '283CA170CBDE4EF0BC6CB7122008F578') {\r\n        self.unHookTableColumns = configData.itemsConfig || proconf.hookedTableColumns\r\n      }\r\n      // 支付凭证信息表头\r\n      if (id === '8C2A250640014ECABDC03B946105DB30') {\r\n        self.tableColumnsConfig1 = configData.itemsConfig || proconf.PoliciesTableColumns1\r\n      }\r\n      // 导入模板对应字段---个人\r\n      if (id === 'CF88F0D6A24B425080CC7C96E2B6217D') {\r\n        self.templateColumnsPerson = configData.itemsConfig || []\r\n      }\r\n      // 导入模板对应字段---企业\r\n      if (id === 'C836A67978E946129DCB1DF5E36A7DDA') {\r\n        self.templateColumnsEnterprise = configData.itemsConfig || []\r\n      }\r\n      // 惠民支付明细表头---高级搜索\r\n      if (id === '225BC2CC55D54F5D834C4BFC06EC4096') {\r\n        this.queryConfig = configData.itemsConfig || []\r\n      }\r\n      // 支付凭证信息---高级搜索\r\n      if (id === 'C23DA2958E48494AA35963BB322B4412') {\r\n        this.queryConfig1 = configData.itemsConfig || []\r\n      }\r\n      if (self.toolBarStatusSelect.curValue === '1') {\r\n        self.tableColumnsConfig = self.unHookTableColumns || []\r\n      }\r\n    },\r\n    getLeftTreeData() {\r\n      let that = this\r\n      HttpModule.getTreeData().then(res => {\r\n        if (res.code === '000000') {\r\n          that.treeData = res.data\r\n        } else {\r\n          this.$message.error('左侧树加载失败')\r\n        }\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    console.log('this.$store.state.curNavModule', this.$store.state.curNavModule)\r\n    this.menuId = this.$store.state.curNavModule.guid\r\n    this.roleguid = this.$store.state.curNavModule.roleguid\r\n    this.userInfo = this.$store.state.userInfo\r\n    this.roleId = this.$store.state.curNavModule.roleguid\r\n    this.$Export = new Export()\r\n    this.getFormTable()\r\n    this.getLeftTreeData()\r\n    // this.queryTableDatasCount()\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n.T-mainFormListLayout-modulebox .table-toolbar-left {\r\n  font-size: 14px;\r\n}\r\n.Titans-table .table-toolbar-left .table-toolbar-left-title.left-title-clear-float {\r\n  float: none;\r\n  margin-bottom: 4px;\r\n}\r\n</style>\r\n<style scoped>\r\n.radio-right{\r\n  float: right;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-yellow {\r\n  background-color: yellow;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-blue {\r\n  background-color: blue;\r\n  color: #fff;\r\n}\r\n.Titans-table ::v-deep  .vxe-body--row.row-red {\r\n  background-color: red;\r\n  color: #fff;\r\n}\r\n</style>\r\n"]}]}